{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice, createAction, createSelector } from '@reduxjs/toolkit';\nimport * as constant from '@/utils/constant';\nimport _ from 'lodash';\nimport createExtraActions from '@/utils/createExtraActions';\nvar name = 'parameter';\nexport var resetState = createAction(\"\".concat(name, \"/\").concat(constant.actionTypes.RESET_STATE));\nvar initialState = {\n  dataList: [],\n  detail: {\n    description: '',\n    is_default: false,\n    order: null,\n    parameter_id: '',\n    parameter_type_id: null,\n    // get from params in the url\n    properties: {},\n    descriptions: []\n  },\n  initDataForList: {\n    permissions: {\n      application_parameter: null,\n      developer_parameter: null,\n      simple_parameter: null\n    },\n    column_tooltips: {}\n  },\n  initDataForCE: {\n    attributes: '',\n    categories: [],\n    is_multilingual: false,\n    param_type_id: null,\n    param_type_raw_id: '',\n    param_type_specific_config: null,\n    parameters: {\n      PLLA: []\n    }\n  },\n  dialogState: {\n    open: false,\n    editMode: false,\n    loading: false,\n    historyLogs: []\n  },\n  parameterType: {\n    category: null,\n    id: null,\n    type_id: ''\n  }\n};\nvar parameterSlice = createSlice({\n  name: name,\n  initialState: initialState,\n  reducers: {\n    setData: function setData(state, _ref) {\n      var payload = _ref.payload;\n      state.dataList = payload;\n    },\n    setInitDataForList: function setInitDataForList(state, _ref2) {\n      var payload = _ref2.payload;\n      state.initDataForList = payload;\n    },\n    setInitDataForCE: function setInitDataForCE(state, _ref3) {\n      var payload = _ref3.payload;\n      state.initDataForCE = payload;\n    },\n    setDetail: function setDetail(state, _ref4) {\n      var payload = _ref4.payload;\n      state.detail = _objectSpread(_objectSpread({}, state.detail), payload);\n    },\n    setDialogState: function setDialogState(state, _ref5) {\n      var payload = _ref5.payload;\n      state.dialogState = _objectSpread(_objectSpread({}, state.dialogState), payload);\n    },\n    setDialogStateOpen: function setDialogStateOpen(state, _ref6) {\n      var payload = _ref6.payload;\n      state.dialogState.open = payload;\n    },\n    setDialogStateEditMode: function setDialogStateEditMode(state, _ref7) {\n      var payload = _ref7.payload;\n      state.dialogState.editMode = payload;\n    },\n    setDialogStateLoading: function setDialogStateLoading(state, _ref8) {\n      var payload = _ref8.payload;\n      state.dialogState.loading = payload;\n    },\n    setHistoryLogs: function setHistoryLogs(state, _ref9) {\n      var payload = _ref9.payload;\n      state.dialogState.historyLogs = payload;\n    },\n    setParameterType: function setParameterType(state, _ref10) {\n      var payload = _ref10.payload;\n      state.parameterType = payload;\n    },\n    setPermissions: function setPermissions(state, _ref11) {\n      var payload = _ref11.payload;\n      state.initDataForList.permissions = payload;\n    },\n    resetLocationDetail: function resetLocationDetail(state) {\n      state.detail = _objectSpread(_objectSpread({}, initialState.detail), {}, {\n        parameter_type_id: state.detail.parameter_type_id\n      });\n    }\n  },\n  extraReducers: _defineProperty({}, resetState.type, function () {\n    return initialState;\n  })\n}); // Actions\n\nvar actions = parameterSlice.actions; // Extra actions\n\nexport { actions };\nexport var extraActions = createExtraActions(name, {\n  getList: constant.actionTypes.GET_LIST,\n  create: constant.actionTypes.CREATE,\n  update: constant.actionTypes.UPDATE,\n  executeOperation: constant.actionTypes.EXECUTE_OPERATION,\n  openCreateDialog: constant.actionTypes.OPEN_CREATE_DIALOG,\n  openUpdateDialog: constant.actionTypes.OPEN_UPDATE_DIALOG,\n  closeDialog: constant.actionTypes.CLOSE_DIALOG\n}); // Selectors\n\nexport var selectState = function selectState(state) {\n  return state[name];\n};\nexport var selectInitDataForList = createSelector(selectState, function (state) {\n  return state.initDataForList;\n});\nexport var selectInitDataForCE = createSelector(selectState, function (state) {\n  return state.initDataForCE;\n});\nexport var selectDataList = createSelector(selectState, function (state) {\n  return state.dataList;\n});\nexport var selectDetail = createSelector(selectState, function (state) {\n  return state.detail;\n});\nexport var selectDialogState = createSelector(selectState, function (state) {\n  return state.dialogState;\n});\nexport var selectInitParameter = createSelector(selectState, function (state) {\n  return state.initDataForCE.parameters;\n});\nexport var selectPermissions = createSelector(selectState, function (state) {\n  var category = state.parameterType.category;\n  var permissions = state.initDataForList.permissions;\n\n  if (_.isNull(permissions.application_parameter)) {\n    return null;\n  }\n\n  var getPermissionBaseOnName = function getPermissionBaseOnName(name) {\n    return permissions.application_parameter[name] && category === 2 || permissions.developer_parameter[name] && category === 3 || permissions.simple_parameter[name] && category === 1;\n  };\n\n  return {\n    view: getPermissionBaseOnName('view'),\n    create: getPermissionBaseOnName('create'),\n    edit: getPermissionBaseOnName('edit'),\n    \"delete\": getPermissionBaseOnName('delete'),\n    disable_enable: getPermissionBaseOnName('disable_enable')\n  };\n});\nexport var selectViewPermission = createSelector(selectState, function (_ref12) {\n  var _permissions$applicat, _permissions$develope, _permissions$simple_p;\n\n  var initDataForList = _ref12.initDataForList;\n  var permissions = initDataForList.permissions;\n  return ((_permissions$applicat = permissions.application_parameter) === null || _permissions$applicat === void 0 ? void 0 : _permissions$applicat.view) || ((_permissions$develope = permissions.developer_parameter) === null || _permissions$develope === void 0 ? void 0 : _permissions$develope.view) || ((_permissions$simple_p = permissions.simple_parameter) === null || _permissions$simple_p === void 0 ? void 0 : _permissions$simple_p.view);\n});\nexport default parameterSlice;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/reducers/parameter.reducer.ts"],"names":["createSlice","createAction","createSelector","constant","_","createExtraActions","name","resetState","actionTypes","RESET_STATE","initialState","dataList","detail","description","is_default","order","parameter_id","parameter_type_id","properties","descriptions","initDataForList","permissions","application_parameter","developer_parameter","simple_parameter","column_tooltips","initDataForCE","attributes","categories","is_multilingual","param_type_id","param_type_raw_id","param_type_specific_config","parameters","PLLA","dialogState","open","editMode","loading","historyLogs","parameterType","category","id","type_id","parameterSlice","reducers","setData","state","payload","setInitDataForList","setInitDataForCE","setDetail","setDialogState","setDialogStateOpen","setDialogStateEditMode","setDialogStateLoading","setHistoryLogs","setParameterType","setPermissions","resetLocationDetail","extraReducers","type","actions","extraActions","getList","GET_LIST","create","CREATE","update","UPDATE","executeOperation","EXECUTE_OPERATION","openCreateDialog","OPEN_CREATE_DIALOG","openUpdateDialog","OPEN_UPDATE_DIALOG","closeDialog","CLOSE_DIALOG","selectState","selectInitDataForList","selectInitDataForCE","selectDataList","selectDetail","selectDialogState","selectInitParameter","selectPermissions","isNull","getPermissionBaseOnName","view","edit","disable_enable","selectViewPermission"],"mappings":"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","sourcesContent":["import { createSlice, PayloadAction, createAction, createSelector } from '@reduxjs/toolkit'\nimport * as constant from '@/utils/constant'\nimport _ from 'lodash'\n\nimport createExtraActions from '@/utils/createExtraActions'\n\nimport {\n  ParameterInitDataForCE,\n  ParameterInitDataForList,\n  ParameterInstance,\n  ParameterPermissions,\n  ParameterType\n} from '@/types/Parameter'\nimport { RootReducerType } from './rootReducer'\nimport { HistoryLog } from '@/types/Common'\n\nconst name = 'parameter'\nexport const resetState = createAction(`${name}/${constant.actionTypes.RESET_STATE}`)\n\nconst initialState = {\n  dataList: [] as ParameterInstance[],\n  detail: {\n    description: '',\n    is_default: false,\n    order: null,\n    parameter_id: '',\n    parameter_type_id: null, // get from params in the url\n    properties: {},\n    descriptions: []\n  } as ParameterInstance,\n  initDataForList: {\n    permissions: {\n      application_parameter: null,\n      developer_parameter: null,\n      simple_parameter: null\n    },\n    column_tooltips: {}\n  } as ParameterInitDataForList,\n  initDataForCE: {\n    attributes: '',\n    categories: [],\n    is_multilingual: false,\n    param_type_id: null,\n    param_type_raw_id: '',\n    param_type_specific_config: null,\n    parameters: {\n      PLLA: []\n    }\n  } as ParameterInitDataForCE,\n  dialogState: {\n    open: false,\n    editMode: false,\n    loading: false,\n    historyLogs: [] as HistoryLog[]\n  },\n  parameterType: {\n    category: null,\n    id: null,\n    type_id: ''\n  } as ParameterType\n}\n\nconst parameterSlice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setData(state, { payload }: PayloadAction<ParameterInstance[]>) {\n      state.dataList = payload\n    },\n    setInitDataForList(state, { payload }: PayloadAction<ParameterInitDataForList>) {\n      state.initDataForList = payload\n    },\n    setInitDataForCE(state, { payload }: PayloadAction<ParameterInitDataForCE>) {\n      state.initDataForCE = payload\n    },\n    setDetail(state, { payload }: PayloadAction<Partial<ParameterInstance>>) {\n      state.detail = {\n        ...state.detail,\n        ...payload\n      }\n    },\n    setDialogState(state, { payload }: PayloadAction<Partial<typeof initialState.dialogState>>) {\n      state.dialogState = {\n        ...state.dialogState,\n        ...payload\n      }\n    },\n    setDialogStateOpen(state, { payload }: PayloadAction<boolean>) {\n      state.dialogState.open = payload\n    },\n    setDialogStateEditMode(state, { payload }: PayloadAction<boolean>) {\n      state.dialogState.editMode = payload\n    },\n    setDialogStateLoading(state, { payload }: PayloadAction<boolean>) {\n      state.dialogState.loading = payload\n    },\n    setHistoryLogs(state, { payload }: PayloadAction<HistoryLog[]>) {\n      state.dialogState.historyLogs = payload\n    },\n    setParameterType(state, { payload }: PayloadAction<ParameterType>) {\n      state.parameterType = payload\n    },\n    setPermissions(state, { payload }: PayloadAction<ParameterPermissions>) {\n      state.initDataForList.permissions = payload\n    },\n    resetLocationDetail(state) {\n      state.detail = {\n        ...initialState.detail,\n        parameter_type_id: state.detail.parameter_type_id\n      }\n    }\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState\n    }\n  }\n})\n\n// Actions\nexport const { actions } = parameterSlice\n\n// Extra actions\nexport const extraActions = createExtraActions(name, {\n  getList: constant.actionTypes.GET_LIST,\n  create: constant.actionTypes.CREATE,\n  update: constant.actionTypes.UPDATE,\n  executeOperation: constant.actionTypes.EXECUTE_OPERATION,\n  openCreateDialog: constant.actionTypes.OPEN_CREATE_DIALOG,\n  openUpdateDialog: constant.actionTypes.OPEN_UPDATE_DIALOG,\n  closeDialog: constant.actionTypes.CLOSE_DIALOG\n})\n\n// Selectors\nexport const selectState = (state: RootReducerType) => state[name]\nexport const selectInitDataForList = createSelector(selectState, (state) => state.initDataForList)\nexport const selectInitDataForCE = createSelector(selectState, (state) => state.initDataForCE)\nexport const selectDataList = createSelector(selectState, (state) => state.dataList)\nexport const selectDetail = createSelector(selectState, (state) => state.detail)\nexport const selectDialogState = createSelector(selectState, (state) => state.dialogState)\nexport const selectInitParameter = createSelector(selectState, (state) => state.initDataForCE.parameters)\nexport const selectPermissions = createSelector(selectState, (state) => {\n  const { category } = state.parameterType\n  const { permissions } = state.initDataForList\n  if (_.isNull(permissions.application_parameter)) {\n    return null\n  }\n  const getPermissionBaseOnName = (name) =>\n    (permissions.application_parameter[name] && category === 2) ||\n    (permissions.developer_parameter[name] && category === 3) ||\n    (permissions.simple_parameter[name] && category === 1)\n  return {\n    view: getPermissionBaseOnName('view'),\n    create: getPermissionBaseOnName('create'),\n    edit: getPermissionBaseOnName('edit'),\n    delete: getPermissionBaseOnName('delete'),\n    disable_enable: getPermissionBaseOnName('disable_enable')\n  }\n})\n\nexport const selectViewPermission = createSelector(selectState, ({ initDataForList }) => {\n  const { permissions } = initDataForList\n  return (\n    permissions.application_parameter?.view ||\n    permissions.developer_parameter?.view ||\n    permissions.simple_parameter?.view\n  )\n})\n\nexport default parameterSlice\n"]},"metadata":{},"sourceType":"module"}