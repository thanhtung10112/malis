{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createSlice, createAction, createSelector } from '@reduxjs/toolkit';\nimport * as constant from '@/utils/constant';\nimport _ from 'lodash';\nimport createExtraActions from '@/utils/createExtraActions';\nconst name = 'parameter';\nexport const resetState = createAction(`${name}/${constant.actionTypes.RESET_STATE}`);\nconst initialState = {\n  dataList: [],\n  detail: {\n    description: '',\n    is_default: false,\n    order: null,\n    parameter_id: '',\n    parameter_type_id: null,\n    // get from params in the url\n    properties: {},\n    descriptions: []\n  },\n  initDataForList: {\n    permissions: {\n      application_parameter: null,\n      developer_parameter: null,\n      simple_parameter: null\n    },\n    column_tooltips: {}\n  },\n  initDataForCE: {\n    attributes: '',\n    categories: [],\n    is_multilingual: false,\n    param_type_id: null,\n    param_type_raw_id: '',\n    param_type_specific_config: null,\n    parameters: {\n      PLLA: []\n    }\n  },\n  dialogState: {\n    open: false,\n    editMode: false,\n    loading: false,\n    historyLogs: []\n  },\n  parameterType: {\n    category: null,\n    id: null,\n    type_id: ''\n  }\n};\nconst parameterSlice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setData(state, {\n      payload\n    }) {\n      state.dataList = payload;\n    },\n\n    setInitDataForList(state, {\n      payload\n    }) {\n      state.initDataForList = payload;\n    },\n\n    setInitDataForCE(state, {\n      payload\n    }) {\n      state.initDataForCE = payload;\n    },\n\n    setDetail(state, {\n      payload\n    }) {\n      state.detail = _objectSpread(_objectSpread({}, state.detail), payload);\n    },\n\n    setDialogState(state, {\n      payload\n    }) {\n      state.dialogState = _objectSpread(_objectSpread({}, state.dialogState), payload);\n    },\n\n    setDialogStateOpen(state, {\n      payload\n    }) {\n      state.dialogState.open = payload;\n    },\n\n    setDialogStateEditMode(state, {\n      payload\n    }) {\n      state.dialogState.editMode = payload;\n    },\n\n    setDialogStateLoading(state, {\n      payload\n    }) {\n      state.dialogState.loading = payload;\n    },\n\n    setHistoryLogs(state, {\n      payload\n    }) {\n      state.dialogState.historyLogs = payload;\n    },\n\n    setParameterType(state, {\n      payload\n    }) {\n      state.parameterType = payload;\n    },\n\n    setPermissions(state, {\n      payload\n    }) {\n      state.initDataForList.permissions = payload;\n    },\n\n    resetLocationDetail(state) {\n      state.detail = _objectSpread(_objectSpread({}, initialState.detail), {}, {\n        parameter_type_id: state.detail.parameter_type_id\n      });\n    }\n\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState;\n    }\n\n  }\n}); // Actions\n\nexport const {\n  actions\n} = parameterSlice; // Extra actions\n\nexport const extraActions = createExtraActions(name, {\n  getList: constant.actionTypes.GET_LIST,\n  create: constant.actionTypes.CREATE,\n  update: constant.actionTypes.UPDATE,\n  executeOperation: constant.actionTypes.EXECUTE_OPERATION,\n  openCreateDialog: constant.actionTypes.OPEN_CREATE_DIALOG,\n  openUpdateDialog: constant.actionTypes.OPEN_UPDATE_DIALOG,\n  closeDialog: constant.actionTypes.CLOSE_DIALOG\n}); // Selectors\n\nexport const selectState = state => state[name];\nexport const selectInitDataForList = createSelector(selectState, state => state.initDataForList);\nexport const selectInitDataForCE = createSelector(selectState, state => state.initDataForCE);\nexport const selectDataList = createSelector(selectState, state => state.dataList);\nexport const selectDetail = createSelector(selectState, state => state.detail);\nexport const selectDialogState = createSelector(selectState, state => state.dialogState);\nexport const selectInitParameter = createSelector(selectState, state => state.initDataForCE.parameters);\nexport const selectPermissions = createSelector(selectState, state => {\n  const {\n    category\n  } = state.parameterType;\n  const {\n    permissions\n  } = state.initDataForList;\n\n  if (_.isNull(permissions.application_parameter)) {\n    return null;\n  }\n\n  const getPermissionBaseOnName = name => permissions.application_parameter[name] && category === 2 || permissions.developer_parameter[name] && category === 3 || permissions.simple_parameter[name] && category === 1;\n\n  return {\n    view: getPermissionBaseOnName('view'),\n    create: getPermissionBaseOnName('create'),\n    edit: getPermissionBaseOnName('edit'),\n    delete: getPermissionBaseOnName('delete'),\n    disable_enable: getPermissionBaseOnName('disable_enable')\n  };\n});\nexport const selectViewPermission = createSelector(selectState, ({\n  initDataForList\n}) => {\n  var _permissions$applicat, _permissions$develope, _permissions$simple_p;\n\n  const {\n    permissions\n  } = initDataForList;\n  return ((_permissions$applicat = permissions.application_parameter) === null || _permissions$applicat === void 0 ? void 0 : _permissions$applicat.view) || ((_permissions$develope = permissions.developer_parameter) === null || _permissions$develope === void 0 ? void 0 : _permissions$develope.view) || ((_permissions$simple_p = permissions.simple_parameter) === null || _permissions$simple_p === void 0 ? void 0 : _permissions$simple_p.view);\n});\nexport default parameterSlice;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/reducers/parameter.reducer.ts"],"names":["createSlice","createAction","createSelector","constant","_","createExtraActions","name","resetState","actionTypes","RESET_STATE","initialState","dataList","detail","description","is_default","order","parameter_id","parameter_type_id","properties","descriptions","initDataForList","permissions","application_parameter","developer_parameter","simple_parameter","column_tooltips","initDataForCE","attributes","categories","is_multilingual","param_type_id","param_type_raw_id","param_type_specific_config","parameters","PLLA","dialogState","open","editMode","loading","historyLogs","parameterType","category","id","type_id","parameterSlice","reducers","setData","state","payload","setInitDataForList","setInitDataForCE","setDetail","setDialogState","setDialogStateOpen","setDialogStateEditMode","setDialogStateLoading","setHistoryLogs","setParameterType","setPermissions","resetLocationDetail","extraReducers","type","actions","extraActions","getList","GET_LIST","create","CREATE","update","UPDATE","executeOperation","EXECUTE_OPERATION","openCreateDialog","OPEN_CREATE_DIALOG","openUpdateDialog","OPEN_UPDATE_DIALOG","closeDialog","CLOSE_DIALOG","selectState","selectInitDataForList","selectInitDataForCE","selectDataList","selectDetail","selectDialogState","selectInitParameter","selectPermissions","isNull","getPermissionBaseOnName","view","edit","delete","disable_enable","selectViewPermission"],"mappings":"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","sourcesContent":["import { createSlice, PayloadAction, createAction, createSelector } from '@reduxjs/toolkit'\nimport * as constant from '@/utils/constant'\nimport _ from 'lodash'\n\nimport createExtraActions from '@/utils/createExtraActions'\n\nimport {\n  ParameterInitDataForCE,\n  ParameterInitDataForList,\n  ParameterInstance,\n  ParameterPermissions,\n  ParameterType\n} from '@/types/Parameter'\nimport { RootReducerType } from './rootReducer'\nimport { HistoryLog } from '@/types/Common'\n\nconst name = 'parameter'\nexport const resetState = createAction(`${name}/${constant.actionTypes.RESET_STATE}`)\n\nconst initialState = {\n  dataList: [] as ParameterInstance[],\n  detail: {\n    description: '',\n    is_default: false,\n    order: null,\n    parameter_id: '',\n    parameter_type_id: null, // get from params in the url\n    properties: {},\n    descriptions: []\n  } as ParameterInstance,\n  initDataForList: {\n    permissions: {\n      application_parameter: null,\n      developer_parameter: null,\n      simple_parameter: null\n    },\n    column_tooltips: {}\n  } as ParameterInitDataForList,\n  initDataForCE: {\n    attributes: '',\n    categories: [],\n    is_multilingual: false,\n    param_type_id: null,\n    param_type_raw_id: '',\n    param_type_specific_config: null,\n    parameters: {\n      PLLA: []\n    }\n  } as ParameterInitDataForCE,\n  dialogState: {\n    open: false,\n    editMode: false,\n    loading: false,\n    historyLogs: [] as HistoryLog[]\n  },\n  parameterType: {\n    category: null,\n    id: null,\n    type_id: ''\n  } as ParameterType\n}\n\nconst parameterSlice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setData(state, { payload }: PayloadAction<ParameterInstance[]>) {\n      state.dataList = payload\n    },\n    setInitDataForList(state, { payload }: PayloadAction<ParameterInitDataForList>) {\n      state.initDataForList = payload\n    },\n    setInitDataForCE(state, { payload }: PayloadAction<ParameterInitDataForCE>) {\n      state.initDataForCE = payload\n    },\n    setDetail(state, { payload }: PayloadAction<Partial<ParameterInstance>>) {\n      state.detail = {\n        ...state.detail,\n        ...payload\n      }\n    },\n    setDialogState(state, { payload }: PayloadAction<Partial<typeof initialState.dialogState>>) {\n      state.dialogState = {\n        ...state.dialogState,\n        ...payload\n      }\n    },\n    setDialogStateOpen(state, { payload }: PayloadAction<boolean>) {\n      state.dialogState.open = payload\n    },\n    setDialogStateEditMode(state, { payload }: PayloadAction<boolean>) {\n      state.dialogState.editMode = payload\n    },\n    setDialogStateLoading(state, { payload }: PayloadAction<boolean>) {\n      state.dialogState.loading = payload\n    },\n    setHistoryLogs(state, { payload }: PayloadAction<HistoryLog[]>) {\n      state.dialogState.historyLogs = payload\n    },\n    setParameterType(state, { payload }: PayloadAction<ParameterType>) {\n      state.parameterType = payload\n    },\n    setPermissions(state, { payload }: PayloadAction<ParameterPermissions>) {\n      state.initDataForList.permissions = payload\n    },\n    resetLocationDetail(state) {\n      state.detail = {\n        ...initialState.detail,\n        parameter_type_id: state.detail.parameter_type_id\n      }\n    }\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState\n    }\n  }\n})\n\n// Actions\nexport const { actions } = parameterSlice\n\n// Extra actions\nexport const extraActions = createExtraActions(name, {\n  getList: constant.actionTypes.GET_LIST,\n  create: constant.actionTypes.CREATE,\n  update: constant.actionTypes.UPDATE,\n  executeOperation: constant.actionTypes.EXECUTE_OPERATION,\n  openCreateDialog: constant.actionTypes.OPEN_CREATE_DIALOG,\n  openUpdateDialog: constant.actionTypes.OPEN_UPDATE_DIALOG,\n  closeDialog: constant.actionTypes.CLOSE_DIALOG\n})\n\n// Selectors\nexport const selectState = (state: RootReducerType) => state[name]\nexport const selectInitDataForList = createSelector(selectState, (state) => state.initDataForList)\nexport const selectInitDataForCE = createSelector(selectState, (state) => state.initDataForCE)\nexport const selectDataList = createSelector(selectState, (state) => state.dataList)\nexport const selectDetail = createSelector(selectState, (state) => state.detail)\nexport const selectDialogState = createSelector(selectState, (state) => state.dialogState)\nexport const selectInitParameter = createSelector(selectState, (state) => state.initDataForCE.parameters)\nexport const selectPermissions = createSelector(selectState, (state) => {\n  const { category } = state.parameterType\n  const { permissions } = state.initDataForList\n  if (_.isNull(permissions.application_parameter)) {\n    return null\n  }\n  const getPermissionBaseOnName = (name) =>\n    (permissions.application_parameter[name] && category === 2) ||\n    (permissions.developer_parameter[name] && category === 3) ||\n    (permissions.simple_parameter[name] && category === 1)\n  return {\n    view: getPermissionBaseOnName('view'),\n    create: getPermissionBaseOnName('create'),\n    edit: getPermissionBaseOnName('edit'),\n    delete: getPermissionBaseOnName('delete'),\n    disable_enable: getPermissionBaseOnName('disable_enable')\n  }\n})\n\nexport const selectViewPermission = createSelector(selectState, ({ initDataForList }) => {\n  const { permissions } = initDataForList\n  return (\n    permissions.application_parameter?.view ||\n    permissions.developer_parameter?.view ||\n    permissions.simple_parameter?.view\n  )\n})\n\nexport default parameterSlice\n"]},"metadata":{},"sourceType":"module"}