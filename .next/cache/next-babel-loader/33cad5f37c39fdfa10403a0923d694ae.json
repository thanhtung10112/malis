{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Common\\\\SaveAsPreset\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { DialogMain, FormControllerTextField } from '@/components/index';\nimport { useTranslation } from 'next-i18next';\n\nfunction DialogSaveAsPreset(props) {\n  const {\n    t\n  } = useTranslation();\n\n  const {\n    onSubmit,\n    name,\n    control,\n    defaultValue,\n    rules\n  } = props,\n        dialogProps = _objectWithoutProperties(props, [\"onSubmit\", \"name\", \"control\", \"defaultValue\", \"rules\"]);\n\n  return /*#__PURE__*/_jsxDEV(DialogMain, _objectSpread(_objectSpread({}, dialogProps), {}, {\n    title: \"Save this preset\",\n    maxWidth: \"sm\",\n    onOk: onSubmit,\n    onClose: dialogProps.onClose,\n    okText: t('common:button.save'),\n    closeText: t('common:button.cancel'),\n    children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n      style: {\n        marginTop: 8\n      },\n      name: name,\n      label: \"Name\",\n      autoFocus: true,\n      required: true,\n      control: control,\n      defaultValue: defaultValue,\n      rules: rules\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\nDialogSaveAsPreset.defaultProps = {\n  name: 'save_as_name',\n  defaultValue: {},\n  rules: {}\n};\nexport default DialogSaveAsPreset;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Common/SaveAsPreset/index.tsx"],"names":["DialogMain","FormControllerTextField","useTranslation","DialogSaveAsPreset","props","t","onSubmit","name","control","defaultValue","rules","dialogProps","onClose","marginTop","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,uBAArB,QAAoD,oBAApD;AAEA,SAASC,cAAT,QAA+B,cAA/B;;AAIA,SAASC,kBAAT,CAA4BC,KAA5B,EAA4D;AAC1D,QAAM;AAAEC,IAAAA;AAAF,MAAQH,cAAc,EAA5B;;AACA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA,YAA3B;AAAyCC,IAAAA;AAAzC,MAAmEN,KAAzE;AAAA,QAAyDO,WAAzD,4BAAyEP,KAAzE;;AACA,sBACE,QAAC,UAAD,kCACMO,WADN;AAEE,IAAA,KAAK,EAAC,kBAFR;AAGE,IAAA,QAAQ,EAAC,IAHX;AAIE,IAAA,IAAI,EAAEL,QAJR;AAKE,IAAA,OAAO,EAAEK,WAAW,CAACC,OALvB;AAME,IAAA,MAAM,EAAEP,CAAC,CAAC,oBAAD,CANX;AAOE,IAAA,SAAS,EAAEA,CAAC,CAAC,sBAAD,CAPd;AAAA,2BASE,QAAC,uBAAD;AACE,MAAA,KAAK,EAAE;AAAEQ,QAAAA,SAAS,EAAE;AAAb,OADT;AAEE,MAAA,IAAI,EAAEN,IAFR;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,QAAQ,MALV;AAME,MAAA,OAAO,EAAEC,OANX;AAOE,MAAA,YAAY,EAAEC,YAPhB;AAQE,MAAA,KAAK,EAAEC;AART;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;AAEDP,kBAAkB,CAACW,YAAnB,GAAkC;AAChCP,EAAAA,IAAI,EAAE,cAD0B;AAEhCE,EAAAA,YAAY,EAAE,EAFkB;AAGhCC,EAAAA,KAAK,EAAE;AAHyB,CAAlC;AAMA,eAAeP,kBAAf","sourcesContent":["import { DialogMain, FormControllerTextField } from '@/components/index'\n\nimport { useTranslation } from 'next-i18next'\n\nimport type { DialogSaveAsPresetProps } from './type'\n\nfunction DialogSaveAsPreset(props: DialogSaveAsPresetProps) {\n  const { t } = useTranslation()\n  const { onSubmit, name, control, defaultValue, rules, ...dialogProps } = props\n  return (\n    <DialogMain\n      {...dialogProps}\n      title=\"Save this preset\"\n      maxWidth=\"sm\"\n      onOk={onSubmit}\n      onClose={dialogProps.onClose}\n      okText={t('common:button.save')}\n      closeText={t('common:button.cancel')}\n    >\n      <FormControllerTextField\n        style={{ marginTop: 8 }}\n        name={name}\n        label=\"Name\"\n        autoFocus\n        required\n        control={control}\n        defaultValue={defaultValue}\n        rules={rules}\n      />\n    </DialogMain>\n  )\n}\n\nDialogSaveAsPreset.defaultProps = {\n  name: 'save_as_name',\n  defaultValue: {},\n  rules: {}\n}\n\nexport default DialogSaveAsPreset\n"]},"metadata":{},"sourceType":"module"}