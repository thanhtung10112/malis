{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Fersher\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\App\\\\ImageField\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { CircularProgress, Tooltip } from '@material-ui/core';\nimport { When, Unless, If, Then, Else } from 'react-if';\nimport { UploadIcon, DeleteIcon } from '@/components/index';\nimport Http from '@/utils/Http';\nimport clsx from 'clsx';\nimport { commonStore } from '@/store/reducers';\nimport immer from 'immer';\nimport { useDispatch } from 'react-redux';\nimport useStyles from './styles';\n\nvar UploadImage = function UploadImage(props) {\n  _s();\n\n  var imageProp = props.image,\n      fileTypes = props.fileTypes,\n      fileSize = props.fileSize,\n      httpRequest = props.httpRequest,\n      onChange = props.onChange,\n      width = props.width,\n      height = props.height,\n      errorProps = props.error;\n  var classes = useStyles({\n    width: width,\n    height: height\n  });\n\n  var _React$useState = React.useState({\n    file: null,\n    base64: ''\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      image = _React$useState2[0],\n      setImage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      loading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      error = _React$useState6[0],\n      setError = _React$useState6[1];\n\n  var dispatch = useDispatch();\n  var refInput = null;\n  React.useEffect(function () {\n    setImage(function (prevState) {\n      return immer(prevState, function (draft) {\n        if (imageProp instanceof File) {\n          draft.file = imageProp;\n        } else {\n          draft.base64 = imageProp;\n        }\n      });\n    });\n  }, [imageProp]);\n  React.useEffect(function () {\n    setError(errorProps);\n  }, [errorProps]);\n  var accepTypes = React.useMemo(function () {\n    return fileTypes.join(',');\n  }, [fileTypes]);\n  var isValidImage = React.useCallback(function (file) {\n    var size = file.size / 1024;\n    var type = file.type;\n    return size <= fileSize && fileTypes.includes(type);\n  }, [fileTypes, fileSize]);\n\n  var convertFilesToBase64 = function convertFilesToBase64(file) {\n    return new Promise(function (resolve, reject) {\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onloadend = function () {\n        resolve(reader.result);\n      };\n\n      reader.onerror = reject;\n    });\n  };\n\n  var setRefInput = function setRefInput(element) {\n    refInput = element;\n  };\n\n  var handleOpenWindowSelect = function handleOpenWindowSelect() {\n    refInput.value = '';\n    refInput.click();\n  };\n\n  var handleUploadImage = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var file, base64, formData, _yield$Http$httpReque, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              file = _ref.file, base64 = _ref.base64;\n              setLoading(true);\n              _context.prev = 2;\n              formData = new FormData();\n              formData.append(httpRequest.key, file);\n              _context.next = 7;\n              return Http[httpRequest.method](httpRequest.endpoint, formData);\n\n            case 7:\n              _yield$Http$httpReque = _context.sent;\n              data = _yield$Http$httpReque.data;\n              onChange({\n                file: file,\n                base64: base64\n              });\n              dispatch(commonStore.actions.setSuccessMessage(data.message));\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](2);\n              setError(_context.t0.message);\n\n            case 16:\n              setLoading(false);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 13]]);\n    }));\n\n    return function handleUploadImage(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleChangeFile = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n      var file, base64, fileInstance;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              file = event.target.files[0];\n              _context2.next = 3;\n              return convertFilesToBase64(file);\n\n            case 3:\n              base64 = _context2.sent;\n              fileInstance = {\n                file: file,\n                base64: base64\n              };\n              setImage(fileInstance);\n\n              if (!(!isValidImage(file) && httpRequest)) {\n                _context2.next = 9;\n                break;\n              }\n\n              setError('The file must be image or file size must be less than 500KB!');\n              return _context2.abrupt(\"return\");\n\n            case 9:\n              setError('');\n\n              if (!httpRequest) {\n                _context2.next = 15;\n                break;\n              }\n\n              _context2.next = 13;\n              return handleUploadImage(fileInstance);\n\n            case 13:\n              _context2.next = 16;\n              break;\n\n            case 15:\n              onChange(fileInstance);\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleChangeFile(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var removeImageRequest = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var formData, _yield$Http$httpReque2, data;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!error) {\n                _context3.next = 5;\n                break;\n              }\n\n              setImage(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  base64: imageProp\n                });\n              });\n              setError('');\n              _context3.next = 23;\n              break;\n\n            case 5:\n              setLoading(true);\n              setError('');\n              _context3.prev = 7;\n              formData = new FormData();\n              formData.append(httpRequest.key, null);\n              _context3.next = 12;\n              return Http[httpRequest.method](httpRequest.endpoint, formData);\n\n            case 12:\n              _yield$Http$httpReque2 = _context3.sent;\n              data = _yield$Http$httpReque2.data;\n              dispatch(commonStore.actions.setSuccessMessage(data.message));\n              setImage({\n                file: null,\n                base64: ''\n              });\n              onChange({\n                file: null,\n                base64: null\n              });\n              _context3.next = 22;\n              break;\n\n            case 19:\n              _context3.prev = 19;\n              _context3.t0 = _context3[\"catch\"](7);\n              setError(_context3.t0.message);\n\n            case 22:\n              setLoading(false);\n\n            case 23:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[7, 19]]);\n    }));\n\n    return function removeImageRequest() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleRemoveImage = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setError('');\n\n              if (!httpRequest) {\n                _context4.next = 6;\n                break;\n              }\n\n              _context4.next = 4;\n              return removeImageRequest();\n\n            case 4:\n              _context4.next = 8;\n              break;\n\n            case 6:\n              onChange({\n                base64: '',\n                file: null\n              });\n              setImage({\n                base64: '',\n                file: null\n              });\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleRemoveImage() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    title: error || 'Only PNG, JPG, JPEG files are allowed!',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(classes.upload, {\n        error: Boolean(error)\n      }),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.uploadSelect,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleChangeFile,\n          ref: setRefInput,\n          style: {\n            display: 'none'\n          },\n          accept: accepTypes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Unless, {\n          condition: image.base64,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.uploadSection,\n            onClick: handleOpenWindowSelect,\n            children: /*#__PURE__*/_jsxDEV(UploadIcon, {\n              className: classes.uploadSelect__icon,\n              role: \"button\",\n              \"aria-label\": \"upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(When, {\n          condition: image.base64,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.imageSection,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: image.base64,\n              alt: \"\",\n              className: classes.imageSection__image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(If, {\n              condition: loading,\n              children: [/*#__PURE__*/_jsxDEV(Then, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.imageSection__loadingOverlay,\n                  children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                    size: 20,\n                    color: \"inherit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginTop: 8\n                    },\n                    children: \"Uploading...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Else, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.imageSection__actions,\n                  children: [/*#__PURE__*/_jsxDEV(UploadIcon, {\n                    className: classes.imageSection__actions__item,\n                    onClick: handleOpenWindowSelect\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                    className: classes.imageSection__actions__item,\n                    onClick: handleRemoveImage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(UploadImage, \"PRDN8wIRW6ujiDyksnR90Qh0PM8=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = UploadImage;\nUploadImage.defaultProps = {\n  fileTypes: ['image/png', 'image/jpg', 'image/jpeg'],\n  fileSize: 500,\n  width: '100%',\n  height: '100%'\n};\nexport default UploadImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/components/App/ImageField/index.tsx"],"names":["React","CircularProgress","Tooltip","When","Unless","If","Then","Else","UploadIcon","DeleteIcon","Http","clsx","commonStore","immer","useDispatch","useStyles","UploadImage","props","imageProp","image","fileTypes","fileSize","httpRequest","onChange","width","height","errorProps","error","classes","useState","file","base64","setImage","loading","setLoading","setError","dispatch","refInput","useEffect","prevState","draft","File","accepTypes","useMemo","join","isValidImage","useCallback","size","type","includes","convertFilesToBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onloadend","result","onerror","setRefInput","element","handleOpenWindowSelect","value","click","handleUploadImage","formData","FormData","append","key","method","endpoint","data","actions","setSuccessMessage","message","handleChangeFile","event","target","files","fileInstance","removeImageRequest","prev","handleRemoveImage","upload","Boolean","uploadSelect","display","uploadSection","uploadSelect__icon","imageSection","imageSection__image","imageSection__loadingOverlay","marginTop","imageSection__actions","imageSection__actions__item","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { CircularProgress, Tooltip } from '@material-ui/core'\nimport { When, Unless, If, Then, Else } from 'react-if'\nimport { UploadIcon, DeleteIcon } from '@/components/index'\n\nimport Http from '@/utils/Http'\nimport clsx from 'clsx'\nimport { commonStore } from '@/store/reducers'\nimport immer from 'immer'\n\nimport { useDispatch } from 'react-redux'\nimport useStyles from './styles'\n\nimport type { UploadImageProps } from './type'\n\nconst UploadImage: React.FC<UploadImageProps> = (props) => {\n  const { image: imageProp, fileTypes, fileSize, httpRequest, onChange, width, height, error: errorProps } = props\n\n  const classes = useStyles({ width, height })\n\n  const [image, setImage] = React.useState({\n    file: null,\n    base64: ''\n  })\n  const [loading, setLoading] = React.useState(false)\n  const [error, setError] = React.useState('')\n\n  const dispatch = useDispatch()\n\n  let refInput: HTMLInputElement = null\n\n  React.useEffect(() => {\n    setImage((prevState) =>\n      immer(prevState, (draft) => {\n        if ((imageProp as any) instanceof File) {\n          draft.file = imageProp\n        } else {\n          draft.base64 = imageProp\n        }\n      })\n    )\n  }, [imageProp])\n\n  React.useEffect(() => {\n    setError(errorProps)\n  }, [errorProps])\n\n  const accepTypes = React.useMemo(() => fileTypes.join(','), [fileTypes])\n\n  const isValidImage = React.useCallback(\n    (file) => {\n      const size = file.size / 1024\n      const type = file.type\n      return size <= fileSize && fileTypes.includes(type)\n    },\n    [fileTypes, fileSize]\n  )\n\n  const convertFilesToBase64 = (file: Blob): Promise<string> =>\n    new Promise((resolve, reject) => {\n      const reader = new FileReader()\n      reader.readAsDataURL(file)\n      reader.onloadend = () => {\n        resolve((reader as any).result)\n      }\n      reader.onerror = reject\n    })\n\n  const setRefInput = (element: HTMLInputElement) => {\n    refInput = element\n  }\n\n  const handleOpenWindowSelect = () => {\n    refInput.value = ''\n    refInput.click()\n  }\n\n  const handleUploadImage = async ({ file, base64 }) => {\n    setLoading(true)\n    try {\n      const formData = new FormData()\n      formData.append(httpRequest.key, file)\n      const { data } = await Http[httpRequest.method](httpRequest.endpoint, formData)\n      onChange({ file, base64 })\n      dispatch(commonStore.actions.setSuccessMessage(data.message))\n    } catch (error) {\n      setError(error.message)\n    }\n    setLoading(false)\n  }\n\n  const handleChangeFile = async (event) => {\n    const file = event.target.files[0]\n    const base64 = await convertFilesToBase64(file)\n    const fileInstance = {\n      file,\n      base64\n    }\n    setImage(fileInstance)\n    if (!isValidImage(file) && httpRequest) {\n      setError('The file must be image or file size must be less than 500KB!')\n      return\n    }\n    setError('')\n    if (httpRequest) {\n      await handleUploadImage(fileInstance)\n    } else {\n      onChange(fileInstance)\n    }\n  }\n\n  const removeImageRequest = async () => {\n    if (error) {\n      setImage((prev) => ({ ...prev, base64: imageProp }))\n      setError('')\n    } else {\n      setLoading(true)\n      setError('')\n      try {\n        const formData = new FormData()\n        formData.append(httpRequest.key, null)\n        const { data } = await Http[httpRequest.method](httpRequest.endpoint, formData)\n        dispatch(commonStore.actions.setSuccessMessage(data.message))\n        setImage({ file: null, base64: '' })\n        onChange({ file: null, base64: null })\n      } catch (error) {\n        setError(error.message)\n      }\n      setLoading(false)\n    }\n  }\n\n  const handleRemoveImage = async () => {\n    setError('')\n    if (httpRequest) {\n      await removeImageRequest()\n    } else {\n      onChange({ base64: '', file: null })\n      setImage({ base64: '', file: null })\n    }\n  }\n\n  return (\n    <Tooltip title={error || 'Only PNG, JPG, JPEG files are allowed!'}>\n      <div className={clsx(classes.upload, { error: Boolean(error) })}>\n        <span className={classes.uploadSelect}>\n          <input\n            type=\"file\"\n            onChange={handleChangeFile}\n            ref={setRefInput}\n            style={{ display: 'none' }}\n            accept={accepTypes}\n          />\n          <Unless condition={image.base64}>\n            <div className={classes.uploadSection} onClick={handleOpenWindowSelect}>\n              <UploadIcon className={classes.uploadSelect__icon} role=\"button\" aria-label=\"upload\" />\n            </div>\n          </Unless>\n\n          <When condition={image.base64}>\n            <div className={classes.imageSection}>\n              <img src={image.base64} alt=\"\" className={classes.imageSection__image} />\n              <If condition={loading}>\n                <Then>\n                  <div className={classes.imageSection__loadingOverlay}>\n                    <CircularProgress size={20} color=\"inherit\" />\n                    <div style={{ marginTop: 8 }}>Uploading...</div>\n                  </div>\n                </Then>\n                <Else>\n                  <div className={classes.imageSection__actions}>\n                    <UploadIcon className={classes.imageSection__actions__item} onClick={handleOpenWindowSelect} />\n                    <DeleteIcon className={classes.imageSection__actions__item} onClick={handleRemoveImage} />\n                  </div>\n                </Else>\n              </If>\n            </div>\n          </When>\n        </span>\n      </div>\n    </Tooltip>\n  )\n}\n\nUploadImage.defaultProps = {\n  fileTypes: ['image/png', 'image/jpg', 'image/jpeg'],\n  fileSize: 500,\n  width: '100%',\n  height: '100%'\n}\n\nexport default UploadImage\n"]},"metadata":{},"sourceType":"module"}