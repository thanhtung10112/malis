{"ast":null,"code":"import * as yup from 'yup';\nimport { budgetAmountFormat } from '@/utils/constant';\n\nfunction getValidationSchema(t) {\n  const schema = yup.object().shape({\n    budget_id: yup.string().required(t('validation_message.cost_code_required')).matches(/^(([A-Z]{3})|([0-9]{3}))[0-9]{3}$/, t('validation_message.cost_code_matches')),\n    puco: yup.number().nullable().required(t('validation_message.puco_required')),\n    amount: yup.number().nullable().required(t('validation_message.amount_range')).min(budgetAmountFormat.min, t('validation_message.amount_range')).max(budgetAmountFormat.max, t('validation_message.amount_range')),\n    description: yup.string().max(513, t('validation_message.description_max_len'))\n  });\n  return schema;\n}\n\nexport default getValidationSchema;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Budget/validationSchema.ts"],"names":["yup","budgetAmountFormat","getValidationSchema","t","schema","object","shape","budget_id","string","required","matches","puco","number","nullable","amount","min","max","description"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;AAIA,SAASC,mBAAT,CAA6BC,CAA7B,EAA2C;AACzC,QAAMC,MAAM,GAAGJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,IAAAA,SAAS,EAAEP,GAAG,CACXQ,MADQ,GAERC,QAFQ,CAECN,CAAC,CAAC,uCAAD,CAFF,EAGRO,OAHQ,CAGA,mCAHA,EAGqCP,CAAC,CAAC,sCAAD,CAHtC,CADqB;AAKhCQ,IAAAA,IAAI,EAAEX,GAAG,CAACY,MAAJ,GAAaC,QAAb,GAAwBJ,QAAxB,CAAiCN,CAAC,CAAC,kCAAD,CAAlC,CAL0B;AAMhCW,IAAAA,MAAM,EAAEd,GAAG,CACRY,MADK,GAELC,QAFK,GAGLJ,QAHK,CAGIN,CAAC,CAAC,iCAAD,CAHL,EAILY,GAJK,CAIDd,kBAAkB,CAACc,GAJlB,EAIuBZ,CAAC,CAAC,iCAAD,CAJxB,EAKLa,GALK,CAKDf,kBAAkB,CAACe,GALlB,EAKuBb,CAAC,CAAC,iCAAD,CALxB,CANwB;AAYhCc,IAAAA,WAAW,EAAEjB,GAAG,CAACQ,MAAJ,GAAaQ,GAAb,CAAiB,GAAjB,EAAsBb,CAAC,CAAC,wCAAD,CAAvB;AAZmB,GAAnB,CAAf;AAcA,SAAOC,MAAP;AACD;;AAED,eAAeF,mBAAf","sourcesContent":["import * as yup from 'yup'\nimport { budgetAmountFormat } from '@/utils/constant'\n\nimport type { TFunction } from 'next-i18next'\n\nfunction getValidationSchema(t: TFunction) {\n  const schema = yup.object().shape({\n    budget_id: yup\n      .string()\n      .required(t('validation_message.cost_code_required'))\n      .matches(/^(([A-Z]{3})|([0-9]{3}))[0-9]{3}$/, t('validation_message.cost_code_matches')),\n    puco: yup.number().nullable().required(t('validation_message.puco_required')),\n    amount: yup\n      .number()\n      .nullable()\n      .required(t('validation_message.amount_range'))\n      .min(budgetAmountFormat.min, t('validation_message.amount_range'))\n      .max(budgetAmountFormat.max, t('validation_message.amount_range')),\n    description: yup.string().max(513, t('validation_message.description_max_len'))\n  })\n  return schema\n}\n\nexport default getValidationSchema\n"]},"metadata":{},"sourceType":"module"}