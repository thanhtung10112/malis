{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Fersher\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\App\\\\ImageField\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { CircularProgress, Tooltip } from '@material-ui/core';\nimport { When, Unless, If, Then, Else } from 'react-if';\nimport { UploadIcon, DeleteIcon } from '@/components/index';\nimport Http from '@/utils/Http';\nimport clsx from 'clsx';\nimport { commonStore } from '@/store/reducers';\nimport immer from 'immer';\nimport { useDispatch } from 'react-redux';\nimport useStyles from './styles';\n\nconst UploadImage = props => {\n  const {\n    image: imageProp,\n    fileTypes,\n    fileSize,\n    httpRequest,\n    onChange,\n    width,\n    height,\n    error: errorProps\n  } = props;\n  const classes = useStyles({\n    width,\n    height\n  });\n  const [image, setImage] = React.useState({\n    file: null,\n    base64: ''\n  });\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState('');\n  const dispatch = useDispatch();\n  let refInput = null;\n  React.useEffect(() => {\n    setImage(prevState => immer(prevState, draft => {\n      if (imageProp instanceof File) {\n        draft.file = imageProp;\n      } else {\n        draft.base64 = imageProp;\n      }\n    }));\n  }, [imageProp]);\n  React.useEffect(() => {\n    setError(errorProps);\n  }, [errorProps]);\n  const accepTypes = React.useMemo(() => fileTypes.join(','), [fileTypes]);\n  const isValidImage = React.useCallback(file => {\n    const size = file.size / 1024;\n    const type = file.type;\n    return size <= fileSize && fileTypes.includes(type);\n  }, [fileTypes, fileSize]);\n\n  const convertFilesToBase64 = file => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      resolve(reader.result);\n    };\n\n    reader.onerror = reject;\n  });\n\n  const setRefInput = element => {\n    refInput = element;\n  };\n\n  const handleOpenWindowSelect = () => {\n    refInput.value = '';\n    refInput.click();\n  };\n\n  const handleUploadImage = async ({\n    file,\n    base64\n  }) => {\n    setLoading(true);\n\n    try {\n      const formData = new FormData();\n      formData.append(httpRequest.key, file);\n      const {\n        data\n      } = await Http[httpRequest.method](httpRequest.endpoint, formData);\n      onChange({\n        file,\n        base64\n      });\n      dispatch(commonStore.actions.setSuccessMessage(data.message));\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setLoading(false);\n  };\n\n  const handleChangeFile = async event => {\n    const file = event.target.files[0];\n    const base64 = await convertFilesToBase64(file);\n    const fileInstance = {\n      file,\n      base64\n    };\n    setImage(fileInstance);\n\n    if (!isValidImage(file) && httpRequest) {\n      setError('The file must be image or file size must be less than 500KB!');\n      return;\n    }\n\n    setError('');\n\n    if (httpRequest) {\n      await handleUploadImage(fileInstance);\n    } else {\n      onChange(fileInstance);\n    }\n  };\n\n  const removeImageRequest = async () => {\n    if (error) {\n      setImage(prev => _objectSpread(_objectSpread({}, prev), {}, {\n        base64: imageProp\n      }));\n      setError('');\n    } else {\n      setLoading(true);\n      setError('');\n\n      try {\n        const formData = new FormData();\n        formData.append(httpRequest.key, null);\n        const {\n          data\n        } = await Http[httpRequest.method](httpRequest.endpoint, formData);\n        dispatch(commonStore.actions.setSuccessMessage(data.message));\n        setImage({\n          file: null,\n          base64: ''\n        });\n        onChange({\n          file: null,\n          base64: null\n        });\n      } catch (error) {\n        setError(error.message);\n      }\n\n      setLoading(false);\n    }\n  };\n\n  const handleRemoveImage = async () => {\n    setError('');\n\n    if (httpRequest) {\n      await removeImageRequest();\n    } else {\n      onChange({\n        base64: '',\n        file: null\n      });\n      setImage({\n        base64: '',\n        file: null\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    title: error || 'Only PNG, JPG, JPEG files are allowed!',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: clsx(classes.upload, {\n        error: Boolean(error)\n      }),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.uploadSelect,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleChangeFile,\n          ref: setRefInput,\n          style: {\n            display: 'none'\n          },\n          accept: accepTypes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Unless, {\n          condition: image.base64,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.uploadSection,\n            onClick: handleOpenWindowSelect,\n            children: /*#__PURE__*/_jsxDEV(UploadIcon, {\n              className: classes.uploadSelect__icon,\n              role: \"button\",\n              \"aria-label\": \"upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(When, {\n          condition: image.base64,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.imageSection,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: image.base64,\n              alt: \"\",\n              className: classes.imageSection__image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(If, {\n              condition: loading,\n              children: [/*#__PURE__*/_jsxDEV(Then, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.imageSection__loadingOverlay,\n                  children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                    size: 20,\n                    color: \"inherit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginTop: 8\n                    },\n                    children: \"Uploading...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Else, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.imageSection__actions,\n                  children: [/*#__PURE__*/_jsxDEV(UploadIcon, {\n                    className: classes.imageSection__actions__item,\n                    onClick: handleOpenWindowSelect\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                    className: classes.imageSection__actions__item,\n                    onClick: handleRemoveImage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n\nUploadImage.defaultProps = {\n  fileTypes: ['image/png', 'image/jpg', 'image/jpeg'],\n  fileSize: 500,\n  width: '100%',\n  height: '100%'\n};\nexport default UploadImage;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/components/App/ImageField/index.tsx"],"names":["React","CircularProgress","Tooltip","When","Unless","If","Then","Else","UploadIcon","DeleteIcon","Http","clsx","commonStore","immer","useDispatch","useStyles","UploadImage","props","image","imageProp","fileTypes","fileSize","httpRequest","onChange","width","height","error","errorProps","classes","setImage","useState","file","base64","loading","setLoading","setError","dispatch","refInput","useEffect","prevState","draft","File","accepTypes","useMemo","join","isValidImage","useCallback","size","type","includes","convertFilesToBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onloadend","result","onerror","setRefInput","element","handleOpenWindowSelect","value","click","handleUploadImage","formData","FormData","append","key","data","method","endpoint","actions","setSuccessMessage","message","handleChangeFile","event","target","files","fileInstance","removeImageRequest","prev","handleRemoveImage","upload","Boolean","uploadSelect","display","uploadSection","uploadSelect__icon","imageSection","imageSection__image","imageSection__loadingOverlay","marginTop","imageSection__actions","imageSection__actions__item","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { CircularProgress, Tooltip } from '@material-ui/core'\nimport { When, Unless, If, Then, Else } from 'react-if'\nimport { UploadIcon, DeleteIcon } from '@/components/index'\n\nimport Http from '@/utils/Http'\nimport clsx from 'clsx'\nimport { commonStore } from '@/store/reducers'\nimport immer from 'immer'\n\nimport { useDispatch } from 'react-redux'\nimport useStyles from './styles'\n\nimport type { UploadImageProps } from './type'\n\nconst UploadImage: React.FC<UploadImageProps> = (props) => {\n  const { image: imageProp, fileTypes, fileSize, httpRequest, onChange, width, height, error: errorProps } = props\n\n  const classes = useStyles({ width, height })\n\n  const [image, setImage] = React.useState({\n    file: null,\n    base64: ''\n  })\n  const [loading, setLoading] = React.useState(false)\n  const [error, setError] = React.useState('')\n\n  const dispatch = useDispatch()\n\n  let refInput: HTMLInputElement = null\n\n  React.useEffect(() => {\n    setImage((prevState) =>\n      immer(prevState, (draft) => {\n        if ((imageProp as any) instanceof File) {\n          draft.file = imageProp\n        } else {\n          draft.base64 = imageProp\n        }\n      })\n    )\n  }, [imageProp])\n\n  React.useEffect(() => {\n    setError(errorProps)\n  }, [errorProps])\n\n  const accepTypes = React.useMemo(() => fileTypes.join(','), [fileTypes])\n\n  const isValidImage = React.useCallback(\n    (file) => {\n      const size = file.size / 1024\n      const type = file.type\n      return size <= fileSize && fileTypes.includes(type)\n    },\n    [fileTypes, fileSize]\n  )\n\n  const convertFilesToBase64 = (file: Blob): Promise<string> =>\n    new Promise((resolve, reject) => {\n      const reader = new FileReader()\n      reader.readAsDataURL(file)\n      reader.onloadend = () => {\n        resolve((reader as any).result)\n      }\n      reader.onerror = reject\n    })\n\n  const setRefInput = (element: HTMLInputElement) => {\n    refInput = element\n  }\n\n  const handleOpenWindowSelect = () => {\n    refInput.value = ''\n    refInput.click()\n  }\n\n  const handleUploadImage = async ({ file, base64 }) => {\n    setLoading(true)\n    try {\n      const formData = new FormData()\n      formData.append(httpRequest.key, file)\n      const { data } = await Http[httpRequest.method](httpRequest.endpoint, formData)\n      onChange({ file, base64 })\n      dispatch(commonStore.actions.setSuccessMessage(data.message))\n    } catch (error) {\n      setError(error.message)\n    }\n    setLoading(false)\n  }\n\n  const handleChangeFile = async (event) => {\n    const file = event.target.files[0]\n    const base64 = await convertFilesToBase64(file)\n    const fileInstance = {\n      file,\n      base64\n    }\n    setImage(fileInstance)\n    if (!isValidImage(file) && httpRequest) {\n      setError('The file must be image or file size must be less than 500KB!')\n      return\n    }\n    setError('')\n    if (httpRequest) {\n      await handleUploadImage(fileInstance)\n    } else {\n      onChange(fileInstance)\n    }\n  }\n\n  const removeImageRequest = async () => {\n    if (error) {\n      setImage((prev) => ({ ...prev, base64: imageProp }))\n      setError('')\n    } else {\n      setLoading(true)\n      setError('')\n      try {\n        const formData = new FormData()\n        formData.append(httpRequest.key, null)\n        const { data } = await Http[httpRequest.method](httpRequest.endpoint, formData)\n        dispatch(commonStore.actions.setSuccessMessage(data.message))\n        setImage({ file: null, base64: '' })\n        onChange({ file: null, base64: null })\n      } catch (error) {\n        setError(error.message)\n      }\n      setLoading(false)\n    }\n  }\n\n  const handleRemoveImage = async () => {\n    setError('')\n    if (httpRequest) {\n      await removeImageRequest()\n    } else {\n      onChange({ base64: '', file: null })\n      setImage({ base64: '', file: null })\n    }\n  }\n\n  return (\n    <Tooltip title={error || 'Only PNG, JPG, JPEG files are allowed!'}>\n      <div className={clsx(classes.upload, { error: Boolean(error) })}>\n        <span className={classes.uploadSelect}>\n          <input\n            type=\"file\"\n            onChange={handleChangeFile}\n            ref={setRefInput}\n            style={{ display: 'none' }}\n            accept={accepTypes}\n          />\n          <Unless condition={image.base64}>\n            <div className={classes.uploadSection} onClick={handleOpenWindowSelect}>\n              <UploadIcon className={classes.uploadSelect__icon} role=\"button\" aria-label=\"upload\" />\n            </div>\n          </Unless>\n\n          <When condition={image.base64}>\n            <div className={classes.imageSection}>\n              <img src={image.base64} alt=\"\" className={classes.imageSection__image} />\n              <If condition={loading}>\n                <Then>\n                  <div className={classes.imageSection__loadingOverlay}>\n                    <CircularProgress size={20} color=\"inherit\" />\n                    <div style={{ marginTop: 8 }}>Uploading...</div>\n                  </div>\n                </Then>\n                <Else>\n                  <div className={classes.imageSection__actions}>\n                    <UploadIcon className={classes.imageSection__actions__item} onClick={handleOpenWindowSelect} />\n                    <DeleteIcon className={classes.imageSection__actions__item} onClick={handleRemoveImage} />\n                  </div>\n                </Else>\n              </If>\n            </div>\n          </When>\n        </span>\n      </div>\n    </Tooltip>\n  )\n}\n\nUploadImage.defaultProps = {\n  fileTypes: ['image/png', 'image/jpg', 'image/jpeg'],\n  fileSize: 500,\n  width: '100%',\n  height: '100%'\n}\n\nexport default UploadImage\n"]},"metadata":{},"sourceType":"module"}