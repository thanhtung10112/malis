{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { useController } from 'react-hook-form';\nimport { AppAutocomplete } from '@/components/index';\nimport _ from 'lodash';\nvar useStyles = makeStyles(function () {\n  return {\n    popper: {\n      zIndex: 9999999\n    }\n  };\n});\n\nvar FormControllerAutocomplete = function FormControllerAutocomplete(props) {\n  var classes = useStyles();\n\n  var control = props.control,\n      defaultValue = props.defaultValue,\n      name = props.name,\n      rules = props.rules,\n      primaryKeyOption = props.primaryKeyOption,\n      onChangeProps = props.onChange,\n      textFieldProps = props.textFieldProps,\n      autocompleteProps = _objectWithoutProperties(props, [\"control\", \"defaultValue\", \"name\", \"rules\", \"primaryKeyOption\", \"onChange\", \"textFieldProps\"]);\n\n  var _useController = useController({\n    name: name,\n    rules: rules,\n    defaultValue: defaultValue,\n    control: control\n  }),\n      _useController$field = _useController.field,\n      onChange = _useController$field.onChange,\n      inputProps = _objectWithoutProperties(_useController$field, [\"onChange\"]),\n      invalid = _useController.meta.invalid;\n\n  var onChangeValue = function onChangeValue(event, value) {\n    if (_.isNil(value)) {\n      onChange(null);\n      return;\n    }\n\n    onChange(value[primaryKeyOption]);\n\n    if (_.isFunction(onChangeProps)) {\n      onChangeProps(value);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(AppAutocomplete, _objectSpread(_objectSpread(_objectSpread({}, autocompleteProps), inputProps), {}, {\n    classes: _objectSpread({}, classes),\n    helperText: invalid === null || invalid === void 0 ? void 0 : invalid.message,\n    error: Boolean(invalid),\n    onChange: onChangeValue,\n    textFieldProps: _objectSpread({\n      name: name\n    }, textFieldProps),\n    primaryKeyOption: primaryKeyOption\n  }));\n};\n\nFormControllerAutocomplete.defaultProps = {\n  primaryKeyOption: 'id'\n};\nexport default FormControllerAutocomplete;","map":null,"metadata":{},"sourceType":"module"}