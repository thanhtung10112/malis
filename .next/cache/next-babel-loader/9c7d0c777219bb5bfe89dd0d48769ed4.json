{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { createWrapper } from 'next-redux-wrapper';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '@/store/saga/rootSaga';\nimport rootReducer from '@/store/reducers/rootReducer';\nexport const makeStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const store = configureStore({\n    reducer: rootReducer,\n    middleware: [...getDefaultMiddleware({\n      thunk: false,\n      immutableCheck: false\n    }), ...middlewares],\n    devTools: process.env.NEXT_PUBLIC_MODE === 'develop'\n  });\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\nexport const wrapper = createWrapper(makeStore, {\n  debug: process.env.NEXT_PUBLIC_MODE === 'develop'\n});","map":null,"metadata":{},"sourceType":"module"}