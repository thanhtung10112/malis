{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useMemo, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useTranslation } from 'next-i18next';\nimport { Grid } from '@material-ui/core';\nimport { Unless } from 'react-if';\nimport { FormControllerTextField, DialogMain, SectionTimezone, BtnHelp, FormControllerNumberField } from '@/components';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport _ from 'lodash';\n\nvar DialogManufacturer = function DialogManufacturer(props) {\n  var open = props.open,\n      loading = props.loading,\n      detail = props.detail,\n      permissions = props.permissions,\n      wikiPage = props.wikiPage,\n      onClose = props.onClose,\n      onSubmit = props.onSubmit,\n      onGetNextCode = props.onGetNextCode;\n\n  var _useTranslation = useTranslation('manufacturer'),\n      t = _useTranslation.t;\n\n  var validationSchema = useMemo(function () {\n    return yup.object().shape({\n      manufacturer_id: yup.number().nullable().required(t('form.message_validation.manufacturer_id_required')).min(0, t('form.message_validation.manufacturer_id_range')).max(100000, t('form.message_validation.manufacturer_id_range')),\n      name: yup.string().required(t('form.message_validation.name_required')).max(50, t('form.message_validation.name_max'))\n    });\n  }, [t]);\n  var manufacturerForm = useForm({\n    shouldUnregister: false,\n    resolver: yupResolver(validationSchema)\n  });\n\n  var isCreating = _.isNil(detail === null || detail === void 0 ? void 0 : detail.id);\n\n  useEffect(function () {\n    manufacturerForm.reset(detail);\n  }, [detail]);\n  var onSubmitForm = manufacturerForm.handleSubmit(function (data) {\n    var formData = _.pick(data, ['manufacturer_id', 'name']);\n\n    onSubmit(data.id, formData);\n  });\n\n  var handleGetNextCode = function handleGetNextCode() {\n    var formData = manufacturerForm.getValues();\n    onGetNextCode(formData);\n  };\n\n  return /*#__PURE__*/_jsx(DialogMain, {\n    title: /*#__PURE__*/_jsx(BtnHelp, {\n      title: isCreating ? t('form.title.create') : t('form.title.update'),\n      href: wikiPage\n    }),\n    okText: isCreating ? t('common:button.create') : t('common:button.update'),\n    loading: loading,\n    open: open,\n    onOk: onSubmitForm,\n    onClose: onClose,\n    okButtonProps: {\n      disabled: loading || !(permissions === null || permissions === void 0 ? void 0 : permissions.edit) && !isCreating\n    },\n    children: /*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      spacing: 2,\n      style: {\n        marginTop: 8\n      },\n      children: [/*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsx(FormControllerNumberField, {\n          control: manufacturerForm.control,\n          name: \"manufacturer_id\",\n          required: true,\n          label: \"Manufacturer #\",\n          thousandSeparator: \"\",\n          decimalScale: 0,\n          fixedDecimalScale: false,\n          generateCode: true,\n          disabled: !isCreating,\n          onGenerateCode: handleGetNextCode,\n          loading: loading\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsx(FormControllerTextField, {\n          control: manufacturerForm.control,\n          name: \"name\",\n          required: true,\n          label: \"Name\"\n        })\n      }), /*#__PURE__*/_jsx(Unless, {\n        condition: isCreating,\n        children: /*#__PURE__*/_jsx(SectionTimezone, {\n          value: detail\n        })\n      })]\n    })\n  });\n};\n\nexport default DialogManufacturer;","map":null,"metadata":{},"sourceType":"module"}