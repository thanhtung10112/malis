{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Part\\\\Assembly\\\\TabGeneral.tsx\";\nimport { useFormContext } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Grid } from '@material-ui/core';\nimport { TableMultilingualDescription, AppAutocompleteAsync, FormControllerAutocomplete, FormControllerTextField, SectionTimezone, AppAutocomplete, DropdownIcon } from '@/components';\nimport { Unless } from 'react-if';\nimport _ from 'lodash';\nimport AppNumber from '@/helper/AppNumber';\nimport { partStore, commonStore } from '@/store/reducers';\n\nconst TabGeneral = () => {\n  var _assemblyForm$errors$, _assemblyForm$errors$2;\n\n  const assemblyForm = useFormContext();\n  const formAssemblyData = assemblyForm.getValues();\n  const watchId = assemblyForm.watch('id', null);\n  const watchDrawingId = assemblyForm.watch('drawing_id', null);\n\n  const isCreating = _.isNil(watchId);\n\n  const dispatch = useDispatch();\n  const parameters = useSelector(partStore.selectParameters);\n  const entity = useSelector(commonStore.selectEntity);\n  const userJob = useSelector(commonStore.selectUserValueJob);\n\n  const handleChangeDrawingId = (event, optionValue) => {\n    const formData = assemblyForm.getValues();\n    dispatch(partStore.sagaChangeDrawing({\n      formData,\n      drawing: optionValue,\n      entity: 'assembly'\n    }));\n  };\n\n  const handleBlur = event => {\n    const {\n      value\n    } = event.target;\n\n    if (AppNumber.isNumber(value) && AppNumber.isPositiveNumber(value)) {\n      const formatValue = 'G' + value.padStart(3, '0');\n      assemblyForm.setValue('dpn', formatValue);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AppAutocomplete, {\n            helperText: (_assemblyForm$errors$ = assemblyForm.errors.job_id) === null || _assemblyForm$errors$ === void 0 ? void 0 : _assemblyForm$errors$.message,\n            error: Boolean(assemblyForm.errors.job_id),\n            value: userJob,\n            popupIcon: null,\n            disabled: true,\n            label: \"Job\",\n            required: true,\n            primaryKeyOption: \"value\",\n            options: [],\n            renderOption: option => option.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AppAutocompleteAsync, {\n            popupIcon: entity === 'drawing' ? null : /*#__PURE__*/_jsxDEV(DropdownIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 56\n            }, this),\n            helperText: (_assemblyForm$errors$2 = assemblyForm.errors.drawing_id) === null || _assemblyForm$errors$2 === void 0 ? void 0 : _assemblyForm$errors$2.message,\n            error: Boolean(assemblyForm.errors.drawing_id),\n            disabled: !isCreating || entity === 'drawing',\n            value: watchDrawingId,\n            compName: \"drawing_list\",\n            additionalData: {\n              limit_to_job: userJob.value\n            },\n            required: true,\n            label: \"Drawing #\",\n            onChange: handleChangeDrawingId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n            disabled: !isCreating,\n            control: assemblyForm.control,\n            label: \"Assembly #\",\n            required: true,\n            name: \"dpn\",\n            onBlur: handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControllerAutocomplete, {\n            control: assemblyForm.control,\n            label: \"Unit\",\n            name: \"unit\",\n            options: parameters.UNIT,\n            primaryKeyOption: \"value\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Unless, {\n          condition: isCreating,\n          children: /*#__PURE__*/_jsxDEV(SectionTimezone, {\n            value: formAssemblyData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(TableMultilingualDescription, {\n        languageList: parameters.PLLA,\n        editMode: !isCreating,\n        name: \"descriptions\",\n        tableHeight: 280,\n        control: assemblyForm.control,\n        copyable: true,\n        copyDialogProps: {\n          checkboxesToSelect: [{\n            label: 'Drawing',\n            value: 'drawing_list',\n            entity: 'drawings'\n          }, {\n            label: 'Item/Assembly',\n            value: 'part_list',\n            entity: 'parts',\n            default: true\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\nexport default TabGeneral;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Part/Assembly/TabGeneral.tsx"],"names":["useFormContext","useSelector","useDispatch","Grid","TableMultilingualDescription","AppAutocompleteAsync","FormControllerAutocomplete","FormControllerTextField","SectionTimezone","AppAutocomplete","DropdownIcon","Unless","_","AppNumber","partStore","commonStore","TabGeneral","assemblyForm","formAssemblyData","getValues","watchId","watch","watchDrawingId","isCreating","isNil","dispatch","parameters","selectParameters","entity","selectEntity","userJob","selectUserValueJob","handleChangeDrawingId","event","optionValue","formData","sagaChangeDrawing","drawing","handleBlur","value","target","isNumber","isPositiveNumber","formatValue","padStart","setValue","errors","job_id","message","Boolean","option","description","drawing_id","limit_to_job","control","UNIT","PLLA","checkboxesToSelect","label","default"],"mappings":"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","sourcesContent":["import { useFormContext } from 'react-hook-form'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { Grid } from '@material-ui/core'\nimport {\n  TableMultilingualDescription,\n  AppAutocompleteAsync,\n  FormControllerAutocomplete,\n  FormControllerTextField,\n  SectionTimezone,\n  AppAutocomplete,\n  DropdownIcon\n} from '@/components'\nimport { Unless } from 'react-if'\n\nimport _ from 'lodash'\nimport AppNumber from '@/helper/AppNumber'\nimport { partStore, commonStore } from '@/store/reducers'\n\nimport type { AssemblyDetail } from '@/types/Assembly'\nimport type { DataForDropdown } from '@/types/Common'\n\nconst TabGeneral = () => {\n  const assemblyForm = useFormContext<AssemblyDetail>()\n  const formAssemblyData = assemblyForm.getValues()\n  const watchId = assemblyForm.watch('id', null)\n  const watchDrawingId = assemblyForm.watch('drawing_id', null)\n\n  const isCreating = _.isNil(watchId)\n\n  const dispatch = useDispatch()\n  const parameters = useSelector(partStore.selectParameters)\n  const entity = useSelector(commonStore.selectEntity)\n  const userJob = useSelector(commonStore.selectUserValueJob)\n\n  const handleChangeDrawingId = (event, optionValue: DataForDropdown) => {\n    const formData = assemblyForm.getValues()\n    dispatch(partStore.sagaChangeDrawing({ formData, drawing: optionValue, entity: 'assembly' }))\n  }\n\n  const handleBlur = (event) => {\n    const { value } = event.target\n    if (AppNumber.isNumber(value) && AppNumber.isPositiveNumber(value)) {\n      const formatValue = 'G' + value.padStart(3, '0')\n      assemblyForm.setValue('dpn', formatValue)\n    }\n  }\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={6}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <AppAutocomplete\n              helperText={assemblyForm.errors.job_id?.message}\n              error={Boolean(assemblyForm.errors.job_id)}\n              value={userJob}\n              popupIcon={null}\n              disabled\n              label=\"Job\"\n              required\n              primaryKeyOption=\"value\"\n              options={[]}\n              renderOption={(option) => option.description}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <AppAutocompleteAsync\n              popupIcon={entity === 'drawing' ? null : <DropdownIcon />}\n              helperText={assemblyForm.errors.drawing_id?.message}\n              error={Boolean(assemblyForm.errors.drawing_id)}\n              disabled={!isCreating || entity === 'drawing'}\n              value={watchDrawingId}\n              compName=\"drawing_list\"\n              additionalData={{ limit_to_job: userJob.value }}\n              required\n              label=\"Drawing #\"\n              onChange={handleChangeDrawingId}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormControllerTextField\n              disabled={!isCreating}\n              control={assemblyForm.control}\n              label=\"Assembly #\"\n              required\n              name=\"dpn\"\n              onBlur={handleBlur}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormControllerAutocomplete\n              control={assemblyForm.control}\n              label=\"Unit\"\n              name=\"unit\"\n              options={parameters.UNIT}\n              primaryKeyOption=\"value\"\n              required\n            />\n          </Grid>\n          <Unless condition={isCreating}>\n            <SectionTimezone value={formAssemblyData} />\n          </Unless>\n        </Grid>\n      </Grid>\n      <Grid item xs={6}>\n        <TableMultilingualDescription\n          languageList={parameters.PLLA}\n          editMode={!isCreating}\n          name=\"descriptions\"\n          tableHeight={280}\n          control={assemblyForm.control}\n          copyable\n          copyDialogProps={{\n            checkboxesToSelect: [\n              {\n                label: 'Drawing',\n                value: 'drawing_list',\n                entity: 'drawings'\n              },\n              {\n                label: 'Item/Assembly',\n                value: 'part_list',\n                entity: 'parts',\n                default: true\n              }\n            ]\n          }}\n        />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default TabGeneral\n"]},"metadata":{},"sourceType":"module"}