{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\pages\\\\assemblies.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useStyles from '@/styles/page/layout';\nimport { useTranslation } from 'next-i18next';\nimport { AppLayout, EditIcon, DataTableCellExpand, CreateIcon, AppAutocompleteStyled, AppAutocompleteStyledAsync, DeleteIcon, useConfirm, DialogPart } from '@/components';\nimport { assemblyStore, commonStore, partStore } from '@/store/reducers';\nimport { defaultProperties, iconColumn, centerColumn, rightColumn, descriptionsColumn } from '@/utils/columnProperties';\nimport AppNumber from '@/helper/AppNumber';\nimport getMessageConfirm from '@/utils/getMessageConfirm';\nimport _ from 'lodash';\n\nvar AssembliesPage = function AssembliesPage() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation('assembly'),\n      t = _useTranslation.t;\n\n  var _useConfirm = useConfirm(),\n      confirm = _useConfirm.confirm;\n\n  var breadcrumbData = useMemo(function () {\n    return [{\n      label: 'Home',\n      href: '/'\n    }, {\n      label: 'Basic Options',\n      href: '/drawings'\n    }, {\n      label: 'Assemblies Management',\n      href: '/assemblies'\n    }];\n  }, []);\n  var dispatch = useDispatch();\n  var permissions = useSelector(assemblyStore.selectPermissions);\n\n  var _useSelector = useSelector(assemblyStore.selectInitDataForList),\n      column_tooltips = _useSelector.column_tooltips,\n      wiki_page = _useSelector.wiki_page,\n      initDataForList = _objectWithoutProperties(_useSelector, [\"column_tooltips\", \"wiki_page\"]);\n\n  var userJob = useSelector(commonStore.selectUserValueJob);\n  var userDrawing = useSelector(commonStore.selectUserValueDrawing);\n  var selectedRows = useSelector(commonStore.selectSelectedRows);\n  var currentLang = useSelector(commonStore.selectCurrentLanguage);\n  var dataList = useSelector(assemblyStore.selectDataList);\n  useEffect(function () {\n    return function () {\n      return dispatch(commonStore.actions.resetUserValue());\n    };\n  }, []);\n\n  var handleOpenCreateDialog = function handleOpenCreateDialog() {\n    dispatch(partStore.sagaOpenCreateDialog('assembly'));\n  };\n\n  var handleChangeUserJob = function handleChangeUserJob(event, optionValue) {\n    dispatch(assemblyStore.sagaChangeUserJob(optionValue));\n  };\n\n  var handleChangeUserDrawing = function handleChangeUserDrawing(event, optionValue) {\n    dispatch(assemblyStore.sagaChangeUserDrawing(optionValue));\n  };\n\n  var handleOpenUpdateDialog = function handleOpenUpdateDialog(id) {\n    return function () {\n      dispatch(partStore.sagaOpenUpdateDialog({\n        id: id,\n        entity: 'assembly'\n      }));\n    };\n  };\n\n  var handleDeleteAssemblies = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var description, result, parts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              description = getMessageConfirm(t, 'assembly', selectedRows, 'delete');\n              _context.next = 3;\n              return confirm({\n                description: description\n              });\n\n            case 3:\n              result = _context.sent;\n\n              if (result === 'OK') {\n                parts = _.map(selectedRows, function (partId) {\n                  var _$find = _.find(dataList, {\n                    id: partId\n                  }),\n                      dpn = _$find.dpn,\n                      id = _$find.id;\n\n                  return {\n                    entity_id: dpn,\n                    id: id\n                  };\n                });\n                dispatch(assemblyStore.sagaRemove(parts));\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleDeleteAssemblies() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var columns = [_objectSpread(_objectSpread(_objectSpread({}, defaultProperties), iconColumn), {}, {\n    description: column_tooltips.edit,\n    field: 'id',\n    headerName: 'Edit',\n    renderCell: function renderCell(params) {\n      return /*#__PURE__*/_jsxDEV(EditIcon, {\n        onClick: handleOpenUpdateDialog(params.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 16\n      }, _this);\n    }\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.dpn,\n    field: 'dpn',\n    headerName: 'Assembly #',\n    flex: 0.2\n  }), _objectSpread(_objectSpread(_objectSpread({}, defaultProperties), descriptionsColumn(currentLang)), {}, {\n    description: column_tooltips.descriptions,\n    flex: 0.3\n  }), _objectSpread(_objectSpread(_objectSpread({}, defaultProperties), rightColumn), {}, {\n    description: column_tooltips.mass,\n    headerName: 'Mass (kg)',\n    flex: 0.2,\n    field: 'mass',\n    renderCell: function renderCell(params) {\n      var value = AppNumber.format(params.value, {\n        precision: 4\n      });\n      return /*#__PURE__*/_jsxDEV(DataTableCellExpand, {\n        value: value,\n        width: params.colDef.width\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 16\n      }, this);\n    }\n  }), _objectSpread(_objectSpread(_objectSpread({}, defaultProperties), centerColumn), {}, {\n    description: column_tooltips.raw_unit,\n    field: 'raw_unit',\n    headerName: 'Unit'\n  })];\n  var buttonsPage = [{\n    label: t('common:button.new'),\n    startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 18\n    }, _this),\n    onClick: handleOpenCreateDialog,\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.create) || userJob.value < 0 || !(userJob === null || userJob === void 0 ? void 0 : userJob.value)\n  }, {\n    label: t('common:button.delete'),\n    startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 18\n    }, _this),\n    onClick: handleDeleteAssemblies,\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions[\"delete\"]) || selectedRows.length === 0 || userJob.value < 0\n  }];\n\n  var Options = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppAutocompleteStyled, {\n      className: classes.controlAutocomplete,\n      width: 200,\n      label: \"Jobs\",\n      options: initDataForList.jobs,\n      value: userJob,\n      renderOption: function renderOption(option) {\n        return option.description;\n      },\n      primaryKeyOption: \"value\",\n      onChange: handleChangeUserJob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(AppAutocompleteStyledAsync, {\n      disabled: !(userJob === null || userJob === void 0 ? void 0 : userJob.value),\n      width: 250,\n      label: \"Drawings\",\n      className: classes.controlAutocomplete,\n      compName: \"drawing_list\",\n      additionalData: {\n        limit_to_job: userJob.value,\n        include_all_drawings_option: true\n      },\n      onChange: handleChangeUserDrawing,\n      value: userDrawing,\n      defaultOptions: [commonStore.initialState.userValue.drawing]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    entity: \"assembly\",\n    breadcrumbs: breadcrumbData,\n    wikiPage: wiki_page,\n    searchProps: {\n      width: 320\n    },\n    buttons: buttonsPage,\n    permissions: permissions,\n    tableProps: {\n      columns: columns\n    },\n    Dialogs: /*#__PURE__*/_jsxDEV(DialogPart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 16\n    }, _this),\n    Options: Options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AssembliesPage, \"tXbAsA66wZNvxLV0wbzEfqTQAtk=\", false, function () {\n  return [useStyles, useTranslation, useConfirm, useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = AssembliesPage;\nexport var __N_SSP = true;\nexport default AssembliesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssembliesPage\");","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/pages/assemblies.tsx"],"names":["useEffect","useMemo","useDispatch","useSelector","useStyles","useTranslation","AppLayout","EditIcon","DataTableCellExpand","CreateIcon","AppAutocompleteStyled","AppAutocompleteStyledAsync","DeleteIcon","useConfirm","DialogPart","assemblyStore","commonStore","partStore","defaultProperties","iconColumn","centerColumn","rightColumn","descriptionsColumn","AppNumber","getMessageConfirm","_","AssembliesPage","classes","t","confirm","breadcrumbData","label","href","dispatch","permissions","selectPermissions","selectInitDataForList","column_tooltips","wiki_page","initDataForList","userJob","selectUserValueJob","userDrawing","selectUserValueDrawing","selectedRows","selectSelectedRows","currentLang","selectCurrentLanguage","dataList","selectDataList","actions","resetUserValue","handleOpenCreateDialog","sagaOpenCreateDialog","handleChangeUserJob","event","optionValue","sagaChangeUserJob","handleChangeUserDrawing","sagaChangeUserDrawing","handleOpenUpdateDialog","id","sagaOpenUpdateDialog","entity","handleDeleteAssemblies","description","result","parts","map","partId","find","dpn","entity_id","sagaRemove","columns","edit","field","headerName","renderCell","params","value","flex","descriptions","mass","format","precision","colDef","width","raw_unit","buttonsPage","startIcon","onClick","disabled","create","length","Options","controlAutocomplete","jobs","option","limit_to_job","include_all_drawings_option","initialState","userValue","drawing"],"mappings":"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","sourcesContent":["import { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useStyles from '@/styles/page/layout'\nimport useAuthMiddleware from '@/hooks/useAuthMiddleware'\nimport { useTranslation } from 'next-i18next'\n\nimport {\n  AppLayout,\n  EditIcon,\n  DataTableCellExpand,\n  CreateIcon,\n  AppAutocompleteStyled,\n  AppAutocompleteStyledAsync,\n  DeleteIcon,\n  useConfirm,\n  DialogPart\n} from '@/components'\n\nimport { assemblyStore, commonStore, partStore } from '@/store/reducers'\nimport { defaultProperties, iconColumn, centerColumn, rightColumn, descriptionsColumn } from '@/utils/columnProperties'\nimport AppNumber from '@/helper/AppNumber'\nimport getMessageConfirm from '@/utils/getMessageConfirm'\nimport _ from 'lodash'\n\nimport type { GridColumns } from '@material-ui/data-grid'\nimport type { DataForDropdown, ParameterOption, PayloadOperation } from '@/types/Common'\n\nconst AssembliesPage = () => {\n  const classes = useStyles()\n  const { t } = useTranslation('assembly')\n  const { confirm } = useConfirm()\n\n  const breadcrumbData = useMemo(\n    () => [\n      { label: 'Home', href: '/' },\n      { label: 'Basic Options', href: '/drawings' },\n      { label: 'Assemblies Management', href: '/assemblies' }\n    ],\n    []\n  )\n\n  const dispatch = useDispatch()\n  const permissions = useSelector(assemblyStore.selectPermissions)\n  const { column_tooltips, wiki_page, ...initDataForList } = useSelector(assemblyStore.selectInitDataForList)\n  const userJob = useSelector(commonStore.selectUserValueJob)\n  const userDrawing = useSelector(commonStore.selectUserValueDrawing)\n  const selectedRows = useSelector(commonStore.selectSelectedRows)\n  const currentLang = useSelector(commonStore.selectCurrentLanguage)\n  const dataList = useSelector(assemblyStore.selectDataList)\n\n  useEffect(() => {\n    return () => dispatch(commonStore.actions.resetUserValue())\n  }, [])\n\n  const handleOpenCreateDialog = () => {\n    dispatch(partStore.sagaOpenCreateDialog('assembly'))\n  }\n\n  const handleChangeUserJob = (event, optionValue: ParameterOption) => {\n    dispatch(assemblyStore.sagaChangeUserJob(optionValue))\n  }\n\n  const handleChangeUserDrawing = (event, optionValue: DataForDropdown) => {\n    dispatch(assemblyStore.sagaChangeUserDrawing(optionValue))\n  }\n\n  const handleOpenUpdateDialog = (id) => () => {\n    dispatch(partStore.sagaOpenUpdateDialog({ id, entity: 'assembly' }))\n  }\n\n  const handleDeleteAssemblies = async () => {\n    const description = getMessageConfirm(t, 'assembly', selectedRows, 'delete')\n    const result = await confirm({ description })\n    if (result === 'OK') {\n      const parts: PayloadOperation[] = _.map(selectedRows, (partId) => {\n        const { dpn, id } = _.find(dataList, { id: partId })\n        return { entity_id: dpn, id }\n      })\n      dispatch(assemblyStore.sagaRemove(parts))\n    }\n  }\n\n  const columns: GridColumns = [\n    {\n      ...defaultProperties,\n      ...iconColumn,\n      description: column_tooltips.edit,\n      field: 'id',\n      headerName: 'Edit',\n      renderCell: (params) => {\n        return <EditIcon onClick={handleOpenUpdateDialog(params.value)} />\n      }\n    },\n    {\n      ...defaultProperties,\n      description: column_tooltips.dpn,\n      field: 'dpn',\n      headerName: 'Assembly #',\n      flex: 0.2\n    },\n    {\n      ...defaultProperties,\n      ...descriptionsColumn(currentLang),\n      description: column_tooltips.descriptions,\n      flex: 0.3\n    },\n    {\n      ...defaultProperties,\n      ...rightColumn,\n      description: column_tooltips.mass,\n      headerName: 'Mass (kg)',\n      flex: 0.2,\n      field: 'mass',\n      renderCell(params) {\n        const value = AppNumber.format(params.value, { precision: 4 })\n        return <DataTableCellExpand value={value} width={params.colDef.width} />\n      }\n    },\n    {\n      ...defaultProperties,\n      ...centerColumn,\n      description: column_tooltips.raw_unit,\n      field: 'raw_unit',\n      headerName: 'Unit'\n    }\n  ]\n\n  const buttonsPage = [\n    {\n      label: t('common:button.new'),\n      startIcon: <CreateIcon />,\n      onClick: handleOpenCreateDialog,\n      disabled: !permissions?.create || userJob.value < 0 || !userJob?.value\n    },\n    {\n      label: t('common:button.delete'),\n      startIcon: <DeleteIcon />,\n      onClick: handleDeleteAssemblies,\n      disabled: !permissions?.delete || selectedRows.length === 0 || userJob.value < 0\n    }\n  ]\n\n  const Options = (\n    <>\n      <AppAutocompleteStyled\n        className={classes.controlAutocomplete}\n        width={200}\n        label=\"Jobs\"\n        options={initDataForList.jobs}\n        value={userJob}\n        renderOption={(option) => option.description}\n        primaryKeyOption=\"value\"\n        onChange={handleChangeUserJob}\n      />\n      <AppAutocompleteStyledAsync\n        disabled={!userJob?.value}\n        width={250}\n        label=\"Drawings\"\n        className={classes.controlAutocomplete}\n        compName=\"drawing_list\"\n        additionalData={{\n          limit_to_job: userJob.value,\n          include_all_drawings_option: true\n        }}\n        onChange={handleChangeUserDrawing}\n        value={userDrawing}\n        defaultOptions={[commonStore.initialState.userValue.drawing]}\n      />\n    </>\n  )\n\n  return (\n    <AppLayout\n      entity=\"assembly\"\n      breadcrumbs={breadcrumbData}\n      wikiPage={wiki_page}\n      searchProps={{\n        width: 320\n      }}\n      buttons={buttonsPage}\n      permissions={permissions}\n      tableProps={{\n        columns\n      }}\n      Dialogs={<DialogPart />}\n      Options={Options}\n    />\n  )\n}\n\nexport const getServerSideProps = useAuthMiddleware([\n  'common',\n  'assembly',\n  'make_a_list',\n  'advanced_filter',\n  'item',\n  'manufacturer'\n])\n\nexport default AssembliesPage\n"]},"metadata":{},"sourceType":"module"}