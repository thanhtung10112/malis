{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Fersher\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Drawing\\\\TabTags.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport useStyles from './styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'next-i18next';\nimport { Paper, Link } from '@material-ui/core';\nimport { DataTable, CreateIcon, DeleteIcon, AppButton, DialogTag, DialogPart, useConfirm } from '@/components';\nimport immer from 'immer';\nimport _ from 'lodash';\nimport drawingApi from '@/apis/drawing.api';\nimport tagApi from '@/apis/tag.api';\nimport { commonStore, drawingStore, partStore, summaryReportActions } from '@/store/reducers';\nimport { defaultTagInitDataForCE, defaultTagDetail } from '@/utils/defaultValues';\nimport { defaultProperties } from '@/utils/columnProperties';\nimport { isAssemblyByDpn } from '@/utils/isAssembly';\nimport getMessageConfirm from '@/utils/getMessageConfirm';\n\nvar TabTags = function TabTags() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useConfirm = useConfirm(),\n      confirm = _useConfirm.confirm;\n\n  var _useTranslation = useTranslation('element'),\n      t = _useTranslation.t;\n\n  var _useState = useState(false),\n      openDialog = _useState[0],\n      setOpenDialog = _useState[1];\n\n  var _useState2 = useState(defaultTagInitDataForCE),\n      initDataForCE = _useState2[0],\n      setInitDataForCE = _useState2[1];\n\n  var _useState3 = useState(defaultTagDetail),\n      tagDetail = _useState3[0],\n      setTagDetail = _useState3[1];\n\n  var _useState4 = useState([]),\n      selectedRows = _useState4[0],\n      setSelectedRows = _useState4[1];\n\n  var drawingForm = useFormContext();\n  var watchTagsList = drawingForm.watch('tag_list', []) || [];\n  var watchId = drawingForm.watch('id', null);\n  var watchDrawing_id = drawingForm.watch('drawing_id', '');\n  var dispatch = useDispatch();\n  var userJob = useSelector(commonStore.selectUserValueJob);\n  var userDrawing = useSelector(commonStore.selectUserValueDrawing);\n  useEffect(function () {\n    var schematicValue = userDrawing.value > 0 ? userDrawing : null;\n    setTagDetail(function (currentState) {\n      return immer(currentState, function (draft) {\n        draft.schematic_id = schematicValue;\n      });\n    });\n  }, [userDrawing]);\n  useEffect(function () {\n    setTagDetail(function (currentState) {\n      return immer(currentState, function (draft) {\n        draft.job_id = userJob.value;\n      });\n    });\n  }, [userJob]);\n\n  var handleSelectRows = function handleSelectRows(_ref) {\n    var selectionModel = _ref.selectionModel;\n    setSelectedRows(selectionModel);\n  };\n\n  var resetDetail = function resetDetail() {\n    setTagDetail(function () {\n      return immer(defaultTagDetail, function (draft) {\n        draft.schematic_id = userDrawing.value > 0 ? userDrawing : null;\n        draft.job_id = userJob.value;\n      });\n    });\n  };\n\n  var handleClosePartDialog = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$drawingApi$get, drawing;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(drawingStore.actions.setDialogStateLoading(true));\n              _context.prev = 1;\n              _context.next = 4;\n              return drawingApi.getDetail(watchId);\n\n            case 4:\n              _yield$drawingApi$get = _context.sent;\n              drawing = _yield$drawingApi$get.drawing;\n              drawingForm.setValue('tag_list', drawing.tag_list);\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch(commonStore.actions.setError(_context.t0));\n\n            case 12:\n              dispatch(drawingStore.actions.setDialogStateLoading(false));\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }));\n\n    return function handleClosePartDialog() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleCloseElementDialog = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$drawingApi$get2, drawing;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setOpenDialog(false);\n              dispatch(drawingStore.actions.setDialogStateLoading(true));\n              _context2.prev = 2;\n              _context2.next = 5;\n              return drawingApi.getDetail(watchId);\n\n            case 5:\n              _yield$drawingApi$get2 = _context2.sent;\n              drawing = _yield$drawingApi$get2.drawing;\n              drawingForm.setValue('tag_list', drawing.tag_list);\n              resetDetail();\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](2);\n              dispatch(commonStore.actions.setError(_context2.t0));\n\n            case 14:\n              dispatch(drawingStore.actions.setDialogStateLoading(false));\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 11]]);\n    }));\n\n    return function handleCloseElementDialog() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var updateUserDrawing = function updateUserDrawing() {\n    dispatch(commonStore.actions.setUserValueDrawing({\n      entity_id: watchDrawing_id,\n      description: '',\n      value: watchId\n    }));\n  };\n\n  var handleOpenTagCreateDialog = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var resInitDataForCE, _yield$tagApi$getGene, generated_code;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              updateUserDrawing();\n              dispatch(commonStore.actions.setLoadingPage(true));\n              _context3.prev = 2;\n              _context3.next = 5;\n              return tagApi.getInitDataForCE({\n                job_id_pk: userJob.value\n              });\n\n            case 5:\n              resInitDataForCE = _context3.sent;\n              _context3.next = 8;\n              return tagApi.getGenerateCode(watchId);\n\n            case 8:\n              _yield$tagApi$getGene = _context3.sent;\n              generated_code = _yield$tagApi$getGene.generated_code;\n              setInitDataForCE(resInitDataForCE);\n              setTagDetail(function (currentState) {\n                return immer(currentState, function (draft) {\n                  draft.element_id = generated_code;\n                });\n              });\n              setOpenDialog(true);\n              _context3.next = 18;\n              break;\n\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](2);\n              dispatch(commonStore.actions.setError(_context3.t0));\n\n            case 18:\n              dispatch(commonStore.actions.setLoadingPage(false));\n\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[2, 15]]);\n    }));\n\n    return function handleOpenTagCreateDialog() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleOpenTagUpdateDialog = function handleOpenTagUpdateDialog(id) {\n    return /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(event) {\n        var resInitDataForCE, _yield$tagApi$getDeta, element;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                event.preventDefault();\n                updateUserDrawing();\n                dispatch(commonStore.actions.setLoadingPage(true));\n                _context4.prev = 3;\n                _context4.next = 6;\n                return tagApi.getInitDataForCE({\n                  job_id_pk: userJob.value\n                });\n\n              case 6:\n                resInitDataForCE = _context4.sent;\n                _context4.next = 9;\n                return tagApi.getDetail(id);\n\n              case 9:\n                _yield$tagApi$getDeta = _context4.sent;\n                element = _yield$tagApi$getDeta.element;\n                setInitDataForCE(resInitDataForCE);\n                setTagDetail(immer(element, function (draft) {\n                  draft.schematic_id = element.related_schematic;\n                  draft.part_id = element.related_part;\n                }));\n                setOpenDialog(true);\n                _context4.next = 19;\n                break;\n\n              case 16:\n                _context4.prev = 16;\n                _context4.t0 = _context4[\"catch\"](3);\n                dispatch(commonStore.actions.setError(_context4.t0));\n\n              case 19:\n                dispatch(commonStore.actions.setLoadingPage(false));\n\n              case 20:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[3, 16]]);\n      }));\n\n      return function (_x) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n  };\n\n  var handleOpenPartUpdateDialog = function handleOpenPartUpdateDialog(id, dpn) {\n    return function (event) {\n      event.preventDefault();\n      var entity = isAssemblyByDpn(dpn) ? 'assembly' : 'item';\n      dispatch(partStore.sagaOpenUpdateDialog({\n        id: id,\n        entity: entity\n      }));\n    };\n  };\n\n  var deleteTags = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var tags, data, _yield$drawingApi$get3, drawing;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              dispatch(drawingStore.actions.setDialogStateLoading(true));\n              _context5.prev = 1;\n              tags = _.map(selectedRows, function (partId) {\n                var _$find = _.find(watchTagsList, {\n                  id: partId\n                }),\n                    rp_element_id = _$find.rp_element_id,\n                    id = _$find.id;\n\n                return {\n                  entity_id: rp_element_id,\n                  id: id\n                };\n              });\n              _context5.next = 5;\n              return tagApi.executeOperation('delete', tags);\n\n            case 5:\n              data = _context5.sent;\n\n              if (data.failed_count > 0) {\n                dispatch(summaryReportActions.setReportData(data));\n                dispatch(summaryReportActions.setOpen(true));\n              } else {\n                dispatch(commonStore.actions.setSuccessMessage(data.message));\n              }\n\n              _context5.next = 9;\n              return drawingApi.getDetail(watchId);\n\n            case 9:\n              _yield$drawingApi$get3 = _context5.sent;\n              drawing = _yield$drawingApi$get3.drawing;\n              drawingForm.setValue('tag_list', drawing.tag_list);\n              setSelectedRows([]);\n              _context5.next = 18;\n              break;\n\n            case 15:\n              _context5.prev = 15;\n              _context5.t0 = _context5[\"catch\"](1);\n              dispatch(commonStore.actions.setError(_context5.t0));\n\n            case 18:\n              dispatch(drawingStore.actions.setDialogStateLoading(false));\n\n            case 19:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 15]]);\n    }));\n\n    return function deleteTags() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var handleRemoveTags = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var description, result;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              description = getMessageConfirm(t, 'element', selectedRows, 'delete');\n              _context6.next = 3;\n              return confirm({\n                description: description\n              });\n\n            case 3:\n              result = _context6.sent;\n\n              if (result === 'OK') {\n                deleteTags();\n              }\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function handleRemoveTags() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttonGroupRoot,\n      children: [/*#__PURE__*/_jsxDEV(AppButton, {\n        startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 31\n        }, _this),\n        onClick: handleOpenTagCreateDialog,\n        children: \"New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(AppButton, {\n        startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 31\n        }, _this),\n        disabled: selectedRows.length === 0,\n        onClick: handleRemoveTags,\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 1,\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        rows: watchTagsList,\n        checkboxSelection: true,\n        selectionModel: selectedRows,\n        onSelectionModelChange: handleSelectRows,\n        onCellClick: function onCellClick(params, event) {\n          if (['element_id'].includes(params.field)) {\n            event.stopPropagation();\n          }\n        },\n        columns: [_objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'element_id',\n          headerName: 'Element #',\n          flex: 0.15,\n          renderCell: function renderCell(params) {\n            var value = params.value,\n                id = params.id;\n            return /*#__PURE__*/_jsxDEV(Link, {\n              href: \"#\",\n              onClick: handleOpenTagUpdateDialog(id),\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this);\n          }\n        }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'tag',\n          headerName: 'Tag #',\n          flex: 0.15\n        }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'related_part',\n          headerName: 'Part',\n          valueGetter: function valueGetter(params) {\n            return params.value.entity_id;\n          },\n          renderCell: function renderCell(params) {\n            var row = params.row;\n            var _row$related_part = row.related_part,\n                value = _row$related_part.value,\n                entity_id = _row$related_part.entity_id;\n            return /*#__PURE__*/_jsxDEV(Link, {\n              href: \"#\",\n              onClick: handleOpenPartUpdateDialog(value, entity_id),\n              children: params.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this);\n          },\n          flex: 0.15\n        }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'description',\n          headerName: 'Description',\n          flex: 0.6\n        })],\n        hideFooter: true,\n        tableHeight: 385\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(DialogTag, {\n      open: openDialog,\n      initData: initDataForCE,\n      detail: tagDetail,\n      onClose: handleCloseElementDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(DialogPart, {\n      onClose: handleClosePartDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(TabTags, \"TtHkpwUlGLJDhT8mAc2VQWGb/Vk=\", false, function () {\n  return [useStyles, useConfirm, useTranslation, useFormContext, useDispatch, useSelector, useSelector];\n});\n\n_c = TabTags;\nexport default TabTags;\n\nvar _c;\n\n$RefreshReg$(_c, \"TabTags\");","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Drawing/TabTags.tsx"],"names":["useState","useEffect","useFormContext","useStyles","useDispatch","useSelector","useTranslation","Paper","Link","DataTable","CreateIcon","DeleteIcon","AppButton","DialogTag","DialogPart","useConfirm","immer","_","drawingApi","tagApi","commonStore","drawingStore","partStore","summaryReportActions","defaultTagInitDataForCE","defaultTagDetail","defaultProperties","isAssemblyByDpn","getMessageConfirm","TabTags","classes","confirm","t","openDialog","setOpenDialog","initDataForCE","setInitDataForCE","tagDetail","setTagDetail","selectedRows","setSelectedRows","drawingForm","watchTagsList","watch","watchId","watchDrawing_id","dispatch","userJob","selectUserValueJob","userDrawing","selectUserValueDrawing","schematicValue","value","currentState","draft","schematic_id","job_id","handleSelectRows","selectionModel","resetDetail","handleClosePartDialog","actions","setDialogStateLoading","getDetail","drawing","setValue","tag_list","setError","handleCloseElementDialog","updateUserDrawing","setUserValueDrawing","entity_id","description","handleOpenTagCreateDialog","setLoadingPage","getInitDataForCE","job_id_pk","resInitDataForCE","getGenerateCode","generated_code","element_id","handleOpenTagUpdateDialog","id","event","preventDefault","element","related_schematic","part_id","related_part","handleOpenPartUpdateDialog","dpn","entity","sagaOpenUpdateDialog","deleteTags","tags","map","partId","find","rp_element_id","executeOperation","data","failed_count","setReportData","setOpen","setSuccessMessage","message","handleRemoveTags","result","buttonGroupRoot","length","params","includes","field","stopPropagation","headerName","flex","renderCell","valueGetter","row"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport useStyles from './styles'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useTranslation } from 'next-i18next'\n\nimport { Paper, Link } from '@material-ui/core'\nimport { DataTable, CreateIcon, DeleteIcon, AppButton, DialogTag, DialogPart, useConfirm } from '@/components'\n\nimport immer from 'immer'\nimport _ from 'lodash'\nimport drawingApi from '@/apis/drawing.api'\nimport tagApi from '@/apis/tag.api'\nimport { commonStore, drawingStore, partStore, summaryReportActions } from '@/store/reducers'\nimport { defaultTagInitDataForCE, defaultTagDetail } from '@/utils/defaultValues'\nimport { defaultProperties } from '@/utils/columnProperties'\nimport { isAssemblyByDpn } from '@/utils/isAssembly'\nimport getMessageConfirm from '@/utils/getMessageConfirm'\n\nimport type { DrawingDetail } from '@/types/Drawing'\nimport type { DataForDropdown, PayloadOperation } from '@/types/Common'\n\nconst TabTags: React.FC = () => {\n  const classes = useStyles()\n  const { confirm } = useConfirm()\n  const { t } = useTranslation('element')\n\n  const [openDialog, setOpenDialog] = useState(false)\n  const [initDataForCE, setInitDataForCE] = useState(defaultTagInitDataForCE)\n  const [tagDetail, setTagDetail] = useState(defaultTagDetail)\n  const [selectedRows, setSelectedRows] = useState<number[]>([])\n\n  const drawingForm = useFormContext<DrawingDetail>()\n  const watchTagsList = drawingForm.watch('tag_list', []) || []\n  const watchId = drawingForm.watch('id', null)\n  const watchDrawing_id = drawingForm.watch('drawing_id', '')\n\n  const dispatch = useDispatch()\n  const userJob = useSelector(commonStore.selectUserValueJob)\n  const userDrawing = useSelector(commonStore.selectUserValueDrawing)\n\n  useEffect(() => {\n    const schematicValue = userDrawing.value > 0 ? userDrawing : null\n    setTagDetail((currentState) =>\n      immer(currentState, (draft) => {\n        draft.schematic_id = schematicValue\n      })\n    )\n  }, [userDrawing])\n\n  useEffect(() => {\n    setTagDetail((currentState) =>\n      immer(currentState, (draft) => {\n        draft.job_id = userJob.value\n      })\n    )\n  }, [userJob])\n\n  const handleSelectRows = ({ selectionModel }) => {\n    setSelectedRows(selectionModel)\n  }\n\n  const resetDetail = () => {\n    setTagDetail(() =>\n      immer(defaultTagDetail, (draft) => {\n        draft.schematic_id = userDrawing.value > 0 ? userDrawing : null\n        draft.job_id = userJob.value\n      })\n    )\n  }\n\n  const handleClosePartDialog = async () => {\n    dispatch(drawingStore.actions.setDialogStateLoading(true))\n    try {\n      const { drawing } = await drawingApi.getDetail(watchId)\n      drawingForm.setValue('tag_list', drawing.tag_list)\n    } catch (error) {\n      dispatch(commonStore.actions.setError(error))\n    }\n    dispatch(drawingStore.actions.setDialogStateLoading(false))\n  }\n\n  const handleCloseElementDialog = async () => {\n    setOpenDialog(false)\n    dispatch(drawingStore.actions.setDialogStateLoading(true))\n    try {\n      const { drawing } = await drawingApi.getDetail(watchId)\n      drawingForm.setValue('tag_list', drawing.tag_list)\n      resetDetail()\n    } catch (error) {\n      dispatch(commonStore.actions.setError(error))\n    }\n    dispatch(drawingStore.actions.setDialogStateLoading(false))\n  }\n\n  const updateUserDrawing = () => {\n    dispatch(\n      commonStore.actions.setUserValueDrawing({\n        entity_id: watchDrawing_id,\n        description: '',\n        value: watchId\n      })\n    )\n  }\n\n  const handleOpenTagCreateDialog = async () => {\n    updateUserDrawing()\n    dispatch(commonStore.actions.setLoadingPage(true))\n    try {\n      const resInitDataForCE = await tagApi.getInitDataForCE({ job_id_pk: userJob.value })\n      const { generated_code } = await tagApi.getGenerateCode(watchId)\n      setInitDataForCE(resInitDataForCE)\n      setTagDetail((currentState) =>\n        immer(currentState, (draft) => {\n          draft.element_id = generated_code\n        })\n      )\n      setOpenDialog(true)\n    } catch (error) {\n      dispatch(commonStore.actions.setError(error))\n    }\n    dispatch(commonStore.actions.setLoadingPage(false))\n  }\n\n  const handleOpenTagUpdateDialog = (id: number) => async (event) => {\n    event.preventDefault()\n    updateUserDrawing()\n    dispatch(commonStore.actions.setLoadingPage(true))\n    try {\n      const resInitDataForCE = await tagApi.getInitDataForCE({ job_id_pk: userJob.value })\n      const { element } = await tagApi.getDetail(id)\n      setInitDataForCE(resInitDataForCE)\n      setTagDetail(\n        immer(element, (draft) => {\n          draft.schematic_id = element.related_schematic\n          draft.part_id = element.related_part\n        }) as any\n      )\n      setOpenDialog(true)\n    } catch (error) {\n      dispatch(commonStore.actions.setError(error))\n    }\n    dispatch(commonStore.actions.setLoadingPage(false))\n  }\n\n  const handleOpenPartUpdateDialog = (id: number, dpn: string) => (event) => {\n    event.preventDefault()\n    const entity = isAssemblyByDpn(dpn) ? 'assembly' : 'item'\n    dispatch(partStore.sagaOpenUpdateDialog({ id, entity }))\n  }\n\n  const deleteTags = async () => {\n    dispatch(drawingStore.actions.setDialogStateLoading(true))\n    try {\n      const tags: PayloadOperation[] = _.map(selectedRows, (partId) => {\n        const { rp_element_id, id } = _.find(watchTagsList, { id: partId })\n        return { entity_id: rp_element_id, id }\n      })\n      const data = await tagApi.executeOperation('delete', tags)\n      if (data.failed_count > 0) {\n        dispatch(summaryReportActions.setReportData(data))\n        dispatch(summaryReportActions.setOpen(true))\n      } else {\n        dispatch(commonStore.actions.setSuccessMessage(data.message))\n      }\n      const { drawing } = await drawingApi.getDetail(watchId)\n      drawingForm.setValue('tag_list', drawing.tag_list)\n      setSelectedRows([])\n    } catch (error) {\n      dispatch(commonStore.actions.setError(error))\n    }\n    dispatch(drawingStore.actions.setDialogStateLoading(false))\n  }\n\n  const handleRemoveTags = async () => {\n    const description = getMessageConfirm(t, 'element', selectedRows, 'delete')\n    const result = await confirm({ description })\n    if (result === 'OK') {\n      deleteTags()\n    }\n  }\n\n  return (\n    <>\n      <div className={classes.buttonGroupRoot}>\n        <AppButton startIcon={<CreateIcon />} onClick={handleOpenTagCreateDialog}>\n          New\n        </AppButton>\n        <AppButton startIcon={<DeleteIcon />} disabled={selectedRows.length === 0} onClick={handleRemoveTags}>\n          Remove\n        </AppButton>\n      </div>\n      <Paper elevation={1}>\n        <DataTable\n          rows={watchTagsList}\n          checkboxSelection\n          selectionModel={selectedRows}\n          onSelectionModelChange={handleSelectRows}\n          onCellClick={(params, event) => {\n            if (['element_id'].includes(params.field)) {\n              event.stopPropagation()\n            }\n          }}\n          columns={[\n            {\n              ...defaultProperties,\n              field: 'element_id',\n              headerName: 'Element #',\n              flex: 0.15,\n              renderCell(params) {\n                const { value, id } = params\n                return (\n                  <Link href=\"#\" onClick={handleOpenTagUpdateDialog(id as number)}>\n                    {value}\n                  </Link>\n                )\n              }\n            },\n            {\n              ...defaultProperties,\n              field: 'tag',\n              headerName: 'Tag #',\n              flex: 0.15\n            },\n            {\n              ...defaultProperties,\n              field: 'related_part',\n              headerName: 'Part',\n              valueGetter: (params) => (params.value as DataForDropdown).entity_id,\n              renderCell(params) {\n                const { row } = params\n                const { value, entity_id } = row.related_part\n                return (\n                  <Link href=\"#\" onClick={handleOpenPartUpdateDialog(value, entity_id)}>\n                    {params.value}\n                  </Link>\n                )\n              },\n              flex: 0.15\n            },\n            {\n              ...defaultProperties,\n              field: 'description',\n              headerName: 'Description',\n              flex: 0.6\n            }\n          ]}\n          hideFooter\n          tableHeight={385}\n        />\n      </Paper>\n      <DialogTag open={openDialog} initData={initDataForCE} detail={tagDetail} onClose={handleCloseElementDialog} />\n      <DialogPart onClose={handleClosePartDialog} />\n    </>\n  )\n}\n\nexport default TabTags\n"]},"metadata":{},"sourceType":"module"}