{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { takeEvery, takeLatest, put } from 'redux-saga/effects';\nimport { call, select, all } from 'typed-redux-saga';\nimport { advancedFilterActions, commonStore, currencyStore } from '@/store/reducers';\nimport _ from 'lodash';\nimport currencyApi from '@/apis/currency.api';\nimport * as constant from '@/utils/constant';\nimport AppNumber from '@/helper/AppNumber';\n\nfunction* fetchInitDataForList() {\n  const userBaseCurrency = yield* select(currencyStore.selectUserBaseCurrency);\n  const data = yield call(currencyApi.getInitDataForList);\n\n  if (!_.isNull(userBaseCurrency.id)) {\n    data.user_base_currency = userBaseCurrency;\n  }\n\n  yield put(currencyStore.actions.setInitDataForList(data));\n}\n\nfunction* fetchList() {\n  const {\n    tableState,\n    searchQuery,\n    filterData,\n    baseCurrency\n  } = yield* all({\n    tableState: select(commonStore.selectTableState),\n    searchQuery: select(commonStore.selectSearchQuery),\n    filterData: select(advancedFilterActions.selectFilterData),\n    baseCurrency: select(currencyStore.selectUserBaseCurrency)\n  });\n  const {\n    page,\n    per_page\n  } = tableState;\n  const data = yield call(currencyApi.getList, _objectSpread({\n    base_currency_id: baseCurrency.id,\n    page,\n    per_page,\n    s: searchQuery\n  }, filterData));\n  yield put(commonStore.actions.setTableState({\n    total_items: data.total_items\n  }));\n  yield put(currencyStore.actions.setDataList(data.currency_list));\n}\n\nfunction* fetchInitDataForCE() {\n  const {\n    id: base_currency_id\n  } = yield* select(currencyStore.selectUserBaseCurrency);\n  const data = yield call(currencyApi.getInitDataForCE, {\n    base_currency_id\n  });\n  yield put(currencyStore.actions.setInitDataForCE(data));\n}\n\nfunction* fetchDetail(id) {\n  const {\n    currency\n  } = yield call(currencyApi.getDetail, id);\n  currency.rate = AppNumber.format(currency.rate, constant.currencyRateFormat);\n  yield put(currencyStore.actions.setDetail(currency));\n}\n\nexport function* getCurrencyList() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchInitDataForList);\n    const permissions = yield* select(currencyStore.selectPermissions);\n\n    if (permissions === null || permissions === void 0 ? void 0 : permissions.view) {\n      yield call(fetchList);\n    }\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\nexport function* changeUserCurrency({\n  payload\n}) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield put(currencyStore.actions.setUserBaseCurrency(payload));\n    yield call(fetchList);\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\nexport function* openCurrencyCreateDialog() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchInitDataForCE);\n    yield put(currencyStore.actions.setDialogStateOpen(true));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\nexport function* createCurrency({\n  payload\n}) {\n  yield put(currencyStore.actions.setDialogStateLoading(true));\n\n  try {\n    const {\n      message\n    } = yield call(currencyApi.create, payload);\n    yield all([put(commonStore.actions.setSuccessMessage(message)), put(currencyStore.actions.resetDetail())]);\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(currencyStore.actions.setDialogStateLoading(false));\n}\nexport function* openCurrencyUpdateDialog({\n  payload: id\n}) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchInitDataForCE);\n    yield call(fetchDetail, id);\n    yield put(currencyStore.actions.setDialogState({\n      open: true,\n      editMode: true\n    }));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\nexport function* updateCurrency({\n  payload\n}) {\n  yield put(currencyStore.actions.setDialogStateLoading(true));\n\n  try {\n    const {\n      id,\n      formData\n    } = payload;\n    const {\n      message\n    } = yield call(currencyApi.update, id, formData);\n    yield call(closeCurrencyDialog);\n    yield put(commonStore.actions.setSuccessMessage(message));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(currencyStore.actions.setDialogStateLoading(false));\n}\nexport function* closeCurrencyDialog() {\n  try {\n    yield put(currencyStore.actions.setDialogStateOpen(false));\n    yield call(getCurrencyList);\n    yield put(currencyStore.actions.resetDetail());\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n}\n\nfunction* currencySaga() {\n  yield takeEvery(currencyStore.sagaGetList, getCurrencyList);\n  yield takeEvery(currencyStore.sagaCreate, createCurrency);\n  yield takeLatest(currencyStore.sagaOpenCreateDialog, openCurrencyCreateDialog);\n  yield takeEvery(currencyStore.sagaOpenUpdateDialog, openCurrencyUpdateDialog);\n  yield takeEvery(currencyStore.sagaUpdate, updateCurrency);\n  yield takeEvery(currencyStore.sagaCloseDialog, closeCurrencyDialog);\n  yield takeEvery(currencyStore.sagaChangeUserCurrency, changeUserCurrency);\n}\n\nexport default currencySaga;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/store/saga/currency.saga.ts"],"names":["takeEvery","takeLatest","put","call","select","all","advancedFilterActions","commonStore","currencyStore","_","currencyApi","constant","AppNumber","fetchInitDataForList","userBaseCurrency","selectUserBaseCurrency","data","getInitDataForList","isNull","id","user_base_currency","actions","setInitDataForList","fetchList","tableState","searchQuery","filterData","baseCurrency","selectTableState","selectSearchQuery","selectFilterData","page","per_page","getList","base_currency_id","s","setTableState","total_items","setDataList","currency_list","fetchInitDataForCE","getInitDataForCE","setInitDataForCE","fetchDetail","currency","getDetail","rate","format","currencyRateFormat","setDetail","getCurrencyList","setLoadingPage","permissions","selectPermissions","view","error","setError","changeUserCurrency","payload","setUserBaseCurrency","openCurrencyCreateDialog","setDialogStateOpen","createCurrency","setDialogStateLoading","message","create","setSuccessMessage","resetDetail","openCurrencyUpdateDialog","setDialogState","open","editMode","updateCurrency","formData","update","closeCurrencyDialog","currencySaga","sagaGetList","sagaCreate","sagaOpenCreateDialog","sagaOpenUpdateDialog","sagaUpdate","sagaCloseDialog","sagaChangeUserCurrency"],"mappings":"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","sourcesContent":["import { takeEvery, takeLatest, put } from 'redux-saga/effects'\n\nimport { call, select, all } from 'typed-redux-saga'\n\nimport { advancedFilterActions, commonStore, currencyStore } from '@/store/reducers'\n\nimport _ from 'lodash'\nimport currencyApi from '@/apis/currency.api'\nimport * as constant from '@/utils/constant'\nimport AppNumber from '@/helper/AppNumber'\n\nfunction* fetchInitDataForList() {\n  const userBaseCurrency = yield* select(currencyStore.selectUserBaseCurrency)\n  const data = yield call(currencyApi.getInitDataForList)\n  if (!_.isNull(userBaseCurrency.id)) {\n    data.user_base_currency = userBaseCurrency\n  }\n  yield put(currencyStore.actions.setInitDataForList(data))\n}\n\nfunction* fetchList() {\n  const { tableState, searchQuery, filterData, baseCurrency } = yield* all({\n    tableState: select(commonStore.selectTableState),\n    searchQuery: select(commonStore.selectSearchQuery),\n    filterData: select(advancedFilterActions.selectFilterData),\n    baseCurrency: select(currencyStore.selectUserBaseCurrency)\n  })\n  const { page, per_page } = tableState\n  const data = yield call(currencyApi.getList, {\n    base_currency_id: baseCurrency.id,\n    page,\n    per_page,\n    s: searchQuery,\n    ...filterData\n  })\n  yield put(commonStore.actions.setTableState({ total_items: data.total_items }))\n  yield put(currencyStore.actions.setDataList(data.currency_list))\n}\n\nfunction* fetchInitDataForCE() {\n  const { id: base_currency_id } = yield* select(currencyStore.selectUserBaseCurrency)\n  const data = yield call(currencyApi.getInitDataForCE, {\n    base_currency_id\n  })\n  yield put(currencyStore.actions.setInitDataForCE(data))\n}\n\nfunction* fetchDetail(id: number) {\n  const { currency } = yield call(currencyApi.getDetail, id)\n  currency.rate = AppNumber.format(currency.rate, constant.currencyRateFormat)\n  yield put(currencyStore.actions.setDetail(currency))\n}\n\nexport function* getCurrencyList() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchInitDataForList)\n    const permissions = yield* select(currencyStore.selectPermissions)\n    if (permissions?.view) {\n      yield call(fetchList)\n    }\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nexport function* changeUserCurrency({ payload }: ReturnType<typeof currencyStore.sagaChangeUserCurrency>) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield put(currencyStore.actions.setUserBaseCurrency(payload))\n    yield call(fetchList)\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nexport function* openCurrencyCreateDialog() {\n  yield put(commonStore.actions.setLoadingPage(true))\n\n  try {\n    yield call(fetchInitDataForCE)\n    yield put(currencyStore.actions.setDialogStateOpen(true))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nexport function* createCurrency({ payload }: ReturnType<typeof currencyStore.sagaCreate>) {\n  yield put(currencyStore.actions.setDialogStateLoading(true))\n\n  try {\n    const { message } = yield call(currencyApi.create, payload)\n    yield all([put(commonStore.actions.setSuccessMessage(message)), put(currencyStore.actions.resetDetail())])\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(currencyStore.actions.setDialogStateLoading(false))\n}\n\nexport function* openCurrencyUpdateDialog({ payload: id }: ReturnType<typeof currencyStore.sagaOpenUpdateDialog>) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchInitDataForCE)\n    yield call(fetchDetail, id)\n    yield put(currencyStore.actions.setDialogState({ open: true, editMode: true }))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nexport function* updateCurrency({ payload }: ReturnType<typeof currencyStore.sagaUpdate>) {\n  yield put(currencyStore.actions.setDialogStateLoading(true))\n\n  try {\n    const { id, formData } = payload\n    const { message } = yield call(currencyApi.update, id, formData)\n    yield call(closeCurrencyDialog)\n    yield put(commonStore.actions.setSuccessMessage(message))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n\n  yield put(currencyStore.actions.setDialogStateLoading(false))\n}\n\nexport function* closeCurrencyDialog() {\n  try {\n    yield put(currencyStore.actions.setDialogStateOpen(false))\n    yield call(getCurrencyList)\n    yield put(currencyStore.actions.resetDetail())\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n}\n\nfunction* currencySaga() {\n  yield takeEvery(currencyStore.sagaGetList, getCurrencyList)\n  yield takeEvery(currencyStore.sagaCreate, createCurrency)\n  yield takeLatest(currencyStore.sagaOpenCreateDialog, openCurrencyCreateDialog)\n  yield takeEvery(currencyStore.sagaOpenUpdateDialog, openCurrencyUpdateDialog)\n  yield takeEvery(currencyStore.sagaUpdate, updateCurrency)\n  yield takeEvery(currencyStore.sagaCloseDialog, closeCurrencyDialog)\n  yield takeEvery(currencyStore.sagaChangeUserCurrency, changeUserCurrency)\n}\n\nexport default currencySaga\n"]},"metadata":{},"sourceType":"module"}