{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\pages\\\\items.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'next-i18next';\nimport useStyles from '@/styles/page/layout';\nimport { Link } from '@material-ui/core';\nimport { AppLayout, MakeAListIcon, EditIcon, DeleteIcon, CreateIcon, SaveIcon, AppAutocompleteStyled, useConfirm, AppAutocompleteStyledAsync, DataTableCellExpand, DataTableNumberField, DialogPart } from '@/components';\nimport { itemStore, commonStore, partStore } from '@/store/reducers';\nimport * as columnProperties from '@/utils/columnProperties';\nimport AppNumber from '@/helper/AppNumber';\nimport { itemMassFormat } from '@/utils/constant';\nimport * as yup from 'yup';\nimport clsx from 'clsx';\nimport immer from 'immer';\nimport _ from 'lodash';\nimport { unsaveDialogOptions } from '@/utils/constant';\nimport getMessageConfirm from '@/utils/getMessageConfirm';\nimport { isAssemblyByDpn } from '@/utils/isAssembly';\n\nfunction ItemsPage() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useConfirm = useConfirm(),\n      confirm = _useConfirm.confirm;\n\n  var _useTranslation = useTranslation('item'),\n      t = _useTranslation.t;\n\n  var breadcrumbData = [{\n    label: 'Home',\n    href: '/'\n  }, {\n    label: 'Drawings',\n    href: '/drawings'\n  }, {\n    label: 'Items Management',\n    href: '/items'\n  }];\n  var dispatch = useDispatch();\n  var permissions = useSelector(itemStore.selectPermissions);\n  var userDrawing = useSelector(commonStore.selectUserValueDrawing);\n  var userJob = useSelector(commonStore.selectUserValueJob);\n  var editRows = useSelector(commonStore.selectEditRows);\n  var selectedRows = useSelector(commonStore.selectSelectedRows);\n  var currentLang = useSelector(commonStore.selectCurrentLanguage);\n  var dataList = useSelector(itemStore.selectDataList);\n\n  var _useSelector = useSelector(itemStore.selectInitDataForList),\n      jobOptions = _useSelector.jobs,\n      column_tooltips = _useSelector.column_tooltips,\n      wiki_page = _useSelector.wiki_page;\n\n  useEffect(function () {\n    return function () {\n      return dispatch(commonStore.actions.resetUserValue());\n    };\n  }, []);\n  /**\n   * @param {DataForDropdown} option\n   */\n\n  var handleChangeUserDrawing = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event, optionValue) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              result = '';\n\n              if (!(editRows.length > 0)) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 4;\n              return confirm(unsaveDialogOptions);\n\n            case 4:\n              result = _context.sent;\n\n            case 5:\n              if (result !== 'cancel') {\n                dispatch(itemStore.sagaChangeUserDrawing({\n                  optionValue: optionValue,\n                  confirm: result\n                }));\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleChangeUserDrawing(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleOpenCreateDialog = function handleOpenCreateDialog() {\n    dispatch(partStore.sagaOpenCreateDialog('item'));\n  };\n\n  var handleChangeUserJob = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event, optionValue) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              result = '';\n\n              if (!(editRows.length > 0)) {\n                _context2.next = 5;\n                break;\n              }\n\n              _context2.next = 4;\n              return confirm(unsaveDialogOptions);\n\n            case 4:\n              result = _context2.sent;\n\n            case 5:\n              if (result !== 'cancel') {\n                dispatch(itemStore.sagaChangeUserJob({\n                  optionValue: optionValue,\n                  confirm: result\n                }));\n              }\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleChangeUserJob(_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleDeleteItems = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var description, result, parts;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              description = getMessageConfirm(t, 'item', selectedRows, 'delete');\n              _context3.next = 3;\n              return confirm({\n                description: description\n              });\n\n            case 3:\n              result = _context3.sent;\n\n              if (result === 'OK') {\n                parts = _.map(selectedRows, function (partId) {\n                  var _$find = _.find(dataList, {\n                    id: partId\n                  }),\n                      dpn = _$find.dpn,\n                      id = _$find.id;\n\n                  return {\n                    entity_id: dpn,\n                    id: id\n                  };\n                });\n                dispatch(itemStore.sagaRemove(parts));\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleDeleteItems() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleOpenUpdateDialog = function handleOpenUpdateDialog(id) {\n    return function () {\n      dispatch(partStore.sagaOpenUpdateDialog({\n        id: id,\n        entity: 'item'\n      }));\n    };\n  };\n\n  var onChangeMass = function onChangeMass(item_id_pk, value, field) {\n    var newEditRows = immer(editRows, function (draft) {\n      var findIndex = _.findIndex(draft, {\n        item_id_pk: item_id_pk\n      });\n\n      var valueFormat = AppNumber.convertToNumber(value, itemMassFormat);\n\n      if (findIndex > -1) {\n        draft[findIndex][field] = valueFormat;\n      } else {\n        draft.push(_defineProperty({\n          item_id_pk: item_id_pk\n        }, field, valueFormat));\n      }\n    });\n    dispatch(commonStore.actions.setEditRows(newEditRows));\n  };\n\n  var onSaveUpdateData = function onSaveUpdateData() {\n    dispatch(commonStore.sagaUpdateMultiple({\n      entity: 'item'\n    }));\n  };\n\n  var handleOpenPartDialog = function handleOpenPartDialog(id, dpn) {\n    return function (event) {\n      event.preventDefault();\n      var entity = isAssemblyByDpn(dpn) ? 'assembly' : 'item';\n      dispatch(partStore.sagaOpenUpdateDialog({\n        id: id,\n        entity: entity\n      }));\n    };\n  };\n\n  var columns = [_objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.iconColumn), {}, {\n    description: column_tooltips.edit,\n    field: 'id',\n    headerName: 'Edit',\n    renderCell: function renderCell(params) {\n      return /*#__PURE__*/_jsxDEV(EditIcon, {\n        onClick: handleOpenUpdateDialog(params.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 16\n      }, this);\n    }\n  }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n    description: column_tooltips.dpn,\n    field: 'dpn',\n    headerName: 'Item #',\n    flex: 0.25\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.descriptionsColumn(currentLang)), {}, {\n    description: column_tooltips.descriptions,\n    flex: 0.3\n  }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n    description: column_tooltips.material_equiv,\n    field: 'material_equiv',\n    headerName: 'Material std',\n    flex: 0.2\n  }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n    description: column_tooltips.manufacturer_equiv,\n    field: 'manufacturer_equiv',\n    headerName: 'Manufacturing std',\n    flex: 0.2\n  }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n    description: column_tooltips.reference_dpn,\n    field: 'reference_dpn',\n    headerName: 'Part number',\n    flex: 0.25,\n    renderCell: function renderCell(params) {\n      var value = params.value,\n          row = params.row;\n      return /*#__PURE__*/_jsxDEV(Link, {\n        href: \"#\",\n        onClick: handleOpenPartDialog(row.id_ref, value),\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this);\n    }\n  }), _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.rightColumn), columnProperties.editCell('Mass (kg)')), {}, {\n    field: 'mass',\n    renderCell: function renderCell(params) {\n      var value = AppNumber.format(params.value, itemMassFormat);\n      return /*#__PURE__*/_jsxDEV(DataTableCellExpand, {\n        value: value,\n        width: params.colDef.width\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 16\n      }, this);\n    },\n    cellClassName: function cellClassName(params) {\n      return clsx(_defineProperty({}, classes.mark, editRows.some(function (row) {\n        return row.item_id_pk === params.id && typeof row.mass !== 'undefined';\n      })));\n    },\n    renderEditCell: function renderEditCell(params) {\n      return /*#__PURE__*/_jsxDEV(DataTableNumberField, {\n        params: params,\n        onChangeValue: onChangeMass,\n        decimalScale: itemMassFormat.precision,\n        fixedDecimalScale: itemMassFormat.precision,\n        rules: yup.number().nullable().required(t('validation_message.mass_required')).min(itemMassFormat.min, t('validation_message.mass_range')).max(itemMassFormat.max, t('validation_message.mass_range'))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this);\n    }\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    description: column_tooltips.raw_unit,\n    field: 'raw_unit',\n    headerName: 'Unit'\n  })];\n  var buttons = [{\n    label: t('common:button.new'),\n    startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 18\n    }, this),\n    onClick: handleOpenCreateDialog,\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.create) || userJob.value < 0 || !(userJob === null || userJob === void 0 ? void 0 : userJob.value)\n  }, {\n    label: t('common:button.save'),\n    startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 18\n    }, this),\n    onClick: onSaveUpdateData,\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.edit) || editRows.length === 0\n  }, {\n    label: t('common:button.delete'),\n    startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 18\n    }, this),\n    onClick: handleDeleteItems,\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions[\"delete\"]) || selectedRows.length === 0 || userJob.value < 0\n  }, {\n    label: t('common:button.make_a_list'),\n    startIcon: /*#__PURE__*/_jsxDEV(MakeAListIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 18\n    }, this),\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.make_a_list)\n  }];\n\n  var Dialogs = /*#__PURE__*/_jsxDEV(DialogPart, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 19\n  }, this);\n\n  var Options = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppAutocompleteStyled, {\n      className: classes.controlAutocomplete,\n      width: 200,\n      label: \"Jobs\",\n      options: jobOptions,\n      value: userJob,\n      renderOption: function renderOption(option) {\n        return option.description;\n      },\n      primaryKeyOption: \"value\",\n      onChange: handleChangeUserJob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppAutocompleteStyledAsync, {\n      disabled: !(userJob === null || userJob === void 0 ? void 0 : userJob.value),\n      width: 250,\n      label: \"Drawings\",\n      className: classes.controlAutocomplete,\n      compName: \"drawing_list\",\n      additionalData: {\n        limit_to_job: userJob.value,\n        include_all_drawings_option: true\n      },\n      onChange: handleChangeUserDrawing,\n      value: userDrawing,\n      defaultOptions: [commonStore.initialState.userValue.drawing]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    entity: \"item\",\n    breadcrumbs: breadcrumbData,\n    wikiPage: wiki_page,\n    searchProps: {\n      width: 300\n    },\n    buttons: buttons,\n    Options: Options,\n    permissions: permissions,\n    Dialogs: Dialogs,\n    tableProps: {\n      columns: columns,\n      isCellEditable: function isCellEditable(params) {\n        return !params.row.reference_dpn;\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ItemsPage, \"HJCgeeiHP0phBg5eGgoBOpWOOhQ=\", false, function () {\n  return [useStyles, useConfirm, useTranslation, useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ItemsPage;\nexport var __N_SSP = true;\nexport default ItemsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemsPage\");","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/pages/items.tsx"],"names":["useEffect","useDispatch","useSelector","useTranslation","useStyles","Link","AppLayout","MakeAListIcon","EditIcon","DeleteIcon","CreateIcon","SaveIcon","AppAutocompleteStyled","useConfirm","AppAutocompleteStyledAsync","DataTableCellExpand","DataTableNumberField","DialogPart","itemStore","commonStore","partStore","columnProperties","AppNumber","itemMassFormat","yup","clsx","immer","_","unsaveDialogOptions","getMessageConfirm","isAssemblyByDpn","ItemsPage","classes","confirm","t","breadcrumbData","label","href","dispatch","permissions","selectPermissions","userDrawing","selectUserValueDrawing","userJob","selectUserValueJob","editRows","selectEditRows","selectedRows","selectSelectedRows","currentLang","selectCurrentLanguage","dataList","selectDataList","selectInitDataForList","jobOptions","jobs","column_tooltips","wiki_page","actions","resetUserValue","handleChangeUserDrawing","event","optionValue","result","length","sagaChangeUserDrawing","handleOpenCreateDialog","sagaOpenCreateDialog","handleChangeUserJob","sagaChangeUserJob","handleDeleteItems","description","parts","map","partId","find","id","dpn","entity_id","sagaRemove","handleOpenUpdateDialog","sagaOpenUpdateDialog","entity","onChangeMass","item_id_pk","value","field","newEditRows","draft","findIndex","valueFormat","convertToNumber","push","setEditRows","onSaveUpdateData","sagaUpdateMultiple","handleOpenPartDialog","preventDefault","columns","defaultProperties","iconColumn","edit","headerName","renderCell","params","flex","descriptionsColumn","descriptions","material_equiv","manufacturer_equiv","reference_dpn","row","id_ref","rightColumn","editCell","format","colDef","width","cellClassName","mark","some","mass","renderEditCell","precision","number","nullable","required","min","max","centerColumn","raw_unit","buttons","startIcon","onClick","disabled","create","make_a_list","Dialogs","Options","controlAutocomplete","option","limit_to_job","include_all_drawings_option","initialState","userValue","drawing","isCellEditable"],"mappings":"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","sourcesContent":["import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useTranslation } from 'next-i18next'\nimport useAuthMiddleware from '@/hooks/useAuthMiddleware'\nimport useStyles from '@/styles/page/layout'\n\nimport { Link } from '@material-ui/core'\nimport {\n  AppLayout,\n  MakeAListIcon,\n  EditIcon,\n  DeleteIcon,\n  CreateIcon,\n  SaveIcon,\n  AppAutocompleteStyled,\n  useConfirm,\n  AppAutocompleteStyledAsync,\n  DataTableCellExpand,\n  DataTableNumberField,\n  DialogPart\n} from '@/components'\n\nimport { itemStore, commonStore, partStore } from '@/store/reducers'\n\nimport * as columnProperties from '@/utils/columnProperties'\nimport AppNumber from '@/helper/AppNumber'\nimport { itemMassFormat } from '@/utils/constant'\nimport * as yup from 'yup'\nimport clsx from 'clsx'\nimport immer from 'immer'\nimport _ from 'lodash'\nimport { unsaveDialogOptions } from '@/utils/constant'\nimport getMessageConfirm from '@/utils/getMessageConfirm'\nimport { isAssemblyByDpn } from '@/utils/isAssembly'\n\nimport type { GridColumns } from '@material-ui/data-grid'\nimport type { DataForDropdown, ParameterOption, PayloadOperation } from '@/types/Common'\n\nfunction ItemsPage() {\n  const classes = useStyles()\n  const { confirm } = useConfirm()\n  const { t } = useTranslation('item')\n\n  const breadcrumbData = [\n    { label: 'Home', href: '/' },\n    { label: 'Drawings', href: '/drawings' },\n    { label: 'Items Management', href: '/items' }\n  ]\n\n  const dispatch = useDispatch()\n  const permissions = useSelector(itemStore.selectPermissions)\n  const userDrawing = useSelector(commonStore.selectUserValueDrawing)\n  const userJob = useSelector(commonStore.selectUserValueJob)\n  const editRows = useSelector(commonStore.selectEditRows)\n  const selectedRows = useSelector(commonStore.selectSelectedRows)\n  const currentLang = useSelector(commonStore.selectCurrentLanguage)\n  const dataList = useSelector(itemStore.selectDataList)\n  const { jobs: jobOptions, column_tooltips, wiki_page } = useSelector(itemStore.selectInitDataForList)\n\n  useEffect(() => {\n    return () => dispatch(commonStore.actions.resetUserValue())\n  }, [])\n\n  /**\n   * @param {DataForDropdown} option\n   */\n  const handleChangeUserDrawing = async (event, optionValue: DataForDropdown) => {\n    let result = ''\n    if (editRows.length > 0) {\n      result = await confirm(unsaveDialogOptions)\n    }\n    if (result !== 'cancel') {\n      dispatch(\n        itemStore.sagaChangeUserDrawing({\n          optionValue,\n          confirm: result\n        })\n      )\n    }\n  }\n\n  const handleOpenCreateDialog = () => {\n    dispatch(partStore.sagaOpenCreateDialog('item'))\n  }\n\n  const handleChangeUserJob = async (event, optionValue: ParameterOption) => {\n    let result = ''\n    if (editRows.length > 0) {\n      result = await confirm(unsaveDialogOptions)\n    }\n    if (result !== 'cancel') {\n      dispatch(itemStore.sagaChangeUserJob({ optionValue, confirm: result }))\n    }\n  }\n\n  const handleDeleteItems = async () => {\n    const description = getMessageConfirm(t, 'item', selectedRows, 'delete')\n    const result = await confirm({\n      description\n    })\n    if (result === 'OK') {\n      const parts: PayloadOperation[] = _.map(selectedRows, (partId) => {\n        const { dpn, id } = _.find(dataList, { id: partId })\n        return { entity_id: dpn, id }\n      })\n      dispatch(itemStore.sagaRemove(parts))\n    }\n  }\n\n  const handleOpenUpdateDialog = (id: number) => () => {\n    dispatch(partStore.sagaOpenUpdateDialog({ id, entity: 'item' }))\n  }\n\n  const onChangeMass = (item_id_pk, value, field) => {\n    const newEditRows = immer(editRows, (draft) => {\n      const findIndex = _.findIndex(draft, { item_id_pk })\n      const valueFormat = AppNumber.convertToNumber(value, itemMassFormat)\n      if (findIndex > -1) {\n        draft[findIndex][field] = valueFormat\n      } else {\n        draft.push({ item_id_pk, [field]: valueFormat })\n      }\n    })\n    dispatch(commonStore.actions.setEditRows(newEditRows))\n  }\n\n  const onSaveUpdateData = () => {\n    dispatch(commonStore.sagaUpdateMultiple({ entity: 'item' }))\n  }\n\n  const handleOpenPartDialog = (id: number, dpn: string) => (event) => {\n    event.preventDefault()\n    const entity = isAssemblyByDpn(dpn) ? 'assembly' : 'item'\n    dispatch(partStore.sagaOpenUpdateDialog({ id, entity }))\n  }\n\n  const columns: GridColumns = [\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.iconColumn,\n      description: column_tooltips.edit,\n      field: 'id',\n      headerName: 'Edit',\n      renderCell(params) {\n        return <EditIcon onClick={handleOpenUpdateDialog(params.value as number)} />\n      }\n    },\n    {\n      ...columnProperties.defaultProperties,\n      description: column_tooltips.dpn,\n      field: 'dpn',\n      headerName: 'Item #',\n      flex: 0.25\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.descriptionsColumn(currentLang),\n      description: column_tooltips.descriptions,\n      flex: 0.3\n    },\n    {\n      ...columnProperties.defaultProperties,\n      description: column_tooltips.material_equiv,\n      field: 'material_equiv',\n      headerName: 'Material std',\n      flex: 0.2\n    },\n    {\n      ...columnProperties.defaultProperties,\n      description: column_tooltips.manufacturer_equiv,\n      field: 'manufacturer_equiv',\n      headerName: 'Manufacturing std',\n      flex: 0.2\n    },\n    {\n      ...columnProperties.defaultProperties,\n      description: column_tooltips.reference_dpn,\n      field: 'reference_dpn',\n      headerName: 'Part number',\n      flex: 0.25,\n      renderCell(params) {\n        const { value, row } = params\n        return (\n          <Link href=\"#\" onClick={handleOpenPartDialog(row.id_ref, value as string)}>\n            {value}\n          </Link>\n        )\n      }\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.rightColumn,\n      ...columnProperties.editCell('Mass (kg)'),\n      field: 'mass',\n      renderCell(params) {\n        const value = AppNumber.format(params.value, itemMassFormat)\n        return <DataTableCellExpand value={value} width={params.colDef.width} />\n      },\n      cellClassName(params) {\n        return clsx({\n          [classes.mark]: editRows.some((row) => row.item_id_pk === params.id && typeof row.mass !== 'undefined')\n        })\n      },\n      renderEditCell(params) {\n        return (\n          <DataTableNumberField\n            params={params}\n            onChangeValue={onChangeMass}\n            decimalScale={itemMassFormat.precision}\n            fixedDecimalScale={itemMassFormat.precision}\n            rules={yup\n              .number()\n              .nullable()\n              .required(t('validation_message.mass_required'))\n              .min(itemMassFormat.min, t('validation_message.mass_range'))\n              .max(itemMassFormat.max, t('validation_message.mass_range'))}\n          />\n        )\n      }\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.centerColumn,\n      description: column_tooltips.raw_unit,\n      field: 'raw_unit',\n      headerName: 'Unit'\n    }\n  ]\n\n  const buttons = [\n    {\n      label: t('common:button.new'),\n      startIcon: <CreateIcon />,\n      onClick: handleOpenCreateDialog,\n      disabled: !permissions?.create || userJob.value < 0 || !userJob?.value\n    },\n    {\n      label: t('common:button.save'),\n      startIcon: <SaveIcon />,\n      onClick: onSaveUpdateData,\n      disabled: !permissions?.edit || editRows.length === 0\n    },\n    {\n      label: t('common:button.delete'),\n      startIcon: <DeleteIcon />,\n      onClick: handleDeleteItems,\n      disabled: !permissions?.delete || selectedRows.length === 0 || userJob.value < 0\n    },\n    {\n      label: t('common:button.make_a_list'),\n      startIcon: <MakeAListIcon />,\n      disabled: !permissions?.make_a_list\n    }\n  ]\n\n  const Dialogs = <DialogPart />\n\n  const Options = (\n    <>\n      <AppAutocompleteStyled\n        className={classes.controlAutocomplete}\n        width={200}\n        label=\"Jobs\"\n        options={jobOptions}\n        value={userJob}\n        renderOption={(option) => option.description}\n        primaryKeyOption=\"value\"\n        onChange={handleChangeUserJob}\n      />\n\n      <AppAutocompleteStyledAsync\n        disabled={!userJob?.value}\n        width={250}\n        label=\"Drawings\"\n        className={classes.controlAutocomplete}\n        compName=\"drawing_list\"\n        additionalData={{\n          limit_to_job: userJob.value,\n          include_all_drawings_option: true\n        }}\n        onChange={handleChangeUserDrawing}\n        value={userDrawing}\n        defaultOptions={[commonStore.initialState.userValue.drawing]}\n      />\n    </>\n  )\n\n  return (\n    <AppLayout\n      entity=\"item\"\n      breadcrumbs={breadcrumbData}\n      wikiPage={wiki_page}\n      searchProps={{ width: 300 }}\n      buttons={buttons}\n      Options={Options}\n      permissions={permissions}\n      Dialogs={Dialogs}\n      tableProps={{\n        columns: columns,\n        isCellEditable: (params) => !params.row.reference_dpn\n      }}\n    />\n  )\n}\n\nexport const getServerSideProps = useAuthMiddleware([\n  'common',\n  'item',\n  'make_a_list',\n  'advanced_filter',\n  'assembly',\n  'manufacturer'\n])\n\nexport default ItemsPage\n"]},"metadata":{},"sourceType":"module"}