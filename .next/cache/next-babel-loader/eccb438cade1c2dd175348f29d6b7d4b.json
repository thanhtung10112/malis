{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { AppAutocomplete } from '@/components';\nimport useStyles from './style';\n\nvar DataTableAutocomplete = function DataTableAutocomplete(props) {\n  var params = props.params,\n      onChange = props.onChange,\n      autoCompleteProps = _objectWithoutProperties(props, [\"params\", \"onChange\"]);\n\n  var api = params.api,\n      id = params.id,\n      field = params.field,\n      value = params.value;\n  var classes = useStyles();\n\n  var handleChange = function handleChange(event, optionValue, reason) {\n    api.setCellMode(id, field, 'view');\n    onChange(event, optionValue, reason);\n  };\n\n  return /*#__PURE__*/_jsx(AppAutocomplete, _objectSpread({\n    value: value,\n    disableClearable: false,\n    className: classes.root,\n    onChange: handleChange,\n    textFieldProps: {\n      autoFocus: true\n    },\n    renderOption: function renderOption(option) {\n      return option === null || option === void 0 ? void 0 : option.description;\n    }\n  }, autoCompleteProps));\n};\n\nexport default DataTableAutocomplete;","map":null,"metadata":{},"sourceType":"module"}