{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Fersher\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\pages\\\\parameter_types\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'next-i18next';\nimport useStyles from '@/styles/page/layout';\nimport NextLink from 'next/link';\nimport { DialogParameterTypeCreateEdit, useConfirm, EnableIcon, DisableIcon, EditIcon, CreateIcon, DeleteIcon, AppLayout } from '@/components';\nimport { commonStore, parameterTypeStore } from '@/store/reducers';\nimport * as columnProperties from '@/utils/columnProperties';\nimport getMessageConfirm from '@/utils/getMessageConfirm';\n\nfunction ParameterTypes() {\n  _s();\n\n  var _this = this;\n\n  var _useTranslation = useTranslation('parameter_type'),\n      t = _useTranslation.t;\n\n  var _useConfirm = useConfirm(),\n      confirm = _useConfirm.confirm;\n\n  var classes = useStyles();\n  var dispatch = useDispatch();\n  var breadcrumbData = [{\n    label: 'Home',\n    href: '/'\n  }, {\n    label: 'System Management',\n    href: '/users'\n  }, {\n    label: 'Parameters Management',\n    href: '/parameter_types'\n  }];\n  var permissions = useSelector(parameterTypeStore.selectPermissions);\n  var selectedRows = useSelector(commonStore.selectSelectedRows);\n\n  var _useSelector = useSelector(parameterTypeStore.selectInitDataForList),\n      wiki_page = _useSelector.wiki_page,\n      column_tooltips = _useSelector.column_tooltips;\n\n  var handleOpenCreateDialog = function handleOpenCreateDialog() {\n    dispatch(parameterTypeStore.extraActions.openCreateDialog());\n  };\n\n  var handleOpenUpdateDialog = function handleOpenUpdateDialog(id) {\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(parameterTypeStore.extraActions.openUpdateDialog(id));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n  };\n\n  var executeOperation = function executeOperation(operation) {\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var description, result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              description = getMessageConfirm(t, 'parameter_type', selectedRows, operation);\n              _context2.next = 3;\n              return confirm({\n                description: description\n              });\n\n            case 3:\n              result = _context2.sent;\n\n              if (result === 'OK') {\n                dispatch(parameterTypeStore.extraActions.executeOperation({\n                  operation: operation,\n                  parameter_types: selectedRows\n                }));\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n  };\n\n  var columns = [_objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.iconColumn), {}, {\n    description: column_tooltips.edit,\n    field: 'id',\n    headerName: 'Edit',\n    renderCell: function renderCell(param) {\n      return /*#__PURE__*/_jsxDEV(EditIcon, {\n        onClick: handleOpenUpdateDialog(param.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 16\n      }, _this);\n    }\n  }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n    description: column_tooltips.type_id,\n    field: 'type_id',\n    headerName: 'Type',\n    width: 100,\n    renderCell: function renderCell(params) {\n      return /*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/parameter_types/\".concat(params.row.id),\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: classes.link,\n          children: params.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, _this);\n    }\n  }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n    description: column_tooltips.description,\n    field: 'description',\n    headerName: 'Description',\n    flex: 0.6\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.rightColumn), {}, {\n    description: column_tooltips.nbr_default,\n    field: 'nbr_default',\n    headerName: 'Max default',\n    flex: 0.15\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    description: column_tooltips.is_multilingual,\n    field: 'is_multilingual',\n    headerName: 'Multilingual',\n    flex: 0.15,\n    renderCell: function renderCell(param) {\n      return param.value ? /*#__PURE__*/_jsxDEV(EnableIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(DisableIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 47\n      }, this);\n    }\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    description: column_tooltips.status,\n    field: 'status',\n    headerName: 'Status',\n    flex: 0.15,\n    renderCell: function renderCell(param) {\n      return param.value ? /*#__PURE__*/_jsxDEV(EnableIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(DisableIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 47\n      }, this);\n    }\n  })];\n  var buttons = [{\n    label: t('common:button.new'),\n    startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 18\n    }, this),\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.create),\n    onClick: handleOpenCreateDialog\n  }, {\n    label: t('common:button.delete'),\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions[\"delete\"]) || selectedRows.length === 0,\n    onClick: executeOperation('delete'),\n    startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 18\n    }, this)\n  }, {\n    label: t('common:button.enable'),\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.disable_enable) || selectedRows.length === 0,\n    onClick: executeOperation('enable'),\n    startIcon: /*#__PURE__*/_jsxDEV(EnableIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 18\n    }, this)\n  }, {\n    label: t('common:button.disable'),\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.disable_enable) || selectedRows.length === 0,\n    onClick: executeOperation('disable'),\n    startIcon: /*#__PURE__*/_jsxDEV(DisableIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 18\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    entity: \"parameter_type\",\n    breadcrumbs: breadcrumbData,\n    wikiPage: wiki_page,\n    buttons: buttons,\n    permissions: permissions,\n    Dialogs: /*#__PURE__*/_jsxDEV(DialogParameterTypeCreateEdit, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 16\n    }, this),\n    tableProps: {\n      columns: columns\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ParameterTypes, \"3JZkUwp9/+DazGIID+OqZdLOnu8=\", false, function () {\n  return [useTranslation, useConfirm, useStyles, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ParameterTypes;\nexport var __N_SSP = true;\nexport default ParameterTypes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParameterTypes\");","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/pages/parameter_types/index.tsx"],"names":["useDispatch","useSelector","useTranslation","useStyles","NextLink","DialogParameterTypeCreateEdit","useConfirm","EnableIcon","DisableIcon","EditIcon","CreateIcon","DeleteIcon","AppLayout","commonStore","parameterTypeStore","columnProperties","getMessageConfirm","ParameterTypes","t","confirm","classes","dispatch","breadcrumbData","label","href","permissions","selectPermissions","selectedRows","selectSelectedRows","selectInitDataForList","wiki_page","column_tooltips","handleOpenCreateDialog","extraActions","openCreateDialog","handleOpenUpdateDialog","id","openUpdateDialog","executeOperation","operation","description","result","parameter_types","columns","defaultProperties","iconColumn","edit","field","headerName","renderCell","param","value","type_id","width","params","row","link","flex","rightColumn","nbr_default","centerColumn","is_multilingual","status","buttons","startIcon","disabled","create","onClick","length","disable_enable"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from 'react-redux'\nimport useAuthMiddleware from '@/hooks/useAuthMiddleware'\nimport { useTranslation } from 'next-i18next'\nimport useStyles from '@/styles/page/layout'\n\nimport NextLink from 'next/link'\nimport {\n  DialogParameterTypeCreateEdit,\n  useConfirm,\n  EnableIcon,\n  DisableIcon,\n  EditIcon,\n  CreateIcon,\n  DeleteIcon,\n  AppLayout\n} from '@/components'\n\nimport { commonStore, parameterTypeStore } from '@/store/reducers'\nimport * as columnProperties from '@/utils/columnProperties'\nimport getMessageConfirm from '@/utils/getMessageConfirm'\n\nimport type { ParameterTypeOperation } from '@/types/ParameterType'\nimport type { GridColumns } from '@material-ui/data-grid'\n\nfunction ParameterTypes() {\n  const { t } = useTranslation('parameter_type')\n  const { confirm } = useConfirm()\n  const classes = useStyles()\n\n  const dispatch = useDispatch()\n\n  const breadcrumbData = [\n    { label: 'Home', href: '/' },\n    { label: 'System Management', href: '/users' },\n    { label: 'Parameters Management', href: '/parameter_types' }\n  ]\n\n  const permissions = useSelector(parameterTypeStore.selectPermissions)\n  const selectedRows = useSelector(commonStore.selectSelectedRows)\n  const { wiki_page, column_tooltips } = useSelector(parameterTypeStore.selectInitDataForList)\n\n  const handleOpenCreateDialog = () => {\n    dispatch(parameterTypeStore.extraActions.openCreateDialog())\n  }\n\n  const handleOpenUpdateDialog = (id: number) => async () => {\n    dispatch(parameterTypeStore.extraActions.openUpdateDialog(id))\n  }\n\n  const executeOperation = (operation: ParameterTypeOperation) => async () => {\n    const description = getMessageConfirm(t, 'parameter_type', selectedRows, operation)\n    const result = await confirm({ description })\n    if (result === 'OK') {\n      dispatch(\n        parameterTypeStore.extraActions.executeOperation({\n          operation,\n          parameter_types: selectedRows\n        })\n      )\n    }\n  }\n\n  const columns: GridColumns = [\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.iconColumn,\n      description: column_tooltips.edit,\n      field: 'id',\n      headerName: 'Edit',\n      renderCell: (param) => {\n        return <EditIcon onClick={handleOpenUpdateDialog(param.value as number)} />\n      }\n    },\n    {\n      ...columnProperties.defaultProperties,\n      description: column_tooltips.type_id,\n      field: 'type_id',\n      headerName: 'Type',\n      width: 100,\n      renderCell: (params) => (\n        <NextLink href={`/parameter_types/${params.row.id}`}>\n          <a className={classes.link}>{params.value}</a>\n        </NextLink>\n      )\n    },\n    {\n      ...columnProperties.defaultProperties,\n      description: column_tooltips.description,\n      field: 'description',\n      headerName: 'Description',\n      flex: 0.6\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.rightColumn,\n      description: column_tooltips.nbr_default,\n      field: 'nbr_default',\n      headerName: 'Max default',\n      flex: 0.15\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.centerColumn,\n      description: column_tooltips.is_multilingual,\n      field: 'is_multilingual',\n      headerName: 'Multilingual',\n      flex: 0.15,\n      renderCell(param) {\n        return param.value ? <EnableIcon /> : <DisableIcon />\n      }\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.centerColumn,\n      description: column_tooltips.status,\n      field: 'status',\n      headerName: 'Status',\n      flex: 0.15,\n      renderCell(param) {\n        return param.value ? <EnableIcon /> : <DisableIcon />\n      }\n    }\n  ]\n\n  const buttons = [\n    {\n      label: t('common:button.new'),\n      startIcon: <CreateIcon />,\n      disabled: !permissions?.create,\n      onClick: handleOpenCreateDialog\n    },\n    {\n      label: t('common:button.delete'),\n      disabled: !permissions?.delete || selectedRows.length === 0,\n      onClick: executeOperation('delete'),\n      startIcon: <DeleteIcon />\n    },\n    {\n      label: t('common:button.enable'),\n      disabled: !permissions?.disable_enable || selectedRows.length === 0,\n      onClick: executeOperation('enable'),\n      startIcon: <EnableIcon />\n    },\n    {\n      label: t('common:button.disable'),\n      disabled: !permissions?.disable_enable || selectedRows.length === 0,\n      onClick: executeOperation('disable'),\n      startIcon: <DisableIcon />\n    }\n  ]\n\n  return (\n    <AppLayout\n      entity=\"parameter_type\"\n      breadcrumbs={breadcrumbData}\n      wikiPage={wiki_page}\n      buttons={buttons}\n      permissions={permissions}\n      Dialogs={<DialogParameterTypeCreateEdit />}\n      tableProps={{\n        columns: columns\n      }}\n    />\n  )\n}\n\nexport const getServerSideProps = useAuthMiddleware(['common', 'parameter_type', 'advanced_filter'])\n\nexport default ParameterTypes\n"]},"metadata":{},"sourceType":"module"}