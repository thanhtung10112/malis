{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Drawing\\\\TabGeneral.tsx\";\nimport React from 'react';\nimport { Grid, Link, Box } from '@material-ui/core';\nimport { Unless } from 'react-if';\nimport { TableMultilingualDescription, FormControllerAutocomplete, FormControllerTextField, SectionTimezone, DialogMain, AppAutocomplete, FormControllerCheckbox } from '@/components';\nimport { useSelector } from 'react-redux';\nimport { useFormContext } from 'react-hook-form';\nimport useStyles from './styles';\nimport _ from 'lodash';\nimport { drawingStore, commonStore } from '@/store/reducers';\n\nfunction TabGeneral() {\n  const classes = useStyles();\n  const drawingForm = useFormContext();\n  const [openLink, setOpenLink] = React.useState(false);\n  const drawingDetail = useSelector(drawingStore.selectDetail);\n  const parameters = useSelector(drawingStore.selectParameters);\n  const userJob = useSelector(commonStore.selectUserValueJob);\n\n  const isCreating = _.isNil(drawingDetail.id);\n\n  const handleChangePurpose = optionValue => {\n    const {\n      DWPU\n    } = parameters;\n\n    const option = _.find(DWPU, {\n      id: optionValue.value\n    });\n\n    const {\n      exclude_from\n    } = option.properties;\n    const excludeList = {\n      C: 'exclude_from_customer',\n      O: 'exclude_from_other',\n      S: 'exclude_from_supplier'\n    };\n    const excludeFrom = exclude_from ? exclude_from.split(';') : []; // C;O;S => [C, O, S]\n\n    _.forIn(excludeList, (value, key) => {\n      if (excludeFrom.includes(key)) {\n        drawingForm.setValue(value, true);\n      } else {\n        drawingForm.setValue(value, false);\n      }\n    });\n  };\n\n  const handleOpenInfoLink = event => {\n    event.preventDefault();\n    setOpenLink(true);\n  };\n\n  const handleCloseInfoLink = () => {\n    setOpenLink(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(AppAutocomplete, {\n              value: userJob,\n              popupIcon: null,\n              disabled: true,\n              label: \"Job\",\n              required: true,\n              primaryKeyOption: \"value\",\n              options: [],\n              renderOption: option => option.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n              control: drawingForm.control,\n              required: true,\n              label: \"Drawing #\",\n              name: \"drawing_id\",\n              disabled: !isCreating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n              label: \"Customer ID\",\n              control: drawingForm.control,\n              name: \"customer_id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n              control: drawingForm.control,\n              name: \"revision\",\n              label: \"Revision\",\n              required: true,\n              transformValue: value => value.toUpperCase(),\n              disabled: !isCreating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControllerAutocomplete, {\n              primaryKeyOption: \"value\",\n              name: \"drawing_format\",\n              control: drawingForm.control,\n              options: parameters.PLFO,\n              renderOption: option => option.description,\n              label: \"Format\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControllerAutocomplete, {\n              disableClearable: false,\n              primaryKeyOption: \"value\",\n              name: \"file_type\",\n              control: drawingForm.control,\n              options: parameters.FTYP,\n              label: \"File Type\",\n              renderOption: option => option.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControllerAutocomplete, {\n              primaryKeyOption: \"value\",\n              name: \"drawing_purpose\",\n              control: drawingForm.control,\n              options: parameters.DWPU,\n              label: \"Purpose\",\n              required: true,\n              renderOption: option => option.description,\n              onChange: handleChangePurpose\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControllerAutocomplete, {\n              primaryKeyOption: \"value\",\n              name: \"file_prefix\",\n              control: drawingForm.control,\n              options: parameters.FPRE,\n              label: \"File Prefix\",\n              renderOption: option => option.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            style: {\n              paddingBottom: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              children: [/*#__PURE__*/_jsxDEV(FormControllerCheckbox, {\n                control: drawingForm.control,\n                name: \"is_drawing\",\n                label: \"Is Drawing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControllerCheckbox, {\n                control: drawingForm.control,\n                name: \"is_schematic\",\n                label: \"Is Schematic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControllerCheckbox, {\n                control: drawingForm.control,\n                name: \"is_specification\",\n                label: \"Is Specification\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControllerCheckbox, {\n                control: drawingForm.control,\n                name: \"is_other_document\",\n                label: \"Is Other Document\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              marginTop: 1,\n              children: /*#__PURE__*/_jsxDEV(FormControllerCheckbox, {\n                control: drawingForm.control,\n                name: \"is_detail_drawing\",\n                label: \"Is Details Document\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Unless, {\n              condition: isCreating,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.buttonsGeneral,\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  children: \"View Contract Items\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    target: \"_blank\",\n                    href: drawingDetail.url,\n                    children: \"Actual drawing\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    style: {\n                      marginLeft: 4\n                    },\n                    onClick: handleOpenInfoLink,\n                    children: \"[i]\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(SectionTimezone, {\n                value: drawingDetail,\n                style: {\n                  padding: 0\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(TableMultilingualDescription, {\n          tableHeight: 400,\n          name: \"descriptions\",\n          control: drawingForm.control,\n          editMode: !isCreating,\n          languageList: parameters.PLLA,\n          copyable: true,\n          copyDialogProps: {\n            compName: 'drawing_list',\n            entity: 'drawings'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogMain, {\n      open: openLink,\n      title: \"Infomation\",\n      description: drawingDetail.windows_path,\n      onClose: handleCloseInfoLink\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport default TabGeneral;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Drawing/TabGeneral.tsx"],"names":["React","Grid","Link","Box","Unless","TableMultilingualDescription","FormControllerAutocomplete","FormControllerTextField","SectionTimezone","DialogMain","AppAutocomplete","FormControllerCheckbox","useSelector","useFormContext","useStyles","_","drawingStore","commonStore","TabGeneral","classes","drawingForm","openLink","setOpenLink","useState","drawingDetail","selectDetail","parameters","selectParameters","userJob","selectUserValueJob","isCreating","isNil","id","handleChangePurpose","optionValue","DWPU","option","find","value","exclude_from","properties","excludeList","C","O","S","excludeFrom","split","forIn","key","includes","setValue","handleOpenInfoLink","event","preventDefault","handleCloseInfoLink","description","control","toUpperCase","PLFO","FTYP","FPRE","paddingBottom","buttonsGeneral","url","marginLeft","padding","PLLA","compName","entity","windows_path"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,GAArB,QAAgC,mBAAhC;AAEA,SAASC,MAAT,QAAuB,UAAvB;AAEA,SACEC,4BADF,EAEEC,0BAFF,EAGEC,uBAHF,EAIEC,eAJF,EAKEC,UALF,EAMEC,eANF,EAOEC,sBAPF,QAQO,cARP;AAUA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,OAAOC,SAAP,MAAsB,UAAtB;AAEA,OAAOC,CAAP,MAAc,QAAd;AAEA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,kBAA1C;;AAIA,SAASC,UAAT,GAAsB;AACpB,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AACA,QAAMM,WAAW,GAAGP,cAAc,EAAlC;AAEA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BtB,KAAK,CAACuB,QAAN,CAAe,KAAf,CAAhC;AAEA,QAAMC,aAAa,GAAGZ,WAAW,CAACI,YAAY,CAACS,YAAd,CAAjC;AACA,QAAMC,UAAU,GAAGd,WAAW,CAACI,YAAY,CAACW,gBAAd,CAA9B;AACA,QAAMC,OAAO,GAAGhB,WAAW,CAACK,WAAW,CAACY,kBAAb,CAA3B;;AAEA,QAAMC,UAAU,GAAGf,CAAC,CAACgB,KAAF,CAAQP,aAAa,CAACQ,EAAtB,CAAnB;;AAEA,QAAMC,mBAAmB,GAAIC,WAAD,IAAiB;AAC3C,UAAM;AAAEC,MAAAA;AAAF,QAAWT,UAAjB;;AACA,UAAMU,MAAM,GAAGrB,CAAC,CAACsB,IAAF,CAAOF,IAAP,EAAa;AAAEH,MAAAA,EAAE,EAAEE,WAAW,CAACI;AAAlB,KAAb,CAAf;;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAmBH,MAAM,CAACI,UAAhC;AACA,UAAMC,WAAW,GAAG;AAClBC,MAAAA,CAAC,EAAE,uBADe;AAElBC,MAAAA,CAAC,EAAE,oBAFe;AAGlBC,MAAAA,CAAC,EAAE;AAHe,KAApB;AAKA,UAAMC,WAAW,GAAGN,YAAY,GAAGA,YAAY,CAACO,KAAb,CAAmB,GAAnB,CAAH,GAA6B,EAA7D,CAT2C,CASqB;;AAChE/B,IAAAA,CAAC,CAACgC,KAAF,CAAQN,WAAR,EAAqB,CAACH,KAAD,EAAQU,GAAR,KAAgB;AACnC,UAAIH,WAAW,CAACI,QAAZ,CAAqBD,GAArB,CAAJ,EAA+B;AAC7B5B,QAAAA,WAAW,CAAC8B,QAAZ,CAAqBZ,KAArB,EAA4B,IAA5B;AACD,OAFD,MAEO;AACLlB,QAAAA,WAAW,CAAC8B,QAAZ,CAAqBZ,KAArB,EAA4B,KAA5B;AACD;AACF,KAND;AAOD,GAjBD;;AAmBA,QAAMa,kBAAkB,GAAIC,KAAD,IAAW;AACpCA,IAAAA,KAAK,CAACC,cAAN;AACA/B,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAHD;;AAKA,QAAMgC,mBAAmB,GAAG,MAAM;AAChChC,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCACE,QAAC,eAAD;AACE,cAAA,KAAK,EAAEM,OADT;AAEE,cAAA,SAAS,EAAE,IAFb;AAGE,cAAA,QAAQ,MAHV;AAIE,cAAA,KAAK,EAAC,KAJR;AAKE,cAAA,QAAQ,MALV;AAME,cAAA,gBAAgB,EAAC,OANnB;AAOE,cAAA,OAAO,EAAE,EAPX;AAQE,cAAA,YAAY,EAAGQ,MAAD,IAAYA,MAAM,CAACmB;AARnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCACE,QAAC,uBAAD;AACE,cAAA,OAAO,EAAEnC,WAAW,CAACoC,OADvB;AAEE,cAAA,QAAQ,MAFV;AAGE,cAAA,KAAK,EAAC,WAHR;AAIE,cAAA,IAAI,EAAC,YAJP;AAKE,cAAA,QAAQ,EAAE,CAAC1B;AALb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAbF,eAsBE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCACE,QAAC,uBAAD;AAAyB,cAAA,KAAK,EAAC,aAA/B;AAA6C,cAAA,OAAO,EAAEV,WAAW,CAACoC,OAAlE;AAA2E,cAAA,IAAI,EAAC;AAAhF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAtBF,eAyBE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCACE,QAAC,uBAAD;AACE,cAAA,OAAO,EAAEpC,WAAW,CAACoC,OADvB;AAEE,cAAA,IAAI,EAAC,UAFP;AAGE,cAAA,KAAK,EAAC,UAHR;AAIE,cAAA,QAAQ,MAJV;AAKE,cAAA,cAAc,EAAGlB,KAAD,IAAWA,KAAK,CAACmB,WAAN,EAL7B;AAME,cAAA,QAAQ,EAAE,CAAC3B;AANb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAzBF,eAmCE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCACE,QAAC,0BAAD;AACE,cAAA,gBAAgB,EAAC,OADnB;AAEE,cAAA,IAAI,EAAC,gBAFP;AAGE,cAAA,OAAO,EAAEV,WAAW,CAACoC,OAHvB;AAIE,cAAA,OAAO,EAAE9B,UAAU,CAACgC,IAJtB;AAKE,cAAA,YAAY,EAAGtB,MAAD,IAAYA,MAAM,CAACmB,WALnC;AAME,cAAA,KAAK,EAAC,QANR;AAOE,cAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAnCF,eA8CE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCACE,QAAC,0BAAD;AACE,cAAA,gBAAgB,EAAE,KADpB;AAEE,cAAA,gBAAgB,EAAC,OAFnB;AAGE,cAAA,IAAI,EAAC,WAHP;AAIE,cAAA,OAAO,EAAEnC,WAAW,CAACoC,OAJvB;AAKE,cAAA,OAAO,EAAE9B,UAAU,CAACiC,IALtB;AAME,cAAA,KAAK,EAAC,WANR;AAOE,cAAA,YAAY,EAAGvB,MAAD,IAAYA,MAAM,CAACmB;AAPnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA9CF,eAyDE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCACE,QAAC,0BAAD;AACE,cAAA,gBAAgB,EAAC,OADnB;AAEE,cAAA,IAAI,EAAC,iBAFP;AAGE,cAAA,OAAO,EAAEnC,WAAW,CAACoC,OAHvB;AAIE,cAAA,OAAO,EAAE9B,UAAU,CAACS,IAJtB;AAKE,cAAA,KAAK,EAAC,SALR;AAME,cAAA,QAAQ,MANV;AAOE,cAAA,YAAY,EAAGC,MAAD,IAAYA,MAAM,CAACmB,WAPnC;AAQE,cAAA,QAAQ,EAAEtB;AARZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAzDF,eAqEE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCACE,QAAC,0BAAD;AACE,cAAA,gBAAgB,EAAC,OADnB;AAEE,cAAA,IAAI,EAAC,aAFP;AAGE,cAAA,OAAO,EAAEb,WAAW,CAACoC,OAHvB;AAIE,cAAA,OAAO,EAAE9B,UAAU,CAACkC,IAJtB;AAKE,cAAA,KAAK,EAAC,aALR;AAME,cAAA,YAAY,EAAGxB,MAAD,IAAYA,MAAM,CAACmB;AANnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBArEF,eAgFE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,KAAK,EAAE;AAAEM,cAAAA,aAAa,EAAE;AAAjB,aAA1B;AAAA,oCACE,QAAC,GAAD;AAAK,cAAA,OAAO,EAAC,MAAb;AAAA,sCACE,QAAC,sBAAD;AAAwB,gBAAA,OAAO,EAAEzC,WAAW,CAACoC,OAA7C;AAAsD,gBAAA,IAAI,EAAC,YAA3D;AAAwE,gBAAA,KAAK,EAAC;AAA9E;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,sBAAD;AAAwB,gBAAA,OAAO,EAAEpC,WAAW,CAACoC,OAA7C;AAAsD,gBAAA,IAAI,EAAC,cAA3D;AAA0E,gBAAA,KAAK,EAAC;AAAhF;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE,QAAC,sBAAD;AACE,gBAAA,OAAO,EAAEpC,WAAW,CAACoC,OADvB;AAEE,gBAAA,IAAI,EAAC,kBAFP;AAGE,gBAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,sBAHF,eAQE,QAAC,sBAAD;AACE,gBAAA,OAAO,EAAEpC,WAAW,CAACoC,OADvB;AAEE,gBAAA,IAAI,EAAC,mBAFP;AAGE,gBAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,sBARF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAeE,QAAC,GAAD;AAAK,cAAA,SAAS,EAAE,CAAhB;AAAA,qCACE,QAAC,sBAAD;AACE,gBAAA,OAAO,EAAEpC,WAAW,CAACoC,OADvB;AAEE,gBAAA,IAAI,EAAC,mBAFP;AAGE,gBAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAfF,eAuBE,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAE1B,UAAnB;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAEX,OAAO,CAAC2C,cAAxB;AAAA,wCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,GAAD;AAAK,kBAAA,OAAO,EAAC,MAAb;AAAoB,kBAAA,UAAU,EAAC,QAA/B;AAAA,0CACE,QAAC,IAAD;AAAM,oBAAA,MAAM,EAAC,QAAb;AAAsB,oBAAA,IAAI,EAAEtC,aAAa,CAACuC,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAIE,QAAC,IAAD;AAAM,oBAAA,KAAK,EAAE;AAAEC,sBAAAA,UAAU,EAAE;AAAd,qBAAb;AAAgC,oBAAA,OAAO,EAAEb,kBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAaE,QAAC,eAAD;AAAiB,gBAAA,KAAK,EAAE3B,aAAxB;AAAuC,gBAAA,KAAK,EAAE;AAAEyC,kBAAAA,OAAO,EAAE;AAAX;AAA9C;AAAA;AAAA;AAAA;AAAA,sBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eA2HE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACE,QAAC,4BAAD;AACE,UAAA,WAAW,EAAE,GADf;AAEE,UAAA,IAAI,EAAC,cAFP;AAGE,UAAA,OAAO,EAAE7C,WAAW,CAACoC,OAHvB;AAIE,UAAA,QAAQ,EAAE,CAAC1B,UAJb;AAKE,UAAA,YAAY,EAAEJ,UAAU,CAACwC,IAL3B;AAME,UAAA,QAAQ,MANV;AAOE,UAAA,eAAe,EAAE;AACfC,YAAAA,QAAQ,EAAE,cADK;AAEfC,YAAAA,MAAM,EAAE;AAFO;AAPnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA3HF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA2IE,QAAC,UAAD;AACE,MAAA,IAAI,EAAE/C,QADR;AAEE,MAAA,KAAK,EAAC,YAFR;AAGE,MAAA,WAAW,EAAEG,aAAa,CAAC6C,YAH7B;AAIE,MAAA,OAAO,EAAEf;AAJX;AAAA;AAAA;AAAA;AAAA,YA3IF;AAAA,kBADF;AAoJD;;AAED,eAAepC,UAAf","sourcesContent":["import React from 'react'\n\nimport { Grid, Link, Box } from '@material-ui/core'\n\nimport { Unless } from 'react-if'\n\nimport {\n  TableMultilingualDescription,\n  FormControllerAutocomplete,\n  FormControllerTextField,\n  SectionTimezone,\n  DialogMain,\n  AppAutocomplete,\n  FormControllerCheckbox\n} from '@/components'\n\nimport { useSelector } from 'react-redux'\nimport { useFormContext } from 'react-hook-form'\nimport useStyles from './styles'\n\nimport _ from 'lodash'\n\nimport { drawingStore, commonStore } from '@/store/reducers'\n\nimport type { DrawingDetail } from '@/types/Drawing'\n\nfunction TabGeneral() {\n  const classes = useStyles()\n  const drawingForm = useFormContext<DrawingDetail>()\n\n  const [openLink, setOpenLink] = React.useState(false)\n\n  const drawingDetail = useSelector(drawingStore.selectDetail)\n  const parameters = useSelector(drawingStore.selectParameters)\n  const userJob = useSelector(commonStore.selectUserValueJob)\n\n  const isCreating = _.isNil(drawingDetail.id)\n\n  const handleChangePurpose = (optionValue) => {\n    const { DWPU } = parameters\n    const option = _.find(DWPU, { id: optionValue.value }) as any\n    const { exclude_from } = option.properties\n    const excludeList = {\n      C: 'exclude_from_customer',\n      O: 'exclude_from_other',\n      S: 'exclude_from_supplier'\n    }\n    const excludeFrom = exclude_from ? exclude_from.split(';') : [] // C;O;S => [C, O, S]\n    _.forIn(excludeList, (value, key) => {\n      if (excludeFrom.includes(key)) {\n        drawingForm.setValue(value, true)\n      } else {\n        drawingForm.setValue(value, false)\n      }\n    })\n  }\n\n  const handleOpenInfoLink = (event) => {\n    event.preventDefault()\n    setOpenLink(true)\n  }\n\n  const handleCloseInfoLink = () => {\n    setOpenLink(false)\n  }\n\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid item xs={6}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <AppAutocomplete\n                value={userJob}\n                popupIcon={null}\n                disabled\n                label=\"Job\"\n                required\n                primaryKeyOption=\"value\"\n                options={[]}\n                renderOption={(option) => option.description}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControllerTextField\n                control={drawingForm.control}\n                required\n                label=\"Drawing #\"\n                name=\"drawing_id\"\n                disabled={!isCreating}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControllerTextField label=\"Customer ID\" control={drawingForm.control} name=\"customer_id\" />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControllerTextField\n                control={drawingForm.control}\n                name=\"revision\"\n                label=\"Revision\"\n                required\n                transformValue={(value) => value.toUpperCase()}\n                disabled={!isCreating}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControllerAutocomplete\n                primaryKeyOption=\"value\"\n                name=\"drawing_format\"\n                control={drawingForm.control}\n                options={parameters.PLFO}\n                renderOption={(option) => option.description}\n                label=\"Format\"\n                required\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControllerAutocomplete\n                disableClearable={false}\n                primaryKeyOption=\"value\"\n                name=\"file_type\"\n                control={drawingForm.control}\n                options={parameters.FTYP}\n                label=\"File Type\"\n                renderOption={(option) => option.description}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControllerAutocomplete\n                primaryKeyOption=\"value\"\n                name=\"drawing_purpose\"\n                control={drawingForm.control}\n                options={parameters.DWPU}\n                label=\"Purpose\"\n                required\n                renderOption={(option) => option.description}\n                onChange={handleChangePurpose}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControllerAutocomplete\n                primaryKeyOption=\"value\"\n                name=\"file_prefix\"\n                control={drawingForm.control}\n                options={parameters.FPRE}\n                label=\"File Prefix\"\n                renderOption={(option) => option.description}\n              />\n            </Grid>\n\n            <Grid item xs={12} style={{ paddingBottom: 0 }}>\n              <Box display=\"flex\">\n                <FormControllerCheckbox control={drawingForm.control} name=\"is_drawing\" label=\"Is Drawing\" />\n                <FormControllerCheckbox control={drawingForm.control} name=\"is_schematic\" label=\"Is Schematic\" />\n                <FormControllerCheckbox\n                  control={drawingForm.control}\n                  name=\"is_specification\"\n                  label=\"Is Specification\"\n                />\n                <FormControllerCheckbox\n                  control={drawingForm.control}\n                  name=\"is_other_document\"\n                  label=\"Is Other Document\"\n                />\n              </Box>\n              <Box marginTop={1}>\n                <FormControllerCheckbox\n                  control={drawingForm.control}\n                  name=\"is_detail_drawing\"\n                  label=\"Is Details Document\"\n                />\n              </Box>\n\n              <Unless condition={isCreating}>\n                <div className={classes.buttonsGeneral}>\n                  <Link>View Contract Items</Link>\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <Link target=\"_blank\" href={drawingDetail.url}>\n                      Actual drawing\n                    </Link>\n                    <Link style={{ marginLeft: 4 }} onClick={handleOpenInfoLink}>\n                      [i]\n                    </Link>\n                  </Box>\n                </div>\n\n                <SectionTimezone value={drawingDetail} style={{ padding: 0 }} />\n              </Unless>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={6}>\n          <TableMultilingualDescription\n            tableHeight={400}\n            name=\"descriptions\"\n            control={drawingForm.control}\n            editMode={!isCreating}\n            languageList={parameters.PLLA as any}\n            copyable\n            copyDialogProps={{\n              compName: 'drawing_list',\n              entity: 'drawings'\n            }}\n          />\n        </Grid>\n      </Grid>\n      <DialogMain\n        open={openLink}\n        title=\"Infomation\"\n        description={drawingDetail.windows_path}\n        onClose={handleCloseInfoLink}\n      />\n    </>\n  )\n}\n\nexport default TabGeneral\n"]},"metadata":{},"sourceType":"module"}