{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice, createAction } from '@reduxjs/toolkit';\nimport { v1 as uuidv1 } from 'uuid';\nimport { actionTypes } from '@/utils/constant';\nexport var name = 'budget';\nexport var resetState = createAction(name + '/RESET_STATE');\nexport var dialogState = {\n  isOpen: false,\n  isEdit: false,\n  isLoading: false\n};\nexport var importDialogState = {\n  isOpen: false,\n  isLoading: false,\n  mode: 0 // 0 -> test, 1 -> write\n\n};\nexport var resultImportDialog = {\n  isOpen: false,\n  success: true,\n  result: '',\n  isLoading: false\n};\nexport var budgetDetail = {\n  job_id: null,\n  budget_id: '',\n  puco: null,\n  description: '',\n  amount: null,\n  currency: ''\n};\nexport var initDataForList = {\n  jobs: [],\n  puco_list: [],\n  selected_job: {\n    description: '',\n    value: null\n  },\n  user_puco: {\n    description: '',\n    value: null\n  },\n  permissions: {\n    budget: null\n  },\n  wiki_page: '',\n  column_tooltips: {}\n};\nexport var initDataForCreateEdit = {\n  puco_list: [],\n  user_currency: {\n    description: '',\n    value: null\n  },\n  user_job: {\n    description: '',\n    value: null\n  },\n  user_puco: {\n    description: '',\n    value: null\n  },\n  wiki_page: ''\n};\nvar remindData = {\n  open: false,\n  helpText: ''\n};\nexport var initialState = {\n  dataList: [],\n  dialogState: dialogState,\n  importDialogState: importDialogState,\n  resultImportDialog: resultImportDialog,\n  budgetDetail: budgetDetail,\n  initDataForList: initDataForList,\n  remindData: remindData,\n  initDataForCreateEdit: initDataForCreateEdit,\n  budgetImportProcess: {\n    celery_id: '',\n    operation_id: '',\n    openDialogProcess: false\n  },\n  budgetSum: {\n    amount: 0,\n    budget_id: '',\n    currency_id: '',\n    description: 'Total of selected cost codes',\n    left_in_order: 0,\n    left_in_rfq: 0,\n    parameter_id: '',\n    used_in_order: 0,\n    used_in_rfq: 0,\n    id: uuidv1()\n  }\n};\nvar budget = createSlice({\n  name: name,\n  initialState: initialState,\n  reducers: {\n    setOpenDialog: function setOpenDialog(state, _ref) {\n      var payload = _ref.payload;\n      state.dialogState.isOpen = payload;\n    },\n    setLoadingDialog: function setLoadingDialog(state, _ref2) {\n      var payload = _ref2.payload;\n      state.dialogState.isLoading = payload;\n    },\n    setEditMode: function setEditMode(state, action) {\n      state.dialogState.isEdit = action.payload;\n    },\n    setInitDataForList: function setInitDataForList(state, _ref3) {\n      var payload = _ref3.payload;\n      state.initDataForList = payload;\n    },\n    setInitDataForCreateEdit: function setInitDataForCreateEdit(state, _ref4) {\n      var payload = _ref4.payload;\n      state.initDataForCreateEdit = payload;\n    },\n    setDataList: function setDataList(state, _ref5) {\n      var payload = _ref5.payload;\n      state.dataList = payload;\n    },\n    setUserValues: function setUserValues(state, _ref6) {\n      var payload = _ref6.payload;\n\n      if (payload.value === 'puco') {\n        state.initDataForList.user_puco = payload.option;\n      } else {\n        state.initDataForList.selected_job = payload.option;\n      }\n    },\n    setBudgetDetail: function setBudgetDetail(state, _ref7) {\n      var payload = _ref7.payload;\n      state.budgetDetail = _objectSpread(_objectSpread({}, state.budgetDetail), payload);\n    },\n    setBudgetSum: function setBudgetSum(state, _ref8) {\n      var payload = _ref8.payload;\n      state.budgetSum.amount = payload.sum_amount;\n      state.budgetSum.used_in_rfq = payload.sum_used_in_rfq;\n      state.budgetSum.left_in_rfq = payload.sum_left_in_rfq;\n      state.budgetSum.used_in_order = payload.sum_used_in_order;\n      state.budgetSum.left_in_order = payload.sum_left_in_order;\n    },\n    setPermissions: function setPermissions(state, _ref9) {\n      var payload = _ref9.payload;\n      state.initDataForList.permissions.budget = payload;\n    },\n    setImportOpen: function setImportOpen(state, _ref10) {\n      var payload = _ref10.payload;\n      state.importDialogState.isOpen = payload;\n    },\n    setImportLoading: function setImportLoading(state, _ref11) {\n      var payload = _ref11.payload;\n      state.importDialogState.isLoading = payload;\n    },\n    setImportMode: function setImportMode(state, _ref12) {\n      var payload = _ref12.payload;\n      state.importDialogState.mode = payload;\n    },\n    setImportResult: function setImportResult(state, _ref13) {\n      var payload = _ref13.payload;\n      state.resultImportDialog = _objectSpread(_objectSpread({}, state.resultImportDialog), payload);\n    },\n    setOpenImportProcess: function setOpenImportProcess(state, _ref14) {\n      var payload = _ref14.payload;\n      state.budgetImportProcess.openDialogProcess = payload;\n    },\n    setCeleryId: function setCeleryId(state, _ref15) {\n      var payload = _ref15.payload;\n      state.budgetImportProcess.celery_id = payload;\n    },\n    setOperationId: function setOperationId(state, _ref16) {\n      var payload = _ref16.payload;\n      state.budgetImportProcess.operation_id = payload;\n    },\n    setRemindData: function setRemindData(state, _ref17) {\n      var payload = _ref17.payload;\n      state.remindData = _objectSpread(_objectSpread({}, state.remindData), payload);\n    }\n  },\n  extraReducers: _defineProperty({}, resetState.type, function () {\n    return initialState;\n  })\n});\nvar _budget$actions = budget.actions,\n    setOpenDialog = _budget$actions.setOpenDialog,\n    setLoadingDialog = _budget$actions.setLoadingDialog,\n    setEditMode = _budget$actions.setEditMode,\n    setInitDataForList = _budget$actions.setInitDataForList,\n    setDataList = _budget$actions.setDataList,\n    setUserValues = _budget$actions.setUserValues,\n    setBudgetDetail = _budget$actions.setBudgetDetail,\n    setInitDataForCreateEdit = _budget$actions.setInitDataForCreateEdit,\n    setBudgetSum = _budget$actions.setBudgetSum,\n    setPermissions = _budget$actions.setPermissions,\n    setImportOpen = _budget$actions.setImportOpen,\n    setImportLoading = _budget$actions.setImportLoading,\n    setImportResult = _budget$actions.setImportResult,\n    setImportMode = _budget$actions.setImportMode,\n    setOpenImportProcess = _budget$actions.setOpenImportProcess,\n    setCeleryId = _budget$actions.setCeleryId,\n    setOperationId = _budget$actions.setOperationId,\n    setRemindData = _budget$actions.setRemindData;\nexport { setOpenDialog, setLoadingDialog, setEditMode, setInitDataForList, setDataList, setUserValues, setBudgetDetail, setInitDataForCreateEdit, setBudgetSum, setPermissions, setImportOpen, setImportLoading, setImportResult, setImportMode, setOpenImportProcess, setCeleryId, setOperationId, setRemindData };\nexport var openUpdateDialog = createAction(name + '/OPEN_UPDATE_DIALOG');\nexport var closeDialog = createAction(name + '/CLOSE_DIALOG');\nexport var openCreateDialog = createAction(name + '/OPEN_CREATE_DIALOG');\nexport var getList = createAction(name + '/GET_LIST');\nexport var changeUserValue = createAction(name + '/CHANGE_USER_VALUE');\nexport var updateMultiple = createAction(name + '/' + actionTypes.UPDATE_MULTIPLE);\nexport var create = createAction(name + '/CREATE');\nexport var update = createAction(name + '/UPDATE');\nexport var remove = createAction(name + '/REMOVE');\nexport var importCostCode = createAction(name + '/IMPORT');\nexport var sendReportMail = createAction(name + '/SEND_REPORT_MAIL');\nexport var getRemindData = createAction(name + '/GET_REMIND_DATA'); // selector\n\nexport var selectDialogState = function selectDialogState(state) {\n  return state.budget.dialogState;\n};\nexport var selectUserJob = function selectUserJob(state) {\n  return state.budget.initDataForList.selected_job;\n};\nexport var selectUserPuco = function selectUserPuco(state) {\n  return state.budget.initDataForList.user_puco;\n};\nexport var selectDataList = function selectDataList(state) {\n  return state.budget.dataList;\n};\nexport var selectJobList = function selectJobList(state) {\n  return state.budget.initDataForList.jobs;\n};\nexport var selectPucoList = function selectPucoList(state) {\n  return state.budget.initDataForList.puco_list;\n};\nexport var selectBudgetDetail = function selectBudgetDetail(state) {\n  return state.budget.budgetDetail;\n};\nexport var selectInitDataCreateEdit = function selectInitDataCreateEdit(state) {\n  return state.budget.initDataForCreateEdit;\n};\nexport var selectBudgetSum = function selectBudgetSum(state) {\n  return state.budget.budgetSum;\n};\nexport var selectPermissions = function selectPermissions(state) {\n  return state.budget.initDataForList.permissions.budget;\n};\nexport var selectImportDialogState = function selectImportDialogState(state) {\n  return state.budget.importDialogState;\n};\nexport var selectImportResultDialog = function selectImportResultDialog(state) {\n  return state.budget.resultImportDialog;\n};\nexport var selectImportDialogProcess = function selectImportDialogProcess(state) {\n  return state.budget.budgetImportProcess;\n};\nexport var selectRemindData = function selectRemindData(state) {\n  return state.budget.remindData;\n};\nexport var selectInitDataForCE = function selectInitDataForCE(state) {\n  return state.budget.initDataForCreateEdit;\n};\nexport var selectInitDataForList = function selectInitDataForList(state) {\n  return state.budget.initDataForList;\n};\nexport default budget.reducer;","map":null,"metadata":{},"sourceType":"module"}