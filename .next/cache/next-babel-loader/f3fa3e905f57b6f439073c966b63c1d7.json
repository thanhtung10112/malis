{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useMemo, useEffect } from 'react';\nimport { Paper, TextField, Grid } from '@material-ui/core';\nimport { DataTable } from '@/components';\nimport _ from 'lodash';\nimport * as columnProperties from '@/utils/columnProperties';\nimport HttpService from '@/helper/HttpService';\n\nvar AppTabHistoryLog = function AppTabHistoryLog(props) {\n  var entityId = props.entityId,\n      tableHeight = props.tableHeight,\n      mode = props.mode,\n      descriptionRows = props.descriptionRows,\n      extraColumns = props.extraColumns,\n      entity = props.entity,\n      onChange = props.onChange,\n      data = props.data,\n      isOpenDialog = props.isOpenDialog;\n  var httpService = new HttpService('');\n\n  var _useState = useState(''),\n      operationDetail = _useState[0],\n      setOperationDetail = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var defaultColumns = useMemo(function () {\n    return [_objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n      field: 'operation_code',\n      headerName: 'Tr.',\n      width: 80\n    }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n      field: 'created_at',\n      headerName: 'Date Time',\n      flex: 0.6\n    }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n      field: 'created_by',\n      headerName: 'User',\n      width: 80\n    }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n      field: 'operation_description',\n      headerName: 'Description',\n      flex: 0.6\n    })];\n  }, []);\n  var columns = [].concat(_toConsumableArray(defaultColumns), _toConsumableArray(extraColumns));\n  useEffect(function () {\n    if (data.length === 0 && (_.isNil(isOpenDialog) || isOpenDialog)) {\n      getHistoryData();\n    }\n  }, [entityId, entity, data, isOpenDialog]); // reset history log if close the dialog\n\n  useEffect(function () {\n    if (_.isNil(isOpenDialog)) {\n      return;\n    }\n\n    if (!isOpenDialog && data.length > 0) {\n      onChange([]);\n    }\n  }, [data, isOpenDialog, onChange]);\n\n  var getHistoryData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$httpService$ge, history_logs;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return httpService.get('history', {\n                entity: entity,\n                pk: entityId\n              });\n\n            case 4:\n              _yield$httpService$ge = _context.sent;\n              history_logs = _yield$httpService$ge.history_logs;\n              onChange(history_logs);\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('error', '>>>', _context.t0);\n\n            case 12:\n              setLoading(false);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }));\n\n    return function getHistoryData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleSelectOperation = function handleSelectOperation(params) {\n    var id = params.id;\n\n    var operation = _.find(data, {\n      id: id\n    });\n\n    setOperationDetail((operation === null || operation === void 0 ? void 0 : operation.changelogs) || '');\n  };\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"history\",\n    children: /*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: mode === 'vertical' ? 12 : 7,\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: /*#__PURE__*/_jsx(DataTable, {\n            rows: data,\n            columns: columns,\n            tableHeight: tableHeight,\n            loading: loading,\n            onRowClick: handleSelectOperation,\n            hideFooter: true\n          })\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: mode === 'vertical' ? 12 : 5,\n        children: /*#__PURE__*/_jsx(TextField, {\n          multiline: true,\n          rows: descriptionRows,\n          value: operationDetail\n        })\n      })]\n    })\n  });\n};\n\nAppTabHistoryLog.defaultProps = {\n  tableHeight: 350,\n  mode: 'vertical',\n  descriptionRows: 7,\n  extraColumns: []\n};\nexport default AppTabHistoryLog;","map":null,"metadata":{},"sourceType":"module"}