{"ast":null,"code":"import * as yup from 'yup';\nimport _ from 'lodash';\nconst importFileType = ['text/plain', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'];\n\nfunction getValidationSchema(t) {\n  const schema = yup.object().shape({\n    importFile: yup.mixed().test('required_file', t('form.message_validation.import_file_required'), value => {\n      return !_.isNil(value);\n    }).test('file_type', t('form.message_validation.import_file_check_type'), async value => {\n      return importFileType.includes((value === null || value === void 0 ? void 0 : value.type) || '');\n    }).test('file_size', t('form.message_validation.import_file_check_size'), value => {\n      const fileSize = (value === null || value === void 0 ? void 0 : value.size) / 1024 / 1024 || 0;\n      return fileSize <= 1;\n    }),\n    mode: yup.number().transform(value => parseInt(value))\n  });\n  return schema;\n}\n\nexport default getValidationSchema;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Budget/Import/validationSchema.ts"],"names":["yup","_","importFileType","getValidationSchema","t","schema","object","shape","importFile","mixed","test","value","isNil","includes","type","fileSize","size","mode","number","transform","parseInt"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,OAAOC,CAAP,MAAc,QAAd;AAIA,MAAMC,cAAc,GAAG,CACrB,YADqB,EAErB,0BAFqB,EAGrB,mEAHqB,CAAvB;;AAMA,SAASC,mBAAT,CAA6BC,CAA7B,EAA2C;AACzC,QAAMC,MAAM,GAAGL,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,IAAAA,UAAU,EAAER,GAAG,CACZS,KADS,GAETC,IAFS,CAEJ,eAFI,EAEaN,CAAC,CAAC,8CAAD,CAFd,EAEiEO,KAAD,IAAW;AACnF,aAAO,CAACV,CAAC,CAACW,KAAF,CAAQD,KAAR,CAAR;AACD,KAJS,EAKTD,IALS,CAKJ,WALI,EAKSN,CAAC,CAAC,gDAAD,CALV,EAK8D,MAAOO,KAAP,IAAiB;AACvF,aAAOT,cAAc,CAACW,QAAf,CAAwB,CAAAF,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEG,IAAP,KAAe,EAAvC,CAAP;AACD,KAPS,EAQTJ,IARS,CAQJ,WARI,EAQSN,CAAC,CAAC,gDAAD,CARV,EAQ+DO,KAAD,IAAW;AACjF,YAAMI,QAAQ,GAAG,CAAAJ,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEK,IAAP,IAAc,IAAd,GAAqB,IAArB,IAA6B,CAA9C;AACA,aAAOD,QAAQ,IAAI,CAAnB;AACD,KAXS,CADoB;AAahCE,IAAAA,IAAI,EAAEjB,GAAG,CAACkB,MAAJ,GAAaC,SAAb,CAAwBR,KAAD,IAAWS,QAAQ,CAACT,KAAD,CAA1C;AAb0B,GAAnB,CAAf;AAeA,SAAON,MAAP;AACD;;AAED,eAAeF,mBAAf","sourcesContent":["import * as yup from 'yup'\nimport _ from 'lodash'\n\nimport type { TFunction } from 'next-i18next'\n\nconst importFileType = [\n  'text/plain',\n  'application/vnd.ms-excel',\n  'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n]\n\nfunction getValidationSchema(t: TFunction) {\n  const schema = yup.object().shape({\n    importFile: yup\n      .mixed()\n      .test('required_file', t('form.message_validation.import_file_required'), (value) => {\n        return !_.isNil(value)\n      })\n      .test('file_type', t('form.message_validation.import_file_check_type'), async (value) => {\n        return importFileType.includes(value?.type || '')\n      })\n      .test('file_size', t('form.message_validation.import_file_check_size'), (value) => {\n        const fileSize = value?.size / 1024 / 1024 || 0\n        return fileSize <= 1\n      }),\n    mode: yup.number().transform((value) => parseInt(value))\n  })\n  return schema\n}\n\nexport default getValidationSchema\n"]},"metadata":{},"sourceType":"module"}