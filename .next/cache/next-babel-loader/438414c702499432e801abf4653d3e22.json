{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useMemo, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport NextHead from 'next/head';\nimport { Grid, Typography, TextField, makeStyles } from '@material-ui/core';\nimport { AppTitle, DialogMain, FormControllerTextField, AppBreadcrumb, FormControllerPasswordField, AppImageField } from '@/components';\nimport clsx from 'clsx';\nimport _ from 'lodash';\nimport { authStore } from '@/store/reducers';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport getPasswordYup from '@/utils/getPasswordYup';\nvar centerElement = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center'\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      height: 'calc(100vh - 48px - 44px)'\n    },\n    wrap: _objectSpread({\n      height: '100%'\n    }, centerElement),\n    content: {\n      height: 480,\n      width: 980,\n      backgroundColor: '#F4F7FC',\n      padding: theme.spacing(3),\n      boxShadow: theme.shadows[1]\n    },\n    avatar: _objectSpread(_objectSpread({}, centerElement), {}, {\n      width: 132,\n      height: 132,\n      border: '3px dotted #e5e5e5',\n      backgroundColor: 'white',\n      '& .icon': {\n        fontSize: 32,\n        color: '#0A65FF'\n      }\n    }),\n    contact: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexDirection: 'column'\n    },\n    infoRoot: {\n      height: 'calc(100% - 132px - 25px)',\n      marginTop: theme.spacing(2),\n      backgroundColor: 'white'\n    },\n    infoItem: {\n      padding: theme.spacing(2, 2, 0, 2)\n    },\n    personalInfo: {\n      borderRight: '1px solid #e5e5e5'\n    },\n    textField: {\n      margin: 10,\n      marginLeft: 0\n    },\n    timezones: {\n      marginTop: theme.spacing(1)\n    },\n    changePassword: {\n      cursor: 'pointer',\n      opacity: 0.6,\n      '&:hover': {\n        opacity: 1,\n        textDecoration: 'underline'\n      }\n    }\n  };\n});\n\nvar getValidationSchema = function getValidationSchema() {\n  return yup.object({\n    new_password: getPasswordYup('New password'),\n    old_password: yup.string().required('Old password is required!'),\n    confirm_password: yup.string().oneOf([yup.ref('new_password'), null], 'Confirm password does not match with old password!')\n  });\n};\n\nvar ProfilePage = function ProfilePage() {\n  var classes = useStyles();\n  var validationSchema = useMemo(getValidationSchema, []);\n  var passwordForm = useForm({\n    defaultValues: {\n      new_password: '',\n      old_password: '',\n      confirm_password: ''\n    },\n    shouldUnregister: false,\n    resolver: yupResolver(validationSchema)\n  });\n  var dispatch = useDispatch();\n  var profile = useSelector(authStore.selectProfile);\n  var pwdDialogState = useSelector(authStore.selectPwdDialogState);\n  var groupMember = useMemo(function () {\n    var group_membership = profile.group_membership;\n    return group_membership.reduce(function (preVal, currentVal) {\n      var groupTransform = \"- \".concat(currentVal.group_id, \" - \").concat(currentVal.description, \"\\n\");\n      return preVal + groupTransform;\n    }, '');\n  }, [profile.group_membership]);\n  useEffect(function () {\n    if (!pwdDialogState.open) {\n      passwordForm.reset();\n    }\n  }, [pwdDialogState.open]);\n  var handleChangePassword = passwordForm.handleSubmit(function (formData) {\n    var data = _.omit(formData, 'confirm_password');\n\n    dispatch(authStore.sagaChangePassword(data));\n  });\n\n  var handleOpenDialog = function handleOpenDialog() {\n    dispatch(authStore.actions.setPwDialogState({\n      open: true\n    }));\n  };\n\n  var handleCloseDialog = function handleCloseDialog() {\n    dispatch(authStore.actions.setPwDialogState({\n      open: false\n    }));\n    passwordForm.reset();\n  };\n\n  var handleChangeProfile = function handleChangeProfile(file) {\n    dispatch(authStore.actions.setProfileAvatar(file.base64));\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(NextHead, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"Profile Management\"\n      })\n    }), /*#__PURE__*/_jsx(AppBreadcrumb, {\n      items: [{\n        label: 'Home',\n        href: '/'\n      }, {\n        label: 'User Profile',\n        href: '/profile'\n      }]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsx(\"div\", {\n        className: classes.wrap,\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: classes.content,\n          children: [/*#__PURE__*/_jsxs(Grid, {\n            container: true,\n            className: \"body\",\n            children: [/*#__PURE__*/_jsx(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsx(AppImageField, {\n                width: 128,\n                height: 128,\n                image: profile.avatar,\n                httpRequest: {\n                  method: 'put',\n                  key: 'avatar',\n                  endpoint: 'profile'\n                },\n                onChange: handleChangeProfile\n              })\n            }), /*#__PURE__*/_jsxs(Grid, {\n              item: true,\n              xs: 10,\n              className: classes.contact,\n              children: [/*#__PURE__*/_jsx(Typography, {\n                variant: \"h6\",\n                style: {\n                  marginBottom: 12\n                },\n                children: \"\".concat(profile.first_name, \" \").concat(profile.last_name)\n              }), /*#__PURE__*/_jsx(Typography, {\n                variant: \"body1\",\n                children: \"Your personal information is disabled here. Please contact the Human Resource department to change your personal information.\"\n              })]\n            })]\n          }), /*#__PURE__*/_jsxs(Grid, {\n            container: true,\n            className: classes.infoRoot,\n            children: [/*#__PURE__*/_jsxs(Grid, {\n              item: true,\n              xs: 6,\n              className: clsx(classes.infoItem, classes.personalInfo),\n              children: [/*#__PURE__*/_jsx(AppTitle, {\n                label: \"Personal infomation\"\n              }), /*#__PURE__*/_jsx(TextField, {\n                label: \"Email\",\n                value: profile.email,\n                className: classes.textField,\n                disabled: true\n              }), /*#__PURE__*/_jsx(TextField, {\n                label: \"Valid Until\",\n                value: profile.valid_until,\n                className: classes.textField,\n                disabled: true\n              })]\n            }), /*#__PURE__*/_jsxs(Grid, {\n              item: true,\n              xs: 6,\n              className: classes.infoItem,\n              children: [/*#__PURE__*/_jsx(AppTitle, {\n                label: \"Sign in & Security\"\n              }), /*#__PURE__*/_jsx(TextField, {\n                label: \"Username\",\n                value: profile.user_name,\n                className: classes.textField,\n                disabled: true\n              }), /*#__PURE__*/_jsx(\"div\", {\n                onClick: handleOpenDialog,\n                className: clsx(classes.textField, classes.changePassword),\n                children: \"Change password\"\n              }), /*#__PURE__*/_jsx(TextField, {\n                label: \"Group\",\n                value: groupMember,\n                multiline: true,\n                rows: 5,\n                className: classes.textField,\n                disabled: true\n              })]\n            })]\n          }), /*#__PURE__*/_jsxs(Typography, {\n            variant: \"body1\",\n            className: classes.timezones,\n            children: [\"Last Modified: \", profile.updated_at]\n          })]\n        })\n      })\n    }), /*#__PURE__*/_jsx(DialogMain, {\n      title: \"Change Password\",\n      open: pwdDialogState.open,\n      loading: pwdDialogState.loading,\n      closeText: \"Cancel\",\n      onOk: handleChangePassword,\n      onClose: handleCloseDialog,\n      children: /*#__PURE__*/_jsxs(Grid, {\n        container: true,\n        spacing: 2,\n        style: {\n          marginTop: 2\n        },\n        children: [/*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsx(FormControllerTextField, {\n            control: passwordForm.control,\n            name: \"old_password\",\n            label: \"Old password\",\n            type: \"password\",\n            required: true\n          })\n        }), /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsx(FormControllerPasswordField, {\n            control: passwordForm.control,\n            name: \"new_password\",\n            label: \"New password\",\n            type: \"password\",\n            required: true\n          })\n        }), /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsx(FormControllerTextField, {\n            control: passwordForm.control,\n            name: \"confirm_password\",\n            label: \"Confirm password\",\n            type: \"password\",\n            required: true\n          })\n        })]\n      })\n    })]\n  });\n};\n\nexport var __N_SSP = true;\nexport default ProfilePage;","map":null,"metadata":{},"sourceType":"module"}