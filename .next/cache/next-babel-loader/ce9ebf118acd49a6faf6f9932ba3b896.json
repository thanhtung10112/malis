{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState, useEffect, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'next-i18next';\nimport { useForm } from 'react-hook-form';\nimport { userStore } from '@/store/reducers';\nimport { AppTabHistoryLog, DialogMain, FormControllerTabs, BtnHelp } from '@/components';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport _ from 'lodash';\nimport getValidationSchema from './validationSchema';\nimport TabGeneral from './TabGeneral';\nimport TabJobs from './TabJobs';\nimport TabGroups from './TabGroups';\n\nvar UserCreateEditDialog = function UserCreateEditDialog() {\n  var _useTranslation = useTranslation('user'),\n      t = _useTranslation.t;\n\n  var _useState = useState(0),\n      tab = _useState[0],\n      setTab = _useState[1];\n\n  var dispatch = useDispatch();\n  var dialogState = useSelector(userStore.selectDialogState);\n  var userDetail = useSelector(userStore.selectDetail);\n  var permissions = useSelector(userStore.selectPermissions);\n\n  var _useSelector = useSelector(userStore.selectInitDataForCE),\n      wiki_page = _useSelector.wiki_page;\n\n  var isCreating = _.isNil(userDetail.id);\n\n  var title = isCreating ? t('form.title.create_user') : t('form.title.update_user');\n  var validationSchema = useMemo(function () {\n    return getValidationSchema(t, !isCreating);\n  }, [isCreating]);\n  var userForm = useForm({\n    shouldUnregister: false,\n    resolver: yupResolver(validationSchema)\n  });\n  useEffect(function () {\n    userForm.reset(userDetail);\n    setTab(0);\n  }, [userDetail]);\n\n  var onChangeTab = function onChangeTab(_, newValue) {\n    setTab(newValue);\n  };\n\n  var onHandleSubmit = userForm.handleSubmit(function (formData) {\n    formData.groups = formData.groups.map(function (item) {\n      return +item;\n    });\n    formData.job_access = formData.job_access.map(function (_ref) {\n      var job_id = _ref.job_id,\n          note = _ref.note;\n      return {\n        job_id: job_id,\n        note: note || '' // server returns null but they do not allow send null to body req\n\n      };\n    });\n\n    if (!formData.valid_from) {\n      formData.valid_from = null;\n    }\n\n    if (!formData.valid_until) {\n      formData.valid_until = null;\n    }\n\n    var payload = _.pick(formData, ['default_language', 'email', 'first_name', 'groups', 'job_access', 'last_name', 'puco', 'time_zone', 'user_abb', 'user_id', 'password', 'confirm_password', 'login_page', 'valid_from', 'valid_until']);\n\n    if (isCreating) {\n      dispatch(userStore.sagaCreate(payload));\n    } else {\n      dispatch(userStore.sagaUpdate({\n        id: formData.id,\n        formData: _.omit(payload, ['password', 'confirm_password', 'login_page'])\n      }));\n    }\n  });\n\n  var onCloseDialog = function onCloseDialog() {\n    dispatch(userStore.sagaCloseDialog());\n    userForm.clearErrors();\n  };\n\n  var handleChangeHistoryLogs = function handleChangeHistoryLogs(data) {\n    dispatch(userStore.actions.setHistoryLogs(data));\n  };\n\n  var generalTab = {\n    label: 'General',\n    panel: /*#__PURE__*/_jsx(TabGeneral, {}),\n    errorKey: ['user_id', 'user_abb', 'first_name', 'last_name', 'password', 'confirm_password', 'email', 'time_zone', 'puco', 'default_language']\n  };\n  var groupsTab = {\n    label: t('form.tab.groups'),\n    panel: /*#__PURE__*/_jsx(TabGroups, {})\n  };\n  var jobsTab = {\n    label: t('form.tab.jobs'),\n    panel: /*#__PURE__*/_jsx(TabJobs, {})\n  };\n  var historyTab = {\n    label: t('common:tab.history'),\n    panel: /*#__PURE__*/_jsx(AppTabHistoryLog, {\n      isOpenDialog: dialogState.open,\n      data: dialogState.historyLogs,\n      onChange: handleChangeHistoryLogs,\n      entityId: userDetail.id,\n      tableHeight: 255,\n      entity: \"user\"\n    }),\n    disabled: isCreating\n  };\n  var tabs = [generalTab, groupsTab, jobsTab, historyTab];\n  return /*#__PURE__*/_jsx(DialogMain, {\n    open: dialogState.open,\n    title: /*#__PURE__*/_jsx(BtnHelp, {\n      title: title,\n      href: wiki_page\n    }),\n    height: 560,\n    onOk: onHandleSubmit,\n    onClose: onCloseDialog,\n    okText: isCreating ? t('common:button.create') : t('common:button.update'),\n    okButtonProps: {\n      disabled: dialogState.loading || !(permissions === null || permissions === void 0 ? void 0 : permissions.edit) && !isCreating\n    },\n    loading: dialogState.loading,\n    children: /*#__PURE__*/_jsx(FormControllerTabs, {\n      value: tab,\n      onChange: onChangeTab,\n      form: userForm,\n      tabs: tabs\n    })\n  });\n};\n\nexport default UserCreateEditDialog;","map":null,"metadata":{},"sourceType":"module"}