{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useEffect } from 'react';\nimport { Tabs, Tab } from '@material-ui/core';\nimport { FormProvider } from 'react-hook-form';\nimport { MalisPanel } from '@/components/index';\nimport _ from 'lodash';\n\nfunction FormControllerTabs(props) {\n  const {\n    tabs,\n    value,\n    onChange,\n    form,\n    resetTabValue\n  } = props;\n  useEffect(() => {\n    const {\n      errors\n    } = form;\n\n    const keysError = _.keys(errors);\n\n    if (keysError.length === 0) {\n      return;\n    }\n\n    const keyError = keysError[0];\n    const errorKey = tabs.map(({\n      errorKey\n    }) => errorKey || []);\n\n    for (let i = 0; i < errorKey.length; i++) {\n      if (errorKey[i].includes(keyError)) {\n        onChange(null, i);\n        break;\n      }\n    }\n  }, [form.errors]);\n  useEffect(() => {\n    return () => {\n      if (resetTabValue) {\n        onChange(null, 0);\n      }\n    };\n  }, []);\n\n  const renderTab = () => tabs.filter(tab => !tab.hide).map((_ref, index) => {\n    let {\n      panel,\n      panelProps,\n      errorKey,\n      hide\n    } = _ref,\n        tabProps = _objectWithoutProperties(_ref, [\"panel\", \"panelProps\", \"errorKey\", \"hide\"]);\n\n    return /*#__PURE__*/_jsx(Tab, _objectSpread({\n      value: index\n    }, tabProps), index);\n  });\n\n  const renderTabPanel = () => tabs.filter(tab => !tab.hide).map(({\n    panel,\n    panelProps\n  }, index) => /*#__PURE__*/_jsx(MalisPanel, _objectSpread(_objectSpread({\n    value: value,\n    index: index\n  }, panelProps), {}, {\n    children: panel\n  }), `tabPanel - ${index}`));\n\n  return /*#__PURE__*/_jsxs(FormProvider, _objectSpread(_objectSpread({}, form), {}, {\n    children: [/*#__PURE__*/_jsx(Tabs, {\n      value: value,\n      onChange: onChange,\n      children: renderTab()\n    }), renderTabPanel()]\n  }));\n}\n\nFormControllerTabs.defaultProps = {\n  resetTabValue: true\n};\nexport default FormControllerTabs;","map":null,"metadata":{},"sourceType":"module"}