{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Tag\\\\TabGeneral.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useStyles from './styles';\nimport useDialogContext from './Context/useDialogContext';\nimport useGetData from '@/hooks/useGetData';\nimport { Grid } from '@material-ui/core';\nimport { TableMultilingualDescription, AppAutocompleteAsync, FormControllerTextField, SectionTimezone, AppAutocomplete, FormControllerNumberField, useConfirm } from '@/components';\nimport { Unless } from 'react-if';\nimport _ from 'lodash';\nimport partApi from '@/apis/part.api';\nimport { commonStore } from '@/store/reducers';\nimport { StatusCode } from '@/utils/StatusCode';\n\nvar TabGeneral = function TabGeneral() {\n  _s();\n\n  var _tagForm$errors$job_i, _tagForm$errors$schem;\n\n  var classes = useStyles();\n\n  var _useConfirm = useConfirm(),\n      confirm = _useConfirm.confirm;\n\n  var _useGetData = useGetData('elements'),\n      getGeneratedCode = _useGetData.getGeneratedCode;\n\n  var _useState = useState([]),\n      defaultPartList = _useState[0],\n      setDefaultPartList = _useState[1];\n\n  var tagForm = useFormContext();\n  var watchSchematic = tagForm.watch('schematic_id', null);\n  var watchPartId = tagForm.watch('part_id', null);\n  var watchId = tagForm.watch('id', null);\n\n  var _useDialogContext = useDialogContext(),\n      detail = _useDialogContext.detail,\n      initData = _useDialogContext.initData,\n      onChangeLoading = _useDialogContext.onChangeLoading;\n\n  var parameters = initData.parameters;\n  var dispatch = useDispatch();\n  var userJob = useSelector(commonStore.selectUserValueJob);\n\n  var isCreating = _.isNil(detail.id);\n\n  var handleChangeSchematicId = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event, optionValue) {\n      var elementId;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setDefaultPartList([]);\n              onChangeLoading(true);\n              _context.prev = 2;\n              tagForm.setValue('schematic_id', optionValue);\n              _context.next = 6;\n              return getGeneratedCode({\n                drawing_id: optionValue.value\n              });\n\n            case 6:\n              elementId = _context.sent;\n              tagForm.setValue('element_id', elementId);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              console.error('error', '>>>', _context.t0);\n\n            case 13:\n              onChangeLoading(false);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 10]]);\n    }));\n\n    return function handleChangeSchematicId(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleFormatElementId = function handleFormatElementId(event) {\n    var value = event.target.value;\n    var formatValue = value.padStart(4, '0');\n    tagForm.setValue('element_id', formatValue);\n  };\n\n  var getAdditionalDataPart = function getAdditionalDataPart() {\n    var data = {};\n    data.limit_to_job = userJob.value;\n\n    if (!_.isNil(watchSchematic)) {\n      data.excluded_drawings = [watchSchematic.value];\n    }\n\n    return data;\n  };\n\n  var additionalDataPart = getAdditionalDataPart();\n\n  var displayConfirmRefDialog = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(message) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return confirm({\n                title: 'Warning',\n                description: message,\n                buttons: [{\n                  label: 'Ok',\n                  action: 'OK'\n                }]\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function displayConfirmRefDialog(_x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var getPart = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(selectedPart) {\n      var _formData$schematic_i, formData, reqPayload, _yield$partApi$getRef, part, message, partFormat, _error$response, status, data;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              onChangeLoading(true);\n              _context3.prev = 1;\n              formData = tagForm.getValues();\n              reqPayload = {\n                selected_part: selectedPart.value,\n                selected_drawing: (_formData$schematic_i = formData.schematic_id) === null || _formData$schematic_i === void 0 ? void 0 : _formData$schematic_i.value,\n                current_item: formData.id || null\n              };\n              _context3.next = 6;\n              return partApi.getReferencedPart(reqPayload);\n\n            case 6:\n              _yield$partApi$getRef = _context3.sent;\n              part = _yield$partApi$getRef.part;\n              message = _yield$partApi$getRef.message;\n              partFormat = {\n                description: '',\n                entity_id: part.dpn,\n                value: part.id\n              };\n              tagForm.setValue('part_id', partFormat);\n              tagForm.setValue('descriptions', part.descriptions);\n\n              if (selectedPart.value !== part.id) {\n                displayConfirmRefDialog(message);\n              } else {\n                dispatch(commonStore.actions.setSuccessMessage(message));\n              }\n\n              _context3.next = 19;\n              break;\n\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](1);\n              _error$response = _context3.t0.response, status = _error$response.status, data = _error$response.data;\n\n              if (status === StatusCode.BAD_REQUEST) {\n                displayConfirmRefDialog(data.message);\n              }\n\n            case 19:\n              onChangeLoading(false);\n\n            case 20:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 15]]);\n    }));\n\n    return function getPart(_x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleSelectPart = function handleSelectPart(event, optionValue, reason) {\n    if (reason === 'clear') {\n      tagForm.setValue('part_id', null);\n    } else {\n      getPart(optionValue);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          style: {\n            marginTop: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(AppAutocomplete, {\n            helperText: (_tagForm$errors$job_i = tagForm.errors.job_id) === null || _tagForm$errors$job_i === void 0 ? void 0 : _tagForm$errors$job_i.message,\n            error: Boolean(tagForm.errors.job_id),\n            value: userJob,\n            popupIcon: null,\n            disabled: true,\n            label: \"Job\",\n            required: true,\n            primaryKeyOption: \"value\",\n            options: [],\n            renderOption: function renderOption(option) {\n              return option.description;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AppAutocompleteAsync, {\n            disabled: !isCreating,\n            helperText: (_tagForm$errors$schem = tagForm.errors.schematic_id) === null || _tagForm$errors$schem === void 0 ? void 0 : _tagForm$errors$schem.message,\n            error: Boolean(tagForm.errors.schematic_id),\n            value: watchSchematic,\n            compName: \"drawing_list\",\n            additionalData: {\n              limit_to_job: userJob.value\n            },\n            required: true,\n            label: \"Schematic #\",\n            onChange: handleChangeSchematicId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControllerNumberField, {\n            disabled: !isCreating,\n            fixedDecimalScale: false,\n            decimalScale: null,\n            thousandSeparator: \"\",\n            isNumericString: true,\n            control: tagForm.control,\n            label: \"Element #\",\n            required: true,\n            name: \"element_id\",\n            onBlur: handleFormatElementId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n            control: tagForm.control,\n            label: \"Tag #\",\n            name: \"tag\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AppAutocompleteAsync, {\n            disabled: !watchSchematic,\n            disableClearable: false,\n            value: watchPartId,\n            compName: \"part_list\",\n            additionalData: additionalDataPart,\n            label: \"Part #\",\n            onChange: handleSelectPart,\n            defaultOptions: defaultPartList,\n            filterOptions: function filterOptions(options) {\n              if (_.isNil(options)) {\n                return [];\n              }\n\n              if (isCreating) {\n                return options;\n              }\n\n              return _.filter(options, function (option) {\n                return option.value !== watchId;\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, _this), \"console.log(\\\"\\uD83D\\uDE80\\uD83D\\uDE80\\uD83C\\uDF89\\uD83C\\uDF89 >>>>> name\\\", name)\", /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(TableMultilingualDescription, {\n        languageList: parameters.PLLA,\n        editMode: !isCreating,\n        name: \"descriptions\",\n        tableHeight: 160,\n        control: tagForm.control,\n        copyable: true,\n        copyDialogProps: {\n          checkboxesToSelect: [{\n            label: 'Drawing',\n            value: 'drawing_list',\n            entity: 'drawings'\n          }, {\n            label: 'Item/Assembly',\n            value: 'part_list',\n            entity: 'parts'\n          }, {\n            label: 'Tag',\n            value: 'element_list',\n            entity: 'elements',\n            \"default\": true\n          }]\n        },\n        disabled: Boolean(watchPartId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.tabGeneral__divider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n            control: tagForm.control,\n            label: \"Fluid\",\n            name: \"fluid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n            control: tagForm.control,\n            label: \"Tech. data\",\n            name: \"tech_data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Unless, {\n        condition: isCreating,\n        children: /*#__PURE__*/_jsxDEV(SectionTimezone, {\n          value: detail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(TableMultilingualDescription, {\n        languageList: parameters.PLLA,\n        editMode: !isCreating,\n        name: \"functions\",\n        tableHeight: 160,\n        control: tagForm.control,\n        copyable: true,\n        copyDialogProps: {\n          checkboxesToSelect: [{\n            label: 'Drawing',\n            value: 'drawing_list',\n            entity: 'drawings'\n          }, {\n            label: 'Item/Assembly',\n            value: 'part_list',\n            entity: 'parts'\n          }, {\n            label: 'Tag',\n            value: 'element_list',\n            entity: 'elements',\n            \"default\": true\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TabGeneral, \"Bc42DId8ejYr77vgfFd3g7sgQ8M=\", false, function () {\n  return [useStyles, useConfirm, useGetData, useFormContext, useDialogContext, useDispatch, useSelector];\n});\n\n_c = TabGeneral;\nexport default TabGeneral;\n\nvar _c;\n\n$RefreshReg$(_c, \"TabGeneral\");","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Tag/TabGeneral.tsx"],"names":["useState","useFormContext","useSelector","useDispatch","useStyles","useDialogContext","useGetData","Grid","TableMultilingualDescription","AppAutocompleteAsync","FormControllerTextField","SectionTimezone","AppAutocomplete","FormControllerNumberField","useConfirm","Unless","_","partApi","commonStore","StatusCode","TabGeneral","classes","confirm","getGeneratedCode","defaultPartList","setDefaultPartList","tagForm","watchSchematic","watch","watchPartId","watchId","detail","initData","onChangeLoading","parameters","dispatch","userJob","selectUserValueJob","isCreating","isNil","id","handleChangeSchematicId","event","optionValue","setValue","drawing_id","value","elementId","console","error","handleFormatElementId","target","formatValue","padStart","getAdditionalDataPart","data","limit_to_job","excluded_drawings","additionalDataPart","displayConfirmRefDialog","message","title","description","buttons","label","action","getPart","selectedPart","formData","getValues","reqPayload","selected_part","selected_drawing","schematic_id","current_item","getReferencedPart","part","partFormat","entity_id","dpn","descriptions","actions","setSuccessMessage","response","status","BAD_REQUEST","handleSelectPart","reason","marginTop","errors","job_id","Boolean","option","control","options","filter","PLLA","checkboxesToSelect","entity","tabGeneral__divider"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useStyles from './styles'\nimport useDialogContext from './Context/useDialogContext'\nimport useGetData from '@/hooks/useGetData'\n\nimport { Grid } from '@material-ui/core'\nimport {\n  TableMultilingualDescription,\n  AppAutocompleteAsync,\n  FormControllerTextField,\n  SectionTimezone,\n  AppAutocomplete,\n  FormControllerNumberField,\n  useConfirm\n} from '@/components'\nimport { Unless } from 'react-if'\n\nimport _ from 'lodash'\nimport partApi from '@/apis/part.api'\nimport { commonStore } from '@/store/reducers'\nimport { StatusCode } from '@/utils/StatusCode'\n\nimport type { AutocompleteChangeReason } from '@material-ui/lab'\nimport type { TagDetail } from '@/types/Tag'\nimport type { DataForDropdown } from '@/types/Common'\n\nconst TabGeneral = () => {\n  const classes = useStyles()\n  const { confirm } = useConfirm()\n  const { getGeneratedCode } = useGetData('elements')\n\n  const [defaultPartList, setDefaultPartList] = useState([])\n\n  const tagForm = useFormContext<TagDetail>()\n  const watchSchematic = tagForm.watch('schematic_id', null) as DataForDropdown\n  const watchPartId = tagForm.watch('part_id', null) as DataForDropdown\n  const watchId = tagForm.watch('id', null)\n\n  const { detail, initData, onChangeLoading } = useDialogContext()\n  const { parameters } = initData\n\n  const dispatch = useDispatch()\n  const userJob = useSelector(commonStore.selectUserValueJob)\n\n  const isCreating = _.isNil(detail.id)\n\n  const handleChangeSchematicId = async (event, optionValue: DataForDropdown) => {\n    setDefaultPartList([])\n    onChangeLoading(true)\n    try {\n      tagForm.setValue('schematic_id', optionValue)\n      const elementId = await getGeneratedCode({ drawing_id: optionValue.value })\n      tagForm.setValue('element_id', elementId)\n    } catch (error) {\n      console.error('error', '>>>', error)\n    }\n    onChangeLoading(false)\n  }\n\n  const handleFormatElementId = (event) => {\n    const { value } = event.target\n    const formatValue = value.padStart(4, '0')\n    tagForm.setValue('element_id', formatValue)\n  }\n\n  const getAdditionalDataPart = () => {\n    const data = {} as any\n    data.limit_to_job = userJob.value\n    if (!_.isNil(watchSchematic)) {\n      data.excluded_drawings = [(watchSchematic as DataForDropdown).value]\n    }\n    return data\n  }\n\n  const additionalDataPart = getAdditionalDataPart()\n\n  const displayConfirmRefDialog = async (message: string) => {\n    await confirm({\n      title: 'Warning',\n      description: message,\n      buttons: [{ label: 'Ok', action: 'OK' }]\n    })\n  }\n\n  const getPart = async (selectedPart: DataForDropdown) => {\n    onChangeLoading(true)\n    try {\n      const formData = tagForm.getValues()\n      const reqPayload = {\n        selected_part: selectedPart.value,\n        selected_drawing: (formData.schematic_id as DataForDropdown)?.value,\n        current_item: formData.id || null\n      }\n      const { part, message } = await partApi.getReferencedPart(reqPayload)\n      const partFormat: DataForDropdown = {\n        description: '',\n        entity_id: part.dpn,\n        value: part.id\n      }\n      tagForm.setValue('part_id', partFormat)\n      tagForm.setValue('descriptions', part.descriptions)\n      if (selectedPart.value !== part.id) {\n        displayConfirmRefDialog(message)\n      } else {\n        dispatch(commonStore.actions.setSuccessMessage(message))\n      }\n    } catch (error) {\n      const { status, data } = error.response\n      if (status === StatusCode.BAD_REQUEST) {\n        displayConfirmRefDialog(data.message)\n      }\n    }\n    onChangeLoading(false)\n  }\n\n  const handleSelectPart = (event, optionValue: DataForDropdown, reason: AutocompleteChangeReason) => {\n    if (reason === 'clear') {\n      tagForm.setValue('part_id', null)\n    } else {\n      getPart(optionValue)\n    }\n  }\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={6}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} style={{ marginTop: 8 }}>\n            <AppAutocomplete\n              helperText={tagForm.errors.job_id?.message}\n              error={Boolean(tagForm.errors.job_id)}\n              value={userJob}\n              popupIcon={null}\n              disabled\n              label=\"Job\"\n              required\n              primaryKeyOption=\"value\"\n              options={[]}\n              renderOption={(option) => option.description}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <AppAutocompleteAsync\n              disabled={!isCreating}\n              helperText={tagForm.errors.schematic_id?.message}\n              error={Boolean(tagForm.errors.schematic_id)}\n              value={watchSchematic}\n              compName=\"drawing_list\"\n              additionalData={{ limit_to_job: userJob.value }}\n              required\n              label=\"Schematic #\"\n              onChange={handleChangeSchematicId}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <FormControllerNumberField\n              disabled={!isCreating}\n              fixedDecimalScale={false}\n              decimalScale={null}\n              thousandSeparator=\"\"\n              isNumericString\n              control={tagForm.control}\n              label=\"Element #\"\n              required\n              name=\"element_id\"\n              onBlur={handleFormatElementId}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <FormControllerTextField control={tagForm.control} label=\"Tag #\" name=\"tag\" required />\n          </Grid>\n\n          <Grid item xs={12}>\n            <AppAutocompleteAsync\n              disabled={!watchSchematic}\n              disableClearable={false}\n              value={watchPartId}\n              compName=\"part_list\"\n              additionalData={additionalDataPart}\n              label=\"Part #\"\n              onChange={handleSelectPart}\n              defaultOptions={defaultPartList}\n              filterOptions={(options) => {\n                if (_.isNil(options)) {\n                  return []\n                }\n                if (isCreating) {\n                  return options\n                }\n                return _.filter(options, (option) => option.value !== watchId)\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      console.log(\"🚀🚀🎉🎉 >>>>> name\", name)\n      <Grid item xs={6}>\n        <TableMultilingualDescription\n          languageList={parameters.PLLA}\n          editMode={!isCreating}\n          name=\"descriptions\"\n\n          tableHeight={160}\n          control={tagForm.control}\n          copyable\n          copyDialogProps={{\n            checkboxesToSelect: [\n              {\n                label: 'Drawing',\n                value: 'drawing_list',\n                entity: 'drawings'\n              },\n              {\n                label: 'Item/Assembly',\n                value: 'part_list',\n                entity: 'parts'\n              },\n              {\n                label: 'Tag',\n                value: 'element_list',\n                entity: 'elements',\n                default: true\n              }\n            ]\n          }}\n          disabled={Boolean(watchPartId)}\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        <div className={classes.tabGeneral__divider} />\n      </Grid>\n\n      <Grid item xs={6}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <FormControllerTextField control={tagForm.control} label=\"Fluid\" name=\"fluid\" />\n          </Grid>\n          <Grid item xs={12}>\n            <FormControllerTextField control={tagForm.control} label=\"Tech. data\" name=\"tech_data\" />\n          </Grid>\n        </Grid>\n\n        <Unless condition={isCreating}>\n          <SectionTimezone value={detail} />\n        </Unless>\n      </Grid>\n\n      <Grid item xs={6}>\n        <TableMultilingualDescription\n          languageList={parameters.PLLA}\n          editMode={!isCreating}\n          name=\"functions\"\n          tableHeight={160}\n          control={tagForm.control}\n          copyable\n          copyDialogProps={{\n            checkboxesToSelect: [\n              {\n                label: 'Drawing',\n                value: 'drawing_list',\n                entity: 'drawings'\n              },\n              {\n                label: 'Item/Assembly',\n                value: 'part_list',\n                entity: 'parts'\n              },\n              {\n                label: 'Tag',\n                value: 'element_list',\n                entity: 'elements',\n                default: true\n              }\n            ]\n          }}\n        />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default TabGeneral\n"]},"metadata":{},"sourceType":"module"}