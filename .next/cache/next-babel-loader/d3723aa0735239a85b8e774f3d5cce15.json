{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Location\\\\TabSpecialties.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useMemo, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFormContext } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport { Grid, Button, Paper } from '@material-ui/core';\nimport { CreateIcon, DeleteIcon, DataTable, AppAutocomplete } from '@/components';\nimport _ from 'lodash';\nimport { locationStore } from '@/store/reducers';\nimport { centerColumn, defaultProperties } from '@/utils/columnProperties';\n\nconst TabSpecialties = () => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    0: selectedSpecialties,\n    1: setSelectedSpecialties\n  } = useState([]);\n  const {\n    0: selectedRows,\n    1: setSelectedRows\n  } = useState([]);\n  const locationForm = useFormContext();\n  const watchSpecialties = locationForm.watch('specialties', '');\n  const {\n    parameters\n  } = useSelector(locationStore.selectInitDataForCE);\n  const specialtiesList = useMemo(() => {\n    if (!watchSpecialties) {\n      return [];\n    }\n\n    const list = watchSpecialties.split(';');\n    return parameters.SSPE.filter(item => list.includes(item.parameter_id));\n  }, [watchSpecialties]);\n  const filterOptions = useCallback(options => _.differenceWith(options, specialtiesList, _.isEqual), [specialtiesList]);\n\n  const handleAddSpecialties = () => {\n    const idSpecialties = selectedSpecialties.map(({\n      parameter_id\n    }) => parameter_id).join(';');\n    setSelectedSpecialties([]);\n    const newList = watchSpecialties ? `${watchSpecialties};${idSpecialties}` : idSpecialties;\n    locationForm.setValue('specialties', newList);\n  };\n\n  const handleSelectSpecialties = (_, specialties) => {\n    setSelectedSpecialties(specialties);\n  };\n\n  const handleSelectRows = params => {\n    setSelectedRows(params.selectionModel);\n  };\n\n  const handleRemoveRows = () => {\n    const filterItem = specialtiesList.filter(item => !selectedRows.includes(item.id)).map(item => item.parameter_id).join(';');\n    setSelectedRows([]);\n    locationForm.setValue('specialties', filterItem);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      alignItems: \"center\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(AppAutocomplete, {\n          label: \"Specialties\",\n          style: {\n            marginTop: 4\n          },\n          value: selectedSpecialties,\n          multiple: true,\n          limitTags: 2,\n          disableCloseOnSelect: true,\n          options: parameters.SSPE,\n          filterOptions: filterOptions,\n          renderOption: ({\n            parameter_id,\n            description\n          }) => `${parameter_id} - ${description}`,\n          onChange: handleSelectSpecialties\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 30\n          }, this),\n          disabled: selectedSpecialties.length === 0,\n          onClick: handleAddSpecialties,\n          children: t('common:button.add')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        style: {\n          padding: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 30\n          }, this),\n          disabled: selectedRows.length === 0,\n          onClick: handleRemoveRows,\n          children: t('common:button.remove')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 2,\n          children: /*#__PURE__*/_jsxDEV(DataTable, {\n            rows: specialtiesList,\n            columns: [_objectSpread(_objectSpread(_objectSpread({}, defaultProperties), centerColumn), {}, {\n              field: 'parameter_id',\n              headerName: 'Parameter #',\n              flex: 0.25\n            }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n              field: 'description',\n              headerName: 'Description',\n              flex: 0.85\n            })],\n            hideFooter: true,\n            tableHeight: 430,\n            checkboxSelection: true,\n            selectionModel: selectedRows,\n            onSelectionModelChange: handleSelectRows\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport default TabSpecialties;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Location/TabSpecialties.tsx"],"names":["useState","useMemo","useCallback","useSelector","useFormContext","useTranslation","Grid","Button","Paper","CreateIcon","DeleteIcon","DataTable","AppAutocomplete","_","locationStore","centerColumn","defaultProperties","TabSpecialties","t","selectedSpecialties","setSelectedSpecialties","selectedRows","setSelectedRows","locationForm","watchSpecialties","watch","parameters","selectInitDataForCE","specialtiesList","list","split","SSPE","filter","item","includes","parameter_id","filterOptions","options","differenceWith","isEqual","handleAddSpecialties","idSpecialties","map","join","newList","setValue","handleSelectSpecialties","specialties","handleSelectRows","params","selectionModel","handleRemoveRows","filterItem","id","marginTop","description","length","padding","field","headerName","flex"],"mappings":"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","sourcesContent":["import { useState, useMemo, useCallback } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useFormContext } from 'react-hook-form'\nimport { useTranslation } from 'react-i18next'\n\nimport { Grid, Button, Paper } from '@material-ui/core'\nimport { CreateIcon, DeleteIcon, DataTable, AppAutocomplete } from '@/components'\n\nimport _ from 'lodash'\nimport { locationStore } from '@/store/reducers'\nimport { centerColumn, defaultProperties } from '@/utils/columnProperties'\n\nconst TabSpecialties: React.FC = () => {\n  const { t } = useTranslation()\n\n  const [selectedSpecialties, setSelectedSpecialties] = useState([])\n  const [selectedRows, setSelectedRows] = useState([])\n\n  const locationForm = useFormContext()\n  const watchSpecialties = locationForm.watch('specialties', '')\n\n  const { parameters } = useSelector(locationStore.selectInitDataForCE)\n\n  const specialtiesList = useMemo(() => {\n    if (!watchSpecialties) {\n      return []\n    }\n    const list = watchSpecialties.split(';')\n    return parameters.SSPE.filter((item) => list.includes(item.parameter_id))\n  }, [watchSpecialties])\n\n  const filterOptions = useCallback(\n    (options) => _.differenceWith(options, specialtiesList, _.isEqual),\n    [specialtiesList]\n  )\n\n  const handleAddSpecialties = () => {\n    const idSpecialties = selectedSpecialties.map(({ parameter_id }) => parameter_id).join(';')\n    setSelectedSpecialties([])\n    const newList = watchSpecialties ? `${watchSpecialties};${idSpecialties}` : idSpecialties\n    locationForm.setValue('specialties', newList)\n  }\n\n  const handleSelectSpecialties = (_, specialties) => {\n    setSelectedSpecialties(specialties)\n  }\n\n  const handleSelectRows = (params) => {\n    setSelectedRows(params.selectionModel)\n  }\n\n  const handleRemoveRows = () => {\n    const filterItem = specialtiesList\n      .filter((item) => !selectedRows.includes(item.id))\n      .map((item) => item.parameter_id)\n      .join(';')\n    setSelectedRows([])\n    locationForm.setValue('specialties', filterItem)\n  }\n\n  return (\n    <>\n      <Grid container alignItems=\"center\" spacing={2}>\n        <Grid item xs={8}>\n          <AppAutocomplete\n            label=\"Specialties\"\n            style={{ marginTop: 4 }}\n            value={selectedSpecialties}\n            multiple\n            limitTags={2}\n            disableCloseOnSelect\n            options={parameters.SSPE}\n            filterOptions={filterOptions}\n            renderOption={({ parameter_id, description }) => `${parameter_id} - ${description}`}\n            onChange={handleSelectSpecialties}\n          />\n        </Grid>\n\n        <Grid item xs={2}>\n          <Button startIcon={<CreateIcon />} disabled={selectedSpecialties.length === 0} onClick={handleAddSpecialties}>\n            {t('common:button.add')}\n          </Button>\n        </Grid>\n\n        <Grid item xs={2} style={{ padding: 0 }}>\n          <Button startIcon={<DeleteIcon />} disabled={selectedRows.length === 0} onClick={handleRemoveRows}>\n            {t('common:button.remove')}\n          </Button>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Paper elevation={2}>\n            <DataTable\n              rows={specialtiesList}\n              columns={[\n                {\n                  ...defaultProperties,\n                  ...centerColumn,\n                  field: 'parameter_id',\n                  headerName: 'Parameter #',\n                  flex: 0.25\n                },\n                {\n                  ...defaultProperties,\n                  field: 'description',\n                  headerName: 'Description',\n                  flex: 0.85\n                }\n              ]}\n              hideFooter\n              tableHeight={430}\n              checkboxSelection\n              selectionModel={selectedRows}\n              onSelectionModelChange={handleSelectRows}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nexport default TabSpecialties\n"]},"metadata":{},"sourceType":"module"}