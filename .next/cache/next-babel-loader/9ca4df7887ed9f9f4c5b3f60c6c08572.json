{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { GridColumnMenuContainer, GridColumnMenu, useGridSlotComponentProps } from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core';\nimport { Switch, Case, Default } from 'react-if';\nimport clsx from 'clsx';\nimport { commonStore } from '@/store/reducers';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    columnItem: {\n      width: 127,\n      height: 26,\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0.5, 1),\n      cursor: 'pointer',\n      '&:hover': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&.selected': {\n        backgroundColor: theme.palette.action.selected\n      }\n    }\n  };\n});\n\nvar DataTableColumnMenu = function DataTableColumnMenu(props) {\n  var _useGridSlotComponent = useGridSlotComponentProps(),\n      apiRef = _useGridSlotComponent.apiRef;\n\n  var hideMenu = props.hideMenu,\n      currentColumn = props.currentColumn,\n      color = props.color,\n      other = _objectWithoutProperties(props, [\"hideMenu\", \"currentColumn\", \"color\"]);\n\n  var classes = useStyles();\n  var dispatch = useDispatch();\n  var languageList = useSelector(function (state) {\n    var entity = state.common.entity;\n\n    if (!entity) {\n      return [];\n    }\n\n    var parameters = state[entity].initDataForList.parameters;\n\n    if (!parameters) {\n      return [];\n    }\n\n    return parameters.PLLA;\n  });\n  var currentLanguage = useSelector(commonStore.selectCurrentLanguage);\n\n  var handleSelectLang = function handleSelectLang(language) {\n    return function () {\n      dispatch(commonStore.actions.setCurrentLanguage(language));\n      apiRef.current.hideColumnMenu();\n    };\n  };\n\n  var renderLanguages = function renderLanguages() {\n    return languageList.filter(function (language) {\n      return language.status;\n    }).map(function (language) {\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: clsx(classes.columnItem, {\n          selected: language.id === currentLanguage.id\n        }),\n        onClick: handleSelectLang(language),\n        children: language.description\n      }, language.id);\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(Switch, {\n    children: [/*#__PURE__*/_jsx(Case, {\n      condition: currentColumn.field === 'description',\n      children: /*#__PURE__*/_jsx(GridColumnMenuContainer, _objectSpread(_objectSpread({\n        hideMenu: hideMenu,\n        currentColumn: currentColumn\n      }, other), {}, {\n        children: renderLanguages()\n      }))\n    }), /*#__PURE__*/_jsx(Default, {\n      children: /*#__PURE__*/_jsx(GridColumnMenu, _objectSpread({\n        hideMenu: hideMenu,\n        currentColumn: currentColumn\n      }, other))\n    })]\n  });\n};\n\nexport default DataTableColumnMenu;","map":null,"metadata":{},"sourceType":"module"}