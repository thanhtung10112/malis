{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect } from 'react';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\nimport ReactMarkdown from 'react-markdown';\nimport beautify from 'js-beautify';\nimport { format as sqlFormatter } from 'sql-formatter';\nimport { Grid } from '@material-ui/core';\nimport { When } from 'react-if';\nimport { DialogMain } from '@/components';\n\nfunction DialogCodeEditor(props) {\n  useEffect(() => {\n    require('codemirror/mode/javascript/javascript');\n\n    require('codemirror/mode/sql/sql');\n  }, []);\n  const containGuideline = props.guideline !== '(no guideline)';\n  const jsBeautifier = beautify.js;\n  let codeValue = '';\n\n  if (props.attribute === 'columns_definition') {\n    codeValue = jsBeautifier(props.value);\n  } else {\n    codeValue = sqlFormatter(props.value, {\n      language: 'postgresql'\n    });\n  }\n\n  const onConfirm = () => {\n    props.onConfirm(codeValue, props.attribute);\n  };\n\n  const onClose = () => {\n    props.onClose();\n  };\n\n  return /*#__PURE__*/_jsx(DialogMain, {\n    open: props.isOpen,\n    title: props.attribute,\n    onOk: onConfirm,\n    onClose: onClose,\n    closeText: \"Cancel\",\n    maxWidth: containGuideline ? 'lg' : 'md',\n    fullWidth: true,\n    enterToOk: false,\n    children: /*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: containGuideline ? 6 : 12,\n        children: /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            height: '70vh',\n            overflow: 'auto'\n          },\n          children: /*#__PURE__*/_jsx(CodeMirror, {\n            value: codeValue,\n            options: {\n              mode: props.attribute === 'columns_definition' ? 'javascript' : 'sql',\n              json: true,\n              lineWrapping: true,\n              lineNumbers: true\n            },\n            onChange: (editor, data, value) => {\n              codeValue = value;\n            }\n          })\n        })\n      }), /*#__PURE__*/_jsx(When, {\n        condition: containGuideline,\n        children: /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"markdown\",\n            style: {\n              overflow: 'auto',\n              height: '70vh'\n            },\n            children: /*#__PURE__*/_jsx(ReactMarkdown, {\n              children: props.guideline\n            })\n          })\n        })\n      })]\n    })\n  });\n}\n\nexport default DialogCodeEditor;","map":null,"metadata":{},"sourceType":"module"}