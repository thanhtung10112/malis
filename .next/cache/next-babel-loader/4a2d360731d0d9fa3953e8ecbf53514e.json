{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\pages\\\\jobs.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useTranslation } from 'next-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useAuthMiddleware from '@/hooks/useAuthMiddleware';\nimport useStyles from '@/styles/page/layout';\nimport { Tooltip } from '@material-ui/core';\nimport { Warning as WarningIcon, ErrorOutline as ErrorOutlineIcon } from '@material-ui/icons';\nimport { DialogJobCreateEdit, AppAutocompleteStyled, AppLayout, CreateIcon, EditIcon, MakeAListIcon, ViewEditionIcon } from '@/components';\nimport { jobStore, commonStore, makeAListActions } from '@/store/reducers';\nimport * as columnProperties from '@/utils/columnProperties';\n\nfunction Jobs() {\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslation('job');\n  const breadcrumbData = [{\n    label: 'Home',\n    href: '/'\n  }, {\n    label: 'Basic Options',\n    href: '/jobs'\n  }, {\n    label: 'Jobs Management',\n    href: '/jobs'\n  }];\n  const dispatch = useDispatch();\n  const jobCategories = useSelector(jobStore.selectJobCategories);\n  const selectedJobCategory = useSelector(jobStore.selectSelectedJobCategory);\n  const jobPermissions = useSelector(jobStore.selectPermissions);\n  const {\n    column_tooltips,\n    wiki_page\n  } = useSelector(jobStore.selectInitDataForList);\n\n  const onOpenMakeAList = () => {\n    dispatch(makeAListActions.open());\n  };\n\n  const onChangeSelectedJobCategory = (event, jobCategory) => {\n    dispatch(jobStore.actions.setSelectedCategory(jobCategory));\n    dispatch(commonStore.actions.setTableState({\n      page: 1\n    }));\n    dispatch(jobStore.sagaGetList());\n  };\n\n  const onOpenCreateDialog = () => {\n    dispatch(jobStore.sagaOpenCreateDialog());\n  };\n\n  const onUpdateDialog = id => () => {\n    dispatch(jobStore.sagaOpenUpdateDialog(id));\n  };\n\n  const columns = [_objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.iconColumn), {}, {\n    field: 'id',\n    headerName: 'Edit',\n    description: column_tooltips.edit,\n\n    renderCell(params) {\n      return /*#__PURE__*/_jsxDEV(EditIcon, {\n        onClick: onUpdateDialog(params.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 16\n      }, this);\n    }\n\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    description: column_tooltips.job_id,\n    field: 'job_id',\n    headerName: 'Job #'\n  }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n    description: column_tooltips.description,\n    field: 'job_description',\n    headerName: 'Description',\n    flex: 0.4\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    description: column_tooltips.language,\n    field: 'language',\n    headerName: 'Language'\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    description: column_tooltips.equipment_type,\n    field: 'equipment_type',\n    headerName: 'EqTy'\n  }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n    description: column_tooltips.erection_site,\n    field: 'erection_site',\n    headerName: 'Erection Site',\n    flex: 0.2\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    field: 'erection_site_id',\n\n    renderHeader() {\n      return /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Non-Conformity\",\n        children: /*#__PURE__*/_jsxDEV(WarningIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this);\n    },\n\n    renderCell() {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 16\n      }, this);\n    }\n\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    field: 'full_count',\n\n    renderHeader() {\n      return /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Improvement\",\n        children: /*#__PURE__*/_jsxDEV(ErrorOutlineIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this);\n    },\n\n    renderCell() {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 16\n      }, this);\n    }\n\n  })];\n  const buttons = [{\n    label: t('common:button.new'),\n    startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 18\n    }, this),\n    disabled: !(jobPermissions === null || jobPermissions === void 0 ? void 0 : jobPermissions.create),\n    onClick: onOpenCreateDialog\n  }, {\n    label: t('common:button.make_a_list'),\n    startIcon: /*#__PURE__*/_jsxDEV(MakeAListIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 18\n    }, this),\n    disabled: !(jobPermissions === null || jobPermissions === void 0 ? void 0 : jobPermissions.make_a_list),\n    onClick: onOpenMakeAList\n  }, {\n    label: t('common:button.view_edition'),\n    startIcon: /*#__PURE__*/_jsxDEV(ViewEditionIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 18\n    }, this),\n    disabled: true\n  }];\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    entity: \"job\",\n    wikiPage: wiki_page,\n    breadcrumbs: breadcrumbData,\n    permissions: jobPermissions,\n    buttons: buttons,\n    tableProps: {\n      columns: columns\n    },\n    Dialogs: /*#__PURE__*/_jsxDEV(DialogJobCreateEdit, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 16\n    }, this),\n    Options: /*#__PURE__*/_jsxDEV(AppAutocompleteStyled, {\n      width: 280,\n      label: \"Job Categories\",\n      className: classes.controlAutocomplete,\n      options: jobCategories,\n      value: selectedJobCategory,\n      primaryKeyOption: \"value\",\n      renderOption: option => option.description,\n      onChange: onChangeSelectedJobCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n\nexport const getServerSideProps = useAuthMiddleware(['common', 'job', 'make_a_list', 'advanced_filter', 'currency']);\nexport default Jobs;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/pages/jobs.tsx"],"names":["useTranslation","useDispatch","useSelector","useAuthMiddleware","useStyles","Tooltip","Warning","WarningIcon","ErrorOutline","ErrorOutlineIcon","DialogJobCreateEdit","AppAutocompleteStyled","AppLayout","CreateIcon","EditIcon","MakeAListIcon","ViewEditionIcon","jobStore","commonStore","makeAListActions","columnProperties","Jobs","classes","t","breadcrumbData","label","href","dispatch","jobCategories","selectJobCategories","selectedJobCategory","selectSelectedJobCategory","jobPermissions","selectPermissions","column_tooltips","wiki_page","selectInitDataForList","onOpenMakeAList","open","onChangeSelectedJobCategory","event","jobCategory","actions","setSelectedCategory","setTableState","page","sagaGetList","onOpenCreateDialog","sagaOpenCreateDialog","onUpdateDialog","id","sagaOpenUpdateDialog","columns","defaultProperties","iconColumn","field","headerName","description","edit","renderCell","params","value","centerColumn","job_id","flex","language","equipment_type","erection_site","renderHeader","buttons","startIcon","disabled","create","onClick","make_a_list","controlAutocomplete","option","getServerSideProps"],"mappings":"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","sourcesContent":["import { useTranslation } from 'next-i18next'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useAuthMiddleware from '@/hooks/useAuthMiddleware'\nimport useStyles from '@/styles/page/layout'\n\nimport { Tooltip } from '@material-ui/core'\n\nimport { Warning as WarningIcon, ErrorOutline as ErrorOutlineIcon } from '@material-ui/icons'\n\nimport {\n  DialogJobCreateEdit,\n  AppAutocompleteStyled,\n  AppLayout,\n  CreateIcon,\n  EditIcon,\n  MakeAListIcon,\n  ViewEditionIcon\n} from '@/components'\n\nimport { jobStore, commonStore, makeAListActions } from '@/store/reducers'\n\nimport * as columnProperties from '@/utils/columnProperties'\n\nimport type { GridColumns } from '@material-ui/data-grid'\nimport type { ParameterOption } from '@/types/Common'\n\nfunction Jobs() {\n  const classes = useStyles()\n  const { t } = useTranslation('job')\n\n  const breadcrumbData = [\n    { label: 'Home', href: '/' },\n    { label: 'Basic Options', href: '/jobs' },\n    { label: 'Jobs Management', href: '/jobs' }\n  ]\n\n  const dispatch = useDispatch()\n  const jobCategories = useSelector(jobStore.selectJobCategories)\n  const selectedJobCategory = useSelector(jobStore.selectSelectedJobCategory)\n  const jobPermissions = useSelector(jobStore.selectPermissions)\n  const { column_tooltips, wiki_page } = useSelector(jobStore.selectInitDataForList)\n\n  const onOpenMakeAList = () => {\n    dispatch(makeAListActions.open())\n  }\n\n  const onChangeSelectedJobCategory = (event, jobCategory: ParameterOption) => {\n    dispatch(jobStore.actions.setSelectedCategory(jobCategory))\n    dispatch(commonStore.actions.setTableState({ page: 1 }))\n    dispatch(jobStore.sagaGetList())\n  }\n\n  const onOpenCreateDialog = () => {\n    dispatch(jobStore.sagaOpenCreateDialog())\n  }\n\n  const onUpdateDialog = (id: number) => () => {\n    dispatch(jobStore.sagaOpenUpdateDialog(id))\n  }\n\n  const columns: GridColumns = [\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.iconColumn,\n      field: 'id',\n      headerName: 'Edit',\n      description: column_tooltips.edit,\n      renderCell(params) {\n        return <EditIcon onClick={onUpdateDialog(params.value as number)} />\n      }\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.centerColumn,\n      description: column_tooltips.job_id,\n      field: 'job_id',\n      headerName: 'Job #'\n    },\n    {\n      ...columnProperties.defaultProperties,\n      description: column_tooltips.description,\n      field: 'job_description',\n      headerName: 'Description',\n      flex: 0.4\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.centerColumn,\n      description: column_tooltips.language,\n      field: 'language',\n      headerName: 'Language'\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.centerColumn,\n      description: column_tooltips.equipment_type,\n      field: 'equipment_type',\n      headerName: 'EqTy'\n    },\n    {\n      ...columnProperties.defaultProperties,\n      description: column_tooltips.erection_site,\n      field: 'erection_site',\n      headerName: 'Erection Site',\n      flex: 0.2\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.centerColumn,\n      field: 'erection_site_id',\n      renderHeader() {\n        return (\n          <Tooltip title=\"Non-Conformity\">\n            <WarningIcon />\n          </Tooltip>\n        )\n      },\n      renderCell() {\n        return <span>0</span>\n      }\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.centerColumn,\n      field: 'full_count',\n      renderHeader() {\n        return (\n          <Tooltip title=\"Improvement\">\n            <ErrorOutlineIcon />\n          </Tooltip>\n        )\n      },\n      renderCell() {\n        return <span>1</span>\n      }\n    }\n  ]\n\n  const buttons = [\n    {\n      label: t('common:button.new'),\n      startIcon: <CreateIcon />,\n      disabled: !jobPermissions?.create,\n      onClick: onOpenCreateDialog\n    },\n    {\n      label: t('common:button.make_a_list'),\n      startIcon: <MakeAListIcon />,\n      disabled: !jobPermissions?.make_a_list,\n      onClick: onOpenMakeAList\n    },\n    {\n      label: t('common:button.view_edition'),\n      startIcon: <ViewEditionIcon />,\n      disabled: true\n    }\n  ]\n\n  return (\n    <AppLayout\n      entity=\"job\"\n      wikiPage={wiki_page}\n      breadcrumbs={breadcrumbData}\n      permissions={jobPermissions}\n      buttons={buttons}\n      tableProps={{\n        columns: columns\n      }}\n      Dialogs={<DialogJobCreateEdit />}\n      Options={\n        <AppAutocompleteStyled\n          width={280}\n          label=\"Job Categories\"\n          className={classes.controlAutocomplete}\n          options={jobCategories}\n          value={selectedJobCategory}\n          primaryKeyOption=\"value\"\n          renderOption={(option) => option.description}\n          onChange={onChangeSelectedJobCategory}\n        />\n      }\n    />\n  )\n}\n\nexport const getServerSideProps = useAuthMiddleware(['common', 'job', 'make_a_list', 'advanced_filter', 'currency'])\n\nexport default Jobs\n"]},"metadata":{},"sourceType":"module"}