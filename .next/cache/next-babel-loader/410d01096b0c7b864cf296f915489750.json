{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Part\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { If, Else, Then } from 'react-if';\nimport { DialogManufacturerCreateEdit } from '@/components';\nimport DialogItem from './Item';\nimport DialogAssembly from './Assembly';\nimport isAssembly from '@/utils/isAssembly';\nimport { partStore, commonStore } from '@/store/reducers';\nimport assemblyApi from '@/apis/assembly.api';\nimport itemApi from '@/apis/item.api';\n\nconst PartDialog = ({\n  onClose\n}) => {\n  const dispatch = useDispatch();\n  const partList = useSelector(partStore.selectPartList);\n  const manu = useSelector(partStore.selectPartManu);\n\n  const handleClosePartDialog = entity => () => {\n    if (partList.length > 1) {\n      dispatch(partStore.sagaCloseDialog(entity));\n    } else {\n      dispatch(partStore.actions.removePart());\n      onClose();\n    }\n  };\n\n  const handleUpdatePart = async (entity, id, formData) => {\n    const partApi = entity === 'item' ? itemApi : assemblyApi;\n    dispatch(partStore.actions.setPartLoading(true));\n\n    try {\n      const {\n        message\n      } = await partApi.update(id, formData);\n      handleClosePartDialog(entity)();\n      dispatch(commonStore.actions.setSuccessMessage(message));\n    } catch (error) {\n      console.error('error', '>>>', error);\n    }\n\n    dispatch(partStore.actions.setPartLoading(false));\n  };\n\n  const handleSubmit = entity => (id, formData) => {\n    if (id) {\n      handleUpdatePart(entity, id, formData);\n    } else {\n      dispatch(partStore.sagaCreate({\n        entity,\n        formData\n      }));\n    }\n  };\n\n  const handleChangeTab = (event, nextTab) => {\n    dispatch(partStore.actions.setPartTab(nextTab));\n  };\n\n  const renderPartDialog = useCallback(() => partList.map((_ref) => {\n    let {\n      detail\n    } = _ref,\n        partProps = _objectWithoutProperties(_ref, [\"detail\"]);\n\n    return /*#__PURE__*/_jsxDEV(If, {\n      condition: isAssembly(detail),\n      children: [/*#__PURE__*/_jsxDEV(Then, {\n        children: /*#__PURE__*/_jsxDEV(DialogAssembly, _objectSpread(_objectSpread({}, partProps), {}, {\n          detail: detail,\n          onSubmit: handleSubmit('assembly'),\n          onClose: handleClosePartDialog('assembly'),\n          onChangeTab: handleChangeTab\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Else, {\n        children: /*#__PURE__*/_jsxDEV(DialogItem, _objectSpread(_objectSpread({}, partProps), {}, {\n          detail: detail,\n          onSubmit: handleSubmit('item'),\n          onClose: handleClosePartDialog('item'),\n          onChangeTab: handleChangeTab\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, detail.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this);\n  }), [partList]);\n\n  const handleSubmitManu = (id, formData) => {\n    dispatch(partStore.sagaCreateManu(formData));\n  };\n\n  const handleCloseManuDialog = () => {\n    dispatch(partStore.sagaCloseManuDialog());\n  };\n\n  const handleGetCodeManu = currentData => {\n    dispatch(partStore.sagaGetManuId(currentData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [renderPartDialog(), /*#__PURE__*/_jsxDEV(DialogManufacturerCreateEdit, _objectSpread(_objectSpread({}, manu.dialogState), {}, {\n      onSubmit: handleSubmitManu,\n      onClose: handleCloseManuDialog,\n      onGetNextCode: handleGetCodeManu,\n      permissions: manu.initData.permissions,\n      wikiPage: manu.initData.wiki_page,\n      detail: manu.detail\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default PartDialog;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Part/index.tsx"],"names":["useCallback","useSelector","useDispatch","If","Else","Then","DialogManufacturerCreateEdit","DialogItem","DialogAssembly","isAssembly","partStore","commonStore","assemblyApi","itemApi","PartDialog","onClose","dispatch","partList","selectPartList","manu","selectPartManu","handleClosePartDialog","entity","length","sagaCloseDialog","actions","removePart","handleUpdatePart","id","formData","partApi","setPartLoading","message","update","setSuccessMessage","error","console","handleSubmit","sagaCreate","handleChangeTab","event","nextTab","setPartTab","renderPartDialog","map","detail","partProps","handleSubmitManu","sagaCreateManu","handleCloseManuDialog","sagaCloseManuDialog","handleGetCodeManu","currentData","sagaGetManuId","dialogState","initData","permissions","wiki_page"],"mappings":"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","sourcesContent":["import { useCallback } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { If, Else, Then } from 'react-if'\nimport { DialogManufacturerCreateEdit } from '@/components'\nimport DialogItem from './Item'\nimport DialogAssembly from './Assembly'\n\nimport isAssembly from '@/utils/isAssembly'\nimport { partStore, commonStore } from '@/store/reducers'\nimport assemblyApi from '@/apis/assembly.api'\nimport itemApi from '@/apis/item.api'\n\nimport type { ItemDetail } from '@/types/Item'\nimport type { AssemblyDetail } from '@/types/Assembly'\nimport type { PartEntity } from '@/types/Part'\nimport type { ManufacturerItem } from '@/types/Manufacturer'\nimport type { DialogPartMainProps } from './type'\n\nconst PartDialog: React.FC<DialogPartMainProps> = ({ onClose }) => {\n  const dispatch = useDispatch()\n  const partList = useSelector(partStore.selectPartList)\n  const manu = useSelector(partStore.selectPartManu)\n\n  const handleClosePartDialog = (entity: PartEntity) => () => {\n    if (partList.length > 1) {\n      dispatch(partStore.sagaCloseDialog(entity))\n    } else {\n      dispatch(partStore.actions.removePart())\n      onClose()\n    }\n  }\n\n  const handleUpdatePart = async (entity: PartEntity, id: number, formData: ItemDetail | AssemblyDetail) => {\n    const partApi = entity === 'item' ? itemApi : assemblyApi\n    dispatch(partStore.actions.setPartLoading(true))\n    try {\n      const { message } = await partApi.update(id, formData)\n      handleClosePartDialog(entity)()\n      dispatch(commonStore.actions.setSuccessMessage(message))\n    } catch (error) {\n      console.error('error', '>>>', error)\n    }\n    dispatch(partStore.actions.setPartLoading(false))\n  }\n\n  const handleSubmit = (entity: PartEntity) => (id: number, formData: ItemDetail | AssemblyDetail) => {\n    if (id) {\n      handleUpdatePart(entity, id, formData)\n    } else {\n      dispatch(partStore.sagaCreate({ entity, formData }))\n    }\n  }\n\n  const handleChangeTab = (event, nextTab: number) => {\n    dispatch(partStore.actions.setPartTab(nextTab))\n  }\n\n  const renderPartDialog = useCallback(\n    () =>\n      partList.map(({ detail, ...partProps }) => (\n        <If condition={isAssembly(detail)} key={detail.id}>\n          <Then>\n            <DialogAssembly\n              {...partProps}\n              detail={detail as AssemblyDetail}\n              onSubmit={handleSubmit('assembly')}\n              onClose={handleClosePartDialog('assembly')}\n              onChangeTab={handleChangeTab}\n            />\n          </Then>\n          <Else>\n            <DialogItem\n              {...partProps}\n              detail={detail as ItemDetail}\n              onSubmit={handleSubmit('item')}\n              onClose={handleClosePartDialog('item')}\n              onChangeTab={handleChangeTab}\n            />\n          </Else>\n        </If>\n      )),\n    [partList]\n  )\n\n  const handleSubmitManu = (id: number, formData: ManufacturerItem) => {\n    dispatch(partStore.sagaCreateManu(formData))\n  }\n\n  const handleCloseManuDialog = () => {\n    dispatch(partStore.sagaCloseManuDialog())\n  }\n\n  const handleGetCodeManu = (currentData: ManufacturerItem) => {\n    dispatch(partStore.sagaGetManuId(currentData))\n  }\n\n  return (\n    <>\n      {renderPartDialog()}\n      <DialogManufacturerCreateEdit\n        {...manu.dialogState}\n        onSubmit={handleSubmitManu}\n        onClose={handleCloseManuDialog}\n        onGetNextCode={handleGetCodeManu}\n        permissions={manu.initData.permissions}\n        wikiPage={manu.initData.wiki_page}\n        detail={manu.detail}\n      />\n    </>\n  )\n}\n\nexport default PartDialog\n"]},"metadata":{},"sourceType":"module"}