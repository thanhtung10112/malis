{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Tooltip, Typography, LinearProgress } from '@material-ui/core';\nimport { AppTextField } from '@/components/index';\nimport { useEffect, useState } from 'react';\nimport { useController } from 'react-hook-form';\nimport useStyles from './styles';\nimport _ from 'lodash';\nimport clsx from 'clsx';\nimport { regexes, regexSpecCharacters } from '@/utils/getPasswordYup';\n\nvar FormControllerPasswordField = function FormControllerPasswordField(props) {\n  var classes = useStyles();\n\n  var control = props.control,\n      name = props.name,\n      rules = props.rules,\n      textFieldProps = _objectWithoutProperties(props, [\"control\", \"name\", \"rules\"]);\n\n  var _useState = useState([]),\n      levelPw = _useState[0],\n      setLevelPw = _useState[1];\n\n  var _useController = useController({\n    name: name,\n    control: control\n  }),\n      _useController$field = _useController.field,\n      onChangeController = _useController$field.onChange,\n      valueController = _useController$field.value,\n      inputProps = _objectWithoutProperties(_useController$field, [\"onChange\", \"value\"]),\n      invalid = _useController.meta.invalid;\n\n  useEffect(function () {\n    var passedRegexes = [];\n\n    if (valueController.length > 0) {\n      regexes.forEach(function (regex) {\n        var isMatch = new RegExp(regex).test(valueController);\n        isMatch && passedRegexes.push(regex);\n      });\n    }\n\n    setLevelPw(passedRegexes);\n  }, [valueController]);\n\n  var handleChangeValue = function handleChangeValue(event) {\n    var value = event.target.value;\n    onChangeController(value);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Tooltip, {\n      title: /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          children: \"Password must have:\"\n        }), /*#__PURE__*/_jsxs(\"ul\", {\n          children: [/*#__PURE__*/_jsx(\"li\", {\n            className: clsx(classes.tooltipItem, {\n              active: valueController.length >= 8 && valueController.length <= 30\n            }),\n            children: \"8 - 30 characters\"\n          }), /*#__PURE__*/_jsx(\"li\", {\n            className: clsx(classes.tooltipItem, {\n              active: levelPw.includes('[A-Z]')\n            }),\n            children: \"At least one uppercase letter\"\n          }), /*#__PURE__*/_jsx(\"li\", {\n            className: clsx(classes.tooltipItem, {\n              active: levelPw.includes('[a-z]')\n            }),\n            children: \"At least one lowercase letter\"\n          }), /*#__PURE__*/_jsx(\"li\", {\n            className: clsx(classes.tooltipItem, {\n              active: levelPw.includes('[0-9]')\n            }),\n            children: \"At least one number\"\n          }), /*#__PURE__*/_jsx(\"li\", {\n            className: clsx(classes.tooltipItem, {\n              active: levelPw.includes(regexSpecCharacters)\n            }),\n            children: \"At least one special character\"\n          })]\n        })]\n      }),\n      children: /*#__PURE__*/_jsx(AppTextField, _objectSpread(_objectSpread(_objectSpread({}, inputProps), textFieldProps), {}, {\n        onChange: handleChangeValue,\n        error: Boolean(invalid),\n        helperText: invalid === null || invalid === void 0 ? void 0 : invalid.message,\n        value: _.isNil(valueController) ? '' : valueController\n      }))\n    }), /*#__PURE__*/_jsxs(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      style: {\n        margin: '8px 0'\n      },\n      children: [\"Password Strength:\", ' ']\n    }), /*#__PURE__*/_jsx(LinearProgress, {\n      variant: \"determinate\",\n      value: levelPw.length * 25,\n      color: levelPw.length > 2 ? 'primary' : 'secondary'\n    })]\n  });\n};\n\nexport default FormControllerPasswordField;","map":null,"metadata":{},"sourceType":"module"}