{"ast":null,"code":"import { createSlice, createAction, createSelector } from '@reduxjs/toolkit';\nimport { actionTypes } from '@/utils/constant';\nexport const name = 'item';\nexport const resetState = createAction(`${name}/${actionTypes.RESET_STATE}`);\nexport const initialState = {\n  dataList: [],\n  initDataForList: {\n    permissions: {\n      item: null\n    },\n    jobs: [],\n    wiki_page: '',\n    column_tooltips: {}\n  }\n};\nconst itemSlice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setDataList(state, {\n      payload\n    }) {\n      state.dataList = payload;\n    },\n\n    setInitDataForList(state, {\n      payload\n    }) {\n      state.initDataForList = payload;\n    }\n\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState;\n    }\n\n  }\n}); // Actions\n\nexport const {\n  actions\n} = itemSlice; // Saga actions\n\nexport const sagaGetList = createAction(`${name}/${actionTypes.GET_LIST}`);\nexport const sagaChangeUserJob = createAction(`${name}/${actionTypes.CHANGE_USER_JOB}`);\nexport const sagaRemove = createAction(`${name}/${actionTypes.REMOVE}`);\nexport const sagaChangeUserDrawing = createAction(`${name}/${actionTypes.CHANGE_USER_DRAWING}`); // selector\n\nconst selectState = state => state[name];\n\nexport const selectDataList = createSelector(selectState, state => state.dataList);\nexport const selectPermissions = createSelector(selectState, state => state.initDataForList.permissions.item);\nexport const selectInitDataForList = createSelector(selectState, state => state.initDataForList);\nexport default itemSlice;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/store/reducers/item.reducer.ts"],"names":["createSlice","createAction","createSelector","actionTypes","name","resetState","RESET_STATE","initialState","dataList","initDataForList","permissions","item","jobs","wiki_page","column_tooltips","itemSlice","reducers","setDataList","state","payload","setInitDataForList","extraReducers","type","actions","sagaGetList","GET_LIST","sagaChangeUserJob","CHANGE_USER_JOB","sagaRemove","REMOVE","sagaChangeUserDrawing","CHANGE_USER_DRAWING","selectState","selectDataList","selectPermissions","selectInitDataForList"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,YAAtB,EAAmDC,cAAnD,QAAyE,kBAAzE;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAMA,OAAO,MAAMC,IAAY,GAAG,MAArB;AACP,OAAO,MAAMC,UAAU,GAAGJ,YAAY,CAAE,GAAEG,IAAK,IAAGD,WAAW,CAACG,WAAY,EAApC,CAA/B;AAEP,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,QAAQ,EAAE,EADgB;AAE1BC,EAAAA,eAAe,EAAE;AACfC,IAAAA,WAAW,EAAE;AACXC,MAAAA,IAAI,EAAE;AADK,KADE;AAIfC,IAAAA,IAAI,EAAE,EAJS;AAKfC,IAAAA,SAAS,EAAE,EALI;AAMfC,IAAAA,eAAe,EAAE;AANF;AAFS,CAArB;AAYP,MAAMC,SAAS,GAAGf,WAAW,CAAC;AAC5BI,EAAAA,IAD4B;AAE5BG,EAAAA,YAF4B;AAG5BS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,EAA4C;AACrDD,MAAAA,KAAK,CAACV,QAAN,GAAiBW,OAAjB;AACD,KAHO;;AAIRC,IAAAA,kBAAkB,CAACF,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,EAAyD;AACzED,MAAAA,KAAK,CAACT,eAAN,GAAwBU,OAAxB;AACD;;AANO,GAHkB;AAW5BE,EAAAA,aAAa,EAAE;AACb,KAAChB,UAAU,CAACiB,IAAZ,IAAoB;AAClB,aAAOf,YAAP;AACD;;AAHY;AAXa,CAAD,CAA7B,C,CAiBA;;AACA,OAAO,MAAM;AAAEgB,EAAAA;AAAF,IAAcR,SAApB,C,CAEP;;AACA,OAAO,MAAMS,WAAW,GAAGvB,YAAY,CAAE,GAAEG,IAAK,IAAGD,WAAW,CAACsB,QAAS,EAAjC,CAAhC;AACP,OAAO,MAAMC,iBAAiB,GAAGzB,YAAY,CAC1C,GAAEG,IAAK,IAAGD,WAAW,CAACwB,eAAgB,EADI,CAAtC;AAGP,OAAO,MAAMC,UAAU,GAAG3B,YAAY,CAAsB,GAAEG,IAAK,IAAGD,WAAW,CAAC0B,MAAO,EAAnD,CAA/B;AACP,OAAO,MAAMC,qBAAqB,GAAG7B,YAAY,CAC9C,GAAEG,IAAK,IAAGD,WAAW,CAAC4B,mBAAoB,EADI,CAA1C,C,CAIP;;AACA,MAAMC,WAAW,GAAId,KAAD,IAA4BA,KAAK,CAACd,IAAD,CAArD;;AACA,OAAO,MAAM6B,cAAc,GAAG/B,cAAc,CAAC8B,WAAD,EAAed,KAAD,IAAWA,KAAK,CAACV,QAA/B,CAArC;AACP,OAAO,MAAM0B,iBAAiB,GAAGhC,cAAc,CAAC8B,WAAD,EAAed,KAAD,IAAWA,KAAK,CAACT,eAAN,CAAsBC,WAAtB,CAAkCC,IAA3D,CAAxC;AACP,OAAO,MAAMwB,qBAAqB,GAAGjC,cAAc,CAAC8B,WAAD,EAAed,KAAD,IAAWA,KAAK,CAACT,eAA/B,CAA5C;AAEP,eAAeM,SAAf","sourcesContent":["import { createSlice, createAction, PayloadAction, createSelector } from '@reduxjs/toolkit'\nimport { actionTypes } from '@/utils/constant'\n\nimport type { Item, ItemInitDataForList } from '@/types/Item'\nimport type { RootReducerType } from './rootReducer'\nimport type { DataForDropdown, Entity, ParameterOption, PayloadOperation } from '@/types/Common'\n\nexport const name: Entity = 'item'\nexport const resetState = createAction(`${name}/${actionTypes.RESET_STATE}`)\n\nexport const initialState = {\n  dataList: [] as Item[],\n  initDataForList: {\n    permissions: {\n      item: null\n    },\n    jobs: [],\n    wiki_page: '',\n    column_tooltips: {}\n  } as ItemInitDataForList\n}\n\nconst itemSlice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setDataList(state, { payload }: PayloadAction<Item[]>) {\n      state.dataList = payload\n    },\n    setInitDataForList(state, { payload }: PayloadAction<ItemInitDataForList>) {\n      state.initDataForList = payload\n    }\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState\n    }\n  }\n})\n// Actions\nexport const { actions } = itemSlice\n\n// Saga actions\nexport const sagaGetList = createAction(`${name}/${actionTypes.GET_LIST}`)\nexport const sagaChangeUserJob = createAction<{ optionValue: ParameterOption; confirm: string }>(\n  `${name}/${actionTypes.CHANGE_USER_JOB}`\n)\nexport const sagaRemove = createAction<PayloadOperation[]>(`${name}/${actionTypes.REMOVE}`)\nexport const sagaChangeUserDrawing = createAction<{ optionValue: DataForDropdown; confirm: string }>(\n  `${name}/${actionTypes.CHANGE_USER_DRAWING}`\n)\n\n// selector\nconst selectState = (state: RootReducerType) => state[name]\nexport const selectDataList = createSelector(selectState, (state) => state.dataList)\nexport const selectPermissions = createSelector(selectState, (state) => state.initDataForList.permissions.item)\nexport const selectInitDataForList = createSelector(selectState, (state) => state.initDataForList)\n\nexport default itemSlice\n"]},"metadata":{},"sourceType":"module"}