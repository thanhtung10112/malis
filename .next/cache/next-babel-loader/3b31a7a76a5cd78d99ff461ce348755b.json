{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'next-i18next';\nimport useStyles from './style';\nimport { Grid } from '@material-ui/core';\nimport { When } from 'react-if';\nimport { FormControllerTextField, FormControllerAutocomplete, InfoIcon, DocumentIcon, SectionTimezone, FormControllerTabs } from '@/components';\nimport TabMainAddress from './TabMainAddress';\nimport TabSecondaryAddress from './TabSecondaryAddress';\nimport { locationStore } from '@/store/reducers';\n\nconst TabGeneral = () => {\n  const {\n    t\n  } = useTranslation('location');\n  const classes = useStyles();\n  const locationForm = useFormContext();\n  const {\n    0: childTab,\n    1: setChildTab\n  } = useState(0);\n  const dispatch = useDispatch();\n  const dialogState = useSelector(locationStore.selectDialogState);\n  const {\n    parameters\n  } = useSelector(locationStore.selectInitDataForCE);\n  const permissions = useSelector(locationStore.selectPermissions);\n  const locationDetail = useSelector(locationStore.selectDetail);\n\n  const handleGetNextCode = () => {\n    const currentValues = locationForm.getValues();\n    dispatch(locationStore.sagaGetNextCode(currentValues));\n  };\n\n  const handleChangeChildTab = (event, nextTab) => {\n    setChildTab(nextTab);\n  };\n\n  const officeTab = {\n    label: t('form.tab.main_address'),\n    panel: /*#__PURE__*/_jsx(TabMainAddress, {}),\n    errorKey: ['office_email', 'office_zip']\n  };\n  const workshopWarehouseTab = {\n    label: t('form.tab.secondary_address'),\n    panel: /*#__PURE__*/_jsx(TabSecondaryAddress, {}),\n    errorKey: ['workshop_email', 'remark']\n  };\n  const tabs = [officeTab, workshopWarehouseTab];\n\n  const renderOption = option => `${option.parameter_id} - ${option.description}`;\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsx(FormControllerTextField, {\n          control: locationForm.control,\n          label: t('form.code'),\n          name: \"location_id\",\n          required: true,\n          generateCode: true,\n          autoFocus: !dialogState.editMode,\n          disabled: dialogState.editMode,\n          loading: dialogState.loading,\n          onGenerateCode: handleGetNextCode\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsx(FormControllerAutocomplete, {\n          control: locationForm.control,\n          name: \"language\",\n          options: parameters.PLLA,\n          renderOption: renderOption,\n          label: t('form.language'),\n          required: true\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsx(FormControllerAutocomplete, {\n          control: locationForm.control,\n          name: \"location_type\",\n          options: parameters.TYLO,\n          renderOption: renderOption,\n          disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.change_type) && dialogState.editMode,\n          label: t('form.type'),\n          required: true\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsx(FormControllerTextField, {\n          control: locationForm.control,\n          name: \"name\",\n          required: true,\n          label: t('form.name')\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsx(FormControllerTextField, {\n          control: locationForm.control,\n          multiline: true,\n          rows: 3,\n          name: \"comment\",\n          label: t('form.comment')\n        })\n      })]\n    }), /*#__PURE__*/_jsxs(\"section\", {\n      className: classes.document__container,\n      children: [/*#__PURE__*/_jsx(InfoIcon, {\n        className: classes.document__iconText\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: classes.document__attach,\n        children: [/*#__PURE__*/_jsx(DocumentIcon, {\n          className: classes.document__iconText\n        }), /*#__PURE__*/_jsx(\"span\", {\n          className: classes.document__iconText,\n          children: t('common:attach_documents')\n        })]\n      })]\n    }), /*#__PURE__*/_jsx(FormControllerTabs, {\n      value: childTab,\n      onChange: handleChangeChildTab,\n      form: locationForm,\n      tabs: tabs\n    }), /*#__PURE__*/_jsx(When, {\n      condition: dialogState.editMode,\n      children: /*#__PURE__*/_jsx(SectionTimezone, {\n        style: {\n          padding: 0\n        },\n        value: locationDetail\n      })\n    })]\n  });\n};\n\nexport default TabGeneral;","map":null,"metadata":{},"sourceType":"module"}