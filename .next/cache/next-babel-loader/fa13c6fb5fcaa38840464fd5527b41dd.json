{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\pages\\\\tags.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useStyles from '@/styles/page/layout';\nimport useAuthMiddleware from '@/hooks/useAuthMiddleware';\nimport { useTranslation } from 'next-i18next';\nimport useGetData from '@/hooks/useGetData';\nimport { Link } from '@material-ui/core';\nimport { AppLayout, EditIcon, CreateIcon, AppAutocompleteStyled, DeleteIcon, SaveIcon, MakeAListIcon, DialogTag, useConfirm, AppAutocompleteStyledAsync, DialogDrawingCreateEdit } from '@/components';\nimport _ from 'lodash';\nimport immer from 'immer';\nimport { tagStore, commonStore, drawingStore } from '@/store/reducers';\nimport { defaultProperties, iconColumn } from '@/utils/columnProperties';\nimport getMessageConfirm from '@/utils/getMessageConfirm';\nimport { defaultTagInitDataForCE, defaultTagDetail } from '@/utils/defaultValues';\n\nconst Specifications_Page = () => {\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslation('element');\n  const {\n    confirm\n  } = useConfirm();\n  const {\n    getInitDataForCE,\n    getGeneratedCode,\n    getDetail\n  } = useGetData('elements');\n  const {\n    0: openDialog,\n    1: setOpenDialog\n  } = useState(false);\n  const {\n    0: initDataForCE,\n    1: setInitDataForCE\n  } = useState(defaultTagInitDataForCE);\n  const {\n    0: tagDetail,\n    1: setTagDetail\n  } = useState(defaultTagDetail);\n  const breadcrumbData = useMemo(() => [{\n    label: 'Home',\n    href: '/'\n  }, {\n    label: 'Drawings',\n    href: '/Drawings'\n  }, {\n    label: 'Tags Management',\n    href: '/Tags'\n  }], []);\n  const dispatch = useDispatch();\n  const permissions = useSelector(tagStore.selectPermissions);\n  const userJob = useSelector(commonStore.selectUserValueJob);\n  const {\n    wiki_page,\n    column_tooltips,\n    jobs: jobOptions\n  } = useSelector(tagStore.selectInitDataForList);\n  const selectedRows = useSelector(commonStore.selectSelectedRows);\n  const dataList = useSelector(tagStore.selectDataList);\n  const userDrawing = useSelector(commonStore.selectUserValueDrawing);\n  useEffect(() => {\n    return () => dispatch(commonStore.actions.resetUserValue());\n  }, []);\n  useEffect(() => {\n    const schematicValue = userDrawing.value > 0 ? userDrawing : null;\n    setTagDetail(currentState => immer(currentState, draft => {\n      draft.schematic_id = schematicValue;\n    }));\n  }, [userDrawing]);\n  useEffect(() => {\n    setTagDetail(currentState => immer(currentState, draft => {\n      draft.job_id = userJob.value;\n    }));\n  }, [userJob]);\n\n  const resetDetail = () => {\n    setTagDetail(currentState => immer(defaultTagDetail, draft => {\n      draft.schematic_id = currentState.schematic_id;\n      draft.job_id = currentState.job_id;\n    }));\n  };\n\n  const handleOpenCreateDialog = async () => {\n    dispatch(commonStore.actions.setLoadingPage(true));\n\n    try {\n      const resInitDataForCE = await getInitDataForCE();\n      setInitDataForCE(resInitDataForCE);\n\n      if (userDrawing.value > 0) {\n        const generatedCode = await getGeneratedCode({\n          drawing_id: userDrawing.value\n        });\n        setTagDetail(currentState => immer(currentState, draft => {\n          draft.element_id = generatedCode;\n        }));\n      }\n\n      setOpenDialog(true);\n    } catch (error) {\n      console.error('error', '>>>', error);\n    }\n\n    dispatch(commonStore.actions.setLoadingPage(false));\n  };\n\n  const handleOpenUpdateDialog = id => async () => {\n    dispatch(commonStore.actions.setLoadingPage(true));\n\n    try {\n      const resInitDataForCE = await getInitDataForCE();\n      const resDetail = await getDetail(id);\n      setInitDataForCE(resInitDataForCE);\n      setTagDetail(immer(resDetail, draft => {\n        draft.schematic_id = resDetail.related_schematic;\n        draft.part_id = resDetail.related_part;\n      }));\n      setOpenDialog(true);\n    } catch (error) {\n      console.error('error', '>>>', error);\n    }\n\n    dispatch(commonStore.actions.setLoadingPage(false));\n  };\n\n  const handleChangeUserJob = (event, optionValue) => {\n    dispatch(tagStore.sagaChangeUserJob(optionValue));\n  };\n\n  const handleChangeUserDrawing = (event, optionValue) => {\n    dispatch(tagStore.sagaChangeUserDrawing(optionValue));\n  };\n\n  const handleDeleteTags = async () => {\n    const description = getMessageConfirm(t, 'element', selectedRows, 'delete');\n    const result = await confirm({\n      description\n    });\n\n    if (result === 'OK') {\n      const tags = _.map(selectedRows, partId => {\n        const {\n          schematic_id,\n          id\n        } = _.find(dataList, {\n          id: partId\n        });\n\n        return {\n          entity_id: schematic_id,\n          id\n        };\n      });\n\n      dispatch(tagStore.sagaRemove(tags));\n    }\n  };\n\n  const handleOpenDrawingDialog = schematicId => () => {\n    dispatch(drawingStore.sagaOpenUpdateDialog(schematicId));\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    resetDetail();\n    dispatch(tagStore.sagaGetList());\n  };\n\n  const columns = useMemo(() => [_objectSpread(_objectSpread(_objectSpread({}, defaultProperties), iconColumn), {}, {\n    description: column_tooltips.edit,\n    field: 'id',\n    headerName: 'Edit',\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(EditIcon, {\n        onClick: handleOpenUpdateDialog(params.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 18\n      }, this);\n    }\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.schematic_id,\n    field: 'schematic_id',\n    headerName: 'Schematic #',\n    flex: 0.15,\n\n    renderCell(params) {\n      const {\n        value,\n        row\n      } = params;\n      return /*#__PURE__*/_jsxDEV(Link, {\n        href: \"#\",\n        onClick: handleOpenDrawingDialog(row.schematic_pk_id),\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, this);\n    }\n\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.element_id,\n    field: 'element_id',\n    headerName: 'Element #',\n    flex: 0.15\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.tag,\n    field: 'tag',\n    headerName: 'Tag #',\n    flex: 0.15\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.part_id,\n    field: 'part_id',\n    headerName: 'Part #',\n    flex: 0.2\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.description,\n    headerName: 'Description',\n    flex: 0.6,\n    field: 'description'\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.rfq_id,\n    field: 'rfq_id',\n    headerName: 'RFQ #',\n    width: 80\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.rfo_id,\n    field: 'rfo_id',\n    headerName: 'RFO  #',\n    width: 80\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.puco_id,\n    field: 'puco',\n    headerName: 'PuCo',\n    width: 80\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.order_id,\n    field: 'order_id',\n    headerName: 'Order  #',\n    width: 120\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.box_nr,\n    field: 'box_nr',\n    headerName: 'BoxNr',\n    width: 80\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.cnt_nr,\n    field: 'cnt_nr',\n    headerName: 'CntNr',\n    width: 80\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.package_id,\n    field: 'package_id',\n    headerName: 'Package #',\n    width: 80\n  })], []);\n  const buttonsPage = [{\n    label: t('common:button.new'),\n    startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 18\n    }, this),\n    onClick: handleOpenCreateDialog,\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.create) || userJob.value < 0 || !(userJob === null || userJob === void 0 ? void 0 : userJob.value)\n  }, {\n    label: t('common:button.save'),\n    startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 18\n    }, this),\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.edit)\n  }, {\n    label: t('common:button.delete'),\n    startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 18\n    }, this),\n    onClick: handleDeleteTags,\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.delete) || selectedRows.length === 0\n  }, {\n    label: t('common:button.make_a_list'),\n    startIcon: /*#__PURE__*/_jsxDEV(MakeAListIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 18\n    }, this)\n  }];\n\n  const Dialogs = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DialogTag, {\n      open: openDialog,\n      initData: initDataForCE,\n      detail: tagDetail,\n      onClose: handleCloseDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogDrawingCreateEdit, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  const Options = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppAutocompleteStyled, {\n      className: classes.controlAutocomplete,\n      width: 200,\n      label: \"Jobs\",\n      options: jobOptions,\n      value: userJob,\n      renderOption: option => option.description,\n      primaryKeyOption: \"value\",\n      onChange: handleChangeUserJob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppAutocompleteStyledAsync, {\n      disabled: !(userJob === null || userJob === void 0 ? void 0 : userJob.value),\n      width: 250,\n      label: \"Schematics\",\n      className: classes.controlAutocomplete,\n      compName: \"drawing_list\",\n      additionalData: {\n        limit_to_job: userJob.value,\n        include_all_drawings_option: true\n      },\n      onChange: handleChangeUserDrawing,\n      value: userDrawing,\n      defaultOptions: [commonStore.initialState.userValue.drawing]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    entity: \"element\",\n    breadcrumbs: breadcrumbData,\n    wikiPage: wiki_page,\n    searchProps: {\n      width: 320\n    },\n    buttons: buttonsPage,\n    permissions: permissions,\n    tableProps: {\n      columns\n    },\n    Dialogs: Dialogs,\n    Options: Options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 330,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getServerSideProps = useAuthMiddleware(['common', 'element', 'make_a_list', 'advanced_filter', 'drawing', 'item', 'assembly']);\nexport default Specifications_Page;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/pages/tags.tsx"],"names":["useEffect","useMemo","useState","useDispatch","useSelector","useStyles","useAuthMiddleware","useTranslation","useGetData","Link","AppLayout","EditIcon","CreateIcon","AppAutocompleteStyled","DeleteIcon","SaveIcon","MakeAListIcon","DialogTag","useConfirm","AppAutocompleteStyledAsync","DialogDrawingCreateEdit","_","immer","tagStore","commonStore","drawingStore","defaultProperties","iconColumn","getMessageConfirm","defaultTagInitDataForCE","defaultTagDetail","Specifications_Page","classes","t","confirm","getInitDataForCE","getGeneratedCode","getDetail","openDialog","setOpenDialog","initDataForCE","setInitDataForCE","tagDetail","setTagDetail","breadcrumbData","label","href","dispatch","permissions","selectPermissions","userJob","selectUserValueJob","wiki_page","column_tooltips","jobs","jobOptions","selectInitDataForList","selectedRows","selectSelectedRows","dataList","selectDataList","userDrawing","selectUserValueDrawing","actions","resetUserValue","schematicValue","value","currentState","draft","schematic_id","job_id","resetDetail","handleOpenCreateDialog","setLoadingPage","resInitDataForCE","generatedCode","drawing_id","element_id","error","console","handleOpenUpdateDialog","id","resDetail","related_schematic","part_id","related_part","handleChangeUserJob","event","optionValue","sagaChangeUserJob","handleChangeUserDrawing","sagaChangeUserDrawing","handleDeleteTags","description","result","tags","map","partId","find","entity_id","sagaRemove","handleOpenDrawingDialog","schematicId","sagaOpenUpdateDialog","handleCloseDialog","sagaGetList","columns","edit","field","headerName","renderCell","params","flex","row","schematic_pk_id","tag","rfq_id","width","rfo_id","puco_id","order_id","box_nr","cnt_nr","package_id","buttonsPage","startIcon","onClick","disabled","create","delete","length","Dialogs","Options","controlAutocomplete","option","limit_to_job","include_all_drawings_option","initialState","userValue","drawing","getServerSideProps"],"mappings":"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","sourcesContent":["import { useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useStyles from '@/styles/page/layout'\nimport useAuthMiddleware from '@/hooks/useAuthMiddleware'\nimport { useTranslation } from 'next-i18next'\nimport useGetData from '@/hooks/useGetData'\n\nimport { Link } from '@material-ui/core'\n\nimport {\n  AppLayout,\n  EditIcon,\n  CreateIcon,\n  AppAutocompleteStyled,\n  DeleteIcon,\n  SaveIcon,\n  MakeAListIcon,\n  DialogTag,\n  useConfirm,\n  AppAutocompleteStyledAsync,\n  DialogDrawingCreateEdit\n} from '@/components'\n\nimport _ from 'lodash'\nimport immer from 'immer'\nimport { tagStore, commonStore, drawingStore } from '@/store/reducers'\nimport { defaultProperties, iconColumn } from '@/utils/columnProperties'\nimport getMessageConfirm from '@/utils/getMessageConfirm'\nimport { defaultTagInitDataForCE, defaultTagDetail } from '@/utils/defaultValues'\n\nimport type { GridColumns } from '@material-ui/data-grid'\nimport type { ParameterOption, PayloadOperation, DataForDropdown } from '@/types/Common'\n\nconst Specifications_Page = () => {\n  const classes = useStyles()\n  const { t } = useTranslation('element')\n  const { confirm } = useConfirm()\n  const { getInitDataForCE, getGeneratedCode, getDetail } = useGetData('elements')\n\n  const [openDialog, setOpenDialog] = useState(false)\n  const [initDataForCE, setInitDataForCE] = useState(defaultTagInitDataForCE)\n  const [tagDetail, setTagDetail] = useState(defaultTagDetail)\n\n  const breadcrumbData = useMemo(\n    () => [\n      { label: 'Home', href: '/' },\n      { label: 'Drawings', href: '/Drawings' },\n      { label: 'Tags Management', href: '/Tags' }\n    ],\n    []\n  )\n\n  const dispatch = useDispatch()\n  const permissions = useSelector(tagStore.selectPermissions)\n  const userJob = useSelector(commonStore.selectUserValueJob)\n  const { wiki_page, column_tooltips, jobs: jobOptions } = useSelector(tagStore.selectInitDataForList)\n  const selectedRows = useSelector(commonStore.selectSelectedRows)\n  const dataList = useSelector(tagStore.selectDataList)\n  const userDrawing = useSelector(commonStore.selectUserValueDrawing)\n\n  useEffect(() => {\n    return () => dispatch(commonStore.actions.resetUserValue())\n  }, [])\n\n  useEffect(() => {\n    const schematicValue = userDrawing.value > 0 ? userDrawing : null\n    setTagDetail((currentState) =>\n      immer(currentState, (draft) => {\n        draft.schematic_id = schematicValue\n      })\n    )\n  }, [userDrawing])\n\n  useEffect(() => {\n    setTagDetail((currentState) =>\n      immer(currentState, (draft) => {\n        draft.job_id = userJob.value\n      })\n    )\n  }, [userJob])\n\n  const resetDetail = () => {\n    setTagDetail((currentState) =>\n      immer(defaultTagDetail, (draft) => {\n        draft.schematic_id = currentState.schematic_id\n        draft.job_id = currentState.job_id\n      })\n    )\n  }\n\n  const handleOpenCreateDialog = async () => {\n    dispatch(commonStore.actions.setLoadingPage(true))\n    try {\n      const resInitDataForCE = await getInitDataForCE()\n      setInitDataForCE(resInitDataForCE)\n      if (userDrawing.value > 0) {\n        const generatedCode = await getGeneratedCode({ drawing_id: userDrawing.value })\n        setTagDetail((currentState) =>\n          immer(currentState, (draft) => {\n            draft.element_id = generatedCode\n          })\n        )\n      }\n      setOpenDialog(true)\n    } catch (error) {\n      console.error('error', '>>>', error)\n    }\n    dispatch(commonStore.actions.setLoadingPage(false))\n  }\n\n  const handleOpenUpdateDialog = (id: number) => async () => {\n    dispatch(commonStore.actions.setLoadingPage(true))\n    try {\n      const resInitDataForCE = await getInitDataForCE()\n      const resDetail = await getDetail(id)\n      setInitDataForCE(resInitDataForCE)\n      setTagDetail(\n        immer(resDetail, (draft) => {\n          draft.schematic_id = resDetail.related_schematic\n          draft.part_id = resDetail.related_part\n        }) as any\n      )\n      setOpenDialog(true)\n    } catch (error) {\n      console.error('error', '>>>', error)\n    }\n    dispatch(commonStore.actions.setLoadingPage(false))\n  }\n\n  const handleChangeUserJob = (event, optionValue: ParameterOption) => {\n    dispatch(tagStore.sagaChangeUserJob(optionValue))\n  }\n\n  const handleChangeUserDrawing = (event, optionValue: DataForDropdown) => {\n    dispatch(tagStore.sagaChangeUserDrawing(optionValue))\n  }\n\n  const handleDeleteTags = async () => {\n    const description = getMessageConfirm(t, 'element', selectedRows, 'delete')\n    const result = await confirm({ description })\n    if (result === 'OK') {\n      const tags: PayloadOperation[] = _.map(selectedRows, (partId) => {\n        const { schematic_id, id } = _.find(dataList, { id: partId })\n        return { entity_id: schematic_id, id }\n      })\n      dispatch(tagStore.sagaRemove(tags))\n    }\n  }\n\n  const handleOpenDrawingDialog = (schematicId: number) => () => {\n    dispatch(drawingStore.sagaOpenUpdateDialog(schematicId))\n  }\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false)\n    resetDetail()\n    dispatch(tagStore.sagaGetList())\n  }\n\n  const columns = useMemo<GridColumns>(\n    () => [\n      {\n        ...defaultProperties,\n        ...iconColumn,\n        description: column_tooltips.edit,\n        field: 'id',\n        headerName: 'Edit',\n        renderCell: (params) => {\n          return <EditIcon onClick={handleOpenUpdateDialog(params.value as number)} />\n        }\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.schematic_id,\n        field: 'schematic_id',\n        headerName: 'Schematic #',\n        flex: 0.15,\n        renderCell(params) {\n          const { value, row } = params\n          return (\n            <Link href=\"#\" onClick={handleOpenDrawingDialog(row.schematic_pk_id)}>\n              {value}\n            </Link>\n          )\n        }\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.element_id,\n        field: 'element_id',\n        headerName: 'Element #',\n        flex: 0.15\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.tag,\n        field: 'tag',\n        headerName: 'Tag #',\n        flex: 0.15\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.part_id,\n        field: 'part_id',\n        headerName: 'Part #',\n        flex: 0.2\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.description,\n        headerName: 'Description',\n        flex: 0.6,\n        field: 'description'\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.rfq_id,\n        field: 'rfq_id',\n        headerName: 'RFQ #',\n        width: 80\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.rfo_id,\n        field: 'rfo_id',\n        headerName: 'RFO  #',\n        width: 80\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.puco_id,\n        field: 'puco',\n        headerName: 'PuCo',\n        width: 80\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.order_id,\n        field: 'order_id',\n        headerName: 'Order  #',\n        width: 120\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.box_nr,\n        field: 'box_nr',\n        headerName: 'BoxNr',\n        width: 80\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.cnt_nr,\n        field: 'cnt_nr',\n        headerName: 'CntNr',\n        width: 80\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.package_id,\n        field: 'package_id',\n        headerName: 'Package #',\n        width: 80\n      }\n    ],\n    []\n  )\n\n  const buttonsPage = [\n    {\n      label: t('common:button.new'),\n      startIcon: <CreateIcon />,\n      onClick: handleOpenCreateDialog,\n      disabled: !permissions?.create || userJob.value < 0 || !userJob?.value\n    },\n    {\n      label: t('common:button.save'),\n      startIcon: <SaveIcon />,\n      disabled: !permissions?.edit\n    },\n    {\n      label: t('common:button.delete'),\n      startIcon: <DeleteIcon />,\n      onClick: handleDeleteTags,\n      disabled: !permissions?.delete || selectedRows.length === 0\n    },\n    {\n      label: t('common:button.make_a_list'),\n      startIcon: <MakeAListIcon />\n    }\n  ]\n\n  const Dialogs = (\n    <>\n      <DialogTag open={openDialog} initData={initDataForCE} detail={tagDetail} onClose={handleCloseDialog} />\n      <DialogDrawingCreateEdit />\n    </>\n  )\n\n  const Options = (\n    <>\n      <AppAutocompleteStyled\n        className={classes.controlAutocomplete}\n        width={200}\n        label=\"Jobs\"\n        options={jobOptions}\n        value={userJob}\n        renderOption={(option) => option.description}\n        primaryKeyOption=\"value\"\n        onChange={handleChangeUserJob}\n      />\n\n      <AppAutocompleteStyledAsync\n        disabled={!userJob?.value}\n        width={250}\n        label=\"Schematics\"\n        className={classes.controlAutocomplete}\n        compName=\"drawing_list\"\n        additionalData={{\n          limit_to_job: userJob.value,\n          include_all_drawings_option: true\n        }}\n        onChange={handleChangeUserDrawing}\n        value={userDrawing}\n        defaultOptions={[commonStore.initialState.userValue.drawing]}\n      />\n    </>\n  )\n\n  return (\n    <AppLayout\n      entity=\"element\"\n      breadcrumbs={breadcrumbData}\n      wikiPage={wiki_page}\n      searchProps={{\n        width: 320\n      }}\n      buttons={buttonsPage}\n      permissions={permissions}\n      tableProps={{\n        columns\n      }}\n      Dialogs={Dialogs}\n      Options={Options}\n    />\n  )\n}\n\nexport const getServerSideProps = useAuthMiddleware([\n  'common',\n  'element',\n  'make_a_list',\n  'advanced_filter',\n  'drawing',\n  'item',\n  'assembly'\n])\n\nexport default Specifications_Page\n"]},"metadata":{},"sourceType":"module"}