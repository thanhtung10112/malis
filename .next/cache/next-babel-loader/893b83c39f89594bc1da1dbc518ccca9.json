{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { DialogMain, FormControllerTextField } from '@/components/index';\nimport { useTranslation } from 'next-i18next';\n\nfunction DialogSaveAsPreset(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var onSubmit = props.onSubmit,\n      name = props.name,\n      control = props.control,\n      defaultValue = props.defaultValue,\n      rules = props.rules,\n      dialogProps = _objectWithoutProperties(props, [\"onSubmit\", \"name\", \"control\", \"defaultValue\", \"rules\"]);\n\n  return /*#__PURE__*/_jsx(DialogMain, _objectSpread(_objectSpread({}, dialogProps), {}, {\n    title: \"Save this preset\",\n    maxWidth: \"sm\",\n    onOk: onSubmit,\n    onClose: dialogProps.onClose,\n    okText: t('common:button.save'),\n    closeText: t('common:button.cancel'),\n    children: /*#__PURE__*/_jsx(FormControllerTextField, {\n      style: {\n        marginTop: 8\n      },\n      name: name,\n      label: \"Name\",\n      autoFocus: true,\n      required: true,\n      control: control,\n      defaultValue: defaultValue,\n      rules: rules\n    })\n  }));\n}\n\nDialogSaveAsPreset.defaultProps = {\n  name: 'save_as_name',\n  defaultValue: {},\n  rules: {}\n};\nexport default DialogSaveAsPreset;","map":null,"metadata":{},"sourceType":"module"}