{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Fersher\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\pages\\\\users.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'next-i18next';\nimport useAuthMiddleware from '@/hooks/useAuthMiddleware';\nimport { DialogUserCreateEdit, DialogUserResetPassword, useConfirm, confirmConstant, AppLayout, MakeAListIcon, EditIcon, DeleteIcon, EnableIcon, DisableIcon, LockIcon, UnclockIcon, CreateIcon } from '@/components';\nimport { userStore, commonStore } from '@/store/reducers';\nimport * as columnProperties from '@/utils/columnProperties';\nimport getMessageConfirm from '@/utils/getMessageConfirm';\n\nfunction Users() {\n  const {\n    t\n  } = useTranslation('user');\n  const {\n    confirm\n  } = useConfirm();\n  const dispatch = useDispatch();\n  const userPermissions = useSelector(userStore.selectPermissions);\n  const selectedRows = useSelector(commonStore.selectSelectedRows);\n  const {\n    wiki_page,\n    column_tooltips\n  } = useSelector(userStore.selectInitDataForList);\n  const isEmptySelectedRows = selectedRows.length <= 0;\n  const breadcrumbData = [{\n    label: 'Home',\n    href: '/'\n  }, {\n    label: 'System Management',\n    href: '/users'\n  }, {\n    label: 'Users Management',\n    href: '/users'\n  }];\n\n  const handleOpenUpdateDialog = id => () => {\n    dispatch(userStore.sagaOpenUpdateDialog(id));\n  };\n\n  const handleOpenCreateDialog = () => {\n    dispatch(userStore.sagaOpenCreateDialog());\n  };\n\n  const handleExecuteOperation = operation => async () => {\n    const description = getMessageConfirm(t, 'user', selectedRows, operation);\n    const result = await confirm({\n      description\n    });\n\n    if (result === confirmConstant.actionTypes.OK) {\n      dispatch(commonStore.sagaExecuteOperation({\n        entity: 'user',\n        operation,\n        operationList: selectedRows\n      }));\n    }\n  };\n\n  const columns = [_objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.iconColumn), {}, {\n    description: column_tooltips.edit,\n    field: 'id',\n    headerName: 'Edit',\n    renderCell: param => {\n      return /*#__PURE__*/_jsxDEV(EditIcon, {\n        onClick: handleOpenUpdateDialog(param.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 16\n      }, this);\n    }\n  }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n    description: column_tooltips.user_id,\n    field: 'user_id',\n    headerName: 'Username',\n    flex: 0.1\n  }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n    description: column_tooltips.full_name,\n    field: 'full_name',\n    headerName: 'Full name',\n    flex: 0.4\n  }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n    description: column_tooltips.email,\n    field: 'email',\n    headerName: 'Email Address',\n    flex: 0.1\n  }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n    description: column_tooltips.user_groups,\n    field: 'user_groups',\n    headerName: 'Groups Membership',\n    flex: 0.1\n  }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n    description: column_tooltips.default_language,\n    field: 'default_language',\n    headerName: 'Default Language',\n    flex: 0.1\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    description: column_tooltips.valid_from,\n    field: 'valid_from',\n    headerName: 'Valid from',\n    flex: 0.1\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    description: column_tooltips.valid_until,\n    field: 'valid_until',\n    headerName: 'Valid until',\n    flex: 0.1\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    description: column_tooltips.status,\n    field: 'status',\n    headerName: 'Status',\n\n    renderCell(param) {\n      return param.value ? /*#__PURE__*/_jsxDEV(EnableIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(DisableIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 47\n      }, this);\n    }\n\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    description: column_tooltips.locked,\n    field: 'locked',\n    headerName: 'Locked',\n    renderCell: param => param.value ? /*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 45\n    }, this) : /*#__PURE__*/_jsxDEV(UnclockIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 60\n    }, this)\n  })];\n  const buttons = [{\n    label: t('common:button.new'),\n    startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 18\n    }, this),\n    disabled: !(userPermissions === null || userPermissions === void 0 ? void 0 : userPermissions.create),\n    onClick: handleOpenCreateDialog\n  }, {\n    label: t('common:button.delete'),\n    startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 18\n    }, this),\n    disabled: isEmptySelectedRows || !(userPermissions === null || userPermissions === void 0 ? void 0 : userPermissions.delete),\n    onClick: handleExecuteOperation('delete')\n  }, {\n    label: t('common:button.enable'),\n    startIcon: /*#__PURE__*/_jsxDEV(EnableIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 18\n    }, this),\n    disabled: isEmptySelectedRows || !(userPermissions === null || userPermissions === void 0 ? void 0 : userPermissions.disable_enable),\n    onClick: handleExecuteOperation('enable')\n  }, {\n    label: t('common:button.disable'),\n    startIcon: /*#__PURE__*/_jsxDEV(DisableIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 18\n    }, this),\n    disabled: isEmptySelectedRows || !(userPermissions === null || userPermissions === void 0 ? void 0 : userPermissions.disable_enable),\n    onClick: handleExecuteOperation('disable')\n  }, {\n    label: t('common:button.lock'),\n    startIcon: /*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 18\n    }, this),\n    disabled: isEmptySelectedRows || !(userPermissions === null || userPermissions === void 0 ? void 0 : userPermissions.lock_unlock),\n    onClick: handleExecuteOperation('lock')\n  }, {\n    label: t('common:button.unlock'),\n    startIcon: /*#__PURE__*/_jsxDEV(UnclockIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 18\n    }, this),\n    disabled: isEmptySelectedRows || !(userPermissions === null || userPermissions === void 0 ? void 0 : userPermissions.lock_unlock),\n    onClick: handleExecuteOperation('unlock')\n  }, {\n    label: t('common:button.make_a_list'),\n    startIcon: /*#__PURE__*/_jsxDEV(MakeAListIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 18\n    }, this),\n    disabled: true\n  }];\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    entity: \"user\",\n    breadcrumbs: breadcrumbData,\n    wikiPage: wiki_page,\n    buttons: buttons,\n    permissions: userPermissions,\n    Dialogs: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DialogUserCreateEdit, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogUserResetPassword, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true),\n    tableProps: {\n      columns: columns\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n}\n\nexport const getServerSideProps = useAuthMiddleware(['common', 'user', 'advanced_filter']);\nexport default Users;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/pages/users.tsx"],"names":["useDispatch","useSelector","useTranslation","useAuthMiddleware","DialogUserCreateEdit","DialogUserResetPassword","useConfirm","confirmConstant","AppLayout","MakeAListIcon","EditIcon","DeleteIcon","EnableIcon","DisableIcon","LockIcon","UnclockIcon","CreateIcon","userStore","commonStore","columnProperties","getMessageConfirm","Users","t","confirm","dispatch","userPermissions","selectPermissions","selectedRows","selectSelectedRows","wiki_page","column_tooltips","selectInitDataForList","isEmptySelectedRows","length","breadcrumbData","label","href","handleOpenUpdateDialog","id","sagaOpenUpdateDialog","handleOpenCreateDialog","sagaOpenCreateDialog","handleExecuteOperation","operation","description","result","actionTypes","OK","sagaExecuteOperation","entity","operationList","columns","defaultProperties","iconColumn","edit","field","headerName","renderCell","param","value","user_id","flex","full_name","email","user_groups","default_language","centerColumn","valid_from","valid_until","status","locked","buttons","startIcon","disabled","create","onClick","delete","disable_enable","lock_unlock","getServerSideProps"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector } from 'react-redux'\nimport { useTranslation } from 'next-i18next'\nimport useAuthMiddleware from '@/hooks/useAuthMiddleware'\n\nimport {\n  DialogUserCreateEdit,\n  DialogUserResetPassword,\n  useConfirm,\n  confirmConstant,\n  AppLayout,\n  MakeAListIcon,\n  EditIcon,\n  DeleteIcon,\n  EnableIcon,\n  DisableIcon,\n  LockIcon,\n  UnclockIcon,\n  CreateIcon\n} from '@/components'\n\nimport { userStore, commonStore } from '@/store/reducers'\nimport * as columnProperties from '@/utils/columnProperties'\nimport getMessageConfirm from '@/utils/getMessageConfirm'\n\nimport type { GridColumns } from '@material-ui/data-grid'\nimport type { UserOperation } from '@/types/User'\n\nfunction Users() {\n  const { t } = useTranslation('user')\n  const { confirm } = useConfirm()\n\n  const dispatch = useDispatch()\n  const userPermissions = useSelector(userStore.selectPermissions)\n  const selectedRows = useSelector(commonStore.selectSelectedRows)\n  const { wiki_page, column_tooltips } = useSelector(userStore.selectInitDataForList)\n\n  const isEmptySelectedRows = selectedRows.length <= 0\n\n  const breadcrumbData = [\n    { label: 'Home', href: '/' },\n    { label: 'System Management', href: '/users' },\n    { label: 'Users Management', href: '/users' }\n  ]\n\n  const handleOpenUpdateDialog = (id: number) => () => {\n    dispatch(userStore.sagaOpenUpdateDialog(id))\n  }\n\n  const handleOpenCreateDialog = () => {\n    dispatch(userStore.sagaOpenCreateDialog())\n  }\n\n  const handleExecuteOperation = (operation: UserOperation) => async () => {\n    const description = getMessageConfirm(t, 'user', selectedRows, operation)\n    const result = await confirm({ description })\n    if (result === confirmConstant.actionTypes.OK) {\n      dispatch(\n        commonStore.sagaExecuteOperation({\n          entity: 'user',\n          operation,\n          operationList: selectedRows\n        })\n      )\n    }\n  }\n\n  const columns: GridColumns = [\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.iconColumn,\n      description: column_tooltips.edit,\n      field: 'id',\n      headerName: 'Edit',\n      renderCell: (param) => {\n        return <EditIcon onClick={handleOpenUpdateDialog(param.value as number)} />\n      }\n    },\n    {\n      ...columnProperties.defaultProperties,\n      description: column_tooltips.user_id,\n      field: 'user_id',\n      headerName: 'Username',\n      flex: 0.1\n    },\n    {\n      ...columnProperties.defaultProperties,\n      description: column_tooltips.full_name,\n      field: 'full_name',\n      headerName: 'Full name',\n      flex: 0.4\n    },\n    {\n      ...columnProperties.defaultProperties,\n      description: column_tooltips.email,\n      field: 'email',\n      headerName: 'Email Address',\n      flex: 0.1\n    },\n    {\n      ...columnProperties.defaultProperties,\n      description: column_tooltips.user_groups,\n      field: 'user_groups',\n      headerName: 'Groups Membership',\n      flex: 0.1\n    },\n    {\n      ...columnProperties.defaultProperties,\n      description: column_tooltips.default_language,\n      field: 'default_language',\n      headerName: 'Default Language',\n      flex: 0.1\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.centerColumn,\n      description: column_tooltips.valid_from,\n      field: 'valid_from',\n      headerName: 'Valid from',\n      flex: 0.1\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.centerColumn,\n      description: column_tooltips.valid_until,\n      field: 'valid_until',\n      headerName: 'Valid until',\n      flex: 0.1\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.centerColumn,\n      description: column_tooltips.status,\n      field: 'status',\n      headerName: 'Status',\n      renderCell(param) {\n        return param.value ? <EnableIcon /> : <DisableIcon />\n      }\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.centerColumn,\n      description: column_tooltips.locked,\n      field: 'locked',\n      headerName: 'Locked',\n      renderCell: (param) => (param.value ? <LockIcon /> : <UnclockIcon />)\n    }\n  ]\n\n  const buttons = [\n    {\n      label: t('common:button.new'),\n      startIcon: <CreateIcon />,\n      disabled: !userPermissions?.create,\n      onClick: handleOpenCreateDialog\n    },\n    {\n      label: t('common:button.delete'),\n      startIcon: <DeleteIcon />,\n      disabled: isEmptySelectedRows || !userPermissions?.delete,\n      onClick: handleExecuteOperation('delete')\n    },\n    {\n      label: t('common:button.enable'),\n      startIcon: <EnableIcon />,\n      disabled: isEmptySelectedRows || !userPermissions?.disable_enable,\n      onClick: handleExecuteOperation('enable')\n    },\n    {\n      label: t('common:button.disable'),\n      startIcon: <DisableIcon />,\n      disabled: isEmptySelectedRows || !userPermissions?.disable_enable,\n      onClick: handleExecuteOperation('disable')\n    },\n    {\n      label: t('common:button.lock'),\n      startIcon: <LockIcon />,\n      disabled: isEmptySelectedRows || !userPermissions?.lock_unlock,\n      onClick: handleExecuteOperation('lock')\n    },\n    {\n      label: t('common:button.unlock'),\n      startIcon: <UnclockIcon />,\n      disabled: isEmptySelectedRows || !userPermissions?.lock_unlock,\n      onClick: handleExecuteOperation('unlock')\n    },\n    {\n      label: t('common:button.make_a_list'),\n      startIcon: <MakeAListIcon />,\n      disabled: true\n    }\n  ]\n\n  return (\n    <AppLayout\n      entity=\"user\"\n      breadcrumbs={breadcrumbData}\n      wikiPage={wiki_page}\n      buttons={buttons}\n      permissions={userPermissions}\n      Dialogs={\n        <>\n          <DialogUserCreateEdit />\n          <DialogUserResetPassword />\n        </>\n      }\n      tableProps={{\n        columns: columns\n      }}\n    />\n  )\n}\n\nexport const getServerSideProps = useAuthMiddleware(['common', 'user', 'advanced_filter'])\n\nexport default Users\n"]},"metadata":{},"sourceType":"module"}