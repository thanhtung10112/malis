{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice, createAction, createSelector } from '@reduxjs/toolkit';\nimport * as constant from '@/utils/constant';\nimport _ from 'lodash';\nimport createExtraActions from '@/utils/createExtraActions';\nvar name = 'parameter';\nexport var resetState = createAction(\"\".concat(name, \"/\").concat(constant.actionTypes.RESET_STATE));\nvar initialState = {\n  dataList: [],\n  detail: {\n    description: '',\n    is_default: false,\n    order: null,\n    parameter_id: '',\n    parameter_type_id: null,\n    // get from params in the url\n    properties: {},\n    descriptions: []\n  },\n  initDataForList: {\n    permissions: {\n      application_parameter: null,\n      developer_parameter: null,\n      simple_parameter: null\n    },\n    column_tooltips: {}\n  },\n  initDataForCE: {\n    attributes: '',\n    categories: [],\n    is_multilingual: false,\n    param_type_id: null,\n    param_type_raw_id: '',\n    param_type_specific_config: null,\n    parameters: {\n      PLLA: []\n    }\n  },\n  dialogState: {\n    open: false,\n    editMode: false,\n    loading: false,\n    historyLogs: []\n  },\n  parameterType: {\n    category: null,\n    id: null,\n    type_id: ''\n  }\n};\nvar parameterSlice = createSlice({\n  name: name,\n  initialState: initialState,\n  reducers: {\n    setData: function setData(state, _ref) {\n      var payload = _ref.payload;\n      state.dataList = payload;\n    },\n    setInitDataForList: function setInitDataForList(state, _ref2) {\n      var payload = _ref2.payload;\n      state.initDataForList = payload;\n    },\n    setInitDataForCE: function setInitDataForCE(state, _ref3) {\n      var payload = _ref3.payload;\n      state.initDataForCE = payload;\n    },\n    setDetail: function setDetail(state, _ref4) {\n      var payload = _ref4.payload;\n      state.detail = _objectSpread(_objectSpread({}, state.detail), payload);\n    },\n    setDialogState: function setDialogState(state, _ref5) {\n      var payload = _ref5.payload;\n      state.dialogState = _objectSpread(_objectSpread({}, state.dialogState), payload);\n    },\n    setDialogStateOpen: function setDialogStateOpen(state, _ref6) {\n      var payload = _ref6.payload;\n      state.dialogState.open = payload;\n    },\n    setDialogStateEditMode: function setDialogStateEditMode(state, _ref7) {\n      var payload = _ref7.payload;\n      state.dialogState.editMode = payload;\n    },\n    setDialogStateLoading: function setDialogStateLoading(state, _ref8) {\n      var payload = _ref8.payload;\n      state.dialogState.loading = payload;\n    },\n    setHistoryLogs: function setHistoryLogs(state, _ref9) {\n      var payload = _ref9.payload;\n      state.dialogState.historyLogs = payload;\n    },\n    setParameterType: function setParameterType(state, _ref10) {\n      var payload = _ref10.payload;\n      state.parameterType = payload;\n    },\n    setPermissions: function setPermissions(state, _ref11) {\n      var payload = _ref11.payload;\n      state.initDataForList.permissions = payload;\n    },\n    resetLocationDetail: function resetLocationDetail(state) {\n      state.detail = _objectSpread(_objectSpread({}, initialState.detail), {}, {\n        parameter_type_id: state.detail.parameter_type_id\n      });\n    }\n  },\n  extraReducers: _defineProperty({}, resetState.type, function () {\n    return initialState;\n  })\n}); // Actions\n\nvar actions = parameterSlice.actions; // Extra actions\n\nexport { actions };\nexport var extraActions = createExtraActions(name, {\n  getList: constant.actionTypes.GET_LIST,\n  create: constant.actionTypes.CREATE,\n  update: constant.actionTypes.UPDATE,\n  executeOperation: constant.actionTypes.EXECUTE_OPERATION,\n  openCreateDialog: constant.actionTypes.OPEN_CREATE_DIALOG,\n  openUpdateDialog: constant.actionTypes.OPEN_UPDATE_DIALOG,\n  closeDialog: constant.actionTypes.CLOSE_DIALOG\n}); // Selectors\n\nexport var selectState = function selectState(state) {\n  return state[name];\n};\nexport var selectInitDataForList = createSelector(selectState, function (state) {\n  return state.initDataForList;\n});\nexport var selectInitDataForCE = createSelector(selectState, function (state) {\n  return state.initDataForCE;\n});\nexport var selectDataList = createSelector(selectState, function (state) {\n  return state.dataList;\n});\nexport var selectDetail = createSelector(selectState, function (state) {\n  return state.detail;\n});\nexport var selectDialogState = createSelector(selectState, function (state) {\n  return state.dialogState;\n});\nexport var selectInitParameter = createSelector(selectState, function (state) {\n  return state.initDataForCE.parameters;\n});\nexport var selectPermissions = createSelector(selectState, function (state) {\n  var category = state.parameterType.category;\n  var permissions = state.initDataForList.permissions;\n\n  if (_.isNull(permissions.application_parameter)) {\n    return null;\n  }\n\n  var getPermissionBaseOnName = function getPermissionBaseOnName(name) {\n    return permissions.application_parameter[name] && category === 2 || permissions.developer_parameter[name] && category === 3 || permissions.simple_parameter[name] && category === 1;\n  };\n\n  return {\n    view: getPermissionBaseOnName('view'),\n    create: getPermissionBaseOnName('create'),\n    edit: getPermissionBaseOnName('edit'),\n    \"delete\": getPermissionBaseOnName('delete'),\n    disable_enable: getPermissionBaseOnName('disable_enable')\n  };\n});\nexport var selectViewPermission = createSelector(selectState, function (_ref12) {\n  var _permissions$applicat, _permissions$develope, _permissions$simple_p;\n\n  var initDataForList = _ref12.initDataForList;\n  var permissions = initDataForList.permissions;\n  return ((_permissions$applicat = permissions.application_parameter) === null || _permissions$applicat === void 0 ? void 0 : _permissions$applicat.view) || ((_permissions$develope = permissions.developer_parameter) === null || _permissions$develope === void 0 ? void 0 : _permissions$develope.view) || ((_permissions$simple_p = permissions.simple_parameter) === null || _permissions$simple_p === void 0 ? void 0 : _permissions$simple_p.view);\n});\nexport default parameterSlice;","map":null,"metadata":{},"sourceType":"module"}