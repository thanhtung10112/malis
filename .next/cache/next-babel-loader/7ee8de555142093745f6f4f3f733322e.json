{"ast":null,"code":"import * as yup from 'yup';\nimport _ from 'lodash';\nimport { itemMassFormat } from '@/utils/constant';\n\nconst getValidationSchema = t => yup.object({\n  job_id: yup.number().nullable().required(t('validation_message.job_id_required')),\n  dpn: yup.string().required(t('validation_message.dpn_required')).matches(/^(h|H)\\d{3}$/, t('validation_message.dpn_matches')).transform(value => _.toUpper(value)),\n  drawing_id: yup.mixed().test('drawing_required', t('validation_message.drawing_id_required'), value => _.isNull(value) === false),\n  mass: yup.number().nullable().typeError(t('validation_message.mass_required')).required(t('validation_message.mass_required')).min(itemMassFormat.min, t('validation_message.mass_range')).max(itemMassFormat.max, t('validation_message.mass_range')),\n  unit: yup.number().nullable().required(t('validation_message.unit_required'))\n});\n\nexport default getValidationSchema;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Part/Item/validationSchema.ts"],"names":["yup","_","itemMassFormat","getValidationSchema","t","object","job_id","number","nullable","required","dpn","string","matches","transform","value","toUpper","drawing_id","mixed","test","isNull","mass","typeError","min","max","unit"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAIA,MAAMC,mBAAmB,GAAIC,CAAD,IAC1BJ,GAAG,CAACK,MAAJ,CAAW;AACTC,EAAAA,MAAM,EAAEN,GAAG,CAACO,MAAJ,GAAaC,QAAb,GAAwBC,QAAxB,CAAiCL,CAAC,CAAC,oCAAD,CAAlC,CADC;AAETM,EAAAA,GAAG,EAAEV,GAAG,CACLW,MADE,GAEFF,QAFE,CAEOL,CAAC,CAAC,iCAAD,CAFR,EAGFQ,OAHE,CAGM,cAHN,EAGsBR,CAAC,CAAC,gCAAD,CAHvB,EAIFS,SAJE,CAISC,KAAD,IAAWb,CAAC,CAACc,OAAF,CAAUD,KAAV,CAJnB,CAFI;AAOTE,EAAAA,UAAU,EAAEhB,GAAG,CACZiB,KADS,GAETC,IAFS,CAEJ,kBAFI,EAEgBd,CAAC,CAAC,wCAAD,CAFjB,EAE8DU,KAAD,IAAWb,CAAC,CAACkB,MAAF,CAASL,KAAT,MAAoB,KAF5F,CAPH;AAUTM,EAAAA,IAAI,EAAEpB,GAAG,CACNO,MADG,GAEHC,QAFG,GAGHa,SAHG,CAGOjB,CAAC,CAAC,kCAAD,CAHR,EAIHK,QAJG,CAIML,CAAC,CAAC,kCAAD,CAJP,EAKHkB,GALG,CAKCpB,cAAc,CAACoB,GALhB,EAKqBlB,CAAC,CAAC,+BAAD,CALtB,EAMHmB,GANG,CAMCrB,cAAc,CAACqB,GANhB,EAMqBnB,CAAC,CAAC,+BAAD,CANtB,CAVG;AAiBToB,EAAAA,IAAI,EAAExB,GAAG,CAACO,MAAJ,GAAaC,QAAb,GAAwBC,QAAxB,CAAiCL,CAAC,CAAC,kCAAD,CAAlC;AAjBG,CAAX,CADF;;AAqBA,eAAeD,mBAAf","sourcesContent":["import * as yup from 'yup'\nimport _ from 'lodash'\nimport { itemMassFormat } from '@/utils/constant'\n\nimport type { TFunction } from 'next-i18next'\n\nconst getValidationSchema = (t: TFunction) =>\n  yup.object({\n    job_id: yup.number().nullable().required(t('validation_message.job_id_required')),\n    dpn: yup\n      .string()\n      .required(t('validation_message.dpn_required'))\n      .matches(/^(h|H)\\d{3}$/, t('validation_message.dpn_matches'))\n      .transform((value) => _.toUpper(value)),\n    drawing_id: yup\n      .mixed()\n      .test('drawing_required', t('validation_message.drawing_id_required'), (value) => _.isNull(value) === false),\n    mass: yup\n      .number()\n      .nullable()\n      .typeError(t('validation_message.mass_required'))\n      .required(t('validation_message.mass_required'))\n      .min(itemMassFormat.min, t('validation_message.mass_range'))\n      .max(itemMassFormat.max, t('validation_message.mass_range')),\n    unit: yup.number().nullable().required(t('validation_message.unit_required'))\n  })\n\nexport default getValidationSchema\n"]},"metadata":{},"sourceType":"module"}