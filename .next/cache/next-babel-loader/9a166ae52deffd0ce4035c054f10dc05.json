{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Material\\\\TabGeneral.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useFormContext } from 'react-hook-form';\nimport { useSelector } from 'react-redux';\nimport { Grid } from '@material-ui/core';\nimport { DataTable, AppAutocompleteAsync, FormControllerTextField, SectionTimezone, AppAutocomplete } from '@/components';\nimport { When } from 'react-if';\nimport { tagStore, commonStore } from '@/store/reducers';\n\nconst TabGeneral = () => {\n  var _specificationForm$er, _specificationForm$er2;\n\n  const specificationForm = useFormContext();\n  const specificationDetail = useSelector(tagStore.selectDetail);\n  const userJob = useSelector(commonStore.selectUserValueJob);\n\n  const handleChangeDrawingId = (event, optionValue) => {\n    console.warn('optionValue', '>>>', optionValue);\n  };\n\n  const columns = [_objectSpread(_objectSpread(_objectSpread({}, editCell('Quantity')), rightColumn), {}, {\n    field: 'quantity',\n    flex: 0.15,\n    sortable: false,\n\n    valueGetter(params) {\n      const item = _.find(watchItems, {\n        item_id: params.id\n      });\n\n      return (item === null || item === void 0 ? void 0 : item.quantity) || 0;\n    },\n\n    valueFormatter(params) {\n      return AppNumber.format(params.value, itemQuantityFormat);\n    },\n\n    renderEditCell(params) {\n      return /*#__PURE__*/_jsxDEV(DataTableNumberField, {\n        params: params,\n        onChangeValue: handleChangeQuantity,\n        rules: yup.number().nullable().required(t('validation_message.quantity_range')).min(itemQuantityFormat.min, t('validation_message.quantity_range')).max(itemQuantityFormat.max, t('validation_message.quantity_range'))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this);\n    }\n\n  }), _objectSpread(_objectSpread({}, rightColumn), {}, {\n    sortable: false,\n    field: 'mass',\n    headerName: 'Unit Mass (kg)',\n    flex: 0.15,\n\n    valueFormatter(params) {\n      return AppNumber.format(params.value, itemQuantityFormat);\n    }\n\n  })];\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          style: {\n            marginTop: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(AppAutocomplete, {\n            helperText: (_specificationForm$er = specificationForm.errors.job_id) === null || _specificationForm$er === void 0 ? void 0 : _specificationForm$er.message,\n            error: Boolean(specificationForm.errors.job_id),\n            value: userJob,\n            popupIcon: null,\n            disabled: true,\n            label: \"Job\",\n            required: true,\n            primaryKeyOption: \"value\",\n            options: [],\n            renderOption: option => option.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AppAutocompleteAsync, {\n            helperText: (_specificationForm$er2 = specificationForm.errors.drawing_id) === null || _specificationForm$er2 === void 0 ? void 0 : _specificationForm$er2.message,\n            error: Boolean(specificationForm.errors.drawing_id) // value={specificationDetail.drawing_id}\n            ,\n            compName: \"drawing_list\",\n            additionalData: {\n              limit_to_job: userJob.value\n            },\n            required: true,\n            label: \"Part #\",\n            onChange: handleChangeDrawingId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n            disabled: false,\n            control: specificationForm.control,\n            label: \"Description #\",\n            required: true,\n            name: \"spec_id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n            disabled: false,\n            control: specificationForm.control,\n            label: \"Mass kg\",\n            required: true,\n            name: \"spec_id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n            disabled: false,\n            control: specificationForm.control,\n            label: \"Unit #\",\n            name: \"spec_id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(When, {\n          condition: false,\n          children: /*#__PURE__*/_jsxDEV(SectionTimezone, {\n            value: specificationDetail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        hideFooter: true,\n        disableSelectionOnClick: true,\n        disableColumnMenu: true,\n        tableHeight: tableHeight,\n        rows: filteredLanguageList,\n        columns: columns,\n        onCellDoubleClick: onDbClickCell,\n        getRowClassName: getStylesRowDisabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\nexport default TabGeneral;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Material/TabGeneral.tsx"],"names":["useFormContext","useSelector","Grid","DataTable","AppAutocompleteAsync","FormControllerTextField","SectionTimezone","AppAutocomplete","When","tagStore","commonStore","TabGeneral","specificationForm","specificationDetail","selectDetail","userJob","selectUserValueJob","handleChangeDrawingId","event","optionValue","console","warn","columns","editCell","rightColumn","field","flex","sortable","valueGetter","params","item","_","find","watchItems","item_id","id","quantity","valueFormatter","AppNumber","format","value","itemQuantityFormat","renderEditCell","handleChangeQuantity","yup","number","nullable","required","t","min","max","headerName","marginTop","errors","job_id","message","Boolean","option","description","drawing_id","limit_to_job","control","tableHeight","filteredLanguageList","onDbClickCell","getStylesRowDisabled"],"mappings":"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","sourcesContent":["import { useFormContext } from 'react-hook-form'\nimport { useSelector } from 'react-redux'\n\nimport { Grid } from '@material-ui/core'\nimport {\n  DataTable,\n  AppAutocompleteAsync,\n  FormControllerTextField,\n  SectionTimezone,\n  AppAutocomplete\n} from '@/components'\nimport { When } from 'react-if'\n\nimport { tagStore, commonStore } from '@/store/reducers'\n\nimport type { SpecificationDetail } from '@/types/Specification'\nimport type { DataForDropdown } from '@/types/Common'\n\nconst TabGeneral = () => {\n  const specificationForm = useFormContext<SpecificationDetail>()\n\n  const specificationDetail = useSelector(tagStore.selectDetail)\n  const userJob = useSelector(commonStore.selectUserValueJob)\n\n  const handleChangeDrawingId = (event, optionValue: DataForDropdown) => {\n    console.warn('optionValue', '>>>', optionValue)\n  }\n\n  const columns: GridColumns = [\n    {\n      ...editCell('Quantity'),\n      ...rightColumn,\n      field: 'quantity',\n      flex: 0.15,\n      sortable: false,\n      valueGetter(params) {\n        const item = _.find(watchItems, { item_id: params.id }) as any\n        return item?.quantity || 0\n      },\n      valueFormatter(params) {\n        return AppNumber.format(params.value, itemQuantityFormat)\n      },\n      renderEditCell(params) {\n        return (\n          <DataTableNumberField\n            params={params}\n            onChangeValue={handleChangeQuantity}\n            rules={yup\n              .number()\n              .nullable()\n              .required(t('validation_message.quantity_range'))\n              .min(itemQuantityFormat.min, t('validation_message.quantity_range'))\n              .max(itemQuantityFormat.max, t('validation_message.quantity_range'))}\n          />\n        )\n      }\n    },\n    {\n      ...rightColumn,\n      sortable: false,\n      field: 'mass',\n      headerName: 'Unit Mass (kg)',\n      flex: 0.15,\n      valueFormatter(params) {\n        return AppNumber.format(params.value, itemQuantityFormat)\n      }\n    }\n  ]\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={6}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} style={{ marginTop: 8 }}>\n            <AppAutocomplete\n              helperText={specificationForm.errors.job_id?.message}\n              error={Boolean(specificationForm.errors.job_id)}\n              value={userJob}\n              popupIcon={null}\n              disabled\n              label=\"Job\"\n              required\n              primaryKeyOption=\"value\"\n              options={[]}\n              renderOption={(option) => option.description}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <AppAutocompleteAsync\n              helperText={specificationForm.errors.drawing_id?.message}\n              error={Boolean(specificationForm.errors.drawing_id)}\n              // value={specificationDetail.drawing_id}\n              compName=\"drawing_list\"\n              additionalData={{ limit_to_job: userJob.value }}\n              required\n              label=\"Part #\"\n              onChange={handleChangeDrawingId}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <FormControllerTextField\n              disabled={false}\n              control={specificationForm.control}\n              label=\"Description #\"\n              required\n              name=\"spec_id\"\n            />\n          </Grid>\n\n          <Grid item xs={6}>\n            <FormControllerTextField\n              disabled={false}\n              control={specificationForm.control}\n              label=\"Mass kg\"\n              required\n              name=\"spec_id\"\n            />\n          </Grid>\n\n          <Grid item xs={6}>\n            <FormControllerTextField\n              disabled={false}\n              control={specificationForm.control}\n              label=\"Unit #\"\n              name=\"spec_id\"\n            />\n          </Grid>\n\n          <When condition={false}>\n            <SectionTimezone value={specificationDetail} />\n          </When>\n        </Grid>\n      </Grid>\n\n      <Grid item xs={6}>\n        <DataTable\n          hideFooter\n          disableSelectionOnClick\n          disableColumnMenu\n          tableHeight={tableHeight}\n          rows={filteredLanguageList}\n          columns={columns}\n          onCellDoubleClick={onDbClickCell}\n          getRowClassName={getStylesRowDisabled}\n        />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default TabGeneral\n"]},"metadata":{},"sourceType":"module"}