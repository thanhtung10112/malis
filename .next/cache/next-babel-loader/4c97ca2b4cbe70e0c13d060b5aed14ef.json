{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Fersher\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Job\\\\CreateEdit\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useMemo, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'next-i18next';\nimport { DialogMain, AppTabHistoryLog, FormControllerTabs, BtnHelp } from '@/components';\nimport TabGeneral from '../TabGeneral';\nimport TabAdditionalInfo from '../TabAdditionalInfo';\nimport TabOthers from '../TabOthers';\nimport Context from '../Context';\nimport _ from 'lodash';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { jobStore } from '@/store/reducers';\nimport * as constant from '@/utils/constant';\nimport getValidationSchema from '../validationSchema';\n\nfunction DialogJobCreateEdit() {\n  _s();\n\n  var _useTranslation = useTranslation('job'),\n      t = _useTranslation.t;\n\n  var validationSchema = useMemo(function () {\n    return getValidationSchema(t);\n  }, []);\n\n  var _useState = useState(0),\n      tab = _useState[0],\n      setTab = _useState[1];\n\n  var jobForm = useForm({\n    shouldUnregister: false,\n    resolver: yupResolver(validationSchema)\n  });\n  var dispatch = useDispatch();\n  var dialogState = useSelector(jobStore.selectDialogState);\n  var jobDetail = useSelector(jobStore.selectDetail);\n  var permissions = useSelector(jobStore.selectPermissions);\n\n  var _useSelector = useSelector(jobStore.selectInitDataForCE),\n      wiki_page = _useSelector.wiki_page;\n\n  var isCreating = _.isNil(jobDetail.id);\n\n  useEffect(function () {\n    jobForm.reset(_objectSpread({}, jobDetail));\n    setTab(0);\n    dispatch(jobStore.actions.setTransferListUserGroup([]));\n  }, [jobDetail]);\n\n  var onCloseCreateEditDialog = function onCloseCreateEditDialog() {\n    jobForm.clearErrors();\n    dispatch(jobStore.sagaCloseDialog());\n  };\n\n  var onSubmitJobData = jobForm.handleSubmit(function (data) {\n    var payload = _.omit(data, [].concat(_toConsumableArray(constant.removalProperties), ['category', 'malis_version']));\n\n    payload.job_expediting_dates = payload.job_expediting_dates.map(function (exDate) {\n      if (_.isString(exDate.id)) {\n        return _.omit(exDate, 'id');\n      }\n\n      return exDate;\n    });\n    payload.job_currencies = payload.job_currencies.map(function (currency) {\n      return {\n        currency_id: currency.id,\n        rate: Number(currency.rate)\n      };\n    });\n    payload.job_standard = payload.job_standard.map(function (job) {\n      return _.omit(job, 'status');\n    });\n    var formData = new FormData();\n    formData.append('job_info', JSON.stringify(_.omit(payload, 'logo')));\n\n    if (payload.logo) {\n      formData.append('logo', payload.logo);\n    }\n\n    if (isCreating) {\n      dispatch(jobStore.sagaCreate(formData));\n    } else {\n      dispatch(jobStore.sagaUpdate({\n        id: data.id,\n        formData: formData\n      }));\n    }\n  });\n\n  var onChangeTab = function onChangeTab(_, nextTab) {\n    setTab(nextTab);\n  };\n\n  var handleChangeHistoryLogs = function handleChangeHistoryLogs(data) {\n    dispatch(jobStore.actions.setHistoryLogs(data));\n  };\n\n  var generalTab = {\n    label: t('common:tab.general'),\n    panel: /*#__PURE__*/_jsxDEV(TabGeneral, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 12\n    }, this),\n    errorKey: ['job_id', 'language', 'equipment_type', 'erection_site', 'people_responsible', 'squad_leader', 'job_users']\n  };\n  var additionalInfoTab = {\n    label: t('form.tab.additional_info'),\n    panel: /*#__PURE__*/_jsxDEV(TabAdditionalInfo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 12\n    }, this)\n  };\n  var otherTab = {\n    label: t('common:tab.others'),\n    panel: /*#__PURE__*/_jsxDEV(TabOthers, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 12\n    }, this),\n    errorKey: ['contract_no', 'contract_desc', 'credit_letter', 'logo']\n  };\n  var historyTab = {\n    label: t('common:tab.history'),\n    disabled: isCreating,\n    panel: /*#__PURE__*/_jsxDEV(AppTabHistoryLog, {\n      isOpenDialog: dialogState.open,\n      data: dialogState.historyLogs,\n      onChange: handleChangeHistoryLogs,\n      entityId: jobDetail.id,\n      mode: \"horizonatal\",\n      tableHeight: 390,\n      descriptionRows: 25,\n      entity: \"job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  };\n  var tabs = [generalTab, additionalInfoTab, otherTab, historyTab];\n  return /*#__PURE__*/_jsxDEV(DialogMain, {\n    open: dialogState.open,\n    loading: dialogState.loading,\n    fullWidth: true,\n    maxWidth: \"md\",\n    title: /*#__PURE__*/_jsxDEV(BtnHelp, {\n      title: isCreating ? t('form.title.create_job') : t('form.title.update_job'),\n      href: wiki_page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 14\n    }, this),\n    onOk: onSubmitJobData,\n    onClose: onCloseCreateEditDialog,\n    height: 470,\n    okButtonProps: {\n      disabled: dialogState.loading || !(permissions === null || permissions === void 0 ? void 0 : permissions.edit) && !isCreating\n    },\n    okText: isCreating ? t('common:button.create') : t('common:button.update'),\n    children: /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: {\n        isCreating: isCreating\n      },\n      children: /*#__PURE__*/_jsxDEV(FormControllerTabs, {\n        value: tab,\n        onChange: onChangeTab,\n        form: jobForm,\n        tabs: tabs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DialogJobCreateEdit, \"WWuQZbNAQEoNaQyCrk4HudIM+nk=\", false, function () {\n  return [useTranslation, useForm, useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = DialogJobCreateEdit;\nexport default DialogJobCreateEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogJobCreateEdit\");","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Job/CreateEdit/index.tsx"],"names":["useState","useMemo","useEffect","useForm","useSelector","useDispatch","useTranslation","DialogMain","AppTabHistoryLog","FormControllerTabs","BtnHelp","TabGeneral","TabAdditionalInfo","TabOthers","Context","_","yupResolver","jobStore","constant","getValidationSchema","DialogJobCreateEdit","t","validationSchema","tab","setTab","jobForm","shouldUnregister","resolver","dispatch","dialogState","selectDialogState","jobDetail","selectDetail","permissions","selectPermissions","selectInitDataForCE","wiki_page","isCreating","isNil","id","reset","actions","setTransferListUserGroup","onCloseCreateEditDialog","clearErrors","sagaCloseDialog","onSubmitJobData","handleSubmit","data","payload","omit","removalProperties","job_expediting_dates","map","exDate","isString","job_currencies","currency","currency_id","rate","Number","job_standard","job","formData","FormData","append","JSON","stringify","logo","sagaCreate","sagaUpdate","onChangeTab","nextTab","handleChangeHistoryLogs","setHistoryLogs","generalTab","label","panel","errorKey","additionalInfoTab","otherTab","historyTab","disabled","open","historyLogs","tabs","loading","edit"],"mappings":"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","sourcesContent":["import { useState, useMemo, useEffect } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useTranslation } from 'next-i18next'\n\nimport { DialogMain, AppTabHistoryLog, FormControllerTabs, BtnHelp } from '@/components'\n\nimport TabGeneral from '../TabGeneral'\nimport TabAdditionalInfo from '../TabAdditionalInfo'\nimport TabOthers from '../TabOthers'\nimport Context from '../Context'\n\nimport _ from 'lodash'\nimport { yupResolver } from '@hookform/resolvers/yup'\n\nimport { jobStore } from '@/store/reducers'\nimport * as constant from '@/utils/constant'\nimport getValidationSchema from '../validationSchema'\n\nimport type { JobDetail } from '@/types/Job'\nimport type { HistoryLog } from '@/types/Common'\n\nfunction DialogJobCreateEdit() {\n  const { t } = useTranslation('job')\n  const validationSchema = useMemo(() => getValidationSchema(t), [])\n\n  const [tab, setTab] = useState(0)\n\n  const jobForm = useForm<JobDetail>({\n    shouldUnregister: false,\n    resolver: yupResolver(validationSchema)\n  })\n\n  const dispatch = useDispatch()\n  const dialogState = useSelector(jobStore.selectDialogState)\n  const jobDetail = useSelector(jobStore.selectDetail)\n  const permissions = useSelector(jobStore.selectPermissions)\n  const { wiki_page } = useSelector(jobStore.selectInitDataForCE)\n\n  const isCreating = _.isNil(jobDetail.id)\n\n  useEffect(() => {\n    jobForm.reset({\n      ...jobDetail\n    })\n    setTab(0)\n    dispatch(jobStore.actions.setTransferListUserGroup([]))\n  }, [jobDetail])\n\n  const onCloseCreateEditDialog = () => {\n    jobForm.clearErrors()\n    dispatch(jobStore.sagaCloseDialog())\n  }\n\n  const onSubmitJobData = jobForm.handleSubmit((data) => {\n    const payload = _.omit(data, [...constant.removalProperties, 'category', 'malis_version'])\n\n    payload.job_expediting_dates = payload.job_expediting_dates.map((exDate) => {\n      if (_.isString(exDate.id)) {\n        return _.omit(exDate, 'id')\n      }\n      return exDate\n    })\n\n    payload.job_currencies = payload.job_currencies.map((currency) => ({\n      currency_id: currency.id,\n      rate: Number(currency.rate)\n    })) as any\n\n    payload.job_standard = payload.job_standard.map((job) => _.omit(job, 'status'))\n\n    const formData = new FormData()\n    formData.append('job_info', JSON.stringify(_.omit(payload, 'logo')))\n    if (payload.logo) {\n      formData.append('logo', payload.logo)\n    }\n\n    if (isCreating) {\n      dispatch(jobStore.sagaCreate(formData))\n    } else {\n      dispatch(jobStore.sagaUpdate({ id: data.id, formData }))\n    }\n  })\n\n  const onChangeTab = (_, nextTab: number) => {\n    setTab(nextTab)\n  }\n\n  const handleChangeHistoryLogs = (data: HistoryLog[]) => {\n    dispatch(jobStore.actions.setHistoryLogs(data))\n  }\n\n  const generalTab = {\n    label: t('common:tab.general'),\n    panel: <TabGeneral />,\n    errorKey: [\n      'job_id',\n      'language',\n      'equipment_type',\n      'erection_site',\n      'people_responsible',\n      'squad_leader',\n      'job_users'\n    ]\n  }\n\n  const additionalInfoTab = {\n    label: t('form.tab.additional_info'),\n    panel: <TabAdditionalInfo />\n  }\n\n  const otherTab = {\n    label: t('common:tab.others'),\n    panel: <TabOthers />,\n    errorKey: ['contract_no', 'contract_desc', 'credit_letter', 'logo']\n  }\n\n  const historyTab = {\n    label: t('common:tab.history'),\n    disabled: isCreating,\n    panel: (\n      <AppTabHistoryLog\n        isOpenDialog={dialogState.open}\n        data={dialogState.historyLogs}\n        onChange={handleChangeHistoryLogs}\n        entityId={jobDetail.id}\n        mode=\"horizonatal\"\n        tableHeight={390}\n        descriptionRows={25}\n        entity=\"job\"\n      />\n    )\n  }\n\n  const tabs = [generalTab, additionalInfoTab, otherTab, historyTab]\n\n  return (\n    <DialogMain\n      open={dialogState.open}\n      loading={dialogState.loading}\n      fullWidth\n      maxWidth=\"md\"\n      title={<BtnHelp title={isCreating ? t('form.title.create_job') : t('form.title.update_job')} href={wiki_page} />}\n      onOk={onSubmitJobData}\n      onClose={onCloseCreateEditDialog}\n      height={470}\n      okButtonProps={{\n        disabled: dialogState.loading || (!permissions?.edit && !isCreating)\n      }}\n      okText={isCreating ? t('common:button.create') : t('common:button.update')}\n    >\n      <Context.Provider value={{ isCreating }}>\n        <FormControllerTabs value={tab} onChange={onChangeTab} form={jobForm} tabs={tabs} />\n      </Context.Provider>\n    </DialogMain>\n  )\n}\n\nexport default DialogJobCreateEdit\n"]},"metadata":{},"sourceType":"module"}