{"ast":null,"code":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { call, put, takeEvery, select, takeLatest, all } from 'redux-saga/effects';\nimport _ from 'lodash';\nimport { makeAListActions, exportProcessDialogActions, commonStore } from '@/store/reducers';\nimport { removalProperties } from '@/utils/constant';\nimport malApi from '@/apis/makeAList.api';\nimport { StatusCode } from '@/utils/StatusCode';\n\nfunction* getEntityFromStore() {\n  const entity = yield select(commonStore.selectEntity);\n  return entity;\n}\n\nfunction* fetchPresetList(filterType = '') {\n  let type = filterType;\n\n  if (!type) {\n    type = yield select(state => state.makeAList.filterType);\n  }\n\n  const entity = yield getEntityFromStore();\n  const {\n    make_a_list_preset_list\n  } = yield call(malApi.getList, {\n    entity,\n    type\n  });\n  yield put(makeAListActions.setPresetList(make_a_list_preset_list));\n}\n\nfunction* fetchPresetDetail(id) {\n  const {\n    make_a_list_preset\n  } = yield call(malApi.getDetail, id);\n  const filterType = yield select(makeAListActions.selectFilterType);\n\n  if (filterType === 'shared') {\n    make_a_list_preset.is_user_default = false;\n  }\n\n  yield put(makeAListActions.setPresetDetail(make_a_list_preset));\n}\n\nfunction* fetchInitDataForCreateUpdate() {\n  const entity = yield getEntityFromStore();\n  const data = yield call(malApi.getInitDataForCE, entity);\n  yield put(makeAListActions.setInitData(data));\n}\n\nfunction* fetchInitDataForList(isSetPresetDetail) {\n  const entity = yield getEntityFromStore();\n  const {\n    current_default_preset,\n    system_default_preset,\n    permissions: {\n      make_a_list\n    }\n  } = yield call(malApi.getInitDataForList, entity);\n  yield all([put(makeAListActions.setPresetDefault(current_default_preset)), put(makeAListActions.setSystemPreset(system_default_preset)), put(makeAListActions.setPermissions(make_a_list))]);\n  isSetPresetDetail && (yield put(makeAListActions.setPresetDetail(current_default_preset)));\n}\n\nfunction* changeFilterType({\n  payload: filterType\n}) {\n  yield put(makeAListActions.setLoadingTable(true));\n\n  try {\n    yield call(fetchPresetList, filterType);\n    yield put(makeAListActions.setFilterType(filterType));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(makeAListActions.setLoadingTable(false));\n}\n\nfunction* open() {\n  yield put(commonStore.actions.setLoadingPage(true));\n  const entity = yield getEntityFromStore();\n\n  try {\n    const {\n      success\n    } = yield call(malApi.checkPermissions, entity);\n\n    if (success) {\n      yield all([call(fetchPresetList), call(fetchInitDataForList, true), call(fetchInitDataForCreateUpdate)]);\n      yield put(makeAListActions.setOpen(true));\n    }\n  } catch (error) {\n    const {\n      message\n    } = error;\n    yield put(commonStore.actions.setErrorMessage(message));\n    yield put({\n      type: `${entity}/setPermissions`,\n      payload: {\n        make_a_list: false\n      }\n    });\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* create({\n  payload\n}) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    const {\n      id,\n      created_at,\n      created_by,\n      updated_at,\n      updated_by,\n      is_system_default\n    } = payload,\n          presetDetail = _objectWithoutProperties(payload, [\"id\", \"created_at\", \"created_by\", \"updated_at\", \"updated_by\", \"is_system_default\"]);\n\n    const data = yield call(malApi.create, presetDetail);\n    yield all([call(fetchPresetDetail, data.id), call(fetchPresetList), call(fetchInitDataForList, false), put(commonStore.actions.setSuccessMessage(data.message)), put(makeAListActions.setIsEditMode(true)), put(makeAListActions.setMalForm({\n      clearError: true,\n      error: ''\n    }))]);\n  } catch (error) {\n    const {\n      message,\n      status\n    } = error;\n\n    if (status === StatusCode.BAD_REQUEST) {\n      yield put(makeAListActions.setMalForm({\n        error: message\n      }));\n    } else {\n      yield put(commonStore.actions.setError(error));\n    }\n  }\n\n  yield put(makeAListActions.setMalForm({\n    clearError: false,\n    error: ''\n  }));\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* update({\n  payload\n}) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    const presetDetail = _.omit(payload, [...removalProperties, 'is_system_default', 'is_shared']);\n\n    const {\n      message\n    } = yield call(malApi.update, payload.id, presetDetail);\n    yield all([call(fetchPresetList), call(fetchInitDataForList, false), put(commonStore.actions.setSuccessMessage(message)), put(makeAListActions.setMalForm({\n      clearError: true,\n      error: ''\n    }))]);\n  } catch (error) {\n    const {\n      message,\n      status\n    } = error;\n\n    if (status === StatusCode.BAD_REQUEST) {\n      yield put(makeAListActions.setMalForm({\n        error: message\n      }));\n    } else {\n      yield put(commonStore.actions.setError(error));\n    }\n  }\n\n  yield put(makeAListActions.setMalForm({\n    clearError: false,\n    error: ''\n  }));\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* getList() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchPresetList);\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* getDetail({\n  payload: id\n}) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchPresetDetail, id);\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* share({\n  payload\n}) {\n  yield put(makeAListActions.setLoadingTable(true));\n\n  try {\n    const {\n      id,\n      shared\n    } = payload;\n    const {\n      message\n    } = yield call(malApi.share, id, shared);\n    yield call(fetchPresetList);\n    yield put(commonStore.actions.setSuccessMessage(message));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(makeAListActions.setLoadingTable(false));\n}\n\nfunction* remove() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    const {\n      id\n    } = yield select(makeAListActions.selectPresetDetail);\n    const {\n      message\n    } = yield call(malApi.remove, id);\n    yield all([call(fetchPresetList), call(fetchInitDataForList, true)]);\n    yield put(commonStore.actions.setSuccessMessage(message));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* clearDefault() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    const entity = yield getEntityFromStore();\n    const {\n      message\n    } = yield call(malApi.clearDefault, entity);\n    yield call(fetchInitDataForList, true);\n    yield put(commonStore.actions.setSuccessMessage(message));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* startMakeAListExport(exportEvent) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    const exportDetails = exportEvent.payload;\n    const entity = yield getEntityFromStore();\n    const requestData = {\n      entity: entity,\n      destination: exportDetails.destination,\n      columns_displayed: exportDetails.displayedColumns,\n      where_conditions: exportDetails.whereCondtions,\n      sort_conditions: exportDetails.sortConditions,\n      distinct: exportDetails.distinct,\n      ignore_case: exportDetails.ignoreCase\n    };\n    const data = yield call(malApi.startMakeAListExport, requestData);\n\n    if (data.success) {\n      if (data.result_path) {\n        const domain = process.env.NEXT_PUBLIC_BACKEND_URL || 'http://localhost:5000/';\n        const redirectUrl = `${domain}${data.result_path}`;\n        window.open(redirectUrl);\n      } else {\n        yield put(exportProcessDialogActions.setOperationId(data.operation_id));\n        yield put(exportProcessDialogActions.setCeleryId(data.celery_id));\n        yield put(exportProcessDialogActions.setOpen(true));\n      }\n    }\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* stopMakeAListExport(operationData) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    const requestData = operationData.payload;\n    const data = yield call(malApi.stopMakeAListExport, requestData);\n\n    if (data.success) {\n      put(commonStore.actions.setSuccessMessage(data.message));\n      put(exportProcessDialogActions.setOpen(false));\n    }\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* saveAs({\n  payload\n}) {\n  yield put(makeAListActions.setLoadingDialog(true));\n\n  try {\n    const {\n      id,\n      created_at,\n      created_by,\n      updated_at,\n      updated_by,\n      is_system_default\n    } = payload,\n          presetDetail = _objectWithoutProperties(payload, [\"id\", \"created_at\", \"created_by\", \"updated_at\", \"updated_by\", \"is_system_default\"]);\n\n    const data = yield call(malApi.create, presetDetail);\n    yield all([call(fetchPresetDetail, data.id), call(fetchPresetList), call(fetchInitDataForList, false), put(commonStore.actions.setSuccessMessage(data.message)), put(makeAListActions.setIsEditMode(true)), put(makeAListActions.setSaveAsForm({\n      open: false,\n      clearError: true,\n      error: ''\n    }))]);\n  } catch (error) {\n    const {\n      message,\n      status\n    } = error;\n\n    if (status === StatusCode.BAD_REQUEST) {\n      yield put(makeAListActions.setSaveAsForm({\n        error: message\n      }));\n    } else {\n      yield put(commonStore.actions.setError(error));\n    }\n  }\n\n  yield put(makeAListActions.setSaveAsForm({\n    clearError: false,\n    error: ''\n  }));\n  yield put(makeAListActions.setLoadingDialog(false));\n}\n\nfunction* makeAListSaga() {\n  yield takeEvery(makeAListActions.create, create);\n  yield takeEvery(makeAListActions.getList, getList);\n  yield takeEvery(makeAListActions.getDetail, getDetail);\n  yield takeEvery(makeAListActions.share, share);\n  yield takeEvery(makeAListActions.update, update);\n  yield takeLatest(makeAListActions.remove, remove);\n  yield takeLatest(makeAListActions.open, open);\n  yield takeLatest(makeAListActions.clearDefault, clearDefault);\n  yield takeLatest(makeAListActions.exportMakeAList, startMakeAListExport);\n  yield takeLatest(makeAListActions.changeFilterType, changeFilterType);\n  yield takeLatest(makeAListActions.saveAs, saveAs);\n  yield takeLatest(makeAListActions.stopMakeAList, stopMakeAListExport);\n}\n\nexport default makeAListSaga;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/saga/makeAListSaga.ts"],"names":["call","put","takeEvery","select","takeLatest","all","_","makeAListActions","exportProcessDialogActions","commonStore","removalProperties","malApi","StatusCode","getEntityFromStore","entity","selectEntity","fetchPresetList","filterType","type","state","makeAList","make_a_list_preset_list","getList","setPresetList","fetchPresetDetail","id","make_a_list_preset","getDetail","selectFilterType","is_user_default","setPresetDetail","fetchInitDataForCreateUpdate","data","getInitDataForCE","setInitData","fetchInitDataForList","isSetPresetDetail","current_default_preset","system_default_preset","permissions","make_a_list","getInitDataForList","setPresetDefault","setSystemPreset","setPermissions","changeFilterType","payload","setLoadingTable","setFilterType","error","actions","setError","open","setLoadingPage","success","checkPermissions","setOpen","message","setErrorMessage","create","created_at","created_by","updated_at","updated_by","is_system_default","presetDetail","setSuccessMessage","setIsEditMode","setMalForm","clearError","status","BAD_REQUEST","update","omit","share","shared","remove","selectPresetDetail","clearDefault","startMakeAListExport","exportEvent","exportDetails","requestData","destination","columns_displayed","displayedColumns","where_conditions","whereCondtions","sort_conditions","sortConditions","distinct","ignore_case","ignoreCase","result_path","domain","process","env","NEXT_PUBLIC_BACKEND_URL","redirectUrl","window","setOperationId","operation_id","setCeleryId","celery_id","stopMakeAListExport","operationData","saveAs","setLoadingDialog","setSaveAsForm","makeAListSaga","exportMakeAList","stopMakeAList"],"mappings":"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","sourcesContent":["import { call, put, takeEvery, select, takeLatest, all } from 'redux-saga/effects'\nimport _ from 'lodash'\n\nimport { makeAListActions, exportProcessDialogActions, commonStore } from '@/store/reducers'\n\nimport { removalProperties } from '@/utils/constant'\nimport malApi from '@/apis/makeAList.api'\nimport { StatusCode } from '@/utils/StatusCode'\n\nfunction* getEntityFromStore() {\n  const entity = yield select(commonStore.selectEntity)\n  return entity\n}\n\nfunction* fetchPresetList(filterType = '') {\n  let type = filterType\n  if (!type) {\n    type = yield select((state) => state.makeAList.filterType)\n  }\n  const entity = yield getEntityFromStore()\n  const { make_a_list_preset_list } = yield call(malApi.getList, {\n    entity,\n    type\n  })\n  yield put(makeAListActions.setPresetList(make_a_list_preset_list))\n}\n\nfunction* fetchPresetDetail(id) {\n  const { make_a_list_preset } = yield call(malApi.getDetail, id)\n  const filterType = yield select(makeAListActions.selectFilterType)\n  if (filterType === 'shared') {\n    make_a_list_preset.is_user_default = false\n  }\n  yield put(makeAListActions.setPresetDetail(make_a_list_preset))\n}\n\nfunction* fetchInitDataForCreateUpdate() {\n  const entity = yield getEntityFromStore()\n  const data = yield call(malApi.getInitDataForCE, entity)\n  yield put(makeAListActions.setInitData(data))\n}\n\nfunction* fetchInitDataForList(isSetPresetDetail) {\n  const entity = yield getEntityFromStore()\n  const {\n    current_default_preset,\n    system_default_preset,\n    permissions: { make_a_list }\n  } = yield call(malApi.getInitDataForList, entity)\n  yield all([\n    put(makeAListActions.setPresetDefault(current_default_preset)),\n    put(makeAListActions.setSystemPreset(system_default_preset)),\n    put(makeAListActions.setPermissions(make_a_list))\n  ])\n  isSetPresetDetail && (yield put(makeAListActions.setPresetDetail(current_default_preset)))\n}\n\nfunction* changeFilterType({ payload: filterType }) {\n  yield put(makeAListActions.setLoadingTable(true))\n  try {\n    yield call(fetchPresetList, filterType)\n    yield put(makeAListActions.setFilterType(filterType))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(makeAListActions.setLoadingTable(false))\n}\n\nfunction* open() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  const entity = yield getEntityFromStore()\n\n  try {\n    const { success } = yield call(malApi.checkPermissions, entity)\n    if (success) {\n      yield all([call(fetchPresetList), call(fetchInitDataForList, true), call(fetchInitDataForCreateUpdate)])\n\n      yield put(makeAListActions.setOpen(true))\n    }\n  } catch (error) {\n    const { message } = error\n    yield put(commonStore.actions.setErrorMessage(message))\n    yield put({\n      type: `${entity}/setPermissions`,\n      payload: { make_a_list: false }\n    })\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* create({ payload }: ReturnType<typeof makeAListActions.create>) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    const { id, created_at, created_by, updated_at, updated_by, is_system_default, ...presetDetail } = payload\n    const data = yield call(malApi.create, presetDetail)\n    yield all([\n      call(fetchPresetDetail, data.id),\n      call(fetchPresetList),\n      call(fetchInitDataForList, false),\n      put(commonStore.actions.setSuccessMessage(data.message)),\n      put(makeAListActions.setIsEditMode(true)),\n      put(\n        makeAListActions.setMalForm({\n          clearError: true,\n          error: ''\n        })\n      )\n    ])\n  } catch (error) {\n    const { message, status } = error\n    if (status === StatusCode.BAD_REQUEST) {\n      yield put(makeAListActions.setMalForm({ error: message }))\n    } else {\n      yield put(commonStore.actions.setError(error))\n    }\n  }\n  yield put(makeAListActions.setMalForm({ clearError: false, error: '' }))\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* update({ payload }: ReturnType<typeof makeAListActions.update>) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    const presetDetail = _.omit(payload, [...removalProperties, 'is_system_default', 'is_shared'])\n    const { message } = yield call(malApi.update, payload.id, presetDetail)\n    yield all([\n      call(fetchPresetList),\n      call(fetchInitDataForList, false),\n      put(commonStore.actions.setSuccessMessage(message)),\n      put(\n        makeAListActions.setMalForm({\n          clearError: true,\n          error: ''\n        })\n      )\n    ])\n  } catch (error) {\n    const { message, status } = error\n    if (status === StatusCode.BAD_REQUEST) {\n      yield put(makeAListActions.setMalForm({ error: message }))\n    } else {\n      yield put(commonStore.actions.setError(error))\n    }\n  }\n  yield put(makeAListActions.setMalForm({ clearError: false, error: '' }))\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* getList() {\n  yield put(commonStore.actions.setLoadingPage(true))\n\n  try {\n    yield call(fetchPresetList)\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* getDetail({ payload: id }) {\n  yield put(commonStore.actions.setLoadingPage(true))\n\n  try {\n    yield call(fetchPresetDetail, id)\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* share({ payload }: ReturnType<typeof makeAListActions.share>) {\n  yield put(makeAListActions.setLoadingTable(true))\n  try {\n    const { id, shared } = payload\n    const { message } = yield call(malApi.share, id, shared)\n    yield call(fetchPresetList)\n    yield put(commonStore.actions.setSuccessMessage(message))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(makeAListActions.setLoadingTable(false))\n}\n\nfunction* remove() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    const { id } = yield select(makeAListActions.selectPresetDetail)\n    const { message } = yield call(malApi.remove, id)\n    yield all([call(fetchPresetList), call(fetchInitDataForList, true)])\n    yield put(commonStore.actions.setSuccessMessage(message))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* clearDefault() {\n  yield put(commonStore.actions.setLoadingPage(true))\n\n  try {\n    const entity = yield getEntityFromStore()\n    const { message } = yield call(malApi.clearDefault, entity)\n    yield call(fetchInitDataForList, true)\n    yield put(commonStore.actions.setSuccessMessage(message))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* startMakeAListExport(exportEvent) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    const exportDetails = exportEvent.payload\n    const entity = yield getEntityFromStore()\n    const requestData = {\n      entity: entity,\n      destination: exportDetails.destination,\n      columns_displayed: exportDetails.displayedColumns,\n      where_conditions: exportDetails.whereCondtions,\n      sort_conditions: exportDetails.sortConditions,\n      distinct: exportDetails.distinct,\n      ignore_case: exportDetails.ignoreCase\n    }\n    const data = yield call(malApi.startMakeAListExport, requestData)\n    if (data.success) {\n      if (data.result_path) {\n        const domain = process.env.NEXT_PUBLIC_BACKEND_URL || 'http://localhost:5000/'\n        const redirectUrl = `${domain}${data.result_path}`\n        window.open(redirectUrl)\n      } else {\n        yield put(exportProcessDialogActions.setOperationId(data.operation_id))\n        yield put(exportProcessDialogActions.setCeleryId(data.celery_id))\n        yield put(exportProcessDialogActions.setOpen(true))\n      }\n    }\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* stopMakeAListExport(operationData) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    const requestData = operationData.payload\n    const data = yield call(malApi.stopMakeAListExport, requestData)\n    if (data.success) {\n      put(commonStore.actions.setSuccessMessage(data.message))\n      put(exportProcessDialogActions.setOpen(false))\n    }\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* saveAs({ payload }: ReturnType<typeof makeAListActions.saveAs>) {\n  yield put(makeAListActions.setLoadingDialog(true))\n  try {\n    const { id, created_at, created_by, updated_at, updated_by, is_system_default, ...presetDetail } = payload\n    const data = yield call(malApi.create, presetDetail)\n    yield all([\n      call(fetchPresetDetail, data.id),\n      call(fetchPresetList),\n      call(fetchInitDataForList, false),\n      put(commonStore.actions.setSuccessMessage(data.message)),\n      put(makeAListActions.setIsEditMode(true)),\n      put(\n        makeAListActions.setSaveAsForm({\n          open: false,\n          clearError: true,\n          error: ''\n        })\n      )\n    ])\n  } catch (error) {\n    const { message, status } = error\n    if (status === StatusCode.BAD_REQUEST) {\n      yield put(makeAListActions.setSaveAsForm({ error: message }))\n    } else {\n      yield put(commonStore.actions.setError(error))\n    }\n  }\n  yield put(makeAListActions.setSaveAsForm({ clearError: false, error: '' }))\n  yield put(makeAListActions.setLoadingDialog(false))\n}\n\nfunction* makeAListSaga() {\n  yield takeEvery(makeAListActions.create, create)\n  yield takeEvery(makeAListActions.getList, getList)\n  yield takeEvery(makeAListActions.getDetail, getDetail)\n  yield takeEvery(makeAListActions.share, share)\n  yield takeEvery(makeAListActions.update, update)\n  yield takeLatest(makeAListActions.remove, remove)\n  yield takeLatest(makeAListActions.open, open)\n  yield takeLatest(makeAListActions.clearDefault, clearDefault)\n  yield takeLatest(makeAListActions.exportMakeAList, startMakeAListExport)\n  yield takeLatest(makeAListActions.changeFilterType, changeFilterType)\n  yield takeLatest(makeAListActions.saveAs, saveAs)\n  yield takeLatest(makeAListActions.stopMakeAList, stopMakeAListExport)\n}\n\nexport default makeAListSaga\n"]},"metadata":{},"sourceType":"module"}