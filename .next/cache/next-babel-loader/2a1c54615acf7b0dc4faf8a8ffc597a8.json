{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { Typography, Tooltip } from '@material-ui/core';\nimport { AppAutocomplete } from '@/components';\nimport _ from 'lodash';\nimport striptags from 'striptags';\nimport parseHTML from 'html-react-parser';\nimport isHTML from '@/utils/isHTML';\nimport HttpService from '@/helper/HttpService';\n\nvar AppAutocompleteAsync = function AppAutocompleteAsync(props) {\n  var compName = props.compName,\n      additionalData = props.additionalData,\n      onChange = props.onChange,\n      defaultOptions = props.defaultOptions,\n      autoCompleteProps = _objectWithoutProperties(props, [\"compName\", \"additionalData\", \"onChange\", \"defaultOptions\"]);\n\n  var httpService = new HttpService('');\n\n  var _useState = useState([]),\n      dataOptions = _useState[0],\n      setDataOptions = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(''),\n      valueInput = _useState3[0],\n      setValueInput = _useState3[1];\n\n  useEffect(function () {\n    setDataOptions(defaultOptions);\n  }, [defaultOptions]);\n\n  var getOptionLabel = function getOptionLabel(_ref) {\n    var description = _ref.description,\n        entity_id = _ref.entity_id;\n    return description ? \"\".concat(entity_id, \" - \").concat(description) : entity_id;\n  };\n\n  var renderOption = function renderOption(_ref2) {\n    var description = _ref2.description,\n        entity_id = _ref2.entity_id;\n\n    if (!description) {\n      return entity_id;\n    }\n\n    if (isHTML(description)) {\n      var htmlContent = parseHTML(_.toString(description));\n      var pureContent = striptags(description);\n      return /*#__PURE__*/_jsx(Tooltip, {\n        title: htmlContent,\n        children: /*#__PURE__*/_jsx(Typography, {\n          noWrap: true,\n          children: \"\".concat(entity_id, \" - \").concat(pureContent)\n        })\n      });\n    }\n\n    return /*#__PURE__*/_jsx(Typography, {\n      noWrap: true,\n      children: \"\".concat(entity_id, \" - \").concat(description)\n    });\n  };\n\n  var handleInputDropdown = function handleInputDropdown(event, value, reason) {\n    if (reason === 'input') {\n      setValueInput(value);\n      setDataOptions([]);\n    }\n  };\n\n  var handleKeypress = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(event.which === 13)) {\n                _context.next = 13;\n                break;\n              }\n\n              setLoading(true);\n              _context.prev = 2;\n              _context.next = 5;\n              return httpService.get('data_for_dd', {\n                comp_name: compName,\n                additional_data: JSON.stringify(additionalData),\n                s: valueInput\n              });\n\n            case 5:\n              data = _context.sent;\n              setDataOptions(data.data_for_dd);\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              console.error('error', '>>>', _context.t0);\n\n            case 12:\n              setLoading(false);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 9]]);\n    }));\n\n    return function handleKeypress(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleSelectOption = function handleSelectOption(event, option, reason, details) {\n    onChange(event, option, reason, details);\n  };\n\n  return /*#__PURE__*/_jsx(AppAutocomplete, _objectSpread({\n    loading: loading,\n    options: dataOptions,\n    onInputChange: handleInputDropdown,\n    renderOption: renderOption,\n    getOptionLabel: getOptionLabel,\n    onChange: handleSelectOption,\n    onKeyPress: handleKeypress\n  }, autoCompleteProps));\n};\n\nAppAutocompleteAsync.defaultProps = {\n  additionalData: {},\n  defaultOptions: [],\n  disableClearable: true,\n  primaryKeyOption: 'value'\n};\nexport default AppAutocompleteAsync;","map":null,"metadata":{},"sourceType":"module"}