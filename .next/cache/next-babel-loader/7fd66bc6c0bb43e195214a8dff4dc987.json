{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState, useMemo, useEffect } from 'react';\nimport { Tabs, Tab, Grid } from '@material-ui/core';\nimport { When } from 'react-if';\nimport { DialogMain, MalisPanel, AppTabHistoryLog, FormControllerTextField, FormControllerCheckbox, AppTextField, TableMultilingualDescription, SectionTimezone } from '@/components';\nimport TableAttributes from './TableAttributes';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { useRouter } from 'next/router';\nimport { useTranslation } from 'next-i18next';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport _ from 'lodash';\nimport * as constants from '@/utils/constant';\nimport { parameterStore } from '@/store/reducers';\n\nfunction CreateEditParameterCode() {\n  var _useTranslation = useTranslation('parameter'),\n      t = _useTranslation.t;\n\n  var router = useRouter();\n  var paramTypeId = router.query.param_type_id;\n\n  var _useState = useState(0),\n      tab = _useState[0],\n      setTab = _useState[1];\n\n  var dispatch = useDispatch();\n  var dialogState = useSelector(parameterStore.selectDialogState);\n  var parameterDetail = useSelector(parameterStore.selectDetail);\n  var initParameter = useSelector(parameterStore.selectInitParameter);\n  var initDataForCE = useSelector(parameterStore.selectInitDataForCE);\n  var permissions = useSelector(parameterStore.selectPermissions);\n  var validationSchema = useMemo(function () {\n    return yup.object().shape({\n      parameter_id: yup.string().required(t('validation_message.parameter_id_required')).max(8, t('validation_message.parameter_id_required_max')).matches(constants.REGEX_ALPHA_NUMERIC_ONLY, t('validation_message.parameter_id_match')),\n      description: yup.string().nullable().max(80, t('validation_message.description_max')),\n      order: yup.string().trim().nullable().matches(/^\\d+$/, {\n        message: t('validation_message.order_type'),\n        excludeEmptyString: true\n      })[\"default\"](null)\n    });\n  }, [t]);\n  var parameterForm = useForm({\n    shouldUnregister: false,\n    resolver: yupResolver(validationSchema)\n  });\n  useEffect(function () {\n    parameterForm.reset(parameterDetail);\n  }, [parameterDetail, initDataForCE]);\n  var handleSubmit = parameterForm.handleSubmit(function (data) {\n    var formData = _.omit(data, [].concat(_toConsumableArray(constants.removalProperties), ['multilingual_descriptions', 'raw_parameter_type_id']));\n\n    if (_.isEmpty(formData.order)) {\n      formData.order = null;\n    } else {\n      formData.order = parseInt(formData.order);\n    }\n\n    formData.parameter_type_id = parseInt(formData.parameter_type_id);\n\n    if (dialogState.editMode) {\n      dispatch(parameterStore.extraActions.update({\n        id: data.id,\n        formData: formData\n      }));\n    } else {\n      dispatch(parameterStore.extraActions.create(formData));\n    }\n  });\n\n  var handleClose = function handleClose() {\n    dispatch(parameterStore.extraActions.closeDialog());\n    setTab(0);\n    parameterForm.clearErrors();\n  };\n\n  var handleChangeTab = function handleChangeTab(event, newTab) {\n    setTab(newTab);\n  };\n\n  var handleChangeHistoryLogs = function handleChangeHistoryLogs(data) {\n    dispatch(parameterStore.actions.setHistoryLogs(data));\n  };\n\n  return /*#__PURE__*/_jsxs(DialogMain, {\n    open: dialogState.open,\n    loading: dialogState.loading,\n    height: dialogState.editMode ? 470 : 400,\n    fullWidth: true,\n    maxWidth: initDataForCE.is_multilingual ? 'md' : 'sm',\n    title: dialogState.editMode ? t('form.title.update_parameter') : t('form.title.create_parameter'),\n    onOk: handleSubmit,\n    onClose: handleClose,\n    okText: dialogState.editMode ? t('common:button.update') : t('common:button.create'),\n    okButtonProps: {\n      disabled: dialogState.loading || !(permissions === null || permissions === void 0 ? void 0 : permissions.edit) && dialogState.editMode\n    },\n    children: [/*#__PURE__*/_jsxs(Tabs, {\n      value: tab,\n      onChange: handleChangeTab,\n      children: [/*#__PURE__*/_jsx(Tab, {\n        label: t('common:tab.general')\n      }), /*#__PURE__*/_jsx(Tab, {\n        label: t('common:tab.history'),\n        disabled: !dialogState.editMode\n      })]\n    }), /*#__PURE__*/_jsx(MalisPanel, {\n      value: tab,\n      index: 0,\n      children: /*#__PURE__*/_jsxs(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: initDataForCE.is_multilingual ? 6 : 12,\n          children: /*#__PURE__*/_jsxs(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsx(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsx(AppTextField, {\n                label: \"Type\",\n                name: \"type_id\",\n                value: paramTypeId,\n                disabled: true,\n                required: true\n              })\n            }), /*#__PURE__*/_jsx(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsx(FormControllerTextField, {\n                control: parameterForm.control,\n                label: \"Code\",\n                name: \"parameter_id\",\n                value: 224,\n                disabled: dialogState.editMode,\n                required: true\n              })\n            }), /*#__PURE__*/_jsx(Grid, {\n              item: true,\n              xs: 8,\n              children: /*#__PURE__*/_jsx(FormControllerTextField, {\n                control: parameterForm.control,\n                label: \"Order\",\n                name: \"order\"\n              })\n            }), /*#__PURE__*/_jsx(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsx(FormControllerCheckbox, {\n                name: \"is_default\",\n                label: \"Default\",\n                control: parameterForm.control\n              })\n            }), /*#__PURE__*/_jsx(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsx(FormControllerTextField, {\n                label: \"Description\",\n                name: \"description\",\n                control: parameterForm.control\n              })\n            }), /*#__PURE__*/_jsx(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsx(TableAttributes, {\n                attributes: initDataForCE.attributes,\n                control: parameterForm.control,\n                name: \"properties\",\n                parameterId: initDataForCE.param_type_raw_id,\n                config: initDataForCE.param_type_specific_config\n              })\n            })]\n          })\n        }), /*#__PURE__*/_jsx(When, {\n          condition: initDataForCE.is_multilingual,\n          children: /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsx(TableMultilingualDescription, {\n              control: parameterForm.control,\n              languageList: initParameter.PLLA,\n              editMode: dialogState.editMode,\n              editor: \"rte\",\n              name: \"descriptions\",\n              tableHeight: 320\n            })\n          })\n        }), /*#__PURE__*/_jsx(When, {\n          condition: dialogState.editMode,\n          children: /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 12,\n            style: {\n              padding: 0,\n              marginLeft: 4\n            },\n            children: /*#__PURE__*/_jsx(SectionTimezone, {\n              value: parameterDetail\n            })\n          })\n        })]\n      })\n    }), /*#__PURE__*/_jsx(MalisPanel, {\n      value: tab,\n      index: 1,\n      children: /*#__PURE__*/_jsx(AppTabHistoryLog, {\n        isOpenDialog: dialogState.open,\n        data: dialogState.historyLogs,\n        onChange: handleChangeHistoryLogs,\n        entityId: parameterDetail.id,\n        mode: initDataForCE.is_multilingual ? 'horizonatal' : 'vertical',\n        tableHeight: initDataForCE.is_multilingual ? 390 : 250,\n        descriptionRows: initDataForCE.is_multilingual ? 25 : 7,\n        entity: \"parameter\"\n      })\n    })]\n  });\n}\n\nexport default CreateEditParameterCode;","map":null,"metadata":{},"sourceType":"module"}