{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\pages\\\\tags.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useStyles from '@/styles/page/layout';\nimport useAuthMiddleware from '@/hooks/useAuthMiddleware';\nimport { useTranslation } from 'next-i18next';\nimport { Link } from '@material-ui/core';\nimport { AppLayout, EditIcon, CreateIcon, AppAutocompleteStyled, DeleteIcon, SaveIcon, MakeAListIcon, DialogTag, useConfirm, AppAutocompleteStyledAsync, DialogDrawingCreateEdit } from '@/components';\nimport _ from 'lodash';\nimport immer from 'immer';\nimport tagApi from '@/apis/tag.api';\nimport { tagStore, commonStore, drawingStore } from '@/store/reducers';\nimport { defaultProperties, iconColumn, descriptionsColumn } from '@/utils/columnProperties';\nimport getMessageConfirm from '@/utils/getMessageConfirm';\nimport { defaultTagInitDataForCE, defaultTagDetail } from '@/utils/defaultValues';\n\nconst Specifications_Page = () => {\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslation('element');\n  const {\n    confirm\n  } = useConfirm();\n  const {\n    0: openDialog,\n    1: setOpenDialog\n  } = useState(false);\n  const {\n    0: initDataForCE,\n    1: setInitDataForCE\n  } = useState(defaultTagInitDataForCE);\n  const {\n    0: tagDetail,\n    1: setTagDetail\n  } = useState(defaultTagDetail);\n  const breadcrumbData = useMemo(() => [{\n    label: 'Home',\n    href: '/'\n  }, {\n    label: 'Drawings',\n    href: '/Drawings'\n  }, {\n    label: 'Tags Management',\n    href: '/Tags'\n  }], []);\n  const dispatch = useDispatch();\n  const permissions = useSelector(tagStore.selectPermissions);\n  const userJob = useSelector(commonStore.selectUserValueJob);\n  const {\n    wiki_page,\n    column_tooltips,\n    jobs: jobOptions\n  } = useSelector(tagStore.selectInitDataForList);\n  const selectedRows = useSelector(commonStore.selectSelectedRows);\n  const dataList = useSelector(tagStore.selectDataList);\n  const userDrawing = useSelector(commonStore.selectUserValueDrawing);\n  const currentLang = useSelector(commonStore.selectCurrentLanguage);\n  useEffect(() => {\n    return () => dispatch(commonStore.actions.resetUserValue());\n  }, []);\n  useEffect(() => {\n    const schematicValue = userDrawing.value > 0 ? userDrawing : null;\n    setTagDetail(currentState => immer(currentState, draft => {\n      draft.schematic_id = schematicValue;\n    }));\n  }, [userDrawing]);\n  useEffect(() => {\n    setTagDetail(currentState => immer(currentState, draft => {\n      draft.job_id = userJob.value;\n    }));\n  }, [userJob]);\n\n  const resetDetail = () => {\n    setTagDetail(() => immer(defaultTagDetail, draft => {\n      draft.schematic_id = userDrawing.value > 0 ? userDrawing : null;\n      draft.job_id = userJob.value;\n    }));\n  };\n\n  const handleOpenCreateDialog = async () => {\n    dispatch(commonStore.actions.setLoadingPage(true));\n\n    try {\n      const resInitDataForCE = await tagApi.getInitDataForCE({\n        job_id_pk: userJob.value\n      });\n      setInitDataForCE(resInitDataForCE);\n\n      if (userDrawing.value > 0) {\n        const {\n          generated_code\n        } = await tagApi.getGenerateCode(userDrawing.value);\n        setTagDetail(currentState => immer(currentState, draft => {\n          draft.element_id = generated_code;\n        }));\n      }\n\n      setOpenDialog(true);\n    } catch (error) {\n      dispatch(commonStore.actions.setError(error));\n    }\n\n    dispatch(commonStore.actions.setLoadingPage(false));\n  };\n\n  const handleOpenUpdateDialog = id => async () => {\n    dispatch(commonStore.actions.setLoadingPage(true));\n\n    try {\n      const resInitDataForCE = await tagApi.getInitDataForCE({\n        job_id_pk: userJob.value\n      });\n      const {\n        element\n      } = await tagApi.getDetail(id);\n      setInitDataForCE(resInitDataForCE);\n      setTagDetail(immer(element, draft => {\n        draft.schematic_id = element.related_schematic;\n        draft.part_id = element.related_part;\n      }));\n      setOpenDialog(true);\n    } catch (error) {\n      dispatch(commonStore.actions.setError(error));\n    }\n\n    dispatch(commonStore.actions.setLoadingPage(false));\n  };\n\n  const handleChangeUserJob = (event, optionValue) => {\n    dispatch(tagStore.sagaChangeUserJob(optionValue));\n  };\n\n  const handleChangeUserDrawing = (event, optionValue) => {\n    dispatch(tagStore.sagaChangeUserDrawing(optionValue));\n  };\n\n  const handleDeleteTags = async () => {\n    const description = getMessageConfirm(t, 'element', selectedRows, 'delete');\n    const result = await confirm({\n      description\n    });\n\n    if (result === 'OK') {\n      const tags = _.map(selectedRows, partId => {\n        const {\n          schematic_id,\n          id\n        } = _.find(dataList, {\n          id: partId\n        });\n\n        return {\n          entity_id: schematic_id,\n          id\n        };\n      });\n\n      dispatch(commonStore.sagaExecuteOperation({\n        entity: 'element',\n        operation: 'delete',\n        operationList: tags\n      }));\n    }\n  };\n\n  const handleOpenDrawingDialog = schematicId => () => {\n    dispatch(drawingStore.sagaOpenUpdateDialog(schematicId));\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    resetDetail();\n    dispatch(tagStore.sagaGetList());\n  };\n\n  const columns = [_objectSpread(_objectSpread(_objectSpread({}, defaultProperties), iconColumn), {}, {\n    description: column_tooltips.edit,\n    field: 'id',\n    headerName: 'Edit',\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(EditIcon, {\n        onClick: handleOpenUpdateDialog(params.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 16\n      }, this);\n    }\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.schematic_id,\n    field: 'schematic_id',\n    headerName: 'Schematic #',\n    flex: 0.15,\n\n    renderCell(params) {\n      const {\n        value,\n        row\n      } = params;\n      return /*#__PURE__*/_jsxDEV(Link, {\n        href: \"#\",\n        onClick: handleOpenDrawingDialog(row.schematic_pk_id),\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this);\n    }\n\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.element_id,\n    field: 'element_id',\n    headerName: 'Element #',\n    flex: 0.15\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.tag,\n    field: 'tag',\n    headerName: 'Tag #',\n    flex: 0.15\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.part_id,\n    field: 'part_id',\n    headerName: 'Part #',\n    flex: 0.2\n  }), _objectSpread(_objectSpread(_objectSpread({}, defaultProperties), descriptionsColumn(currentLang)), {}, {\n    description: column_tooltips.description,\n    flex: 0.6\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.rfq_id,\n    field: 'rfq_id',\n    headerName: 'RFQ #',\n    width: 80\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.rfo_id,\n    field: 'rfo_id',\n    headerName: 'RFO  #',\n    width: 80\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.puco_id,\n    field: 'puco',\n    headerName: 'PuCo',\n    width: 80\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.order_id,\n    field: 'order_id',\n    headerName: 'Order  #',\n    width: 120\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.box_nr,\n    field: 'box_nr',\n    headerName: 'BoxNr',\n    width: 80\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.cnt_nr,\n    field: 'cnt_nr',\n    headerName: 'CntNr',\n    width: 80\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.package_id,\n    field: 'package_id',\n    headerName: 'Package #',\n    width: 80\n  })];\n  const buttonsPage = [{\n    label: t('common:button.new'),\n    startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 18\n    }, this),\n    onClick: handleOpenCreateDialog,\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.create) || userJob.value < 0 || !(userJob === null || userJob === void 0 ? void 0 : userJob.value)\n  }, {\n    label: t('common:button.save'),\n    startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 18\n    }, this),\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.edit)\n  }, {\n    label: t('common:button.delete'),\n    startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 18\n    }, this),\n    onClick: handleDeleteTags,\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.delete) || selectedRows.length === 0\n  }, {\n    label: t('common:button.make_a_list'),\n    startIcon: /*#__PURE__*/_jsxDEV(MakeAListIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 18\n    }, this)\n  }];\n\n  const Dialogs = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DialogTag, {\n      open: openDialog,\n      initData: initDataForCE,\n      detail: tagDetail,\n      onClose: handleCloseDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogDrawingCreateEdit, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  const Options = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppAutocompleteStyled, {\n      className: classes.controlAutocomplete,\n      width: 200,\n      label: \"Jobs\",\n      options: jobOptions,\n      value: userJob,\n      renderOption: option => option.description,\n      primaryKeyOption: \"value\",\n      onChange: handleChangeUserJob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppAutocompleteStyledAsync, {\n      disabled: !(userJob === null || userJob === void 0 ? void 0 : userJob.value),\n      width: 250,\n      label: \"Schematics\",\n      className: classes.controlAutocomplete,\n      compName: \"drawing_list\",\n      additionalData: {\n        limit_to_job: userJob.value,\n        include_all_drawings_option: true\n      },\n      onChange: handleChangeUserDrawing,\n      value: userDrawing,\n      defaultOptions: [commonStore.initialState.userValue.drawing]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    entity: \"element\",\n    breadcrumbs: breadcrumbData,\n    wikiPage: wiki_page,\n    searchProps: {\n      width: 320\n    },\n    buttons: buttonsPage,\n    permissions: permissions,\n    tableProps: {\n      columns\n    },\n    Dialogs: Dialogs,\n    Options: Options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getServerSideProps = useAuthMiddleware(['common', 'element', 'make_a_list', 'advanced_filter', 'drawing', 'item', 'assembly']);\nexport default Specifications_Page;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/pages/tags.tsx"],"names":["useEffect","useMemo","useState","useDispatch","useSelector","useStyles","useAuthMiddleware","useTranslation","Link","AppLayout","EditIcon","CreateIcon","AppAutocompleteStyled","DeleteIcon","SaveIcon","MakeAListIcon","DialogTag","useConfirm","AppAutocompleteStyledAsync","DialogDrawingCreateEdit","_","immer","tagApi","tagStore","commonStore","drawingStore","defaultProperties","iconColumn","descriptionsColumn","getMessageConfirm","defaultTagInitDataForCE","defaultTagDetail","Specifications_Page","classes","t","confirm","openDialog","setOpenDialog","initDataForCE","setInitDataForCE","tagDetail","setTagDetail","breadcrumbData","label","href","dispatch","permissions","selectPermissions","userJob","selectUserValueJob","wiki_page","column_tooltips","jobs","jobOptions","selectInitDataForList","selectedRows","selectSelectedRows","dataList","selectDataList","userDrawing","selectUserValueDrawing","currentLang","selectCurrentLanguage","actions","resetUserValue","schematicValue","value","currentState","draft","schematic_id","job_id","resetDetail","handleOpenCreateDialog","setLoadingPage","resInitDataForCE","getInitDataForCE","job_id_pk","generated_code","getGenerateCode","element_id","error","setError","handleOpenUpdateDialog","id","element","getDetail","related_schematic","part_id","related_part","handleChangeUserJob","event","optionValue","sagaChangeUserJob","handleChangeUserDrawing","sagaChangeUserDrawing","handleDeleteTags","description","result","tags","map","partId","find","entity_id","sagaExecuteOperation","entity","operation","operationList","handleOpenDrawingDialog","schematicId","sagaOpenUpdateDialog","handleCloseDialog","sagaGetList","columns","edit","field","headerName","renderCell","params","flex","row","schematic_pk_id","tag","rfq_id","width","rfo_id","puco_id","order_id","box_nr","cnt_nr","package_id","buttonsPage","startIcon","onClick","disabled","create","delete","length","Dialogs","Options","controlAutocomplete","option","limit_to_job","include_all_drawings_option","initialState","userValue","drawing","getServerSideProps"],"mappings":"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","sourcesContent":["import { useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useStyles from '@/styles/page/layout'\nimport useAuthMiddleware from '@/hooks/useAuthMiddleware'\nimport { useTranslation } from 'next-i18next'\n\nimport { Link } from '@material-ui/core'\n\nimport {\n  AppLayout,\n  EditIcon,\n  CreateIcon,\n  AppAutocompleteStyled,\n  DeleteIcon,\n  SaveIcon,\n  MakeAListIcon,\n  DialogTag,\n  useConfirm,\n  AppAutocompleteStyledAsync,\n  DialogDrawingCreateEdit\n} from '@/components'\n\nimport _ from 'lodash'\nimport immer from 'immer'\n\nimport tagApi from '@/apis/tag.api'\nimport { tagStore, commonStore, drawingStore } from '@/store/reducers'\nimport { defaultProperties, iconColumn, descriptionsColumn } from '@/utils/columnProperties'\nimport getMessageConfirm from '@/utils/getMessageConfirm'\nimport { defaultTagInitDataForCE, defaultTagDetail } from '@/utils/defaultValues'\n\nimport type { GridColumns } from '@material-ui/data-grid'\nimport type { ParameterOption, PayloadOperation, DataForDropdown } from '@/types/Common'\n\nconst Specifications_Page = () => {\n  const classes = useStyles()\n  const { t } = useTranslation('element')\n  const { confirm } = useConfirm()\n\n  const [openDialog, setOpenDialog] = useState(false)\n  const [initDataForCE, setInitDataForCE] = useState(defaultTagInitDataForCE)\n  const [tagDetail, setTagDetail] = useState(defaultTagDetail)\n\n  const breadcrumbData = useMemo(\n    () => [\n      { label: 'Home', href: '/' },\n      { label: 'Drawings', href: '/Drawings' },\n      { label: 'Tags Management', href: '/Tags' }\n    ],\n    []\n  )\n\n  const dispatch = useDispatch()\n  const permissions = useSelector(tagStore.selectPermissions)\n  const userJob = useSelector(commonStore.selectUserValueJob)\n  const { wiki_page, column_tooltips, jobs: jobOptions } = useSelector(tagStore.selectInitDataForList)\n  const selectedRows = useSelector(commonStore.selectSelectedRows)\n  const dataList = useSelector(tagStore.selectDataList)\n  const userDrawing = useSelector(commonStore.selectUserValueDrawing)\n  const currentLang = useSelector(commonStore.selectCurrentLanguage)\n\n  useEffect(() => {\n    return () => dispatch(commonStore.actions.resetUserValue())\n  }, [])\n\n  useEffect(() => {\n    const schematicValue = userDrawing.value > 0 ? userDrawing : null\n    setTagDetail((currentState) =>\n      immer(currentState, (draft) => {\n        draft.schematic_id = schematicValue\n      })\n    )\n  }, [userDrawing])\n\n  useEffect(() => {\n    setTagDetail((currentState) =>\n      immer(currentState, (draft) => {\n        draft.job_id = userJob.value\n      })\n    )\n  }, [userJob])\n\n  const resetDetail = () => {\n    setTagDetail(() =>\n      immer(defaultTagDetail, (draft) => {\n        draft.schematic_id = userDrawing.value > 0 ? userDrawing : null\n        draft.job_id = userJob.value\n      })\n    )\n  }\n\n  const handleOpenCreateDialog = async () => {\n    dispatch(commonStore.actions.setLoadingPage(true))\n    try {\n      const resInitDataForCE = await tagApi.getInitDataForCE({ job_id_pk: userJob.value })\n      setInitDataForCE(resInitDataForCE)\n      if (userDrawing.value > 0) {\n        const { generated_code } = await tagApi.getGenerateCode(userDrawing.value)\n        setTagDetail((currentState) =>\n          immer(currentState, (draft) => {\n            draft.element_id = generated_code\n          })\n        )\n      }\n      setOpenDialog(true)\n    } catch (error) {\n      dispatch(commonStore.actions.setError(error))\n    }\n    dispatch(commonStore.actions.setLoadingPage(false))\n  }\n\n  const handleOpenUpdateDialog = (id: number) => async () => {\n    dispatch(commonStore.actions.setLoadingPage(true))\n    try {\n      const resInitDataForCE = await tagApi.getInitDataForCE({ job_id_pk: userJob.value })\n      const { element } = await tagApi.getDetail(id)\n      setInitDataForCE(resInitDataForCE)\n      setTagDetail(\n        immer(element, (draft) => {\n          draft.schematic_id = element.related_schematic\n          draft.part_id = element.related_part\n        }) as any\n      )\n      setOpenDialog(true)\n    } catch (error) {\n      dispatch(commonStore.actions.setError(error))\n    }\n    dispatch(commonStore.actions.setLoadingPage(false))\n  }\n\n  const handleChangeUserJob = (event, optionValue: ParameterOption) => {\n    dispatch(tagStore.sagaChangeUserJob(optionValue))\n  }\n\n  const handleChangeUserDrawing = (event, optionValue: DataForDropdown) => {\n    dispatch(tagStore.sagaChangeUserDrawing(optionValue))\n  }\n\n  const handleDeleteTags = async () => {\n    const description = getMessageConfirm(t, 'element', selectedRows, 'delete')\n    const result = await confirm({ description })\n    if (result === 'OK') {\n      const tags: PayloadOperation[] = _.map(selectedRows, (partId) => {\n        const { schematic_id, id } = _.find(dataList, { id: partId })\n        return { entity_id: schematic_id, id }\n      })\n      dispatch(commonStore.sagaExecuteOperation({ entity: 'element', operation: 'delete', operationList: tags }))\n    }\n  }\n\n  const handleOpenDrawingDialog = (schematicId: number) => () => {\n    dispatch(drawingStore.sagaOpenUpdateDialog(schematicId))\n  }\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false)\n    resetDetail()\n    dispatch(tagStore.sagaGetList())\n  }\n\n  const columns: GridColumns = [\n    {\n      ...defaultProperties,\n      ...iconColumn,\n      description: column_tooltips.edit,\n      field: 'id',\n      headerName: 'Edit',\n      renderCell: (params) => {\n        return <EditIcon onClick={handleOpenUpdateDialog(params.value as number)} />\n      }\n    },\n    {\n      ...defaultProperties,\n      description: column_tooltips.schematic_id,\n      field: 'schematic_id',\n      headerName: 'Schematic #',\n      flex: 0.15,\n      renderCell(params) {\n        const { value, row } = params\n        return (\n          <Link href=\"#\" onClick={handleOpenDrawingDialog(row.schematic_pk_id)}>\n            {value}\n          </Link>\n        )\n      }\n    },\n    {\n      ...defaultProperties,\n      description: column_tooltips.element_id,\n      field: 'element_id',\n      headerName: 'Element #',\n      flex: 0.15\n    },\n    {\n      ...defaultProperties,\n      description: column_tooltips.tag,\n      field: 'tag',\n      headerName: 'Tag #',\n      flex: 0.15\n    },\n    {\n      ...defaultProperties,\n      description: column_tooltips.part_id,\n      field: 'part_id',\n      headerName: 'Part #',\n      flex: 0.2\n    },\n    {\n      ...defaultProperties,\n      ...descriptionsColumn(currentLang),\n      description: column_tooltips.description,\n      flex: 0.6\n    },\n    {\n      ...defaultProperties,\n      description: column_tooltips.rfq_id,\n      field: 'rfq_id',\n      headerName: 'RFQ #',\n      width: 80\n    },\n    {\n      ...defaultProperties,\n      description: column_tooltips.rfo_id,\n      field: 'rfo_id',\n      headerName: 'RFO  #',\n      width: 80\n    },\n    {\n      ...defaultProperties,\n      description: column_tooltips.puco_id,\n      field: 'puco',\n      headerName: 'PuCo',\n      width: 80\n    },\n    {\n      ...defaultProperties,\n      description: column_tooltips.order_id,\n      field: 'order_id',\n      headerName: 'Order  #',\n      width: 120\n    },\n    {\n      ...defaultProperties,\n      description: column_tooltips.box_nr,\n      field: 'box_nr',\n      headerName: 'BoxNr',\n      width: 80\n    },\n    {\n      ...defaultProperties,\n      description: column_tooltips.cnt_nr,\n      field: 'cnt_nr',\n      headerName: 'CntNr',\n      width: 80\n    },\n    {\n      ...defaultProperties,\n      description: column_tooltips.package_id,\n      field: 'package_id',\n      headerName: 'Package #',\n      width: 80\n    }\n  ]\n\n  const buttonsPage = [\n    {\n      label: t('common:button.new'),\n      startIcon: <CreateIcon />,\n      onClick: handleOpenCreateDialog,\n      disabled: !permissions?.create || userJob.value < 0 || !userJob?.value\n    },\n    {\n      label: t('common:button.save'),\n      startIcon: <SaveIcon />,\n      disabled: !permissions?.edit\n    },\n    {\n      label: t('common:button.delete'),\n      startIcon: <DeleteIcon />,\n      onClick: handleDeleteTags,\n      disabled: !permissions?.delete || selectedRows.length === 0\n    },\n    {\n      label: t('common:button.make_a_list'),\n      startIcon: <MakeAListIcon />\n    }\n  ]\n\n  const Dialogs = (\n    <>\n      <DialogTag open={openDialog} initData={initDataForCE} detail={tagDetail} onClose={handleCloseDialog} />\n      <DialogDrawingCreateEdit />\n    </>\n  )\n\n  const Options = (\n    <>\n      <AppAutocompleteStyled\n        className={classes.controlAutocomplete}\n        width={200}\n        label=\"Jobs\"\n        options={jobOptions}\n        value={userJob}\n        renderOption={(option) => option.description}\n        primaryKeyOption=\"value\"\n        onChange={handleChangeUserJob}\n      />\n\n      <AppAutocompleteStyledAsync\n        disabled={!userJob?.value}\n        width={250}\n        label=\"Schematics\"\n        className={classes.controlAutocomplete}\n        compName=\"drawing_list\"\n        additionalData={{\n          limit_to_job: userJob.value,\n          include_all_drawings_option: true\n        }}\n        onChange={handleChangeUserDrawing}\n        value={userDrawing}\n        defaultOptions={[commonStore.initialState.userValue.drawing]}\n      />\n    </>\n  )\n\n  return (\n    <AppLayout\n      entity=\"element\"\n      breadcrumbs={breadcrumbData}\n      wikiPage={wiki_page}\n      searchProps={{\n        width: 320\n      }}\n      buttons={buttonsPage}\n      permissions={permissions}\n      tableProps={{\n        columns\n      }}\n      Dialogs={Dialogs}\n      Options={Options}\n    />\n  )\n}\n\nexport const getServerSideProps = useAuthMiddleware([\n  'common',\n  'element',\n  'make_a_list',\n  'advanced_filter',\n  'drawing',\n  'item',\n  'assembly'\n])\n\nexport default Specifications_Page\n"]},"metadata":{},"sourceType":"module"}