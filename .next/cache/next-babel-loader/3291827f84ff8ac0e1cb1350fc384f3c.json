{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { parseCookies } from 'nookies';\nimport { singular } from 'pluralize';\n\nclass HttpService {\n  constructor(entity) {\n    _defineProperty(this, \"_instance\", void 0);\n\n    _defineProperty(this, \"_entity\", void 0);\n\n    _defineProperty(this, \"saveToken\", () => {\n      const cookies = parseCookies();\n\n      if (_.size(cookies.token) !== 0) {\n        this._instance.defaults.headers.common['Authorization'] = `Bearer ${cookies.token}`;\n      }\n    });\n\n    _defineProperty(this, \"get\", (endpoint, params) => {\n      this.saveToken();\n      return this._instance.get(endpoint, {\n        params\n      });\n    });\n\n    _defineProperty(this, \"post\", (endpoint, data) => {\n      this.saveToken();\n      return this._instance.post(endpoint, data);\n    });\n\n    _defineProperty(this, \"put\", (endpoint, data) => {\n      this.saveToken();\n      return this._instance.put(endpoint, data);\n    });\n\n    _defineProperty(this, \"delete\", (endpoint, data) => {\n      this.saveToken();\n      return this._instance.delete(endpoint, {\n        data\n      });\n    });\n\n    _defineProperty(this, \"getInitDataForList\", (params = {}) => {\n      const singularEntity = singular(this._entity);\n      return this.get('init_data', _objectSpread({\n        comp_name: `list_${singularEntity}`\n      }, params));\n    });\n\n    _defineProperty(this, \"getInitDataForCE\", (params = {}) => {\n      const singularEntity = singular(this._entity);\n      return this.get('init_data', _objectSpread({\n        comp_name: `create_edit_${singularEntity}`\n      }, params));\n    });\n\n    _defineProperty(this, \"getList\", (params = {}) => {\n      return this.get(this._entity, params);\n    });\n\n    _defineProperty(this, \"getDetail\", id => {\n      return this.get(`${this._entity}/${id}`);\n    });\n\n    _defineProperty(this, \"create\", data => {\n      return this.post(this._entity, data);\n    });\n\n    _defineProperty(this, \"update\", (id, data) => {\n      return this.put(`${this._entity}/${id}`, data);\n    });\n\n    _defineProperty(this, \"updateMultiple\", data => {\n      return this.put(this._entity, {\n        [this._entity]: data\n      });\n    });\n\n    _defineProperty(this, \"executeOperation\", (operation, data) => {\n      if (operation === 'delete') {\n        return this.delete(this._entity, {\n          [this._entity]: data\n        });\n      }\n\n      return this.put(`${this._entity}/${operation}`, {\n        [this._entity]: data\n      });\n    });\n\n    this._instance = axios.create({\n      baseURL: process.env.NEXT_PUBLIC_BACKEND_URL || 'http://localhost:5000/'\n    });\n\n    this._instance.interceptors.response.use(this.handleSuccessRes, this.handleErrorRes);\n\n    this._entity = entity;\n  }\n\n  handleSuccessRes(res) {\n    return res.data;\n  }\n\n  handleErrorRes(error) {\n    return Promise.reject(error);\n  }\n\n}\n\nexport default HttpService;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/helper/HttpService.ts"],"names":["axios","_","parseCookies","singular","HttpService","constructor","entity","cookies","size","token","_instance","defaults","headers","common","endpoint","params","saveToken","get","data","post","put","delete","singularEntity","_entity","comp_name","id","operation","create","baseURL","process","env","NEXT_PUBLIC_BACKEND_URL","interceptors","response","use","handleSuccessRes","handleErrorRes","res","error","Promise","reject"],"mappings":"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","sourcesContent":["import axios, { AxiosInstance } from 'axios'\nimport _ from 'lodash'\nimport { parseCookies } from 'nookies'\nimport { singular } from 'pluralize'\n\nclass HttpService {\n  private _instance: AxiosInstance\n  protected _entity: string\n\n  constructor(entity: string) {\n    this._instance = axios.create({\n      baseURL: process.env.NEXT_PUBLIC_BACKEND_URL || 'http://localhost:5000/'\n    })\n    this._instance.interceptors.response.use(this.handleSuccessRes, this.handleErrorRes)\n    this._entity = entity\n  }\n\n  private handleSuccessRes(res) {\n    return res.data\n  }\n\n  private handleErrorRes(error) {\n    return Promise.reject(error)\n  }\n\n  private saveToken = () => {\n    const cookies = parseCookies()\n    if (_.size(cookies.token) !== 0) {\n      this._instance.defaults.headers.common['Authorization'] = `Bearer ${cookies.token}`\n    }\n  }\n\n  get = (endpoint: string, params?: any) => {\n    this.saveToken()\n    return this._instance.get(endpoint, { params })\n  }\n\n  post = (endpoint: string, data) => {\n    this.saveToken()\n    return this._instance.post(endpoint, data)\n  }\n\n  put = (endpoint: string, data) => {\n    this.saveToken()\n    return this._instance.put(endpoint, data)\n  }\n\n  delete = (endpoint: string, data) => {\n    this.saveToken()\n    return this._instance.delete(endpoint, { data })\n  }\n\n  getInitDataForList = (params = {}) => {\n    const singularEntity = singular(this._entity)\n    return this.get('init_data', {\n      comp_name: `list_${singularEntity}`,\n      ...params\n    })\n  }\n\n  getInitDataForCE = (params = {}) => {\n    const singularEntity = singular(this._entity)\n    return this.get('init_data', {\n      comp_name: `create_edit_${singularEntity}`,\n      ...params\n    })\n  }\n\n  getList = (params = {}) => {\n    return this.get(this._entity, params)\n  }\n\n  getDetail = (id: number) => {\n    return this.get(`${this._entity}/${id}`)\n  }\n\n  create = (data) => {\n    return this.post(this._entity, data)\n  }\n\n  update = (id: number, data) => {\n    return this.put(`${this._entity}/${id}`, data)\n  }\n\n  updateMultiple = (data) => {\n    return this.put(this._entity, { [this._entity]: data })\n  }\n\n  executeOperation = (operation, data) => {\n    if (operation === 'delete') {\n      return this.delete(this._entity, { [this._entity]: data })\n    }\n    return this.put(`${this._entity}/${operation}`, { [this._entity]: data })\n  }\n}\n\nexport default HttpService\n"]},"metadata":{},"sourceType":"module"}