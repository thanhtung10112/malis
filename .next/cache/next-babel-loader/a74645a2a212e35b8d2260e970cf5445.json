{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FormControlLabel, Checkbox } from '@material-ui/core';\nimport { useController } from 'react-hook-form';\nimport useStyles from './styles';\n\nfunction ControlledChecbox(props) {\n  var classes = useStyles();\n\n  var control = props.control,\n      name = props.name,\n      rules = props.rules,\n      defaultValue = props.defaultValue,\n      color = props.color,\n      checkboxProps = _objectWithoutProperties(props, [\"control\", \"name\", \"rules\", \"defaultValue\", \"color\"]);\n\n  var _useController = useController({\n    name: name,\n    rules: rules,\n    defaultValue: defaultValue,\n    control: control\n  }),\n      _useController$field = _useController.field,\n      onChange = _useController$field.onChange,\n      value = _useController$field.value,\n      inputProps = _objectWithoutProperties(_useController$field, [\"onChange\", \"value\"]);\n\n  var onChangeCheckbox = function onChangeCheckbox(_, checked) {\n    onChange(checked);\n  };\n\n  return /*#__PURE__*/_jsx(FormControlLabel, _objectSpread(_objectSpread({}, checkboxProps), {}, {\n    classes: {\n      label: classes.labelCheckbox\n    },\n    control: /*#__PURE__*/_jsx(Checkbox, _objectSpread(_objectSpread({}, inputProps), {}, {\n      color: color,\n      classes: classes,\n      checked: value,\n      onChange: onChangeCheckbox\n    }))\n  }));\n}\n\nControlledChecbox.defaultProps = {\n  color: 'primary'\n};\nexport default ControlledChecbox;","map":null,"metadata":{},"sourceType":"module"}