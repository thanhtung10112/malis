{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useBeforeUnload } from 'react-use';\nimport Rollbar from 'rollbar';\nimport { useRouter } from 'next/router';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Provider as RollbarProvider } from '@rollbar/react';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { wrapper } from '@/store/config';\nimport NextNprogress from 'nextjs-progressbar';\nimport { appWithTranslation } from 'next-i18next';\nimport { Header, AppLoadingPage, AppMessagePopup, SummaryReport, SessionExpiredDialog, ConfirmProvider, ErrorBoundary } from '@/components';\nimport { Unless } from 'react-if';\nimport theme from '@/styles/theme';\nimport _ from 'lodash';\nimport { commonStore, authStore } from '@/store/reducers';\n// import '@fontsource/inter'\nimport '@/styles/theme.css';\nconst rollbarConfig = {\n  accessToken: process.env.NEXT_PUBLIC_ROLLBAR_ACCESS_TOKEN,\n  captureUncaught: true,\n  captureUnhandledRejections: true,\n  environment: process.env.NEXT_PUBLIC_MODE,\n  enabled: process.env.NEXT_PUBLIC_MODE === 'production'\n};\nconst rollbar = new Rollbar(rollbarConfig);\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const isLoginPage = router.pathname === '/login';\n  const editRows = useSelector(commonStore.selectEditRows);\n  const profile = useSelector(authStore.selectProfile);\n  const currentLanguage = useSelector(commonStore.selectCurrentLanguage);\n  useBeforeUnload(editRows.length > 0, 'You have unsaved changes, are you sure?');\n  useEffect(() => {\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n  useEffect(() => {\n    return () => {\n      dispatch(commonStore.resetState());\n    };\n  }, [router.pathname]);\n  useEffect(() => {\n    if (_.isNil(currentLanguage.id)) {\n      dispatch(commonStore.actions.setCurrentLanguage(_objectSpread(_objectSpread({}, commonStore.initialState.currentLanguage), {}, {\n        id: profile.default_language_id\n      })));\n    }\n  }, [profile, currentLanguage]);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsxs(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsx(NextNprogress, {\n        color: \"#29D\",\n        startPosition: 0.3,\n        stopDelayMs: 200,\n        height: 2,\n        options: {\n          showSpinner: false\n        }\n      }), /*#__PURE__*/_jsx(CssBaseline, {}), /*#__PURE__*/_jsx(AppMessagePopup, {}), /*#__PURE__*/_jsx(AppLoadingPage, {}), /*#__PURE__*/_jsxs(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        children: [/*#__PURE__*/_jsx(ConfirmProvider, {\n          children: /*#__PURE__*/_jsx(RollbarProvider, {\n            instance: rollbar,\n            children: /*#__PURE__*/_jsxs(ErrorBoundary, {\n              children: [/*#__PURE__*/_jsx(Unless, {\n                condition: isLoginPage,\n                children: /*#__PURE__*/_jsx(Header, {})\n              }), /*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps))]\n            })\n          })\n        }), /*#__PURE__*/_jsx(SessionExpiredDialog, {}), /*#__PURE__*/_jsx(SummaryReport, {})]\n      })]\n    })\n  });\n}\n\nexport default wrapper.withRedux(appWithTranslation(MyApp));","map":null,"metadata":{},"sourceType":"module"}