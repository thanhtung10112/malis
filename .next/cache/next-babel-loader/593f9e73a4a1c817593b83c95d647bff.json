{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { GridColumnMenuContainer, GridColumnMenu, useGridSlotComponentProps } from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core';\nimport { Switch, Case, Default } from 'react-if';\nimport clsx from 'clsx';\nimport { commonStore } from '@/store/reducers';\nconst useStyles = makeStyles(theme => ({\n  columnItem: {\n    width: 127,\n    height: 26,\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0.5, 1),\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover\n    },\n    '&.selected': {\n      backgroundColor: theme.palette.action.selected\n    }\n  }\n}));\n\nconst DataTableColumnMenu = props => {\n  const {\n    apiRef\n  } = useGridSlotComponentProps();\n\n  const {\n    hideMenu,\n    currentColumn,\n    color\n  } = props,\n        other = _objectWithoutProperties(props, [\"hideMenu\", \"currentColumn\", \"color\"]);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const languageList = useSelector(state => {\n    const {\n      entity\n    } = state.common;\n\n    if (!entity) {\n      return [];\n    }\n\n    const parameters = state[entity].initDataForList.parameters;\n\n    if (!parameters) {\n      return [];\n    }\n\n    return parameters.PLLA;\n  });\n  const currentLanguage = useSelector(commonStore.selectCurrentLanguage);\n\n  const handleSelectLang = language => () => {\n    dispatch(commonStore.actions.setCurrentLanguage(language));\n    apiRef.current.hideColumnMenu();\n  };\n\n  const renderLanguages = () => languageList.filter(language => language.status).map(language => {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: clsx(classes.columnItem, {\n        selected: language.id === currentLanguage.id\n      }),\n      onClick: handleSelectLang(language),\n      children: language.description\n    }, language.id);\n  });\n\n  return /*#__PURE__*/_jsxs(Switch, {\n    children: [/*#__PURE__*/_jsx(Case, {\n      condition: currentColumn.field === 'description',\n      children: /*#__PURE__*/_jsx(GridColumnMenuContainer, _objectSpread(_objectSpread({\n        hideMenu: hideMenu,\n        currentColumn: currentColumn\n      }, other), {}, {\n        children: renderLanguages()\n      }))\n    }), /*#__PURE__*/_jsx(Default, {\n      children: /*#__PURE__*/_jsx(GridColumnMenu, _objectSpread({\n        hideMenu: hideMenu,\n        currentColumn: currentColumn\n      }, other))\n    })]\n  });\n};\n\nexport default DataTableColumnMenu;","map":null,"metadata":{},"sourceType":"module"}