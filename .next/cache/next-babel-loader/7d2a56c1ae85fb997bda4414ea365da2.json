{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\pages\\\\tags.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useStyles from '@/styles/page/layout';\nimport { useTranslation } from 'next-i18next';\nimport { Link } from '@material-ui/core';\nimport { AppLayout, EditIcon, CreateIcon, AppAutocompleteStyled, DeleteIcon, SaveIcon, MakeAListIcon, DialogTag, useConfirm, AppAutocompleteStyledAsync, DialogDrawingCreateEdit, DialogPart } from '@/components';\nimport { tagStore, commonStore, drawingStore } from '@/store/reducers';\nimport { defaultProperties, iconColumn } from '@/utils/columnProperties';\nimport getMessageConfirm from '@/utils/getMessageConfirm';\nimport _ from 'lodash';\n\nvar Specifications_Page = function Specifications_Page() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation('element'),\n      t = _useTranslation.t;\n\n  var _useConfirm = useConfirm(),\n      confirm = _useConfirm.confirm;\n\n  var breadcrumbData = useMemo(function () {\n    return [{\n      label: 'Home',\n      href: '/'\n    }, {\n      label: 'Drawings',\n      href: '/Drawings'\n    }, {\n      label: 'Tags Management',\n      href: '/Tags'\n    }];\n  }, []);\n  var dispatch = useDispatch();\n  var permissions = useSelector(tagStore.selectPermissions);\n  var userJob = useSelector(commonStore.selectUserValueJob);\n\n  var _useSelector = useSelector(tagStore.selectInitDataForList),\n      wiki_page = _useSelector.wiki_page,\n      column_tooltips = _useSelector.column_tooltips,\n      jobOptions = _useSelector.jobs;\n\n  var selectedRows = useSelector(commonStore.selectSelectedRows);\n  var dataList = useSelector(tagStore.selectDataList);\n  var userDrawing = useSelector(commonStore.selectUserValueDrawing);\n  useEffect(function () {\n    return function () {\n      return dispatch(commonStore.actions.resetUserValue());\n    };\n  }, []);\n\n  var handleOpenCreateDialog = function handleOpenCreateDialog() {\n    dispatch(tagStore.sagaOpenCreateDialog());\n  };\n\n  var handleChangeUserJob = function handleChangeUserJob(event, optionValue) {\n    dispatch(tagStore.sagaChangeUserJob(optionValue));\n  };\n\n  var handleChangeUserDrawing = function handleChangeUserDrawing(event, optionValue) {\n    dispatch(tagStore.sagaChangeUserDrawing(optionValue));\n  };\n\n  var handleOpenUpdateDialog = function handleOpenUpdateDialog(id) {\n    return function () {\n      dispatch(tagStore.sagaOpenUpdateDialog(id));\n    };\n  };\n\n  var handleDeleteTags = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var description, result, tags;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              description = getMessageConfirm(t, 'tag', selectedRows, 'delete');\n              _context.next = 3;\n              return confirm({\n                description: description\n              });\n\n            case 3:\n              result = _context.sent;\n\n              if (result === 'OK') {\n                tags = _.map(selectedRows, function (partId) {\n                  var _$find = _.find(dataList, {\n                    id: partId\n                  }),\n                      schematic_id = _$find.schematic_id,\n                      id = _$find.id;\n\n                  return {\n                    entity_id: schematic_id,\n                    id: id\n                  };\n                });\n                dispatch(tagStore.sagaRemove(tags));\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleDeleteTags() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleOpenDrawingDialog = function handleOpenDrawingDialog(schematicId) {\n    return function () {\n      dispatch(drawingStore.sagaOpenUpdateDialog(schematicId));\n    };\n  };\n\n  var columns = useMemo(function () {\n    return [_objectSpread(_objectSpread(_objectSpread({}, defaultProperties), iconColumn), {}, {\n      description: column_tooltips.edit,\n      field: 'id',\n      headerName: 'Edit',\n      renderCell: function renderCell(params) {\n        return /*#__PURE__*/_jsxDEV(EditIcon, {\n          onClick: handleOpenUpdateDialog(params.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 18\n        }, _this);\n      }\n    }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n      description: column_tooltips.schematic_id,\n      field: 'schematic_id',\n      headerName: 'Schematic #',\n      flex: 0.15,\n      renderCell: function renderCell(params) {\n        var value = params.value,\n            row = params.row;\n        return /*#__PURE__*/_jsxDEV(Link, {\n          href: \"#\",\n          onClick: handleOpenDrawingDialog(row.schematic_pk_id),\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this);\n      }\n    }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n      description: column_tooltips.tag,\n      field: 'tag',\n      headerName: 'Tag #',\n      flex: 0.15\n    }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n      description: column_tooltips.part_id,\n      field: 'part_id',\n      headerName: 'Part #',\n      flex: 0.2\n    }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n      description: column_tooltips.description,\n      headerName: 'Description',\n      flex: 0.6,\n      field: 'description'\n    }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n      description: column_tooltips.rfq_id,\n      field: 'rfq_id',\n      headerName: 'RFQ #',\n      width: 80\n    }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n      description: column_tooltips.rfo_id,\n      field: 'rfo_id',\n      headerName: 'RFO  #',\n      width: 80\n    }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n      description: column_tooltips.puco_id,\n      field: 'puco',\n      headerName: 'PuCo',\n      width: 80\n    }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n      description: column_tooltips.order_id,\n      field: 'order_id',\n      headerName: 'Order  #',\n      width: 120\n    }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n      description: column_tooltips.box_nr,\n      field: 'box_nr',\n      headerName: 'BoxNr',\n      width: 80\n    }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n      description: column_tooltips.cnt_nr,\n      field: 'cnt_nr',\n      headerName: 'CntNr',\n      width: 80\n    }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n      description: column_tooltips.package_id,\n      field: 'package_id',\n      headerName: 'Package #',\n      width: 80\n    })];\n  }, []);\n  var buttonsPage = [{\n    label: t('common:button.new'),\n    startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 18\n    }, _this),\n    onClick: handleOpenCreateDialog,\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.create) || userJob.value < 0 || !(userJob === null || userJob === void 0 ? void 0 : userJob.value)\n  }, {\n    label: t('common:button.save'),\n    startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 18\n    }, _this),\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.edit)\n  }, {\n    label: t('common:button.delete'),\n    startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 18\n    }, _this),\n    onClick: handleDeleteTags,\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions[\"delete\"]) || selectedRows.length === 0\n  }, {\n    label: t('common:button.make_a_list'),\n    startIcon: /*#__PURE__*/_jsxDEV(MakeAListIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 18\n    }, _this)\n  }];\n\n  var Dialogs = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DialogTag, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(DialogDrawingCreateEdit, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(DialogPart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n\n  var Options = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppAutocompleteStyled, {\n      className: classes.controlAutocomplete,\n      width: 200,\n      label: \"Jobs\",\n      options: jobOptions,\n      value: userJob,\n      renderOption: function renderOption(option) {\n        return option.description;\n      },\n      primaryKeyOption: \"value\",\n      onChange: handleChangeUserJob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(AppAutocompleteStyledAsync, {\n      disabled: !(userJob === null || userJob === void 0 ? void 0 : userJob.value),\n      width: 250,\n      label: \"Schematics\",\n      className: classes.controlAutocomplete,\n      compName: \"drawing_list\",\n      additionalData: {\n        limit_to_job: userJob.value,\n        include_all_drawings_option: true\n      },\n      onChange: handleChangeUserDrawing,\n      value: userDrawing,\n      defaultOptions: [commonStore.initialState.userValue.drawing]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    entity: \"element\",\n    breadcrumbs: breadcrumbData,\n    wikiPage: wiki_page,\n    searchProps: {\n      width: 320\n    },\n    buttons: buttonsPage,\n    permissions: permissions,\n    tableProps: {\n      columns: columns\n    },\n    Dialogs: Dialogs,\n    Options: Options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Specifications_Page, \"dEBACDWGU847T53HfgdygI/6WPw=\", false, function () {\n  return [useStyles, useTranslation, useConfirm, useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Specifications_Page;\nexport var __N_SSP = true;\nexport default Specifications_Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Specifications_Page\");","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/pages/tags.tsx"],"names":["useEffect","useMemo","useDispatch","useSelector","useStyles","useTranslation","Link","AppLayout","EditIcon","CreateIcon","AppAutocompleteStyled","DeleteIcon","SaveIcon","MakeAListIcon","DialogTag","useConfirm","AppAutocompleteStyledAsync","DialogDrawingCreateEdit","DialogPart","tagStore","commonStore","drawingStore","defaultProperties","iconColumn","getMessageConfirm","_","Specifications_Page","classes","t","confirm","breadcrumbData","label","href","dispatch","permissions","selectPermissions","userJob","selectUserValueJob","selectInitDataForList","wiki_page","column_tooltips","jobOptions","jobs","selectedRows","selectSelectedRows","dataList","selectDataList","userDrawing","selectUserValueDrawing","actions","resetUserValue","handleOpenCreateDialog","sagaOpenCreateDialog","handleChangeUserJob","event","optionValue","sagaChangeUserJob","handleChangeUserDrawing","sagaChangeUserDrawing","handleOpenUpdateDialog","id","sagaOpenUpdateDialog","handleDeleteTags","description","result","tags","map","partId","find","schematic_id","entity_id","sagaRemove","handleOpenDrawingDialog","schematicId","columns","edit","field","headerName","renderCell","params","value","flex","row","schematic_pk_id","tag","part_id","rfq_id","width","rfo_id","puco_id","order_id","box_nr","cnt_nr","package_id","buttonsPage","startIcon","onClick","disabled","create","length","Dialogs","Options","controlAutocomplete","option","limit_to_job","include_all_drawings_option","initialState","userValue","drawing"],"mappings":"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","sourcesContent":["import { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useStyles from '@/styles/page/layout'\nimport useAuthMiddleware from '@/hooks/useAuthMiddleware'\nimport { useTranslation } from 'next-i18next'\n\nimport { Link } from '@material-ui/core'\n\nimport {\n  AppLayout,\n  EditIcon,\n  CreateIcon,\n  AppAutocompleteStyled,\n  DeleteIcon,\n  SaveIcon,\n  MakeAListIcon,\n  DialogTag,\n  useConfirm,\n  AppAutocompleteStyledAsync,\n  DialogDrawingCreateEdit,\n  DialogPart\n} from '@/components'\n\nimport { tagStore, commonStore, drawingStore } from '@/store/reducers'\nimport { defaultProperties, iconColumn } from '@/utils/columnProperties'\nimport getMessageConfirm from '@/utils/getMessageConfirm'\nimport _ from 'lodash'\n\nimport type { GridColumns } from '@material-ui/data-grid'\nimport type { ParameterOption, PayloadOperation, DataForDropdown } from '@/types/Common'\n\nconst Specifications_Page = () => {\n  const classes = useStyles()\n  const { t } = useTranslation('element')\n  const { confirm } = useConfirm()\n\n  const breadcrumbData = useMemo(\n    () => [\n      { label: 'Home', href: '/' },\n      { label: 'Drawings', href: '/Drawings' },\n      { label: 'Tags Management', href: '/Tags' }\n    ],\n    []\n  )\n\n  const dispatch = useDispatch()\n  const permissions = useSelector(tagStore.selectPermissions)\n  const userJob = useSelector(commonStore.selectUserValueJob)\n  const { wiki_page, column_tooltips, jobs: jobOptions } = useSelector(tagStore.selectInitDataForList)\n  const selectedRows = useSelector(commonStore.selectSelectedRows)\n  const dataList = useSelector(tagStore.selectDataList)\n  const userDrawing = useSelector(commonStore.selectUserValueDrawing)\n\n  useEffect(() => {\n    return () => dispatch(commonStore.actions.resetUserValue())\n  }, [])\n\n  const handleOpenCreateDialog = () => {\n    dispatch(tagStore.sagaOpenCreateDialog())\n  }\n\n  const handleChangeUserJob = (event, optionValue: ParameterOption) => {\n    dispatch(tagStore.sagaChangeUserJob(optionValue))\n  }\n\n  const handleChangeUserDrawing = (event, optionValue: DataForDropdown) => {\n    dispatch(tagStore.sagaChangeUserDrawing(optionValue))\n  }\n\n  const handleOpenUpdateDialog = (id: number) => () => {\n    dispatch(tagStore.sagaOpenUpdateDialog(id))\n  }\n\n  const handleDeleteTags = async () => {\n    const description = getMessageConfirm(t, 'tag', selectedRows, 'delete')\n    const result = await confirm({ description })\n    if (result === 'OK') {\n      const tags: PayloadOperation[] = _.map(selectedRows, (partId) => {\n        const { schematic_id, id } = _.find(dataList, { id: partId })\n        return { entity_id: schematic_id, id }\n      })\n      dispatch(tagStore.sagaRemove(tags))\n    }\n  }\n\n  const handleOpenDrawingDialog = (schematicId: number) => () => {\n    dispatch(drawingStore.sagaOpenUpdateDialog(schematicId))\n  }\n\n  const columns = useMemo<GridColumns>(\n    () => [\n      {\n        ...defaultProperties,\n        ...iconColumn,\n        description: column_tooltips.edit,\n        field: 'id',\n        headerName: 'Edit',\n        renderCell: (params) => {\n          return <EditIcon onClick={handleOpenUpdateDialog(params.value as number)} />\n        }\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.schematic_id,\n        field: 'schematic_id',\n        headerName: 'Schematic #',\n        flex: 0.15,\n        renderCell(params) {\n          const { value, row } = params\n          return (\n            <Link href=\"#\" onClick={handleOpenDrawingDialog(row.schematic_pk_id)}>\n              {value}\n            </Link>\n          )\n        }\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.tag,\n        field: 'tag',\n        headerName: 'Tag #',\n        flex: 0.15\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.part_id,\n        field: 'part_id',\n        headerName: 'Part #',\n        flex: 0.2\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.description,\n        headerName: 'Description',\n        flex: 0.6,\n        field: 'description'\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.rfq_id,\n        field: 'rfq_id',\n        headerName: 'RFQ #',\n        width: 80\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.rfo_id,\n        field: 'rfo_id',\n        headerName: 'RFO  #',\n        width: 80\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.puco_id,\n        field: 'puco',\n        headerName: 'PuCo',\n        width: 80\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.order_id,\n        field: 'order_id',\n        headerName: 'Order  #',\n        width: 120\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.box_nr,\n        field: 'box_nr',\n        headerName: 'BoxNr',\n        width: 80\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.cnt_nr,\n        field: 'cnt_nr',\n        headerName: 'CntNr',\n        width: 80\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.package_id,\n        field: 'package_id',\n        headerName: 'Package #',\n        width: 80\n      }\n    ],\n    []\n  )\n\n  const buttonsPage = [\n    {\n      label: t('common:button.new'),\n      startIcon: <CreateIcon />,\n      onClick: handleOpenCreateDialog,\n      disabled: !permissions?.create || userJob.value < 0 || !userJob?.value\n    },\n    {\n      label: t('common:button.save'),\n      startIcon: <SaveIcon />,\n      disabled: !permissions?.edit\n    },\n    {\n      label: t('common:button.delete'),\n      startIcon: <DeleteIcon />,\n      onClick: handleDeleteTags,\n      disabled: !permissions?.delete || selectedRows.length === 0\n    },\n    {\n      label: t('common:button.make_a_list'),\n      startIcon: <MakeAListIcon />\n    }\n  ]\n\n  const Dialogs = (\n    <>\n      <DialogTag />\n      <DialogDrawingCreateEdit />\n      <DialogPart />\n    </>\n  )\n\n  const Options = (\n    <>\n      <AppAutocompleteStyled\n        className={classes.controlAutocomplete}\n        width={200}\n        label=\"Jobs\"\n        options={jobOptions}\n        value={userJob}\n        renderOption={(option) => option.description}\n        primaryKeyOption=\"value\"\n        onChange={handleChangeUserJob}\n      />\n\n      <AppAutocompleteStyledAsync\n        disabled={!userJob?.value}\n        width={250}\n        label=\"Schematics\"\n        className={classes.controlAutocomplete}\n        compName=\"drawing_list\"\n        additionalData={{\n          limit_to_job: userJob.value,\n          include_all_drawings_option: true\n        }}\n        onChange={handleChangeUserDrawing}\n        value={userDrawing}\n        defaultOptions={[commonStore.initialState.userValue.drawing]}\n      />\n    </>\n  )\n\n  return (\n    <AppLayout\n      entity=\"element\"\n      breadcrumbs={breadcrumbData}\n      wikiPage={wiki_page}\n      searchProps={{\n        width: 320\n      }}\n      buttons={buttonsPage}\n      permissions={permissions}\n      tableProps={{\n        columns\n      }}\n      Dialogs={Dialogs}\n      Options={Options}\n    />\n  )\n}\n\nexport const getServerSideProps = useAuthMiddleware([\n  'common',\n  'element',\n  'make_a_list',\n  'advanced_filter',\n  'drawing',\n  'item',\n  'assembly'\n])\n\nexport default Specifications_Page\n"]},"metadata":{},"sourceType":"module"}