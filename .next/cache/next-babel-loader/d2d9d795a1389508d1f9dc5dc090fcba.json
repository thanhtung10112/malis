{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Fersher\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\AdvancedFilter\\\\SortConditionList\\\\index.tsx\";\nimport { useState } from 'react';\nimport { v1 as uuidv1 } from 'uuid';\nimport { useTranslation } from 'next-i18next';\nimport { AddCircle, Cancel } from '@material-ui/icons';\nimport { IconButton, ButtonGroup, Tooltip, Typography } from '@material-ui/core';\nimport * as _ from 'lodash';\nimport ColumnOptions from './ColumnOptions';\nimport SortOptions from './SortOptions';\nimport { Unless, If, Then, When, Else } from 'react-if';\nimport useStyles from '../styles'; // The main component (which is exported)\n\nfunction SortConditionList({\n  columnOptions,\n  sortOptions,\n  sortData: sortConditionData,\n  disabled\n}) {\n  // trick for forcing rerender\n  const {\n    1: setValue\n  } = useState(0);\n\n  const forceRerender = () => {\n    setValue(value => value + 1);\n  };\n\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslation(['advanced_filter']);\n  const sortConditionComponents = [];\n\n  const addNewSortCondition = sortConditionId => () => {\n    const sortConditionIndex = _.findIndex(sortConditionData, {\n      condition_id: sortConditionId\n    });\n\n    const selectedColumns = sortConditionData.map(cond => cond.id);\n    sortConditionData.splice(sortConditionIndex + 1, 0, {\n      id: columnOptions.filter(col => !selectedColumns.includes(col.id))[0].id,\n      condition_id: uuidv1(),\n      direction: sortOptions[0].value\n    });\n    forceRerender();\n  };\n\n  const removeSortCondition = sortConditionId => () => {\n    const sortConditionIndex = _.findIndex(sortConditionData, {\n      condition_id: sortConditionId\n    });\n\n    sortConditionData.splice(sortConditionIndex, 1);\n    forceRerender();\n  };\n\n  for (const sortCond of sortConditionData) {\n    sortConditionComponents.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '0.5rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ColumnOptions, {\n        columnOptions: columnOptions,\n        condition: sortCond,\n        conditionData: sortConditionData,\n        disabled: disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SortOptions, {\n        sortOptions: sortOptions,\n        condition: sortCond,\n        disabled: disabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Unless, {\n        condition: disabled,\n        children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          style: {\n            marginLeft: '0.5rem'\n          },\n          size: \"small\",\n          children: [!(sortConditionData.length >= columnOptions.length) && /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: t('tooltip.sort_add_rule'),\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: addNewSortCondition(sortCond.condition_id),\n              children: /*#__PURE__*/_jsxDEV(AddCircle, {\n                className: classes.iconButton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: t('tooltip.sort_remove_rule'),\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: removeSortCondition(sortCond.condition_id),\n              children: /*#__PURE__*/_jsxDEV(Cancel, {\n                className: classes.iconButton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(When, {\n      condition: sortConditionData.length === 0,\n      children: /*#__PURE__*/_jsxDEV(If, {\n        condition: disabled,\n        children: [/*#__PURE__*/_jsxDEV(Then, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: '1.6rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              color: \"textSecondary\",\n              children: t('sort_condition.no_sort_conditions')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Else, {\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: t('sort_condition.add_sort_condition'),\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: addNewSortCondition(),\n              children: /*#__PURE__*/_jsxDEV(AddCircle, {\n                className: classes.iconButton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), sortConditionComponents]\n  }, void 0, true);\n}\n\nexport default SortConditionList;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/components/AdvancedFilter/SortConditionList/index.tsx"],"names":["useState","v1","uuidv1","useTranslation","AddCircle","Cancel","IconButton","ButtonGroup","Tooltip","Typography","_","ColumnOptions","SortOptions","Unless","If","Then","When","Else","useStyles","SortConditionList","columnOptions","sortOptions","sortData","sortConditionData","disabled","setValue","forceRerender","value","classes","t","sortConditionComponents","addNewSortCondition","sortConditionId","sortConditionIndex","findIndex","condition_id","selectedColumns","map","cond","id","splice","filter","col","includes","direction","removeSortCondition","sortCond","push","marginBottom","marginLeft","length","iconButton"],"mappings":"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","sourcesContent":["import { useState } from 'react'\n\nimport { v1 as uuidv1 } from 'uuid'\nimport { useTranslation } from 'next-i18next'\nimport { AddCircle, Cancel } from '@material-ui/icons'\n\nimport { IconButton, ButtonGroup, Tooltip, Typography } from '@material-ui/core'\n\nimport * as _ from 'lodash'\n\nimport ColumnOptions from './ColumnOptions'\nimport SortOptions from './SortOptions'\n\nimport { Unless, If, Then, When, Else } from 'react-if'\n\nimport useStyles from '../styles'\n\n// The main component (which is exported)\nfunction SortConditionList({ columnOptions, sortOptions, sortData: sortConditionData, disabled }) {\n  // trick for forcing rerender\n  const [, setValue] = useState(0)\n  const forceRerender = () => {\n    setValue((value) => value + 1)\n  }\n\n  const classes = useStyles()\n  const { t } = useTranslation(['advanced_filter'])\n\n  const sortConditionComponents = []\n\n  const addNewSortCondition = (sortConditionId?) => () => {\n    const sortConditionIndex = _.findIndex(sortConditionData, {\n      condition_id: sortConditionId\n    })\n    const selectedColumns = sortConditionData.map((cond) => cond.id)\n\n    sortConditionData.splice(sortConditionIndex + 1, 0, {\n      id: columnOptions.filter((col) => !selectedColumns.includes(col.id))[0].id,\n      condition_id: uuidv1(),\n      direction: sortOptions[0].value\n    })\n    forceRerender()\n  }\n\n  const removeSortCondition = (sortConditionId) => () => {\n    const sortConditionIndex = _.findIndex(sortConditionData, {\n      condition_id: sortConditionId\n    })\n    sortConditionData.splice(sortConditionIndex, 1)\n    forceRerender()\n  }\n\n  for (const sortCond of sortConditionData) {\n    sortConditionComponents.push(\n      <div style={{ marginBottom: '0.5rem' }}>\n        <ColumnOptions\n          columnOptions={columnOptions}\n          condition={sortCond}\n          conditionData={sortConditionData}\n          disabled={disabled}\n        />\n        <SortOptions sortOptions={sortOptions} condition={sortCond} disabled={disabled} />\n\n        <Unless condition={disabled}>\n          <ButtonGroup style={{ marginLeft: '0.5rem' }} size=\"small\">\n            {!(sortConditionData.length >= columnOptions.length) && (\n              <Tooltip title={t('tooltip.sort_add_rule')}>\n                <IconButton onClick={addNewSortCondition(sortCond.condition_id)}>\n                  <AddCircle className={classes.iconButton} />\n                </IconButton>\n              </Tooltip>\n            )}\n            <Tooltip title={t('tooltip.sort_remove_rule')}>\n              <IconButton onClick={removeSortCondition(sortCond.condition_id)}>\n                <Cancel className={classes.iconButton} />\n              </IconButton>\n            </Tooltip>\n          </ButtonGroup>\n        </Unless>\n      </div>\n    )\n  }\n  return (\n    <>\n      <When condition={sortConditionData.length === 0}>\n        <If condition={disabled}>\n          <Then>\n            <div style={{ marginLeft: '1.6rem' }}>\n              <Typography variant=\"subtitle1\" gutterBottom color=\"textSecondary\">\n                {t('sort_condition.no_sort_conditions')}\n              </Typography>\n            </div>\n          </Then>\n\n          <Else>\n            <Tooltip title={t('sort_condition.add_sort_condition')}>\n              <IconButton onClick={addNewSortCondition()}>\n                <AddCircle className={classes.iconButton} />\n              </IconButton>\n            </Tooltip>\n          </Else>\n        </If>\n      </When>\n      {sortConditionComponents}\n    </>\n  )\n}\n\nexport default SortConditionList\n"]},"metadata":{},"sourceType":"module"}