{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Job\\\\TabAdditionalInfo\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport useStyles from './styles';\nimport useDraggableInPortal from '@/hooks/useDraggableInPortal';\nimport { useFormContext } from 'react-hook-form';\nimport { useTranslation } from 'next-i18next';\nimport useDialogContext from '../Context/useDialogContext';\nimport { Grid, List, ListItem, Paper, Typography, Box } from '@material-ui/core';\nimport { AppTitle, DataTable, DataTableTextField, DataTableDatePicker, CreateIcon, DeleteIcon, DragIcon } from '@/components';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport clsx from 'clsx';\nimport _ from 'lodash';\nimport { v1 as uuidv1 } from 'uuid';\nimport { format as formatDate } from 'date-fns';\nimport immer from 'immer';\nimport * as yup from 'yup';\nimport * as constant from '@/utils/constant';\nimport swapOrder from '@/utils/swapOrder';\nimport * as columnProperties from '@/utils/columnProperties';\n\nfunction TabAdditionalInfo() {\n  const {\n    t\n  } = useTranslation('job');\n  const classes = useStyles();\n  const renderDraggable = useDraggableInPortal();\n  const {\n    isCreating\n  } = useDialogContext();\n  const jobForm = useFormContext();\n  const expeditingDates = jobForm.watch('job_expediting_dates', []);\n  const {\n    0: selectedExDates,\n    1: setSelectedExDates\n  } = useState([]);\n\n  const renderItems = () => {\n    const {\n      job_standard\n    } = jobForm.getValues();\n    return job_standard.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n      draggableId: item.parameter_id,\n      index: index,\n      children: renderDraggable(provided => /*#__PURE__*/_jsxDEV(ListItem, _objectSpread(_objectSpread({\n        component: \"div\",\n        className: classes.listItem,\n        ref: provided.innerRef\n      }, provided.draggableProps), {}, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          component: \"div\",\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          component: \"div\",\n          children: item.parameter_id + ' - ' + item.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", _objectSpread(_objectSpread({}, provided.dragHandleProps), {}, {\n          className: classes.dragIcon,\n          children: /*#__PURE__*/_jsxDEV(DragIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this));\n  };\n\n  const onAddExpeditingDateRows = () => {\n    const newExDate = immer(expeditingDates, draft => {\n      draft.push({\n        id: uuidv1(),\n        exp_date: formatDate(new Date(), constant.DATE_FORMAT),\n        comment: ''\n      });\n    });\n    jobForm.setValue('job_expediting_dates', newExDate);\n  };\n\n  const onDragEndItem = result => {\n    if (result.source && result.destination) {\n      const {\n        job_standard\n      } = jobForm.getValues();\n      const items = swapOrder(job_standard, result.source.index, result.destination.index);\n      jobForm.setValue('job_standard', items);\n    }\n  };\n\n  const onChangeExpeditingDate = (id, date) => {\n    const value = formatDate(date, constant.DATE_FORMAT);\n    const newExDates = immer(expeditingDates, draft => {\n      const indexExDate = _.findIndex(draft, exDate => exDate.id === id);\n\n      draft[indexExDate].exp_date = value;\n    });\n    jobForm.setValue('job_expediting_dates', newExDates);\n  };\n\n  const onChangeExpeditingComment = (id, value) => {\n    const newExDates = immer(expeditingDates, draft => {\n      const indexExDate = _.findIndex(draft, exDate => exDate.id === id);\n\n      draft[indexExDate].comment = value;\n    });\n    jobForm.setValue('job_expediting_dates', newExDates);\n  };\n\n  const onSelectedExDate = ({\n    selectionModel\n  }) => {\n    setSelectedExDates(selectionModel);\n  };\n\n  const onDeleteExDate = () => {\n    const newExDates = expeditingDates.filter(exDate => !selectedExDates.some(item => item === exDate.id));\n    jobForm.setValue('job_expediting_dates', newExDates);\n    setSelectedExDates([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: [/*#__PURE__*/_jsxDEV(AppTitle, {\n        label: \"Standards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        children: /*#__PURE__*/_jsxDEV(List, {\n          dense: true,\n          className: classes.rootList,\n          component: \"div\",\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            component: \"div\",\n            className: clsx(classes.listItem, classes.header),\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              component: Box,\n              fontWeight: 700,\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              component: Box,\n              fontWeight: 700,\n              children: \"Standard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n            onDragEnd: onDragEndItem,\n            children: /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: \"droppable\",\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({\n                className: \"\"\n              }, provided.droppableProps), {}, {\n                ref: provided.innerRef,\n                children: [renderItems(), provided.placeholder]\n              }), void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.expeditionHeader,\n        children: [/*#__PURE__*/_jsxDEV(AppTitle, {\n          label: \"Expediting Dates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.buttonGroup,\n          children: [/*#__PURE__*/_jsxDEV(CreateIcon, {\n            onClick: onAddExpeditingDateRows\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DeleteIcon, {\n            onClick: onDeleteExDate,\n            className: clsx(selectedExDates.length <= 0 && classes.disabled)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          hideFooter: true,\n          disableColumnMenu: true,\n          disableSelectionOnClick: true,\n          checkboxSelection: true,\n          tableHeight: 340,\n          selectionModel: selectedExDates,\n          onSelectionModelChange: onSelectedExDate,\n          rows: expeditingDates,\n          columns: [_objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n            field: 'exp_date',\n            flex: 0.3,\n            headerName: 'Date',\n\n            renderCell(params) {\n              return /*#__PURE__*/_jsxDEV(DataTableDatePicker, {\n                minDate: isCreating ? new Date() : null,\n                params: params,\n                onChangeValue: onChangeExpeditingDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 21\n              }, this);\n            }\n\n          }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.editCell('Comment')), {}, {\n            field: 'comment',\n            flex: 0.7,\n\n            renderEditCell(params) {\n              return /*#__PURE__*/_jsxDEV(DataTableTextField, {\n                params: params,\n                onChangeValue: onChangeExpeditingComment,\n                rules: yup.string().max(255, t('validation_message.ex_date_comment_max'))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 21\n              }, this);\n            }\n\n          })]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\nexport default TabAdditionalInfo;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Job/TabAdditionalInfo/index.tsx"],"names":["useState","useStyles","useDraggableInPortal","useFormContext","useTranslation","useDialogContext","Grid","List","ListItem","Paper","Typography","Box","AppTitle","DataTable","DataTableTextField","DataTableDatePicker","CreateIcon","DeleteIcon","DragIcon","DragDropContext","Droppable","Draggable","clsx","_","v1","uuidv1","format","formatDate","immer","yup","constant","swapOrder","columnProperties","TabAdditionalInfo","t","classes","renderDraggable","isCreating","jobForm","expeditingDates","watch","selectedExDates","setSelectedExDates","renderItems","job_standard","getValues","map","item","index","parameter_id","provided","listItem","innerRef","draggableProps","description","dragHandleProps","dragIcon","id","onAddExpeditingDateRows","newExDate","draft","push","exp_date","Date","DATE_FORMAT","comment","setValue","onDragEndItem","result","source","destination","items","onChangeExpeditingDate","date","value","newExDates","indexExDate","findIndex","exDate","onChangeExpeditingComment","onSelectedExDate","selectionModel","onDeleteExDate","filter","some","rootList","header","droppableProps","placeholder","expeditionHeader","buttonGroup","length","disabled","defaultProperties","field","flex","headerName","renderCell","params","editCell","renderEditCell","string","max"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport useStyles from './styles'\nimport useDraggableInPortal from '@/hooks/useDraggableInPortal'\nimport { useFormContext } from 'react-hook-form'\nimport { useTranslation } from 'next-i18next'\nimport useDialogContext from '../Context/useDialogContext'\n\nimport { Grid, List, ListItem, Paper, Typography, Box } from '@material-ui/core'\n\nimport {\n  AppTitle,\n  DataTable,\n  DataTableTextField,\n  DataTableDatePicker,\n  CreateIcon,\n  DeleteIcon,\n  DragIcon\n} from '@/components'\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\n\nimport clsx from 'clsx'\nimport _ from 'lodash'\nimport { v1 as uuidv1 } from 'uuid'\nimport { format as formatDate } from 'date-fns'\nimport immer from 'immer'\nimport * as yup from 'yup'\n\nimport * as constant from '@/utils/constant'\nimport swapOrder from '@/utils/swapOrder'\nimport * as columnProperties from '@/utils/columnProperties'\n\nimport type { JobDetail } from '@/types/Job'\n\nfunction TabAdditionalInfo() {\n  const { t } = useTranslation('job')\n  const classes = useStyles()\n  const renderDraggable = useDraggableInPortal()\n  const { isCreating } = useDialogContext()\n\n  const jobForm = useFormContext<JobDetail>()\n  const expeditingDates = jobForm.watch('job_expediting_dates', [])\n\n  const [selectedExDates, setSelectedExDates] = useState<string[]>([])\n\n  const renderItems = () => {\n    const { job_standard } = jobForm.getValues()\n    return job_standard.map((item, index) => (\n      <Draggable key={item.id} draggableId={item.parameter_id} index={index}>\n        {renderDraggable((provided) => (\n          <ListItem component=\"div\" className={classes.listItem} ref={provided.innerRef} {...provided.draggableProps}>\n            <Typography variant=\"caption\" component=\"div\">\n              {index + 1}\n            </Typography>\n            <Typography variant=\"caption\" component=\"div\">\n              {item.parameter_id + ' - ' + item.description}\n            </Typography>\n            <span {...provided.dragHandleProps} className={classes.dragIcon}>\n              <DragIcon />\n            </span>\n          </ListItem>\n        ))}\n      </Draggable>\n    ))\n  }\n\n  const onAddExpeditingDateRows = () => {\n    const newExDate = immer(expeditingDates, (draft) => {\n      draft.push({\n        id: uuidv1(),\n        exp_date: formatDate(new Date(), constant.DATE_FORMAT),\n        comment: ''\n      })\n    })\n    jobForm.setValue('job_expediting_dates', newExDate)\n  }\n\n  const onDragEndItem = (result) => {\n    if (result.source && result.destination) {\n      const { job_standard } = jobForm.getValues()\n      const items = swapOrder(job_standard, result.source.index, result.destination.index)\n      jobForm.setValue('job_standard', items)\n    }\n  }\n\n  const onChangeExpeditingDate = (id, date) => {\n    const value = formatDate(date, constant.DATE_FORMAT)\n    const newExDates = immer(expeditingDates, (draft) => {\n      const indexExDate = _.findIndex(draft, (exDate) => exDate.id === id)\n      draft[indexExDate].exp_date = value\n    })\n    jobForm.setValue('job_expediting_dates', newExDates)\n  }\n\n  const onChangeExpeditingComment = (id, value) => {\n    const newExDates = immer(expeditingDates, (draft) => {\n      const indexExDate = _.findIndex(draft, (exDate) => exDate.id === id)\n      draft[indexExDate].comment = value\n    })\n    jobForm.setValue('job_expediting_dates', newExDates)\n  }\n\n  const onSelectedExDate = ({ selectionModel }) => {\n    setSelectedExDates(selectionModel)\n  }\n\n  const onDeleteExDate = () => {\n    const newExDates = expeditingDates.filter((exDate) => !selectedExDates.some((item) => item === exDate.id))\n    jobForm.setValue('job_expediting_dates', newExDates)\n    setSelectedExDates([])\n  }\n\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={6}>\n        <AppTitle label=\"Standards\" />\n        <Paper>\n          <List dense className={classes.rootList} component=\"div\">\n            <ListItem component=\"div\" className={clsx(classes.listItem, classes.header)}>\n              <Typography variant=\"caption\" component={Box} fontWeight={700}>\n                #\n              </Typography>\n              <Typography variant=\"caption\" component={Box} fontWeight={700}>\n                Standard\n              </Typography>\n            </ListItem>\n\n            <DragDropContext onDragEnd={onDragEndItem}>\n              <Droppable droppableId=\"droppable\">\n                {(provided) => (\n                  <div className=\"\" {...provided.droppableProps} ref={provided.innerRef}>\n                    {renderItems()}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n          </List>\n        </Paper>\n      </Grid>\n\n      <Grid item xs={6}>\n        <div className={classes.expeditionHeader}>\n          <AppTitle label=\"Expediting Dates\" />\n          <div className={classes.buttonGroup}>\n            <CreateIcon onClick={onAddExpeditingDateRows} />\n            <DeleteIcon onClick={onDeleteExDate} className={clsx(selectedExDates.length <= 0 && classes.disabled)} />\n          </div>\n        </div>\n        <Paper>\n          <DataTable\n            hideFooter\n            disableColumnMenu\n            disableSelectionOnClick\n            checkboxSelection\n            tableHeight={340}\n            selectionModel={selectedExDates}\n            onSelectionModelChange={onSelectedExDate}\n            rows={expeditingDates}\n            columns={[\n              {\n                ...columnProperties.defaultProperties,\n                field: 'exp_date',\n                flex: 0.3,\n                headerName: 'Date',\n                renderCell(params) {\n                  return (\n                    <DataTableDatePicker\n                      minDate={isCreating ? new Date() : null}\n                      params={params}\n                      onChangeValue={onChangeExpeditingDate}\n                    />\n                  )\n                }\n              },\n              {\n                ...columnProperties.defaultProperties,\n                ...columnProperties.editCell('Comment'),\n                field: 'comment',\n                flex: 0.7,\n                renderEditCell(params) {\n                  return (\n                    <DataTableTextField\n                      params={params}\n                      onChangeValue={onChangeExpeditingComment}\n                      rules={yup.string().max(255, t('validation_message.ex_date_comment_max'))}\n                    />\n                  )\n                }\n              }\n            ]}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default TabAdditionalInfo\n"]},"metadata":{},"sourceType":"module"}