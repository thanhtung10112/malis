{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Job\\\\TableJobCurrencies\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect, memo } from 'react';\nimport { Grid, Button } from '@material-ui/core';\nimport { DataTable, AppTitle, AppAutocompleteStyled, DeleteIcon, DataTableCellExpand, DataTableNumberField } from '@/components';\nimport { useSelector } from 'react-redux';\nimport { useFormContext } from 'react-hook-form';\nimport useStyles from './styles';\nimport { useTranslation } from 'next-i18next';\nimport _ from 'lodash';\nimport immer from 'immer';\nimport { currencyRateFormat } from '@/utils/constant';\nimport * as columnProperties from '@/utils/columnProperties';\nimport AppNumber from '@/helper/AppNumber';\nimport { jobStore } from '@/store/reducers';\nimport * as yup from 'yup';\n\nfunction TableJobCurrencies() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation('currency'),\n      t = _useTranslation.t;\n\n  var jobForm = useFormContext();\n  var watchJobCurrencies = jobForm.watch('job_currencies', []);\n\n  var _useSelector = useSelector(jobStore.selectInitDataForCE),\n      currencies = _useSelector.currencies;\n\n  var jobDetail = useSelector(jobStore.selectDetail);\n\n  var _useState = useState([]),\n      selectedCurrencies = _useState[0],\n      setSelectedCurrencies = _useState[1];\n\n  var _useState2 = useState(null),\n      selectedCurrency = _useState2[0],\n      setSelectedCurrency = _useState2[1];\n\n  useEffect(function () {\n    setSelectedCurrency(null);\n  }, [jobDetail]);\n\n  var onSelectJobCurrency = function onSelectJobCurrency(event, value) {\n    setSelectedCurrency(value);\n    var newJobCurrencies = immer(watchJobCurrencies, function (draft) {\n      draft.push(value);\n    });\n    jobForm.setValue('job_currencies', newJobCurrencies);\n  };\n\n  var onSelectedCurrencies = function onSelectedCurrencies(_ref) {\n    var selectionModel = _ref.selectionModel;\n    setSelectedCurrencies(selectionModel);\n  };\n\n  var onDeleteSelectedCurrencies = function onDeleteSelectedCurrencies() {\n    var newJobCurrencies = watchJobCurrencies.filter(function (currency) {\n      return !selectedCurrencies.some(function (selC) {\n        return selC === currency.id;\n      });\n    });\n    jobForm.setValue('job_currencies', newJobCurrencies);\n    setSelectedCurrencies([]);\n  };\n\n  var onChangeRateCurrency = function onChangeRateCurrency(id, rate) {\n    var newJobCurrencies = immer(watchJobCurrencies, function (draft) {\n      var index = _.findIndex(draft, {\n        id: id\n      });\n\n      draft[index].rate = rate;\n    });\n    jobForm.setValue('job_currencies', newJobCurrencies);\n  };\n\n  var columns = [{\n    field: 'description',\n    headerName: 'Currency',\n    flex: 0.7,\n    sortable: false\n  }, _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.numberColumn), columnProperties.editCell('Rate')), {}, {\n    field: 'rate',\n    flex: 0.3,\n    renderCell: function renderCell(params) {\n      var value = AppNumber.format(params.value, currencyRateFormat);\n      return /*#__PURE__*/_jsxDEV(DataTableCellExpand, {\n        value: value,\n        width: params.colDef.width\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 16\n      }, this);\n    },\n    renderEditCell: function renderEditCell(params) {\n      return /*#__PURE__*/_jsxDEV(DataTableNumberField, {\n        params: params,\n        onChangeValue: onChangeRateCurrency,\n        decimalScale: currencyRateFormat.precision,\n        fixedDecimalScale: currencyRateFormat.precision,\n        rules: yup.number().nullable().required(t('validation_message.rate_required')).min(currencyRateFormat.min, t('validation_message.rate_range')).max(currencyRateFormat.max, t('validation_message.rate_range'))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this);\n    }\n  })];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(AppTitle, {\n        label: \"Currency Rate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.currencyTop,\n        children: [/*#__PURE__*/_jsxDEV(AppAutocompleteStyled, {\n          value: selectedCurrency,\n          width: 280,\n          height: 30,\n          label: \"Currency\",\n          options: currencies,\n          renderOption: function renderOption(option) {\n            return option.description;\n          },\n          className: classes.currencyOption,\n          onChange: onSelectJobCurrency,\n          getOptionDisabled: function getOptionDisabled(option) {\n            return watchJobCurrencies.some(function (currency) {\n              return currency.id === option.id;\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 24\n          }, this),\n          className: classes.deleteButton,\n          disabled: selectedCurrencies.length <= 0,\n          onClick: onDeleteSelectedCurrencies,\n          children: t('common:button.delete')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.currencyTable,\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        hideFooter: true,\n        disableSelectionOnClick: true,\n        disableColumnMenu: true,\n        checkboxSelection: true,\n        selectionModel: selectedCurrencies,\n        columns: columns,\n        rows: watchJobCurrencies,\n        tableHeight: 110,\n        onSelectionModelChange: onSelectedCurrencies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TableJobCurrencies, \"lxVPngTp921PBn4DeuFqTaDw4OE=\", false, function () {\n  return [useStyles, useTranslation, useFormContext, useSelector, useSelector];\n});\n\n_c = TableJobCurrencies;\nexport default _c2 = /*#__PURE__*/memo(TableJobCurrencies);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TableJobCurrencies\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Job/TableJobCurrencies/index.tsx"],"names":["useState","useEffect","memo","Grid","Button","DataTable","AppTitle","AppAutocompleteStyled","DeleteIcon","DataTableCellExpand","DataTableNumberField","useSelector","useFormContext","useStyles","useTranslation","_","immer","currencyRateFormat","columnProperties","AppNumber","jobStore","yup","TableJobCurrencies","classes","t","jobForm","watchJobCurrencies","watch","selectInitDataForCE","currencies","jobDetail","selectDetail","selectedCurrencies","setSelectedCurrencies","selectedCurrency","setSelectedCurrency","onSelectJobCurrency","event","value","newJobCurrencies","draft","push","setValue","onSelectedCurrencies","selectionModel","onDeleteSelectedCurrencies","filter","currency","some","selC","id","onChangeRateCurrency","rate","index","findIndex","columns","field","headerName","flex","sortable","defaultProperties","numberColumn","editCell","renderCell","params","format","colDef","width","renderEditCell","precision","number","nullable","required","min","max","currencyTop","option","description","currencyOption","deleteButton","length","currencyTable"],"mappings":"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","sourcesContent":["import { useState, useEffect, memo } from 'react'\n\nimport { Grid, Button } from '@material-ui/core'\n\nimport {\n  DataTable,\n  AppTitle,\n  AppAutocompleteStyled,\n  DeleteIcon,\n  DataTableCellExpand,\n  DataTableNumberField\n} from '@/components'\n\nimport { useSelector } from 'react-redux'\nimport { useFormContext } from 'react-hook-form'\nimport useStyles from './styles'\nimport { useTranslation } from 'next-i18next'\n\nimport _ from 'lodash'\nimport immer from 'immer'\nimport { currencyRateFormat } from '@/utils/constant'\nimport * as columnProperties from '@/utils/columnProperties'\nimport AppNumber from '@/helper/AppNumber'\nimport { jobStore } from '@/store/reducers'\nimport * as yup from 'yup'\n\nimport type { JobDetail, JobCurrency } from '@/types/Job'\nimport type { GridColumns } from '@material-ui/data-grid'\n\nfunction TableJobCurrencies() {\n  const classes = useStyles()\n  const { t } = useTranslation('currency')\n\n  const jobForm = useFormContext<JobDetail>()\n  const watchJobCurrencies = jobForm.watch('job_currencies', [])\n\n  const { currencies } = useSelector(jobStore.selectInitDataForCE)\n  const jobDetail = useSelector(jobStore.selectDetail)\n\n  const [selectedCurrencies, setSelectedCurrencies] = useState<number[]>([])\n  const [selectedCurrency, setSelectedCurrency] = useState<JobCurrency>(null)\n\n  useEffect(() => {\n    setSelectedCurrency(null)\n  }, [jobDetail])\n\n  const onSelectJobCurrency = (event, value: JobCurrency) => {\n    setSelectedCurrency(value)\n    const newJobCurrencies = immer(watchJobCurrencies, (draft) => {\n      draft.push(value)\n    })\n    jobForm.setValue('job_currencies', newJobCurrencies)\n  }\n\n  const onSelectedCurrencies = ({ selectionModel }) => {\n    setSelectedCurrencies(selectionModel)\n  }\n\n  const onDeleteSelectedCurrencies = () => {\n    const newJobCurrencies = watchJobCurrencies.filter(\n      (currency) => !selectedCurrencies.some((selC) => selC === currency.id)\n    )\n    jobForm.setValue('job_currencies', newJobCurrencies)\n    setSelectedCurrencies([])\n  }\n\n  const onChangeRateCurrency = (id, rate) => {\n    const newJobCurrencies = immer(watchJobCurrencies, (draft) => {\n      const index = _.findIndex(draft, { id })\n      draft[index].rate = rate\n    })\n    jobForm.setValue('job_currencies', newJobCurrencies)\n  }\n\n  const columns: GridColumns = [\n    {\n      field: 'description',\n      headerName: 'Currency',\n      flex: 0.7,\n      sortable: false\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.numberColumn,\n      ...columnProperties.editCell('Rate'),\n      field: 'rate',\n      flex: 0.3,\n      renderCell(params) {\n        const value = AppNumber.format(params.value, currencyRateFormat)\n        return <DataTableCellExpand value={value} width={params.colDef.width} />\n      },\n      renderEditCell(params) {\n        return (\n          <DataTableNumberField\n            params={params}\n            onChangeValue={onChangeRateCurrency}\n            decimalScale={currencyRateFormat.precision}\n            fixedDecimalScale={currencyRateFormat.precision}\n            rules={yup\n              .number()\n              .nullable()\n              .required(t('validation_message.rate_required'))\n              .min(currencyRateFormat.min, t('validation_message.rate_range'))\n              .max(currencyRateFormat.max, t('validation_message.rate_range'))}\n          />\n        )\n      }\n    }\n  ]\n\n  return (\n    <>\n      <Grid item xs={12}>\n        <AppTitle label=\"Currency Rate\" />\n      </Grid>\n\n      <Grid item xs={12}>\n        <div className={classes.currencyTop}>\n          <AppAutocompleteStyled\n            value={selectedCurrency}\n            width={280}\n            height={30}\n            label=\"Currency\"\n            options={currencies}\n            renderOption={(option) => option.description}\n            className={classes.currencyOption}\n            onChange={onSelectJobCurrency}\n            getOptionDisabled={(option) => watchJobCurrencies.some((currency) => currency.id === option.id)}\n          />\n          <Button\n            startIcon={<DeleteIcon />}\n            className={classes.deleteButton}\n            disabled={selectedCurrencies.length <= 0}\n            onClick={onDeleteSelectedCurrencies}\n          >\n            {t('common:button.delete')}\n          </Button>\n        </div>\n      </Grid>\n\n      <Grid item xs={12} className={classes.currencyTable}>\n        <DataTable\n          hideFooter\n          disableSelectionOnClick\n          disableColumnMenu\n          checkboxSelection\n          selectionModel={selectedCurrencies}\n          columns={columns}\n          rows={watchJobCurrencies}\n          tableHeight={110}\n          onSelectionModelChange={onSelectedCurrencies}\n        />\n      </Grid>\n    </>\n  )\n}\n\nexport default memo(TableJobCurrencies)\n"]},"metadata":{},"sourceType":"module"}