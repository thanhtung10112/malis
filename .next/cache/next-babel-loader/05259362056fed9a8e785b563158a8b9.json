{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport useStyles from './styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Paper, Link } from '@material-ui/core';\nimport { DataTable, CreateIcon, DeleteIcon, useConfirm, AppButton } from '@/components';\nimport { defaultProperties, rightColumn } from '@/utils/columnProperties';\nimport { drawingStore, itemStore, partStore } from '@/store/reducers';\nimport _ from 'lodash';\nimport { isAssemblyByDpn } from '@/utils/isAssembly';\n\nvar TabComponent = function TabComponent() {\n  var classes = useStyles();\n\n  var _useConfirm = useConfirm(),\n      confirm = _useConfirm.confirm;\n\n  var _useState = useState([]),\n      selectedRows = _useState[0],\n      setSelectedRows = _useState[1];\n\n  var dispatch = useDispatch();\n  var componentList = useSelector(drawingStore.selectComponentList);\n  useEffect(function () {\n    setSelectedRows([]);\n  }, [componentList]);\n\n  var handleOpenComponentDialog = function handleOpenComponentDialog(partEntity) {\n    return function () {\n      dispatch(drawingStore.sagaOpenCreatePartDialog(partEntity));\n    };\n  };\n\n  var handleSelectRows = function handleSelectRows(_ref) {\n    var selectionModel = _ref.selectionModel;\n    setSelectedRows(selectionModel);\n  };\n\n  var buildDescription = function buildDescription() {\n    if (selectedRows.length > 1) {\n      return \"Are you sure you want to delete \".concat(selectedRows.length, \" selected parts?\");\n    }\n\n    return \"Are you sure you want to delete \".concat(selectedRows.length, \" selected part?\");\n  };\n\n  var handleDeleteItems = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var description, result, parts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              description = buildDescription();\n              _context.next = 3;\n              return confirm({\n                description: description\n              });\n\n            case 3:\n              result = _context.sent;\n\n              if (result === 'OK') {\n                parts = _.map(selectedRows, function (partId) {\n                  var _$find = _.find(componentList, {\n                    id: partId\n                  }),\n                      dpn = _$find.dpn,\n                      id = _$find.id;\n\n                  return {\n                    entity_id: dpn,\n                    id: id\n                  };\n                });\n                dispatch(itemStore.sagaRemove(parts));\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleDeleteItems() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleOpenPartDialog = function handleOpenPartDialog(id, dpn) {\n    return function (event) {\n      event.preventDefault();\n      var entity = isAssemblyByDpn(dpn) ? 'assembly' : 'item';\n      dispatch(partStore.sagaOpenUpdateDialog({\n        id: id,\n        entity: entity\n      }));\n    };\n  };\n\n  var newButtonDropdown = [{\n    label: 'Item',\n    onClick: handleOpenComponentDialog('item')\n  }, {\n    label: 'Assembly',\n    onClick: handleOpenComponentDialog('assembly')\n  }];\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: classes.buttonGroupRoot,\n      children: [/*#__PURE__*/_jsx(AppButton, {\n        startIcon: /*#__PURE__*/_jsx(CreateIcon, {}),\n        item: newButtonDropdown,\n        children: \"New\"\n      }), /*#__PURE__*/_jsx(AppButton, {\n        startIcon: /*#__PURE__*/_jsx(DeleteIcon, {}),\n        onClick: handleDeleteItems,\n        disabled: selectedRows.length === 0,\n        children: \"Remove\"\n      })]\n    }), /*#__PURE__*/_jsx(Paper, {\n      elevation: 1,\n      children: /*#__PURE__*/_jsx(DataTable, {\n        rows: componentList,\n        checkboxSelection: true,\n        selectionModel: selectedRows,\n        onSelectionModelChange: handleSelectRows,\n        onCellClick: function onCellClick(params, event) {\n          if (['dpn', 'reference_to'].includes(params.field)) {\n            event.stopPropagation();\n          }\n        },\n        columns: [_objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'dpn',\n          headerName: 'Item',\n          flex: 0.2,\n          renderCell: function renderCell(params) {\n            var value = params.value,\n                id = params.id;\n            return /*#__PURE__*/_jsx(Link, {\n              href: \"#\",\n              onClick: handleOpenPartDialog(id, value),\n              children: value\n            });\n          }\n        }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'reference_to',\n          headerName: 'Referenced Part Number',\n          flex: 0.2,\n          renderCell: function renderCell(params) {\n            var value = params.value,\n                row = params.row;\n            return /*#__PURE__*/_jsx(Link, {\n              href: \"#\",\n              onClick: handleOpenPartDialog(row.id_ref, value),\n              children: value\n            });\n          }\n        }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'description',\n          headerName: 'Description',\n          flex: 0.2\n        }), _objectSpread(_objectSpread(_objectSpread({}, defaultProperties), rightColumn), {}, {\n          field: 'mass',\n          headerName: 'Mass (kg)',\n          flex: 0.1\n        }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'raw_unit',\n          headerName: 'Unit',\n          flex: 0.1\n        }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'material',\n          headerName: 'Material',\n          flex: 0.1\n        })],\n        hideFooter: true,\n        tableHeight: 385\n      })\n    })]\n  });\n};\n\nexport default TabComponent;","map":null,"metadata":{},"sourceType":"module"}