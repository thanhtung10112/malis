{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { takeEvery, put, call, putResolve } from 'redux-saga/effects';\nimport { select, all } from 'typed-redux-saga';\nimport _ from 'lodash';\nimport { specificationStore, commonStore, advancedFilterActions, summaryReportActions, drawingStore } from '@/store/reducers';\nimport specificationApi from '@/apis/specification.api';\n\nfunction* fetchSpecificationInitDataForList() {\n  const userJob = yield* select(commonStore.selectUserValueJob);\n  const data = yield call(specificationApi.getInitDataForList, {\n    job_id_pk: userJob.value\n  });\n\n  if (_.isNull(data.selected_job)) {\n    data.selected_job = {};\n  }\n\n  yield put(commonStore.actions.setUserValueJob(data.selected_job));\n  yield put(specificationStore.actions.setInitDataForList(data));\n}\n\nfunction* fetchSpecificationInitDataForCE(jobId = null) {\n  const userJob = yield* select(commonStore.selectUserValueJob);\n\n  const _yield$call = yield call(specificationApi.getInitDataForCE, {\n    job_id_pk: jobId || userJob.value\n  }),\n        {\n    permissions,\n    selected_job\n  } = _yield$call,\n        dataInit = _objectWithoutProperties(_yield$call, [\"permissions\", \"selected_job\"]);\n\n  yield put(specificationStore.actions.setInitDataForCE(dataInit));\n  yield put(specificationStore.actions.setDetail({\n    job_id: selected_job.value\n  }));\n}\n\nfunction* createSpecification({\n  payload\n}) {\n  yield put(specificationStore.actions.setDialogStateLoading(true));\n\n  try {\n    yield call(fetchSpecificationInitDataForCE);\n    const {\n      message\n    } = yield call(specificationApi.create, payload);\n    const userJob = yield* select(commonStore.selectUserValueJob);\n    yield putResolve(specificationStore.actions.resetDetail({\n      userJob\n    }));\n    yield all([put(commonStore.actions.setSuccessMessage(message)), put(specificationStore.actions.setDialogStateTab(0))]);\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(specificationStore.actions.setDialogStateLoading(false));\n}\n\nfunction* getSpecGenerateCode({\n  payload\n}) {\n  yield put(specificationStore.actions.setDialogStateLoading(true));\n\n  try {\n    const {\n      drawing,\n      formData\n    } = payload;\n    const {\n      generated_code\n    } = yield call(specificationApi.getGenerateCode, drawing.value);\n    yield put(specificationStore.actions.setDetail(_objectSpread(_objectSpread({}, formData), {}, {\n      drawing_id: drawing,\n      spec_id: generated_code\n    })));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(specificationStore.actions.setDialogStateLoading(false));\n}\n\nfunction* openSpecificationCreateDialog() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchSpecificationInitDataForCE);\n    yield put(specificationStore.actions.setDialogStateOpen(true));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* fetchSpecificationList() {\n  const {\n    tableState,\n    searchQuery,\n    filterData,\n    userJob\n  } = yield* all({\n    tableState: select(commonStore.selectTableState),\n    searchQuery: select(commonStore.selectSearchQuery),\n    filterData: select(advancedFilterActions.selectFilterData),\n    userJob: select(commonStore.selectUserValueJob)\n  });\n\n  if (!userJob.value) {\n    return;\n  }\n\n  const {\n    page,\n    per_page\n  } = tableState;\n  const data = yield call(specificationApi.getList, _objectSpread({\n    per_page,\n    page,\n    s: searchQuery,\n    job_id: userJob.value\n  }, filterData));\n  yield put(commonStore.actions.setTableState({\n    total_items: data.total_items\n  }));\n  yield put(specificationStore.actions.setDataList(data.specifications));\n}\n\nfunction* closeSpecificationDialog() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    const userJob = yield* select(commonStore.selectUserValueJob);\n    yield put(specificationStore.actions.setDialogStateOpen(false));\n    yield call(getSpecificationList);\n    yield put(specificationStore.actions.resetDetail({\n      userJob\n    }));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* getSpecificationList() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchSpecificationInitDataForList);\n    const permissions = yield* select(specificationStore.selectPermissions);\n\n    if (permissions === null || permissions === void 0 ? void 0 : permissions.view) {\n      yield call(fetchSpecificationList);\n    }\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* removeSpecs({\n  payload\n}) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    const data = yield call(specificationApi.executeOperation, 'delete', payload);\n\n    if (data.failed_count > 0) {\n      yield put(summaryReportActions.setReportData(data));\n      yield put(summaryReportActions.setOpen(true));\n    } else {\n      yield put(commonStore.actions.setSuccessMessage(data.message));\n    }\n\n    yield call(fetchSpecificationList);\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* changeUserJob({\n  payload\n}) {\n  yield put(commonStore.actions.setUserValueJob(payload));\n  yield call(getSpecificationList);\n}\n\nfunction getSpecificationId(spec_id) {\n  const REGEX = /D\\S+/g;\n  const match = spec_id.match(REGEX);\n\n  if (_.isArray(match)) {\n    return match[0];\n  }\n\n  return '';\n}\n\nfunction* openDrawingDialog({\n  payload\n}) {\n  try {\n    const {\n      drawing_id\n    } = payload;\n    yield put(specificationStore.actions.setDetail(payload));\n    yield put(drawingStore.sagaOpenUpdateDialog(drawing_id.value));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n}\n\nexport function* fetchSpecificationDetail(specId) {\n  const {\n    specification\n  } = yield call(specificationApi.getDetail, specId);\n  specification.drawing_id = specification.related_drawing;\n  specification.spec_id = getSpecificationId(specification.spec_id);\n  return specification;\n}\n\nfunction* openSpecUpdateDialog({\n  payload\n}) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    const specification = yield call(fetchSpecificationDetail, payload);\n    yield call(fetchSpecificationInitDataForCE, specification.job_id);\n    yield putResolve(specificationStore.actions.setDetail(specification));\n    yield put(specificationStore.actions.setDialogState({\n      editMode: true,\n      open: true\n    }));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* updateSpec({\n  payload\n}) {\n  yield put(specificationStore.actions.setDialogStateLoading(true));\n\n  try {\n    const {\n      id,\n      formData\n    } = payload;\n    const {\n      message\n    } = yield call(specificationApi.update, id, formData);\n    yield call(closeSpecificationDialog);\n    yield put(commonStore.actions.setSuccessMessage(message));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(specificationStore.actions.setDialogStateLoading(false));\n}\n\nfunction* specificationSaga() {\n  yield takeEvery(specificationStore.sagaGetList, getSpecificationList);\n  yield takeEvery(specificationStore.sagaCreate, createSpecification);\n  yield takeEvery(specificationStore.sagaGenerateCode, getSpecGenerateCode);\n  yield takeEvery(specificationStore.sagaOpenCreateDialog, openSpecificationCreateDialog);\n  yield takeEvery(specificationStore.sagaCloseDialog, closeSpecificationDialog);\n  yield takeEvery(specificationStore.sagaRemove, removeSpecs);\n  yield takeEvery(specificationStore.sagaChangeUserJob, changeUserJob);\n  yield takeEvery(specificationStore.sagaOpenUpdateDialog, openSpecUpdateDialog);\n  yield takeEvery(specificationStore.sagaUpdate, updateSpec);\n  yield takeEvery(specificationStore.sagaOpenDrawingDialog, openDrawingDialog);\n}\n\nexport default specificationSaga;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/saga/specification.saga.ts"],"names":["takeEvery","put","call","putResolve","select","all","_","specificationStore","commonStore","advancedFilterActions","summaryReportActions","drawingStore","specificationApi","fetchSpecificationInitDataForList","userJob","selectUserValueJob","data","getInitDataForList","job_id_pk","value","isNull","selected_job","actions","setUserValueJob","setInitDataForList","fetchSpecificationInitDataForCE","jobId","getInitDataForCE","permissions","dataInit","setInitDataForCE","setDetail","job_id","createSpecification","payload","setDialogStateLoading","message","create","resetDetail","setSuccessMessage","setDialogStateTab","error","setError","getSpecGenerateCode","drawing","formData","generated_code","getGenerateCode","drawing_id","spec_id","openSpecificationCreateDialog","setLoadingPage","setDialogStateOpen","fetchSpecificationList","tableState","searchQuery","filterData","selectTableState","selectSearchQuery","selectFilterData","page","per_page","getList","s","setTableState","total_items","setDataList","specifications","closeSpecificationDialog","getSpecificationList","selectPermissions","view","removeSpecs","executeOperation","failed_count","setReportData","setOpen","changeUserJob","getSpecificationId","REGEX","match","isArray","openDrawingDialog","sagaOpenUpdateDialog","fetchSpecificationDetail","specId","specification","getDetail","related_drawing","openSpecUpdateDialog","setDialogState","editMode","open","updateSpec","id","update","specificationSaga","sagaGetList","sagaCreate","sagaGenerateCode","sagaOpenCreateDialog","sagaCloseDialog","sagaRemove","sagaChangeUserJob","sagaUpdate","sagaOpenDrawingDialog"],"mappings":"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","sourcesContent":["import { takeEvery, put, call, putResolve } from 'redux-saga/effects'\nimport { select, all } from 'typed-redux-saga'\nimport _ from 'lodash'\n\nimport {\n  specificationStore,\n  commonStore,\n  advancedFilterActions,\n  summaryReportActions,\n  drawingStore\n} from '@/store/reducers'\n\nimport specificationApi from '@/apis/specification.api'\n\nimport type { DataForDropdown } from '@/types/Common'\n\nfunction* fetchSpecificationInitDataForList() {\n  const userJob = yield* select(commonStore.selectUserValueJob)\n  const data = yield call(specificationApi.getInitDataForList, {\n    job_id_pk: userJob.value\n  })\n  if (_.isNull(data.selected_job)) {\n    data.selected_job = {}\n  }\n  yield put(commonStore.actions.setUserValueJob(data.selected_job))\n  yield put(specificationStore.actions.setInitDataForList(data))\n}\n\nfunction* fetchSpecificationInitDataForCE(jobId = null) {\n  const userJob = yield* select(commonStore.selectUserValueJob)\n  const { permissions, selected_job, ...dataInit } = yield call(specificationApi.getInitDataForCE, {\n    job_id_pk: jobId || userJob.value\n  })\n  yield put(specificationStore.actions.setInitDataForCE(dataInit))\n  yield put(specificationStore.actions.setDetail({ job_id: selected_job.value }))\n}\n\nfunction* createSpecification({ payload }: ReturnType<typeof specificationStore.sagaCreate>) {\n  yield put(specificationStore.actions.setDialogStateLoading(true))\n  try {\n    yield call(fetchSpecificationInitDataForCE)\n    const { message } = yield call(specificationApi.create, payload)\n    const userJob = yield* select(commonStore.selectUserValueJob)\n    yield putResolve(specificationStore.actions.resetDetail({ userJob }))\n    yield all([\n      put(commonStore.actions.setSuccessMessage(message)),\n      put(specificationStore.actions.setDialogStateTab(0))\n    ])\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(specificationStore.actions.setDialogStateLoading(false))\n}\n\nfunction* getSpecGenerateCode({ payload }: ReturnType<typeof specificationStore.sagaGenerateCode>) {\n  yield put(specificationStore.actions.setDialogStateLoading(true))\n\n  try {\n    const { drawing, formData } = payload\n    const { generated_code } = yield call(specificationApi.getGenerateCode, drawing.value)\n\n    yield put(\n      specificationStore.actions.setDetail({\n        ...formData,\n        drawing_id: drawing,\n        spec_id: generated_code\n      })\n    )\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n\n  yield put(specificationStore.actions.setDialogStateLoading(false))\n}\n\nfunction* openSpecificationCreateDialog() {\n  yield put(commonStore.actions.setLoadingPage(true))\n\n  try {\n    yield call(fetchSpecificationInitDataForCE)\n    yield put(specificationStore.actions.setDialogStateOpen(true))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* fetchSpecificationList() {\n  const { tableState, searchQuery, filterData, userJob } = yield* all({\n    tableState: select(commonStore.selectTableState),\n    searchQuery: select(commonStore.selectSearchQuery),\n    filterData: select(advancedFilterActions.selectFilterData),\n    userJob: select(commonStore.selectUserValueJob)\n  })\n  if (!userJob.value) {\n    return\n  }\n  const { page, per_page } = tableState\n  const data = yield call(specificationApi.getList, {\n    per_page,\n    page,\n    s: searchQuery,\n    job_id: userJob.value,\n    ...filterData\n  })\n  yield put(commonStore.actions.setTableState({ total_items: data.total_items }))\n  yield put(specificationStore.actions.setDataList(data.specifications))\n}\n\nfunction* closeSpecificationDialog() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    const userJob = yield* select(commonStore.selectUserValueJob)\n    yield put(specificationStore.actions.setDialogStateOpen(false))\n    yield call(getSpecificationList)\n    yield put(specificationStore.actions.resetDetail({ userJob }))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* getSpecificationList() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchSpecificationInitDataForList)\n    const permissions = yield* select(specificationStore.selectPermissions)\n    if (permissions?.view) {\n      yield call(fetchSpecificationList)\n    }\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* removeSpecs({ payload }: ReturnType<typeof specificationStore.sagaRemove>) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    const data = yield call(specificationApi.executeOperation, 'delete', payload)\n\n    if (data.failed_count > 0) {\n      yield put(summaryReportActions.setReportData(data))\n      yield put(summaryReportActions.setOpen(true))\n    } else {\n      yield put(commonStore.actions.setSuccessMessage(data.message))\n    }\n    yield call(fetchSpecificationList)\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* changeUserJob({ payload }: ReturnType<typeof specificationStore.sagaChangeUserJob>) {\n  yield put(commonStore.actions.setUserValueJob(payload))\n  yield call(getSpecificationList)\n}\n\nfunction getSpecificationId(spec_id: string) {\n  const REGEX = /D\\S+/g\n  const match = spec_id.match(REGEX)\n  if (_.isArray(match)) {\n    return match[0]\n  }\n  return ''\n}\n\nfunction* openDrawingDialog({ payload }: ReturnType<typeof specificationStore.sagaOpenDrawingDialog>) {\n  try {\n    const { drawing_id } = payload\n    yield put(specificationStore.actions.setDetail(payload))\n    yield put(drawingStore.sagaOpenUpdateDialog((drawing_id as DataForDropdown).value))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n}\n\nexport function* fetchSpecificationDetail(specId: number) {\n  const { specification } = yield call(specificationApi.getDetail, specId)\n  specification.drawing_id = specification.related_drawing\n  specification.spec_id = getSpecificationId(specification.spec_id)\n  return specification\n}\n\nfunction* openSpecUpdateDialog({ payload }: ReturnType<typeof specificationStore.sagaOpenUpdateDialog>) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    const specification = yield call(fetchSpecificationDetail, payload)\n    yield call(fetchSpecificationInitDataForCE, specification.job_id)\n    yield putResolve(specificationStore.actions.setDetail(specification))\n    yield put(specificationStore.actions.setDialogState({ editMode: true, open: true }))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* updateSpec({ payload }: ReturnType<typeof specificationStore.sagaUpdate>) {\n  yield put(specificationStore.actions.setDialogStateLoading(true))\n  try {\n    const { id, formData } = payload\n    const { message } = yield call(specificationApi.update, id, formData)\n    yield call(closeSpecificationDialog)\n    yield put(commonStore.actions.setSuccessMessage(message))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(specificationStore.actions.setDialogStateLoading(false))\n}\n\nfunction* specificationSaga() {\n  yield takeEvery(specificationStore.sagaGetList, getSpecificationList)\n  yield takeEvery(specificationStore.sagaCreate, createSpecification)\n  yield takeEvery(specificationStore.sagaGenerateCode, getSpecGenerateCode)\n  yield takeEvery(specificationStore.sagaOpenCreateDialog, openSpecificationCreateDialog)\n  yield takeEvery(specificationStore.sagaCloseDialog, closeSpecificationDialog)\n  yield takeEvery(specificationStore.sagaRemove, removeSpecs)\n  yield takeEvery(specificationStore.sagaChangeUserJob, changeUserJob)\n  yield takeEvery(specificationStore.sagaOpenUpdateDialog, openSpecUpdateDialog)\n  yield takeEvery(specificationStore.sagaUpdate, updateSpec)\n  yield takeEvery(specificationStore.sagaOpenDrawingDialog, openDrawingDialog)\n}\n\nexport default specificationSaga\n"]},"metadata":{},"sourceType":"module"}