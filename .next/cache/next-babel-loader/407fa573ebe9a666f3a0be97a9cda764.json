{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { takeEvery, put, putResolve } from 'redux-saga/effects';\nimport { select, call, all } from 'typed-redux-saga';\nimport { advancedFilterActions, summaryReportActions, commonStore, parameterTypeStore } from '@/store/reducers';\nimport parameterTypeApi from '@/apis/parameterType.api';\nexport function* fetchInitDataForList() {\n  const data = yield call(parameterTypeApi.getInitDataForList);\n  yield put(parameterTypeStore.actions.setInitDataForList(data));\n}\nexport function* fetchInitDataForCE() {\n  const _yield$call = yield call(parameterTypeApi.getInitDataForCE),\n        {\n    permissions\n  } = _yield$call,\n        initData = _objectWithoutProperties(_yield$call, [\"permissions\"]);\n\n  yield all([put(parameterTypeStore.actions.setInitDataForCE(initData)), put(parameterTypeStore.actions.setPermissions(permissions))]);\n}\nexport function* fetchDetail(id) {\n  const {\n    parameter_type\n  } = yield call(parameterTypeApi.getDetail, id);\n  yield put(parameterTypeStore.actions.setDetail(parameter_type));\n}\nexport function* fetchList() {\n  const {\n    tableState,\n    searchQuery,\n    filterData\n  } = yield* all({\n    tableState: select(commonStore.selectTableState),\n    searchQuery: select(commonStore.selectSearchQuery),\n    filterData: select(advancedFilterActions.selectFilterData)\n  });\n  const {\n    page,\n    per_page\n  } = tableState;\n  const data = yield call(parameterTypeApi.getList, _objectSpread({\n    per_page,\n    page,\n    s: searchQuery\n  }, filterData));\n  yield put(commonStore.actions.setTableState({\n    total_items: data.total_items\n  }));\n  yield put(parameterTypeStore.actions.setDataList(data.parameter_types));\n}\nexport function* getListSaga() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchInitDataForList);\n    const permissions = yield* select(parameterTypeStore.selectPermissions);\n\n    if (permissions === null || permissions === void 0 ? void 0 : permissions.view) {\n      yield call(fetchList);\n    }\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\nexport function* openCreateDialogSaga() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchInitDataForCE);\n    yield put(parameterTypeStore.actions.setDialogState({\n      open: true\n    }));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\nexport function* openUpdateDialogSaga({\n  payload: id\n}) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchInitDataForCE);\n    yield call(fetchDetail, id);\n    yield put(parameterTypeStore.actions.setDialogState({\n      open: true,\n      editMode: true\n    }));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\nexport function* createSaga({\n  payload\n}) {\n  yield put(parameterTypeStore.actions.setDialogStateLoading(true));\n\n  try {\n    const {\n      message\n    } = yield call(parameterTypeApi.create, payload);\n    yield all([put(commonStore.actions.setSuccessMessage(message)), put(parameterTypeStore.actions.resetDetail())]);\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(parameterTypeStore.actions.setDialogStateLoading(false));\n}\nexport function* updateSaga({\n  payload\n}) {\n  yield put(parameterTypeStore.actions.setDialogStateLoading(true));\n\n  try {\n    const {\n      id,\n      parameterType\n    } = payload;\n    const {\n      message\n    } = yield call(parameterTypeApi.update, id, parameterType);\n    yield call(closeDialogSaga);\n    yield put(commonStore.actions.setSuccessMessage(message));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(parameterTypeStore.actions.setDialogStateLoading(false));\n}\nexport function* executeOperationSaga({\n  payload\n}) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    const {\n      operation,\n      parameter_types\n    } = payload;\n    const data = yield call(parameterTypeApi.executeOperation, operation, parameter_types);\n\n    if (data.failed_count > 0) {\n      yield put(summaryReportActions.setReportData(data));\n      yield put(summaryReportActions.setOpen(true));\n    } else {\n      yield put(commonStore.actions.setSuccessMessage(data.message));\n    }\n\n    yield call(fetchList);\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\nexport function* closeDialogSaga() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield putResolve(parameterTypeStore.actions.setDialogStateOpen(false));\n    yield call(fetchList);\n    yield all([put(parameterTypeStore.actions.resetDetail()), put(parameterTypeStore.actions.setDialogStateEditMode(false))]);\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* parameterTypeSaga() {\n  yield takeEvery(parameterTypeStore.extraActions.getList, getListSaga);\n  yield takeEvery(parameterTypeStore.extraActions.openCreateDialog, openCreateDialogSaga);\n  yield takeEvery(parameterTypeStore.extraActions.openUpdateDialog, openUpdateDialogSaga);\n  yield takeEvery(parameterTypeStore.extraActions.create, createSaga);\n  yield takeEvery(parameterTypeStore.extraActions.update, updateSaga);\n  yield takeEvery(parameterTypeStore.extraActions.executeOperation, executeOperationSaga);\n  yield takeEvery(parameterTypeStore.extraActions.closeDialog, closeDialogSaga);\n}\n\nexport default parameterTypeSaga;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/saga/parameterType.saga.ts"],"names":["takeEvery","put","putResolve","select","call","all","advancedFilterActions","summaryReportActions","commonStore","parameterTypeStore","parameterTypeApi","fetchInitDataForList","data","getInitDataForList","actions","setInitDataForList","fetchInitDataForCE","getInitDataForCE","permissions","initData","setInitDataForCE","setPermissions","fetchDetail","id","parameter_type","getDetail","setDetail","fetchList","tableState","searchQuery","filterData","selectTableState","selectSearchQuery","selectFilterData","page","per_page","getList","s","setTableState","total_items","setDataList","parameter_types","getListSaga","setLoadingPage","selectPermissions","view","error","setError","openCreateDialogSaga","setDialogState","open","openUpdateDialogSaga","payload","editMode","createSaga","setDialogStateLoading","message","create","setSuccessMessage","resetDetail","updateSaga","parameterType","update","closeDialogSaga","executeOperationSaga","operation","executeOperation","failed_count","setReportData","setOpen","setDialogStateOpen","setDialogStateEditMode","parameterTypeSaga","extraActions","openCreateDialog","openUpdateDialog","closeDialog"],"mappings":"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","sourcesContent":["import { takeEvery, put, putResolve } from 'redux-saga/effects'\n\nimport { select, call, all } from 'typed-redux-saga'\n\nimport { advancedFilterActions, summaryReportActions, commonStore, parameterTypeStore } from '@/store/reducers'\n\nimport parameterTypeApi from '@/apis/parameterType.api'\n\nexport function* fetchInitDataForList() {\n  const data = yield call(parameterTypeApi.getInitDataForList)\n  yield put(parameterTypeStore.actions.setInitDataForList(data))\n}\n\nexport function* fetchInitDataForCE() {\n  const { permissions, ...initData } = yield call(parameterTypeApi.getInitDataForCE)\n  yield all([\n    put(parameterTypeStore.actions.setInitDataForCE(initData)),\n    put(parameterTypeStore.actions.setPermissions(permissions))\n  ])\n}\n\nexport function* fetchDetail(id: number) {\n  const { parameter_type } = yield call(parameterTypeApi.getDetail, id)\n  yield put(parameterTypeStore.actions.setDetail(parameter_type))\n}\n\nexport function* fetchList() {\n  const { tableState, searchQuery, filterData } = yield* all({\n    tableState: select(commonStore.selectTableState),\n    searchQuery: select(commonStore.selectSearchQuery),\n    filterData: select(advancedFilterActions.selectFilterData)\n  })\n  const { page, per_page } = tableState\n  const data = yield call(parameterTypeApi.getList, {\n    per_page,\n    page,\n    s: searchQuery,\n    ...filterData\n  })\n  yield put(commonStore.actions.setTableState({ total_items: data.total_items }))\n  yield put(parameterTypeStore.actions.setDataList(data.parameter_types))\n}\n\nexport function* getListSaga() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchInitDataForList)\n    const permissions = yield* select(parameterTypeStore.selectPermissions)\n    if (permissions?.view) {\n      yield call(fetchList)\n    }\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nexport function* openCreateDialogSaga() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchInitDataForCE)\n    yield put(parameterTypeStore.actions.setDialogState({ open: true }))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nexport function* openUpdateDialogSaga({ payload: id }) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchInitDataForCE)\n    yield call(fetchDetail, id)\n    yield put(parameterTypeStore.actions.setDialogState({ open: true, editMode: true }))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nexport function* createSaga({ payload }) {\n  yield put(parameterTypeStore.actions.setDialogStateLoading(true))\n  try {\n    const { message } = yield call(parameterTypeApi.create, payload)\n    yield all([put(commonStore.actions.setSuccessMessage(message)), put(parameterTypeStore.actions.resetDetail())])\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(parameterTypeStore.actions.setDialogStateLoading(false))\n}\n\nexport function* updateSaga({ payload }) {\n  yield put(parameterTypeStore.actions.setDialogStateLoading(true))\n\n  try {\n    const { id, parameterType } = payload\n    const { message } = yield call(parameterTypeApi.update, id, parameterType)\n    yield call(closeDialogSaga)\n    yield put(commonStore.actions.setSuccessMessage(message))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n\n  yield put(parameterTypeStore.actions.setDialogStateLoading(false))\n}\n\nexport function* executeOperationSaga({ payload }) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    const { operation, parameter_types } = payload\n    const data = yield call(parameterTypeApi.executeOperation, operation, parameter_types)\n    if (data.failed_count > 0) {\n      yield put(summaryReportActions.setReportData(data))\n      yield put(summaryReportActions.setOpen(true))\n    } else {\n      yield put(commonStore.actions.setSuccessMessage(data.message))\n    }\n    yield call(fetchList)\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nexport function* closeDialogSaga() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield putResolve(parameterTypeStore.actions.setDialogStateOpen(false))\n    yield call(fetchList)\n    yield all([\n      put(parameterTypeStore.actions.resetDetail()),\n      put(parameterTypeStore.actions.setDialogStateEditMode(false))\n    ])\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* parameterTypeSaga() {\n  yield takeEvery(parameterTypeStore.extraActions.getList, getListSaga)\n  yield takeEvery(parameterTypeStore.extraActions.openCreateDialog, openCreateDialogSaga)\n  yield takeEvery(parameterTypeStore.extraActions.openUpdateDialog, openUpdateDialogSaga)\n  yield takeEvery(parameterTypeStore.extraActions.create, createSaga)\n  yield takeEvery(parameterTypeStore.extraActions.update, updateSaga)\n  yield takeEvery(parameterTypeStore.extraActions.executeOperation, executeOperationSaga)\n  yield takeEvery(parameterTypeStore.extraActions.closeDialog, closeDialogSaga)\n}\n\nexport default parameterTypeSaga\n"]},"metadata":{},"sourceType":"module"}