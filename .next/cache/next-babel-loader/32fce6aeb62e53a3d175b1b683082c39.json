{"ast":null,"code":"import { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Main\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Dialog, DialogContent, DialogActions, DialogTitle, DialogContentText, Button, Tooltip, LinearProgress, Paper, useTheme } from '@material-ui/core';\nimport Draggable from 'react-draggable';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CheckCircleRounded from '@material-ui/icons/CheckCircleRounded';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { Unless, When } from 'react-if';\nimport useStyles from './styles';\nimport _ from 'lodash';\nimport clsx from 'clsx';\n\nfunction PaperComponent(_ref) {\n  let {\n    draggable\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"draggable\"]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(When, {\n      condition: draggable,\n      children: /*#__PURE__*/_jsxDEV(Draggable, {\n        handle: \".MuiDialogTitle-root\",\n        cancel: '[class*=\"MuiDialogContent-root\"]',\n        bounds: \"parent\",\n        children: /*#__PURE__*/_jsxDEV(Paper, _objectSpread(_objectSpread({}, props), {}, {\n          style: {\n            margin: 0\n          }\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Unless, {\n      condition: draggable,\n      children: /*#__PURE__*/_jsxDEV(Paper, _objectSpread(_objectSpread({}, props), {}, {\n        style: {\n          margin: 0\n        }\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nfunction DialogMain(props) {\n  const {\n    title,\n    closable,\n    onClose,\n    onOk,\n    description,\n    children,\n    extraButtons,\n    okText,\n    closeText,\n    className,\n    closeButtonProps,\n    okButtonProps,\n    loading,\n    enterToOk,\n    bodyStyles,\n    hideCloseButton,\n    hideOkButton,\n    hideButtonsAction,\n    type,\n    draggable,\n    PaperProps,\n    classes: classesDialog\n  } = props,\n        dialogProps = _objectWithoutProperties(props, [\"title\", \"closable\", \"onClose\", \"onOk\", \"description\", \"children\", \"extraButtons\", \"okText\", \"closeText\", \"className\", \"closeButtonProps\", \"okButtonProps\", \"loading\", \"enterToOk\", \"bodyStyles\", \"hideCloseButton\", \"hideOkButton\", \"hideButtonsAction\", \"type\", \"draggable\", \"PaperProps\", \"classes\"]);\n\n  const theme = useTheme();\n  const classes = useStyles(props);\n  const renderButtons = React.useCallback(() => {\n    if (_.isArray(extraButtons)) {\n      return extraButtons.filter(button => !button.hide).map((_ref2, index) => {\n        let {\n          label,\n          hide\n        } = _ref2,\n            buttonProps = _objectWithoutProperties(_ref2, [\"label\", \"hide\"]);\n\n        return /*#__PURE__*/_createElement(Button, _objectSpread(_objectSpread({\n          disabled: loading\n        }, buttonProps), {}, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          },\n          __self: this\n        }), label);\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(Button, _objectSpread(_objectSpread({\n      disabled: loading\n    }, extraButtons), {}, {\n      children: extraButtons === null || extraButtons === void 0 ? void 0 : extraButtons.label\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }, [extraButtons]);\n\n  const getColorType = type => theme.palette[type].main;\n\n  const iconList = React.useMemo(() => ({\n    success: CheckCircleRounded,\n    error: ErrorIcon,\n    warning: WarningIcon,\n    info: InfoIcon\n  }), []);\n  const renderTitle = React.useCallback(() => {\n    if (type === 'normal') {\n      return title;\n    }\n\n    const color = getColorType(type);\n    const Icon = iconList[type];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        style: {\n          marginRight: 8,\n          color\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }, [title, type]);\n  /*\n  React.useEffect(() => {\n    const listener = (event) => {\n      if (event.code === 'Enter' || event.code === 'NumpadEnter') {\n        event.preventDefault()\n        if (enterToOk && _.isFunction(onOk)) {\n          onOk()\n        }\n      }\n    }\n    document.addEventListener('keydown', listener)\n    return () => {\n      document.removeEventListener('keydown', listener)\n    }\n  }, [onOk])\n  */\n\n  return /*#__PURE__*/_jsxDEV(Dialog, _objectSpread(_objectSpread({}, dialogProps), {}, {\n    className: clsx(classes.root, className),\n    PaperComponent: PaperComponent,\n    PaperProps: _objectSpread({\n      draggable\n    }, PaperProps),\n    classes: _objectSpread({\n      paper: classes.paperRoot\n    }, classesDialog),\n    children: [/*#__PURE__*/_jsxDEV(When, {\n      condition: Boolean(title),\n      children: /*#__PURE__*/_jsxDEV(DialogTitle, {\n        className: classes.title,\n        children: renderTitle()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(When, {\n      condition: loading,\n      children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n        className: classes.progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(When, {\n      condition: closable && _.isFunction(onClose),\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Click to close dialog\",\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n          className: clsx(classes.closeIcon, {\n            disabled: loading\n          }),\n          onClick: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(When, {\n      condition: description,\n      children: /*#__PURE__*/_jsxDEV(DialogContent, {\n        className: classes.content,\n        style: _objectSpread({}, bodyStyles),\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Unless, {\n      condition: description,\n      children: /*#__PURE__*/_jsxDEV(DialogContent, {\n        className: classes.content,\n        style: _objectSpread({}, bodyStyles),\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Unless, {\n      condition: hideButtonsAction,\n      children: /*#__PURE__*/_jsxDEV(DialogActions, {\n        className: classes.buttonActions,\n        children: [/*#__PURE__*/_jsxDEV(When, {\n          condition: _.isNil(extraButtons),\n          children: [/*#__PURE__*/_jsxDEV(When, {\n            condition: _.isFunction(onOk) && !hideOkButton,\n            children: /*#__PURE__*/_jsxDEV(Button, _objectSpread(_objectSpread({\n              color: \"primary\",\n              disabled: loading,\n              onClick: onOk\n            }, okButtonProps), {}, {\n              children: okText\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(When, {\n            condition: _.isFunction(onClose) && !hideCloseButton,\n            children: /*#__PURE__*/_jsxDEV(Button, _objectSpread(_objectSpread({\n              disabled: loading,\n              onClick: onClose\n            }, closeButtonProps), {}, {\n              children: closeText\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Unless, {\n          condition: _.isNil(extraButtons),\n          children: renderButtons()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n\nDialogMain.defaultProps = {\n  closeText: 'close',\n  okText: 'ok',\n  closable: true,\n  maxWidth: 'sm',\n  enterToOk: false,\n  hideOkButton: false,\n  hideCloseButton: false,\n  hideButtonsAction: false,\n  type: 'normal',\n  draggable: true\n};\nexport default DialogMain;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Main/index.tsx"],"names":["React","Dialog","DialogContent","DialogActions","DialogTitle","DialogContentText","Button","Tooltip","LinearProgress","Paper","useTheme","Draggable","CloseIcon","CheckCircleRounded","InfoIcon","WarningIcon","ErrorIcon","Unless","When","useStyles","_","clsx","PaperComponent","draggable","props","margin","DialogMain","title","closable","onClose","onOk","description","children","extraButtons","okText","closeText","className","closeButtonProps","okButtonProps","loading","enterToOk","bodyStyles","hideCloseButton","hideOkButton","hideButtonsAction","type","PaperProps","classes","classesDialog","dialogProps","theme","renderButtons","useCallback","isArray","filter","button","hide","map","index","label","buttonProps","getColorType","palette","main","iconList","useMemo","success","error","warning","info","renderTitle","color","Icon","display","alignItems","marginRight","root","paper","paperRoot","Boolean","progress","isFunction","closeIcon","disabled","content","buttonActions","isNil","defaultProps","maxWidth"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport {\n  Dialog,\n  DialogContent,\n  DialogActions,\n  DialogTitle,\n  DialogContentText,\n  Button,\n  Tooltip,\n  LinearProgress,\n  Paper,\n  useTheme\n} from '@material-ui/core'\n\nimport Draggable from 'react-draggable'\n\nimport CloseIcon from '@material-ui/icons/Close'\nimport CheckCircleRounded from '@material-ui/icons/CheckCircleRounded'\nimport InfoIcon from '@material-ui/icons/Info'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport ErrorIcon from '@material-ui/icons/Error'\n\nimport { Unless, When } from 'react-if'\n\nimport useStyles from './styles'\n\nimport _ from 'lodash'\nimport clsx from 'clsx'\n\nimport type { DialogMainProps, ExtraButton } from './type'\n\nfunction PaperComponent({ draggable, ...props }) {\n  return (\n    <>\n      <When condition={draggable}>\n        <Draggable handle=\".MuiDialogTitle-root\" cancel={'[class*=\"MuiDialogContent-root\"]'} bounds=\"parent\">\n          <Paper {...props} style={{ margin: 0 }} />\n        </Draggable>\n      </When>\n      <Unless condition={draggable}>\n        <Paper {...props} style={{ margin: 0 }} />\n      </Unless>\n    </>\n  )\n}\n\nfunction DialogMain(props: DialogMainProps) {\n  const {\n    title,\n    closable,\n    onClose,\n    onOk,\n    description,\n    children,\n    extraButtons,\n    okText,\n    closeText,\n    className,\n    closeButtonProps,\n    okButtonProps,\n    loading,\n    enterToOk,\n    bodyStyles,\n    hideCloseButton,\n    hideOkButton,\n    hideButtonsAction,\n    type,\n    draggable,\n    PaperProps,\n    classes: classesDialog,\n    ...dialogProps\n  } = props\n\n  const theme = useTheme()\n  const classes = useStyles(props)\n\n  const renderButtons = React.useCallback(() => {\n    if (_.isArray(extraButtons)) {\n      return (extraButtons as ExtraButton[])\n        .filter((button) => !button.hide)\n        .map(({ label, hide, ...buttonProps }, index) => (\n          <Button disabled={loading} {...buttonProps} key={index}>\n            {label}\n          </Button>\n        ))\n    }\n    return (\n      <Button disabled={loading} {...extraButtons}>\n        {extraButtons?.label}\n      </Button>\n    )\n  }, [extraButtons])\n\n  const getColorType = (type) => theme.palette[type].main\n  const iconList = React.useMemo(\n    () => ({\n      success: CheckCircleRounded,\n      error: ErrorIcon,\n      warning: WarningIcon,\n      info: InfoIcon\n    }),\n    []\n  )\n\n  const renderTitle = React.useCallback(() => {\n    if (type === 'normal') {\n      return title\n    }\n    const color = getColorType(type)\n    const Icon = iconList[type]\n    return (\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <Icon style={{ marginRight: 8, color }} />\n        <div>{title}</div>\n      </div>\n    )\n  }, [title, type])\n\n  /*\n  React.useEffect(() => {\n    const listener = (event) => {\n      if (event.code === 'Enter' || event.code === 'NumpadEnter') {\n        event.preventDefault()\n        if (enterToOk && _.isFunction(onOk)) {\n          onOk()\n        }\n      }\n    }\n    document.addEventListener('keydown', listener)\n    return () => {\n      document.removeEventListener('keydown', listener)\n    }\n  }, [onOk])\n  */\n\n  return (\n    <Dialog\n      {...dialogProps}\n      className={clsx(classes.root, className)}\n      PaperComponent={PaperComponent}\n      PaperProps={{ draggable, ...PaperProps } as any}\n      classes={{ paper: classes.paperRoot, ...classesDialog }}\n    >\n      <When condition={Boolean(title)}>\n        <DialogTitle className={classes.title}>{renderTitle()}</DialogTitle>\n      </When>\n\n      <When condition={loading}>\n        <LinearProgress className={classes.progress} />\n      </When>\n\n      <When condition={closable && _.isFunction(onClose)}>\n        <Tooltip title=\"Click to close dialog\">\n          <CloseIcon className={clsx(classes.closeIcon, { disabled: loading })} onClick={onClose as any} />\n        </Tooltip>\n      </When>\n\n      <When condition={description}>\n        <DialogContent className={classes.content} style={{ ...bodyStyles }}>\n          <DialogContentText>{description}</DialogContentText>\n        </DialogContent>\n      </When>\n      <Unless condition={description}>\n        <DialogContent className={classes.content} style={{ ...bodyStyles }}>\n          {children}\n        </DialogContent>\n      </Unless>\n\n      <Unless condition={hideButtonsAction}>\n        <DialogActions className={classes.buttonActions}>\n          <When condition={_.isNil(extraButtons)}>\n            <When condition={_.isFunction(onOk) && !hideOkButton}>\n              <Button color=\"primary\" disabled={loading} onClick={onOk} {...okButtonProps}>\n                {okText}\n              </Button>\n            </When>\n\n            <When condition={_.isFunction(onClose) && !hideCloseButton}>\n              <Button disabled={loading} onClick={onClose} {...closeButtonProps}>\n                {closeText}\n              </Button>\n            </When>\n          </When>\n          <Unless condition={_.isNil(extraButtons)}>{renderButtons()}</Unless>\n        </DialogActions>\n      </Unless>\n    </Dialog>\n  )\n}\n\nDialogMain.defaultProps = {\n  closeText: 'close',\n  okText: 'ok',\n  closable: true,\n  maxWidth: 'sm',\n  enterToOk: false,\n  hideOkButton: false,\n  hideCloseButton: false,\n  hideButtonsAction: false,\n  type: 'normal',\n  draggable: true\n}\n\nexport default DialogMain\n"]},"metadata":{},"sourceType":"module"}