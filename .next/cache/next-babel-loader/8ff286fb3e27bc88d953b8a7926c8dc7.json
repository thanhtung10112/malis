{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { takeLatest, call, put, putResolve, takeEvery } from 'redux-saga/effects';\nimport { select, all } from 'typed-redux-saga';\nimport _ from 'lodash';\nimport { partStore, commonStore } from '@/store/reducers';\nimport { getDefaultValues } from '@/utils/getDefaultValues';\nimport { isAssemblyByDpn } from '@/utils/isAssembly';\nimport itemApi from '@/apis/item.api';\nimport assemblyApi from '@/apis/assembly.api';\nimport partRefApi from '@/apis/part.api';\nimport manufacturerApi from '@/apis/manufacturer.api';\nimport drawingApi from '@/apis/drawing.api';\n\nconst getPartApi = entity => entity === 'item' ? itemApi : assemblyApi;\n\nfunction* fetchGenerateCode(entity, drawing) {\n  const partApi = getPartApi(entity);\n  const {\n    generated_code\n  } = yield call(partApi.getGenerateCode, drawing.value);\n  return generated_code;\n}\n\nfunction* openPartCreateDialog({\n  payload\n}) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    const partApi = getPartApi(payload);\n    const {\n      userJob,\n      userDrawing\n    } = yield* all({\n      userJob: select(commonStore.selectUserValueJob),\n      userDrawing: select(commonStore.selectUserValueDrawing)\n    });\n    const initDetail = payload === 'item' ? partStore.itemDetail : partStore.assemblyDetail;\n\n    const _yield$call = yield call(partApi.getInitDataForCE, {\n      job_id_pk: userJob.value\n    }),\n          {\n      permissions,\n      wiki_page\n    } = _yield$call,\n          initData = _objectWithoutProperties(_yield$call, [\"permissions\", \"wiki_page\"]);\n\n    const defaultValues = getDefaultValues(initData.parameters, {\n      unit: 'UNIT'\n    }, initDetail);\n    defaultValues.drawing_id = userDrawing.value < 0 ? null : userDrawing;\n    defaultValues.job_id = userJob.value;\n\n    if (defaultValues.drawing_id) {\n      defaultValues.dpn = yield call(fetchGenerateCode, payload, defaultValues.drawing_id);\n    }\n\n    yield putResolve(partStore.actions.setInitData(initData));\n    yield put(partStore.actions.addPart({\n      detail: defaultValues,\n      wiki_page,\n      permissions: permissions[payload]\n    }));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* createPart({\n  payload\n}) {\n  yield put(partStore.actions.setPartLoading(true));\n\n  try {\n    const {\n      entity,\n      formData\n    } = payload;\n    const partApi = getPartApi(entity);\n    const {\n      message\n    } = yield call(partApi.create, formData);\n    const {\n      userJob,\n      userDrawing\n    } = yield* all({\n      userJob: select(commonStore.selectUserValueJob),\n      userDrawing: select(commonStore.selectUserValueDrawing)\n    });\n    let generateCode = '';\n\n    if (userDrawing.value >= 0) {\n      generateCode = yield call(fetchGenerateCode, entity, userDrawing);\n    }\n\n    yield putResolve(partStore.actions.resetCurrentPart({\n      userJob,\n      userDrawing,\n      generateCode\n    }));\n    yield all([put(commonStore.actions.setSuccessMessage(message)), put(partStore.actions.setPartTab(0))]);\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(partStore.actions.setPartLoading(false));\n}\n\nconst getPartDpn = (entity, dpn) => {\n  // const type = entity === 'item' ? 'H' : 'G'\n  const regexItem = /H\\S+/g;\n  const regexAssembly = /G\\S+/g;\n  const regex = entity === 'item' ? regexItem : regexAssembly;\n  const match = dpn.match(regex);\n\n  if (_.isArray(match)) {\n    return match[0];\n  }\n\n  return '';\n};\n\nfunction* fetchPartDetail(entity, id) {\n  const partApi = getPartApi(entity);\n  const data = yield call(partApi.getDetail, id);\n  const partDetail = data[entity];\n  partDetail.dpn = getPartDpn(entity, partDetail.dpn);\n  partDetail.drawing_id = partDetail.related_drawing;\n  partDetail.items = (partDetail.components || []).map(({\n    id,\n    quantity\n  }) => ({\n    item_id: id,\n    quantity\n  }));\n\n  if (entity === 'item') {\n    partDetail.manufacturer_equiv = partDetail.manufacturer_equiv_object;\n    partDetail.material_equiv = partDetail.material_equiv_object;\n  }\n\n  return partDetail;\n}\n\nfunction* openPartUpdateDialog({\n  payload\n}) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    const {\n      id,\n      entity\n    } = payload;\n    const partApi = getPartApi(entity);\n    const partDetail = yield call(fetchPartDetail, entity, id);\n\n    const _yield$call2 = yield call(partApi.getInitDataForCE, {\n      job_id_pk: partDetail.job_id\n    }),\n          {\n      permissions,\n      wiki_page\n    } = _yield$call2,\n          initData = _objectWithoutProperties(_yield$call2, [\"permissions\", \"wiki_page\"]);\n\n    yield putResolve(partStore.actions.setInitData(initData));\n    yield put(partStore.actions.addPart({\n      detail: partDetail,\n      wiki_page,\n      permissions: permissions[entity]\n    }));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* closePartDialog() {\n  try {\n    yield putResolve(partStore.actions.removePart());\n    const partList = yield* select(partStore.selectPartList);\n\n    const {\n      detail\n    } = _.last(partList);\n\n    const partEntity = detail.is_assembly ? 'assembly' : 'item';\n    const partDetail = yield call(fetchPartDetail, partEntity, detail.id);\n    yield put(partStore.actions.updateCurrentPart(partDetail));\n\n    if (isAssemblyByDpn(detail.dpn)) {\n      yield call(getDrawingItems, {\n        type: '',\n        payload: partDetail.related_drawing.value\n      });\n    }\n\n    return;\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n}\n\nfunction* openManuDialog({\n  payload\n}) {\n  yield put(partStore.actions.setPartLoading(true));\n\n  try {\n    yield put(partStore.actions.updateCurrentPart(payload));\n\n    const _yield$call3 = yield call(manufacturerApi.getInitDataForCE),\n          {\n      next_code\n    } = _yield$call3,\n          initData = _objectWithoutProperties(_yield$call3, [\"next_code\"]);\n\n    yield all([putResolve(partStore.actions.setManuDetail({\n      manufacturer_id: next_code\n    })), putResolve(partStore.actions.setManuInitData(initData))]);\n    yield put(partStore.actions.setManuDialogOpen(true));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(partStore.actions.setPartLoading(false));\n}\n\nfunction* createManu({\n  payload\n}) {\n  yield put(partStore.actions.setManuDialogLoading(true));\n\n  try {\n    const {\n      message,\n      id\n    } = yield call(manufacturerApi.create, payload);\n    const {\n      next_code\n    } = yield call(manufacturerApi.getInitDataForCE);\n    const {\n      name\n    } = payload;\n    yield putResolve(partStore.actions.setManuDetail(_objectSpread(_objectSpread({}, partStore.initialState.manufacturer.detail), {}, {\n      manufacturer_id: next_code\n    })));\n    yield all([put(commonStore.actions.setSuccessMessage(message)), put(partStore.actions.addManufacturer({\n      manufacturer_id: id,\n      reference: '',\n      description: name\n    }))]);\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(partStore.actions.setManuDialogLoading(false));\n}\n\nfunction* closeManuDialog() {\n  yield putResolve(partStore.actions.setManuDialogOpen(false));\n  yield put(partStore.actions.setManuDetail({\n    manufacturer_id: null,\n    name: ''\n  }));\n}\n\nfunction* getManuId({\n  payload\n}) {\n  yield put(partStore.actions.setManuDialogLoading(true));\n\n  try {\n    const {\n      generated_code\n    } = yield call(manufacturerApi.getNextCode, payload.manufacturer_id);\n    yield put(partStore.actions.setManuDetail(_objectSpread(_objectSpread({}, payload), {}, {\n      manufacturer_id: generated_code\n    })));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(partStore.actions.setManuDialogLoading(false));\n}\n\nfunction* getItemCopy({\n  payload\n}) {\n  yield put(partStore.actions.setPartLoading(true));\n\n  try {\n    const data = yield call(partRefApi.getDetail, payload.value); // get the allowed attributes\n\n    const part = _.pick(data.part, ['descriptions', 'manufacturer_equiv', 'manufacturers', 'mass', 'material_equiv', 'unit', 'manufacturer_equiv_standards', 'material_equiv_standards']);\n\n    part.manufacturer_equiv = data.part.manufacturer_equiv_object;\n    part.material_equiv = data.part.material_equiv_object;\n    yield put(partStore.actions.updateCurrentPart(part));\n    yield put(commonStore.actions.setSuccessMessage(data.message));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(partStore.actions.setPartLoading(false));\n}\n\nfunction* getDrawingItems({\n  payload\n}) {\n  yield put(partStore.actions.setPartLoading(true));\n\n  try {\n    const {\n      items\n    } = yield call(drawingApi.getItemList, payload);\n    yield put(partStore.actions.setDrawingItems(items));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(partStore.actions.setPartLoading(false));\n}\n\nfunction* partSaga() {\n  yield takeLatest(partStore.sagaOpenCreateDialog, openPartCreateDialog);\n  yield takeLatest(partStore.sagaCreate, createPart);\n  yield takeLatest(partStore.sagaOpenUpdateDialog, openPartUpdateDialog);\n  yield takeEvery(partStore.sagaCloseDialog, closePartDialog);\n  yield takeLatest(partStore.sagaOpenManuDialog, openManuDialog);\n  yield takeEvery(partStore.sagaCreateManu, createManu);\n  yield takeEvery(partStore.sagaCloseManuDialog, closeManuDialog);\n  yield takeLatest(partStore.sagaGetManuId, getManuId);\n  yield takeLatest(partStore.sagaGetItemCopy, getItemCopy);\n  yield takeLatest(partStore.sagaGetDrawingItems, getDrawingItems);\n}\n\nexport default partSaga;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/store/saga/part.saga.ts"],"names":["takeLatest","call","put","putResolve","takeEvery","select","all","_","partStore","commonStore","getDefaultValues","isAssemblyByDpn","itemApi","assemblyApi","partRefApi","manufacturerApi","drawingApi","getPartApi","entity","fetchGenerateCode","drawing","partApi","generated_code","getGenerateCode","value","openPartCreateDialog","payload","actions","setLoadingPage","userJob","userDrawing","selectUserValueJob","selectUserValueDrawing","initDetail","itemDetail","assemblyDetail","getInitDataForCE","job_id_pk","permissions","wiki_page","initData","defaultValues","parameters","unit","drawing_id","job_id","dpn","setInitData","addPart","detail","error","setError","createPart","setPartLoading","formData","message","create","generateCode","resetCurrentPart","setSuccessMessage","setPartTab","getPartDpn","regexItem","regexAssembly","regex","match","isArray","fetchPartDetail","id","data","getDetail","partDetail","related_drawing","items","components","map","quantity","item_id","manufacturer_equiv","manufacturer_equiv_object","material_equiv","material_equiv_object","openPartUpdateDialog","closePartDialog","removePart","partList","selectPartList","last","partEntity","is_assembly","updateCurrentPart","getDrawingItems","type","openManuDialog","next_code","setManuDetail","manufacturer_id","setManuInitData","setManuDialogOpen","createManu","setManuDialogLoading","name","initialState","manufacturer","addManufacturer","reference","description","closeManuDialog","getManuId","getNextCode","getItemCopy","part","pick","getItemList","setDrawingItems","partSaga","sagaOpenCreateDialog","sagaCreate","sagaOpenUpdateDialog","sagaCloseDialog","sagaOpenManuDialog","sagaCreateManu","sagaCloseManuDialog","sagaGetManuId","sagaGetItemCopy","sagaGetDrawingItems"],"mappings":";;;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,EAA4CC,SAA5C,QAA6D,oBAA7D;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,kBAA5B;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,kBAAvC;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,SAASC,eAAT,QAAgC,oBAAhC;AAEA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,UAAP,MAAuB,oBAAvB;;AAKA,MAAMC,UAAU,GAAIC,MAAD,IAAyBA,MAAM,KAAK,MAAX,GAAoBN,OAApB,GAA8BC,WAA1E;;AAEA,UAAUM,iBAAV,CAA4BD,MAA5B,EAAgDE,OAAhD,EAA0E;AACxE,QAAMC,OAAO,GAAGJ,UAAU,CAACC,MAAD,CAA1B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAqB,MAAMrB,IAAI,CAACoB,OAAO,CAACE,eAAT,EAA0BH,OAAO,CAACI,KAAlC,CAArC;AACA,SAAOF,cAAP;AACD;;AAED,UAAUG,oBAAV,CAA+B;AAAEC,EAAAA;AAAF,CAA/B,EAA+F;AAC7F,QAAMxB,GAAG,CAACO,WAAW,CAACkB,OAAZ,CAAoBC,cAApB,CAAmC,IAAnC,CAAD,CAAT;;AACA,MAAI;AACF,UAAMP,OAAO,GAAGJ,UAAU,CAACS,OAAD,CAA1B;AACA,UAAM;AAAEG,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAA2B,OAAOxB,GAAG,CAAC;AAC1CuB,MAAAA,OAAO,EAAExB,MAAM,CAACI,WAAW,CAACsB,kBAAb,CAD2B;AAE1CD,MAAAA,WAAW,EAAEzB,MAAM,CAACI,WAAW,CAACuB,sBAAb;AAFuB,KAAD,CAA3C;AAIA,UAAMC,UAAU,GAAGP,OAAO,KAAK,MAAZ,GAAqBlB,SAAS,CAAC0B,UAA/B,GAA4C1B,SAAS,CAAC2B,cAAzE;;AACA,wBAAgD,MAAMlC,IAAI,CAACoB,OAAO,CAACe,gBAAT,EAA2B;AACnFC,MAAAA,SAAS,EAAER,OAAO,CAACL;AADgE,KAA3B,CAA1D;AAAA,UAAM;AAAEc,MAAAA,WAAF;AAAeC,MAAAA;AAAf,KAAN;AAAA,UAAmCC,QAAnC;;AAGA,UAAMC,aAAa,GAAG/B,gBAAgB,CAAC8B,QAAQ,CAACE,UAAV,EAAsB;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAtB,EAAwCV,UAAxC,CAAtC;AACAQ,IAAAA,aAAa,CAACG,UAAd,GAA2Bd,WAAW,CAACN,KAAZ,GAAoB,CAApB,GAAwB,IAAxB,GAA+BM,WAA1D;AACAW,IAAAA,aAAa,CAACI,MAAd,GAAuBhB,OAAO,CAACL,KAA/B;;AACA,QAAIiB,aAAa,CAACG,UAAlB,EAA8B;AAC5BH,MAAAA,aAAa,CAACK,GAAd,GAAoB,MAAM7C,IAAI,CAACkB,iBAAD,EAAoBO,OAApB,EAA6Be,aAAa,CAACG,UAA3C,CAA9B;AACD;;AACD,UAAMzC,UAAU,CAACK,SAAS,CAACmB,OAAV,CAAkBoB,WAAlB,CAA8BP,QAA9B,CAAD,CAAhB;AACA,UAAMtC,GAAG,CAACM,SAAS,CAACmB,OAAV,CAAkBqB,OAAlB,CAA0B;AAAEC,MAAAA,MAAM,EAAER,aAAV;AAAyBF,MAAAA,SAAzB;AAAoCD,MAAAA,WAAW,EAAEA,WAAW,CAACZ,OAAD;AAA5D,KAA1B,CAAD,CAAT;AACD,GAlBD,CAkBE,OAAOwB,KAAP,EAAc;AACd,UAAMhD,GAAG,CAACO,WAAW,CAACkB,OAAZ,CAAoBwB,QAApB,CAA6BD,KAA7B,CAAD,CAAT;AACD;;AACD,QAAMhD,GAAG,CAACO,WAAW,CAACkB,OAAZ,CAAoBC,cAApB,CAAmC,KAAnC,CAAD,CAAT;AACD;;AAED,UAAUwB,UAAV,CAAqB;AAAE1B,EAAAA;AAAF,CAArB,EAA2E;AACzE,QAAMxB,GAAG,CAACM,SAAS,CAACmB,OAAV,CAAkB0B,cAAlB,CAAiC,IAAjC,CAAD,CAAT;;AACA,MAAI;AACF,UAAM;AAAEnC,MAAAA,MAAF;AAAUoC,MAAAA;AAAV,QAAuB5B,OAA7B;AACA,UAAML,OAAO,GAAGJ,UAAU,CAACC,MAAD,CAA1B;AACA,UAAM;AAAEqC,MAAAA;AAAF,QAAc,MAAMtD,IAAI,CAACoB,OAAO,CAACmC,MAAT,EAAiBF,QAAjB,CAA9B;AACA,UAAM;AAAEzB,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAA2B,OAAOxB,GAAG,CAAC;AAC1CuB,MAAAA,OAAO,EAAExB,MAAM,CAACI,WAAW,CAACsB,kBAAb,CAD2B;AAE1CD,MAAAA,WAAW,EAAEzB,MAAM,CAACI,WAAW,CAACuB,sBAAb;AAFuB,KAAD,CAA3C;AAIA,QAAIyB,YAAY,GAAG,EAAnB;;AACA,QAAI3B,WAAW,CAACN,KAAZ,IAAqB,CAAzB,EAA4B;AAC1BiC,MAAAA,YAAY,GAAG,MAAMxD,IAAI,CAACkB,iBAAD,EAAoBD,MAApB,EAA4BY,WAA5B,CAAzB;AACD;;AACD,UAAM3B,UAAU,CAACK,SAAS,CAACmB,OAAV,CAAkB+B,gBAAlB,CAAmC;AAAE7B,MAAAA,OAAF;AAAWC,MAAAA,WAAX;AAAwB2B,MAAAA;AAAxB,KAAnC,CAAD,CAAhB;AACA,UAAMnD,GAAG,CAAC,CAACJ,GAAG,CAACO,WAAW,CAACkB,OAAZ,CAAoBgC,iBAApB,CAAsCJ,OAAtC,CAAD,CAAJ,EAAsDrD,GAAG,CAACM,SAAS,CAACmB,OAAV,CAAkBiC,UAAlB,CAA6B,CAA7B,CAAD,CAAzD,CAAD,CAAT;AACD,GAdD,CAcE,OAAOV,KAAP,EAAc;AACd,UAAMhD,GAAG,CAACO,WAAW,CAACkB,OAAZ,CAAoBwB,QAApB,CAA6BD,KAA7B,CAAD,CAAT;AACD;;AACD,QAAMhD,GAAG,CAACM,SAAS,CAACmB,OAAV,CAAkB0B,cAAlB,CAAiC,KAAjC,CAAD,CAAT;AACD;;AAED,MAAMQ,UAAU,GAAG,CAAC3C,MAAD,EAAqB4B,GAArB,KAAqC;AACtD;AACA,QAAMgB,SAAS,GAAG,OAAlB;AACA,QAAMC,aAAa,GAAG,OAAtB;AACA,QAAMC,KAAK,GAAG9C,MAAM,KAAK,MAAX,GAAoB4C,SAApB,GAAgCC,aAA9C;AACA,QAAME,KAAK,GAAGnB,GAAG,CAACmB,KAAJ,CAAUD,KAAV,CAAd;;AACA,MAAIzD,CAAC,CAAC2D,OAAF,CAAUD,KAAV,CAAJ,EAAsB;AACpB,WAAOA,KAAK,CAAC,CAAD,CAAZ;AACD;;AACD,SAAO,EAAP;AACD,CAVD;;AAYA,UAAUE,eAAV,CAA0BjD,MAA1B,EAA8CkD,EAA9C,EAA0D;AACxD,QAAM/C,OAAO,GAAGJ,UAAU,CAACC,MAAD,CAA1B;AACA,QAAMmD,IAAI,GAAG,MAAMpE,IAAI,CAACoB,OAAO,CAACiD,SAAT,EAAoBF,EAApB,CAAvB;AACA,QAAMG,UAAU,GAAGF,IAAI,CAACnD,MAAD,CAAvB;AACAqD,EAAAA,UAAU,CAACzB,GAAX,GAAiBe,UAAU,CAAC3C,MAAD,EAASqD,UAAU,CAACzB,GAApB,CAA3B;AACAyB,EAAAA,UAAU,CAAC3B,UAAX,GAAwB2B,UAAU,CAACC,eAAnC;AACAD,EAAAA,UAAU,CAACE,KAAX,GAAmB,CAACF,UAAU,CAACG,UAAX,IAAyB,EAA1B,EAA8BC,GAA9B,CAAkC,CAAC;AAAEP,IAAAA,EAAF;AAAMQ,IAAAA;AAAN,GAAD,MAAuB;AAC1EC,IAAAA,OAAO,EAAET,EADiE;AAE1EQ,IAAAA;AAF0E,GAAvB,CAAlC,CAAnB;;AAKA,MAAI1D,MAAM,KAAK,MAAf,EAAuB;AACrBqD,IAAAA,UAAU,CAACO,kBAAX,GAAgCP,UAAU,CAACQ,yBAA3C;AACAR,IAAAA,UAAU,CAACS,cAAX,GAA4BT,UAAU,CAACU,qBAAvC;AACD;;AACD,SAAOV,UAAP;AACD;;AAED,UAAUW,oBAAV,CAA+B;AAAExD,EAAAA;AAAF,CAA/B,EAA+F;AAC7F,QAAMxB,GAAG,CAACO,WAAW,CAACkB,OAAZ,CAAoBC,cAApB,CAAmC,IAAnC,CAAD,CAAT;;AACA,MAAI;AACF,UAAM;AAAEwC,MAAAA,EAAF;AAAMlD,MAAAA;AAAN,QAAiBQ,OAAvB;AACA,UAAML,OAAO,GAAGJ,UAAU,CAACC,MAAD,CAA1B;AACA,UAAMqD,UAAU,GAAG,MAAMtE,IAAI,CAACkE,eAAD,EAAkBjD,MAAlB,EAA0BkD,EAA1B,CAA7B;;AACA,yBAAgD,MAAMnE,IAAI,CAACoB,OAAO,CAACe,gBAAT,EAA2B;AACnFC,MAAAA,SAAS,EAAEkC,UAAU,CAAC1B;AAD6D,KAA3B,CAA1D;AAAA,UAAM;AAAEP,MAAAA,WAAF;AAAeC,MAAAA;AAAf,KAAN;AAAA,UAAmCC,QAAnC;;AAGA,UAAMrC,UAAU,CAACK,SAAS,CAACmB,OAAV,CAAkBoB,WAAlB,CAA8BP,QAA9B,CAAD,CAAhB;AACA,UAAMtC,GAAG,CAACM,SAAS,CAACmB,OAAV,CAAkBqB,OAAlB,CAA0B;AAAEC,MAAAA,MAAM,EAAEsB,UAAV;AAAsBhC,MAAAA,SAAtB;AAAiCD,MAAAA,WAAW,EAAEA,WAAW,CAACpB,MAAD;AAAzD,KAA1B,CAAD,CAAT;AACD,GATD,CASE,OAAOgC,KAAP,EAAc;AACd,UAAMhD,GAAG,CAACO,WAAW,CAACkB,OAAZ,CAAoBwB,QAApB,CAA6BD,KAA7B,CAAD,CAAT;AACD;;AACD,QAAMhD,GAAG,CAACO,WAAW,CAACkB,OAAZ,CAAoBC,cAApB,CAAmC,KAAnC,CAAD,CAAT;AACD;;AAED,UAAUuD,eAAV,GAA4B;AAC1B,MAAI;AACF,UAAMhF,UAAU,CAACK,SAAS,CAACmB,OAAV,CAAkByD,UAAlB,EAAD,CAAhB;AACA,UAAMC,QAAQ,GAAG,OAAOhF,MAAM,CAACG,SAAS,CAAC8E,cAAX,CAA9B;;AACA,UAAM;AAAErC,MAAAA;AAAF,QAAa1C,CAAC,CAACgF,IAAF,CAAOF,QAAP,CAAnB;;AACA,UAAMG,UAAU,GAAIvC,MAAD,CAAgBwC,WAAhB,GAA8B,UAA9B,GAA2C,MAA9D;AACA,UAAMlB,UAAU,GAAG,MAAMtE,IAAI,CAACkE,eAAD,EAAkBqB,UAAlB,EAA8BvC,MAAM,CAACmB,EAArC,CAA7B;AACA,UAAMlE,GAAG,CAACM,SAAS,CAACmB,OAAV,CAAkB+D,iBAAlB,CAAoCnB,UAApC,CAAD,CAAT;;AACA,QAAI5D,eAAe,CAACsC,MAAM,CAACH,GAAR,CAAnB,EAAiC;AAC/B,YAAM7C,IAAI,CAAC0F,eAAD,EAAkB;AAAEC,QAAAA,IAAI,EAAE,EAAR;AAAYlE,QAAAA,OAAO,EAAE6C,UAAU,CAACC,eAAX,CAA2BhD;AAAhD,OAAlB,CAAV;AACD;;AACD;AACD,GAXD,CAWE,OAAO0B,KAAP,EAAc;AACd,UAAMhD,GAAG,CAACO,WAAW,CAACkB,OAAZ,CAAoBwB,QAApB,CAA6BD,KAA7B,CAAD,CAAT;AACD;AACF;;AAED,UAAU2C,cAAV,CAAyB;AAAEnE,EAAAA;AAAF,CAAzB,EAAuF;AACrF,QAAMxB,GAAG,CAACM,SAAS,CAACmB,OAAV,CAAkB0B,cAAlB,CAAiC,IAAjC,CAAD,CAAT;;AACA,MAAI;AACF,UAAMnD,GAAG,CAACM,SAAS,CAACmB,OAAV,CAAkB+D,iBAAlB,CAAoChE,OAApC,CAAD,CAAT;;AACA,yBAAmC,MAAMzB,IAAI,CAACc,eAAe,CAACqB,gBAAjB,CAA7C;AAAA,UAAM;AAAE0D,MAAAA;AAAF,KAAN;AAAA,UAAsBtD,QAAtB;;AACA,UAAMlC,GAAG,CAAC,CACRH,UAAU,CAACK,SAAS,CAACmB,OAAV,CAAkBoE,aAAlB,CAAgC;AAAEC,MAAAA,eAAe,EAAEF;AAAnB,KAAhC,CAAD,CADF,EAER3F,UAAU,CAACK,SAAS,CAACmB,OAAV,CAAkBsE,eAAlB,CAAkCzD,QAAlC,CAAD,CAFF,CAAD,CAAT;AAIA,UAAMtC,GAAG,CAACM,SAAS,CAACmB,OAAV,CAAkBuE,iBAAlB,CAAoC,IAApC,CAAD,CAAT;AACD,GARD,CAQE,OAAOhD,KAAP,EAAc;AACd,UAAMhD,GAAG,CAACO,WAAW,CAACkB,OAAZ,CAAoBwB,QAApB,CAA6BD,KAA7B,CAAD,CAAT;AACD;;AACD,QAAMhD,GAAG,CAACM,SAAS,CAACmB,OAAV,CAAkB0B,cAAlB,CAAiC,KAAjC,CAAD,CAAT;AACD;;AAED,UAAU8C,UAAV,CAAqB;AAAEzE,EAAAA;AAAF,CAArB,EAA+E;AAC7E,QAAMxB,GAAG,CAACM,SAAS,CAACmB,OAAV,CAAkByE,oBAAlB,CAAuC,IAAvC,CAAD,CAAT;;AACA,MAAI;AACF,UAAM;AAAE7C,MAAAA,OAAF;AAAWa,MAAAA;AAAX,QAAkB,MAAMnE,IAAI,CAACc,eAAe,CAACyC,MAAjB,EAAyB9B,OAAzB,CAAlC;AACA,UAAM;AAAEoE,MAAAA;AAAF,QAAgB,MAAM7F,IAAI,CAACc,eAAe,CAACqB,gBAAjB,CAAhC;AACA,UAAM;AAAEiE,MAAAA;AAAF,QAAW3E,OAAjB;AACA,UAAMvB,UAAU,CACdK,SAAS,CAACmB,OAAV,CAAkBoE,aAAlB,iCAAqCvF,SAAS,CAAC8F,YAAV,CAAuBC,YAAvB,CAAoCtD,MAAzE;AAAiF+C,MAAAA,eAAe,EAAEF;AAAlG,OADc,CAAhB;AAGA,UAAMxF,GAAG,CAAC,CACRJ,GAAG,CAACO,WAAW,CAACkB,OAAZ,CAAoBgC,iBAApB,CAAsCJ,OAAtC,CAAD,CADK,EAERrD,GAAG,CAACM,SAAS,CAACmB,OAAV,CAAkB6E,eAAlB,CAAkC;AAAER,MAAAA,eAAe,EAAE5B,EAAnB;AAAuBqC,MAAAA,SAAS,EAAE,EAAlC;AAAsCC,MAAAA,WAAW,EAAEL;AAAnD,KAAlC,CAAD,CAFK,CAAD,CAAT;AAID,GAXD,CAWE,OAAOnD,KAAP,EAAc;AACd,UAAMhD,GAAG,CAACO,WAAW,CAACkB,OAAZ,CAAoBwB,QAApB,CAA6BD,KAA7B,CAAD,CAAT;AACD;;AACD,QAAMhD,GAAG,CAACM,SAAS,CAACmB,OAAV,CAAkByE,oBAAlB,CAAuC,KAAvC,CAAD,CAAT;AACD;;AAED,UAAUO,eAAV,GAA4B;AAC1B,QAAMxG,UAAU,CAACK,SAAS,CAACmB,OAAV,CAAkBuE,iBAAlB,CAAoC,KAApC,CAAD,CAAhB;AACA,QAAMhG,GAAG,CAACM,SAAS,CAACmB,OAAV,CAAkBoE,aAAlB,CAAgC;AAAEC,IAAAA,eAAe,EAAE,IAAnB;AAAyBK,IAAAA,IAAI,EAAE;AAA/B,GAAhC,CAAD,CAAT;AACD;;AAED,UAAUO,SAAV,CAAoB;AAAElF,EAAAA;AAAF,CAApB,EAA6E;AAC3E,QAAMxB,GAAG,CAACM,SAAS,CAACmB,OAAV,CAAkByE,oBAAlB,CAAuC,IAAvC,CAAD,CAAT;;AACA,MAAI;AACF,UAAM;AAAE9E,MAAAA;AAAF,QAAqB,MAAMrB,IAAI,CAACc,eAAe,CAAC8F,WAAjB,EAA8BnF,OAAO,CAACsE,eAAtC,CAArC;AACA,UAAM9F,GAAG,CAACM,SAAS,CAACmB,OAAV,CAAkBoE,aAAlB,iCAAqCrE,OAArC;AAA8CsE,MAAAA,eAAe,EAAE1E;AAA/D,OAAD,CAAT;AACD,GAHD,CAGE,OAAO4B,KAAP,EAAc;AACd,UAAMhD,GAAG,CAACO,WAAW,CAACkB,OAAZ,CAAoBwB,QAApB,CAA6BD,KAA7B,CAAD,CAAT;AACD;;AACD,QAAMhD,GAAG,CAACM,SAAS,CAACmB,OAAV,CAAkByE,oBAAlB,CAAuC,KAAvC,CAAD,CAAT;AACD;;AAED,UAAUU,WAAV,CAAsB;AAAEpF,EAAAA;AAAF,CAAtB,EAAiF;AAC/E,QAAMxB,GAAG,CAACM,SAAS,CAACmB,OAAV,CAAkB0B,cAAlB,CAAiC,IAAjC,CAAD,CAAT;;AACA,MAAI;AACF,UAAMgB,IAAI,GAAG,MAAMpE,IAAI,CAACa,UAAU,CAACwD,SAAZ,EAAuB5C,OAAO,CAACF,KAA/B,CAAvB,CADE,CAEF;;AACA,UAAMuF,IAAI,GAAGxG,CAAC,CAACyG,IAAF,CAAO3C,IAAI,CAAC0C,IAAZ,EAAkB,CAC7B,cAD6B,EAE7B,oBAF6B,EAG7B,eAH6B,EAI7B,MAJ6B,EAK7B,gBAL6B,EAM7B,MAN6B,EAO7B,8BAP6B,EAQ7B,0BAR6B,CAAlB,CAAb;;AAUAA,IAAAA,IAAI,CAACjC,kBAAL,GAA0BT,IAAI,CAAC0C,IAAL,CAAUhC,yBAApC;AACAgC,IAAAA,IAAI,CAAC/B,cAAL,GAAsBX,IAAI,CAAC0C,IAAL,CAAU9B,qBAAhC;AACA,UAAM/E,GAAG,CAACM,SAAS,CAACmB,OAAV,CAAkB+D,iBAAlB,CAAoCqB,IAApC,CAAD,CAAT;AACA,UAAM7G,GAAG,CAACO,WAAW,CAACkB,OAAZ,CAAoBgC,iBAApB,CAAsCU,IAAI,CAACd,OAA3C,CAAD,CAAT;AACD,GAjBD,CAiBE,OAAOL,KAAP,EAAc;AACd,UAAMhD,GAAG,CAACO,WAAW,CAACkB,OAAZ,CAAoBwB,QAApB,CAA6BD,KAA7B,CAAD,CAAT;AACD;;AAED,QAAMhD,GAAG,CAACM,SAAS,CAACmB,OAAV,CAAkB0B,cAAlB,CAAiC,KAAjC,CAAD,CAAT;AACD;;AAED,UAAUsC,eAAV,CAA0B;AAAEjE,EAAAA;AAAF,CAA1B,EAAyF;AACvF,QAAMxB,GAAG,CAACM,SAAS,CAACmB,OAAV,CAAkB0B,cAAlB,CAAiC,IAAjC,CAAD,CAAT;;AACA,MAAI;AACF,UAAM;AAAEoB,MAAAA;AAAF,QAAY,MAAMxE,IAAI,CAACe,UAAU,CAACiG,WAAZ,EAAyBvF,OAAzB,CAA5B;AACA,UAAMxB,GAAG,CAACM,SAAS,CAACmB,OAAV,CAAkBuF,eAAlB,CAAkCzC,KAAlC,CAAD,CAAT;AACD,GAHD,CAGE,OAAOvB,KAAP,EAAc;AACd,UAAMhD,GAAG,CAACO,WAAW,CAACkB,OAAZ,CAAoBwB,QAApB,CAA6BD,KAA7B,CAAD,CAAT;AACD;;AACD,QAAMhD,GAAG,CAACM,SAAS,CAACmB,OAAV,CAAkB0B,cAAlB,CAAiC,KAAjC,CAAD,CAAT;AACD;;AAED,UAAU8D,QAAV,GAAqB;AACnB,QAAMnH,UAAU,CAACQ,SAAS,CAAC4G,oBAAX,EAAiC3F,oBAAjC,CAAhB;AACA,QAAMzB,UAAU,CAACQ,SAAS,CAAC6G,UAAX,EAAuBjE,UAAvB,CAAhB;AACA,QAAMpD,UAAU,CAACQ,SAAS,CAAC8G,oBAAX,EAAiCpC,oBAAjC,CAAhB;AACA,QAAM9E,SAAS,CAACI,SAAS,CAAC+G,eAAX,EAA4BpC,eAA5B,CAAf;AACA,QAAMnF,UAAU,CAACQ,SAAS,CAACgH,kBAAX,EAA+B3B,cAA/B,CAAhB;AACA,QAAMzF,SAAS,CAACI,SAAS,CAACiH,cAAX,EAA2BtB,UAA3B,CAAf;AACA,QAAM/F,SAAS,CAACI,SAAS,CAACkH,mBAAX,EAAgCf,eAAhC,CAAf;AACA,QAAM3G,UAAU,CAACQ,SAAS,CAACmH,aAAX,EAA0Bf,SAA1B,CAAhB;AACA,QAAM5G,UAAU,CAACQ,SAAS,CAACoH,eAAX,EAA4Bd,WAA5B,CAAhB;AACA,QAAM9G,UAAU,CAACQ,SAAS,CAACqH,mBAAX,EAAgClC,eAAhC,CAAhB;AACD;;AAED,eAAewB,QAAf","sourcesContent":["import { takeLatest, call, put, putResolve, takeEvery } from 'redux-saga/effects'\nimport { select, all } from 'typed-redux-saga'\nimport _ from 'lodash'\n\nimport { partStore, commonStore } from '@/store/reducers'\nimport { getDefaultValues } from '@/utils/getDefaultValues'\nimport { isAssemblyByDpn } from '@/utils/isAssembly'\n\nimport itemApi from '@/apis/item.api'\nimport assemblyApi from '@/apis/assembly.api'\nimport partRefApi from '@/apis/part.api'\nimport manufacturerApi from '@/apis/manufacturer.api'\nimport drawingApi from '@/apis/drawing.api'\n\nimport type { DataForDropdown } from '@/types/Common'\nimport type { PartEntity } from '@/types/Part'\n\nconst getPartApi = (entity: PartEntity) => (entity === 'item' ? itemApi : assemblyApi)\n\nfunction* fetchGenerateCode(entity: PartEntity, drawing: DataForDropdown) {\n  const partApi = getPartApi(entity)\n  const { generated_code } = yield call(partApi.getGenerateCode, drawing.value)\n  return generated_code\n}\n\nfunction* openPartCreateDialog({ payload }: ReturnType<typeof partStore.sagaOpenCreateDialog>) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    const partApi = getPartApi(payload)\n    const { userJob, userDrawing } = yield* all({\n      userJob: select(commonStore.selectUserValueJob),\n      userDrawing: select(commonStore.selectUserValueDrawing)\n    })\n    const initDetail = payload === 'item' ? partStore.itemDetail : partStore.assemblyDetail\n    const { permissions, wiki_page, ...initData } = yield call(partApi.getInitDataForCE, {\n      job_id_pk: userJob.value\n    })\n    const defaultValues = getDefaultValues(initData.parameters, { unit: 'UNIT' }, initDetail)\n    defaultValues.drawing_id = userDrawing.value < 0 ? null : userDrawing\n    defaultValues.job_id = userJob.value\n    if (defaultValues.drawing_id) {\n      defaultValues.dpn = yield call(fetchGenerateCode, payload, defaultValues.drawing_id)\n    }\n    yield putResolve(partStore.actions.setInitData(initData))\n    yield put(partStore.actions.addPart({ detail: defaultValues, wiki_page, permissions: permissions[payload] }))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* createPart({ payload }: ReturnType<typeof partStore.sagaCreate>) {\n  yield put(partStore.actions.setPartLoading(true))\n  try {\n    const { entity, formData } = payload\n    const partApi = getPartApi(entity)\n    const { message } = yield call(partApi.create, formData)\n    const { userJob, userDrawing } = yield* all({\n      userJob: select(commonStore.selectUserValueJob),\n      userDrawing: select(commonStore.selectUserValueDrawing)\n    })\n    let generateCode = ''\n    if (userDrawing.value >= 0) {\n      generateCode = yield call(fetchGenerateCode, entity, userDrawing)\n    }\n    yield putResolve(partStore.actions.resetCurrentPart({ userJob, userDrawing, generateCode }))\n    yield all([put(commonStore.actions.setSuccessMessage(message)), put(partStore.actions.setPartTab(0))])\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(partStore.actions.setPartLoading(false))\n}\n\nconst getPartDpn = (entity: PartEntity, dpn: string) => {\n  // const type = entity === 'item' ? 'H' : 'G'\n  const regexItem = /H\\S+/g\n  const regexAssembly = /G\\S+/g\n  const regex = entity === 'item' ? regexItem : regexAssembly\n  const match = dpn.match(regex)\n  if (_.isArray(match)) {\n    return match[0]\n  }\n  return ''\n}\n\nfunction* fetchPartDetail(entity: PartEntity, id: number) {\n  const partApi = getPartApi(entity)\n  const data = yield call(partApi.getDetail, id)\n  const partDetail = data[entity]\n  partDetail.dpn = getPartDpn(entity, partDetail.dpn)\n  partDetail.drawing_id = partDetail.related_drawing\n  partDetail.items = (partDetail.components || []).map(({ id, quantity }) => ({\n    item_id: id,\n    quantity\n  }))\n\n  if (entity === 'item') {\n    partDetail.manufacturer_equiv = partDetail.manufacturer_equiv_object\n    partDetail.material_equiv = partDetail.material_equiv_object\n  }\n  return partDetail\n}\n\nfunction* openPartUpdateDialog({ payload }: ReturnType<typeof partStore.sagaOpenUpdateDialog>) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    const { id, entity } = payload\n    const partApi = getPartApi(entity)\n    const partDetail = yield call(fetchPartDetail, entity, id)\n    const { permissions, wiki_page, ...initData } = yield call(partApi.getInitDataForCE, {\n      job_id_pk: partDetail.job_id\n    })\n    yield putResolve(partStore.actions.setInitData(initData))\n    yield put(partStore.actions.addPart({ detail: partDetail, wiki_page, permissions: permissions[entity] }))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* closePartDialog() {\n  try {\n    yield putResolve(partStore.actions.removePart())\n    const partList = yield* select(partStore.selectPartList)\n    const { detail } = _.last(partList)\n    const partEntity = (detail as any).is_assembly ? 'assembly' : 'item'\n    const partDetail = yield call(fetchPartDetail, partEntity, detail.id)\n    yield put(partStore.actions.updateCurrentPart(partDetail))\n    if (isAssemblyByDpn(detail.dpn)) {\n      yield call(getDrawingItems, { type: '', payload: partDetail.related_drawing.value })\n    }\n    return\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n}\n\nfunction* openManuDialog({ payload }: ReturnType<typeof partStore.sagaOpenManuDialog>) {\n  yield put(partStore.actions.setPartLoading(true))\n  try {\n    yield put(partStore.actions.updateCurrentPart(payload))\n    const { next_code, ...initData } = yield call(manufacturerApi.getInitDataForCE)\n    yield all([\n      putResolve(partStore.actions.setManuDetail({ manufacturer_id: next_code })),\n      putResolve(partStore.actions.setManuInitData(initData))\n    ])\n    yield put(partStore.actions.setManuDialogOpen(true))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(partStore.actions.setPartLoading(false))\n}\n\nfunction* createManu({ payload }: ReturnType<typeof partStore.sagaCreateManu>) {\n  yield put(partStore.actions.setManuDialogLoading(true))\n  try {\n    const { message, id } = yield call(manufacturerApi.create, payload)\n    const { next_code } = yield call(manufacturerApi.getInitDataForCE)\n    const { name } = payload\n    yield putResolve(\n      partStore.actions.setManuDetail({ ...partStore.initialState.manufacturer.detail, manufacturer_id: next_code })\n    )\n    yield all([\n      put(commonStore.actions.setSuccessMessage(message)),\n      put(partStore.actions.addManufacturer({ manufacturer_id: id, reference: '', description: name }))\n    ])\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(partStore.actions.setManuDialogLoading(false))\n}\n\nfunction* closeManuDialog() {\n  yield putResolve(partStore.actions.setManuDialogOpen(false))\n  yield put(partStore.actions.setManuDetail({ manufacturer_id: null, name: '' }))\n}\n\nfunction* getManuId({ payload }: ReturnType<typeof partStore.sagaGetManuId>) {\n  yield put(partStore.actions.setManuDialogLoading(true))\n  try {\n    const { generated_code } = yield call(manufacturerApi.getNextCode, payload.manufacturer_id)\n    yield put(partStore.actions.setManuDetail({ ...payload, manufacturer_id: generated_code }))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(partStore.actions.setManuDialogLoading(false))\n}\n\nfunction* getItemCopy({ payload }: ReturnType<typeof partStore.sagaGetItemCopy>) {\n  yield put(partStore.actions.setPartLoading(true))\n  try {\n    const data = yield call(partRefApi.getDetail, payload.value)\n    // get the allowed attributes\n    const part = _.pick(data.part, [\n      'descriptions',\n      'manufacturer_equiv',\n      'manufacturers',\n      'mass',\n      'material_equiv',\n      'unit',\n      'manufacturer_equiv_standards',\n      'material_equiv_standards'\n    ])\n    part.manufacturer_equiv = data.part.manufacturer_equiv_object\n    part.material_equiv = data.part.material_equiv_object\n    yield put(partStore.actions.updateCurrentPart(part))\n    yield put(commonStore.actions.setSuccessMessage(data.message))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n\n  yield put(partStore.actions.setPartLoading(false))\n}\n\nfunction* getDrawingItems({ payload }: ReturnType<typeof partStore.sagaGetDrawingItems>) {\n  yield put(partStore.actions.setPartLoading(true))\n  try {\n    const { items } = yield call(drawingApi.getItemList, payload)\n    yield put(partStore.actions.setDrawingItems(items))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(partStore.actions.setPartLoading(false))\n}\n\nfunction* partSaga() {\n  yield takeLatest(partStore.sagaOpenCreateDialog, openPartCreateDialog)\n  yield takeLatest(partStore.sagaCreate, createPart)\n  yield takeLatest(partStore.sagaOpenUpdateDialog, openPartUpdateDialog)\n  yield takeEvery(partStore.sagaCloseDialog, closePartDialog)\n  yield takeLatest(partStore.sagaOpenManuDialog, openManuDialog)\n  yield takeEvery(partStore.sagaCreateManu, createManu)\n  yield takeEvery(partStore.sagaCloseManuDialog, closeManuDialog)\n  yield takeLatest(partStore.sagaGetManuId, getManuId)\n  yield takeLatest(partStore.sagaGetItemCopy, getItemCopy)\n  yield takeLatest(partStore.sagaGetDrawingItems, getDrawingItems)\n}\n\nexport default partSaga\n"]},"metadata":{},"sourceType":"module"}