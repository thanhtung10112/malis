{"ast":null,"code":"import { createAction, createSlice, createSelector } from '@reduxjs/toolkit';\nimport { actionTypes } from '@/utils/constant';\nexport const name = 'assembly';\nexport const resetState = createAction(`${name}/${actionTypes.RESET_STATE}`);\nconst initialState = {\n  dataList: [],\n  initDataForList: {\n    jobs: [],\n    permissions: {\n      assembly: null\n    },\n    parameters: {\n      PLLA: []\n    },\n    wiki_page: '',\n    column_tooltips: {}\n  }\n};\nconst assemblySlice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setInitDataForList(state, {\n      payload\n    }) {\n      state.initDataForList = payload;\n    },\n\n    setDataList(state, {\n      payload\n    }) {\n      state.dataList = payload;\n    }\n\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState;\n    }\n\n  }\n});\nexport const {\n  actions\n} = assemblySlice;\nexport const sagaGetList = createAction(`${name}/${actionTypes.GET_LIST}`);\nexport const sagaChangeUserJob = createAction(`${name}/${actionTypes.CHANGE_USER_JOB}`);\nexport const sagaChangeUserDrawing = createAction(`${name}/${actionTypes.CHANGE_USER_DRAWING}`);\nexport const sagaRemove = createAction(`${name}/${actionTypes.REMOVE}`);\nexport const selectState = state => state[name];\nexport const selectInitDataForList = createSelector(selectState, state => state.initDataForList);\nexport const selectPermissions = createSelector(selectState, state => state.initDataForList.permissions.assembly);\nexport const selectDataList = createSelector(selectState, state => state.dataList);\nexport default assemblySlice;","map":null,"metadata":{},"sourceType":"module"}