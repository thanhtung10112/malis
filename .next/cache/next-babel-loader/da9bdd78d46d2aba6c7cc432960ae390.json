{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport useStyles from './styles';\nimport { useSelector } from 'react-redux';\nimport { Button, FormControl, Grid, Paper, Switch, Typography } from '@material-ui/core';\nimport { AppTitle, DataTable, DeleteIcon, FormControllerCheckbox, CreateIcon, AppAutocompleteAsync } from '@/components';\nimport _ from 'lodash';\nimport * as columnProperties from '@/utils/columnProperties';\nimport { drawingStore, commonStore } from '@/store/reducers';\n\nfunction TabDetail() {\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      selectedDocs = _useState[0],\n      setSelectedDocs = _useState[1];\n\n  var _useState2 = useState([]),\n      selectedDocOptions = _useState2[0],\n      setSelectedDocOptions = _useState2[1];\n\n  var drawingForm = useFormContext();\n  var watchAssociatedDocs = drawingForm.watch('associated_documents', []);\n  var watchDrawingsWithoutParts = drawingForm.watch('drawings_without_parts', false);\n  var userJob = useSelector(commonStore.selectUserValueJob);\n  var drawingDetail = useSelector(drawingStore.selectDetail);\n\n  var isCreating = _.isNil(drawingDetail.id);\n\n  var handleAddDocs = function handleAddDocs() {\n    var _drawingForm$getValue = drawingForm.getValues(),\n        associated_documents = _drawingForm$getValue.associated_documents;\n\n    associated_documents.push.apply(associated_documents, _toConsumableArray(selectedDocOptions));\n    drawingForm.setValue('associated_documents', associated_documents);\n    setSelectedDocOptions([]);\n  };\n\n  var handleSelectDoc = function handleSelectDoc(_ref) {\n    var selectionModel = _ref.selectionModel;\n    setSelectedDocs(selectionModel);\n  };\n\n  var handleDeleteDocs = function handleDeleteDocs() {\n    var _drawingForm$getValue2 = drawingForm.getValues(),\n        associated_documents = _drawingForm$getValue2.associated_documents;\n\n    var newDocs = associated_documents.filter(function (doc) {\n      return !selectedDocs.includes(doc.value);\n    });\n    setSelectedDocs([]);\n    drawingForm.setValue('associated_documents', newDocs);\n  };\n\n  var handleSelectDrawing = function handleSelectDrawing(event, options) {\n    setSelectedDocOptions(options);\n  };\n\n  var handleSwitchDrawingSearch = function handleSwitchDrawingSearch(event, checked) {\n    drawingForm.setValue('drawings_without_parts', checked);\n  };\n\n  return /*#__PURE__*/_jsxs(Grid, {\n    container: true,\n    spacing: 1,\n    children: [/*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxs(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsx(AppTitle, {\n            label: \"Associated detailed documents\"\n          })\n        }), /*#__PURE__*/_jsxs(Grid, {\n          item: true,\n          xs: 6,\n          className: classes.switchButton,\n          children: [/*#__PURE__*/_jsx(FormControl, {\n            style: {},\n            children: /*#__PURE__*/_jsx(Switch, {\n              color: \"primary\",\n              inputProps: {\n                'aria-label': 'primary checkbox'\n              },\n              checked: watchDrawingsWithoutParts,\n              onChange: handleSwitchDrawingSearch\n            })\n          }), /*#__PURE__*/_jsx(FormControl, {\n            className: classes.label,\n            children: \"All job/std drawing\"\n          })]\n        })]\n      })\n    }), /*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxs(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 8,\n          children: /*#__PURE__*/_jsx(AppAutocompleteAsync, {\n            label: \"Document\",\n            onChange: handleSelectDrawing,\n            compName: \"drawing_list\",\n            additionalData: {\n              limit_to_job: userJob.value,\n              drawings_without_parts: watchDrawingsWithoutParts\n            },\n            value: selectedDocOptions,\n            multiple: true,\n            limitTags: 2,\n            disableCloseOnSelect: true,\n            filterOptions: function filterOptions(options) {\n              if (!options) {\n                return [];\n              }\n\n              if (isCreating) {\n                return _.differenceWith(options, watchAssociatedDocs, _.isEqual);\n              }\n\n              return _.differenceWith(options, watchAssociatedDocs, _.isEqual).filter(function (item) {\n                return item.value !== drawingDetail.id;\n              });\n            }\n          })\n        }), /*#__PURE__*/_jsxs(Grid, {\n          item: true,\n          xs: 4,\n          className: classes.buttonGroup,\n          children: [/*#__PURE__*/_jsx(Button, {\n            startIcon: /*#__PURE__*/_jsx(CreateIcon, {}),\n            disabled: selectedDocOptions.length === 0,\n            onClick: handleAddDocs,\n            children: \"Add\"\n          }), /*#__PURE__*/_jsx(Button, {\n            startIcon: /*#__PURE__*/_jsx(DeleteIcon, {}),\n            disabled: selectedDocs.length === 0,\n            onClick: handleDeleteDocs,\n            style: {\n              marginTop: -3\n            },\n            children: \"Remove\"\n          })]\n        })]\n      })\n    }), /*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsx(Paper, {\n        children: /*#__PURE__*/_jsx(DataTable, {\n          hideFooter: true,\n          disableColumnMenu: true,\n          checkboxSelection: true,\n          tableHeight: 300,\n          rows: watchAssociatedDocs,\n          selectionModel: selectedDocs,\n          onSelectionModelChange: handleSelectDoc,\n          getRowId: function getRowId(params) {\n            return params.value;\n          },\n          columns: [_objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n            field: 'entity_id',\n            flex: 0.5,\n            headerName: 'Document'\n          }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n            headerName: 'Description',\n            field: 'description',\n            flex: 0.5\n          })]\n        })\n      })\n    }), /*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxs(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsx(Typography, {\n            className: classes.title,\n            children: \"Exclude this drawing from the forward lists\"\n          })\n        }), /*#__PURE__*/_jsxs(Grid, {\n          item: true,\n          xs: 12,\n          style: {\n            marginTop: 8\n          },\n          children: [/*#__PURE__*/_jsx(FormControllerCheckbox, {\n            control: drawingForm.control,\n            name: \"exclude_from_customer\",\n            label: \"Customer\",\n            className: classes.chkSetAsDefault\n          }), /*#__PURE__*/_jsx(FormControllerCheckbox, {\n            control: drawingForm.control,\n            name: \"exclude_from_supplier\",\n            label: \"Suppliers\",\n            className: classes.chkSetAsDefault\n          }), /*#__PURE__*/_jsx(FormControllerCheckbox, {\n            control: drawingForm.control,\n            name: \"exclude_from_other\",\n            label: \"Others\",\n            className: classes.chkSetAsDefault\n          })]\n        })]\n      })\n    })]\n  });\n}\n\nexport default TabDetail;","map":null,"metadata":{},"sourceType":"module"}