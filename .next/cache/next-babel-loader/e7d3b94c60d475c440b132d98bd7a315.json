{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useMemo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { useTranslation } from 'next-i18next';\nimport useStyles from './styles';\nimport { Grid, Button, Paper, Tooltip, Checkbox, Typography } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { Backup as BackupIcon, HighlightOffOutlined as HighlightOffOutlinedIcon } from '@material-ui/icons';\nimport { DataTable, FormControllerTextField, DataTableTextField, SectionTimezone, DialogMain, CreateIcon, DeleteIcon, DataTableAutocomplete, AppAutocomplete, AppImageField, BtnHelp, FormControllerNumberField } from '@/components';\nimport { Unless, When } from 'react-if';\nimport immer from 'immer';\nimport _ from 'lodash';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as columnProperties from '@/utils/columnProperties';\nimport getValidationSchema from './validationSchema';\nimport { removalProperties } from '@/utils/constant';\nimport { equivalenceStore } from '@/store/reducers';\n\nfunction StandardEquivalenceCreateEdit() {\n  var _equivalenceForm$erro, _equivalenceForm$erro2, _equivalenceForm$erro3;\n\n  var _useTranslation = useTranslation('equivalence'),\n      t = _useTranslation.t;\n\n  var validationSchema = useMemo(function () {\n    return getValidationSchema(t);\n  }, []);\n  var equivalenceForm = useForm({\n    shouldUnregister: false,\n    resolver: yupResolver(validationSchema)\n  });\n  var watchEquivalentStandards = equivalenceForm.watch('standards', []);\n  var watchImage = equivalenceForm.watch('image', '');\n  var refFileInput = null;\n\n  var setInputELement = function setInputELement(element) {\n    refFileInput = element;\n  };\n\n  var _useState = useState([]),\n      selectedRows = _useState[0],\n      setSelectedRows = _useState[1];\n\n  var _useState2 = useState(''),\n      idUploadImage = _useState2[0],\n      setIdUploadImage = _useState2[1];\n\n  var _useState3 = useState([]),\n      selectedStandards = _useState3[0],\n      setSelectedStandards = _useState3[1];\n\n  var dispatch = useDispatch();\n  var dialogState = useSelector(equivalenceStore.selectDialogState);\n  var equivalenceType = useSelector(equivalenceStore.selectEquivalenceType);\n  var equivalenceDetail = useSelector(equivalenceStore.selectDetail);\n\n  var _useSelector = useSelector(equivalenceStore.selectInitDataForCE),\n      parameters = _useSelector.parameters,\n      wiki_page = _useSelector.wiki_page;\n\n  var permissions = useSelector(equivalenceStore.selectPermissions);\n\n  var isCreating = _.isNil(equivalenceDetail.id);\n\n  var classes = useStyles({\n    editMode: !isCreating\n  });\n  var standardErrorMessage = useMemo(function () {\n    var errors = equivalenceForm.errors;\n\n    if (!errors.standards) {\n      return '';\n    }\n\n    errors.standards = errors.standards.filter(function (err) {\n      return err;\n    });\n    return _.get(errors, 'standards[0].organization.message') || _.get(errors, 'standards[0].standard.message');\n  }, [equivalenceForm.errors.standards]);\n  var title = useMemo(function () {\n    var action = isCreating ? 'Create' : 'Update';\n    var type = equivalenceType === 'manufacturing_standard' ? 'Manufacturing Standards Equivalence' : 'Material Standards Equivalence';\n    return \"\".concat(action, \" \").concat(type);\n  }, [isCreating, equivalenceType]);\n  useEffect(function () {\n    equivalenceForm.reset(_objectSpread({}, equivalenceDetail));\n  }, [equivalenceDetail]);\n\n  var onCloseDialog = function onCloseDialog() {\n    dispatch(equivalenceStore.sagaCloseDialog());\n    equivalenceForm.clearErrors();\n  };\n\n  var getStandard = function getStandard(value) {\n    var option = _.find(parameters.PLNO, {\n      value: value\n    });\n\n    return option;\n  };\n\n  var onSelectStandard = function onSelectStandard(event, valueOptions) {\n    setSelectedStandards(valueOptions);\n  };\n\n  var onAddEquivalentStandards = function onAddEquivalentStandards() {\n    var standards = _.map(selectedStandards, function (item) {\n      return {\n        organization: item.value,\n        standard: '',\n        preferred: false,\n        image: null\n      };\n    });\n\n    equivalenceForm.setValue('standards', [].concat(_toConsumableArray(watchEquivalentStandards), _toConsumableArray(standards)));\n    setSelectedStandards([]);\n  };\n\n  var onSelectRows = function onSelectRows(_ref) {\n    var selectionModel = _ref.selectionModel;\n    setSelectedRows(selectionModel);\n  };\n\n  var onRemoveEquivalentStandards = function onRemoveEquivalentStandards() {\n    var removalItems = _.filter(watchEquivalentStandards, function (item) {\n      return !selectedRows.includes(item.organization);\n    });\n\n    equivalenceForm.setValue('standards', removalItems);\n    setSelectedRows([]);\n  };\n\n  var onChangePreferred = function onChangePreferred(organization) {\n    return function (event, checked) {\n      var newStandards = immer(watchEquivalentStandards, function (draft) {\n        var index = _.findIndex(watchEquivalentStandards, {\n          organization: organization\n        });\n\n        draft[index].preferred = checked;\n      });\n      equivalenceForm.setValue('standards', newStandards);\n    };\n  };\n\n  var onChangeStandard = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(organization, value) {\n      var newStandards;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              newStandards = immer(watchEquivalentStandards, function (draft) {\n                var index = _.findIndex(watchEquivalentStandards, {\n                  organization: organization\n                });\n\n                draft[index].standard = value;\n              });\n              equivalenceForm.setValue('standards', newStandards);\n              _context.t0 = equivalenceForm.errors.standards;\n\n              if (!_context.t0) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 6;\n              return equivalenceForm.trigger('standards');\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onChangeStandard(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onChangeOrganization = function onChangeOrganization(id) {\n    return /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event, organization) {\n        var newStandards;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                newStandards = immer(watchEquivalentStandards, function (draft) {\n                  var index = _.findIndex(draft, {\n                    organization: id\n                  });\n\n                  if (index !== -1) {\n                    draft[index].organization = organization.value;\n                  }\n                });\n                equivalenceForm.setValue('standards', newStandards);\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n  };\n\n  var onChangeFiles = function onChangeFiles(event) {\n    var files = event.target.files;\n    equivalenceForm.setValue('standards', immer(watchEquivalentStandards, function (draft) {\n      var index = _.findIndex(watchEquivalentStandards, {\n        id: idUploadImage\n      });\n\n      draft[index].image = files[0];\n    }));\n  };\n\n  var filterOrganizationOption = function filterOrganizationOption(options) {\n    return _.differenceWith(options, watchEquivalentStandards, function (option, standard) {\n      return option.value === standard.organization;\n    });\n  };\n\n  var onClickToUploadImage = function onClickToUploadImage(id) {\n    return function () {\n      setIdUploadImage(id);\n      refFileInput.value = '';\n      refFileInput.click();\n    };\n  };\n\n  var onRemoveImage = function onRemoveImage(id) {\n    return function (event) {\n      event.stopPropagation();\n      equivalenceForm.setValue('standards', immer(watchEquivalentStandards, function (draft) {\n        var index = _.findIndex(watchEquivalentStandards, {\n          id: id\n        });\n\n        draft[index].image = '';\n      }));\n    };\n  };\n\n  var onSubmitForm = equivalenceForm.handleSubmit(function (data) {\n    data.equiv_type = equivalenceType === 'manufacturing_standard' ? 1 : 0;\n\n    var payload = _.omit(data, _toConsumableArray(removalProperties));\n\n    var formData = new FormData();\n\n    if (payload.image && payload.image instanceof File) {\n      formData.append('equiv_image', payload.image);\n    }\n\n    delete payload.image;\n    var std_for_remove_img = [];\n\n    var _iterator = _createForOfIteratorHelper(payload.standards),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var std = _step.value;\n\n        if (std.image && std.image instanceof File) {\n          formData.append(\"std_\".concat(std.organization), std.image);\n        } else {\n          // formData.append(`std_${std.organization}`, null as File)\n          std_for_remove_img.push(std.organization);\n        }\n\n        delete std.image;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    formData.append('equiv_info', JSON.stringify(_objectSpread(_objectSpread({}, payload), {}, {\n      standards_for_remove_img: std_for_remove_img\n    })));\n\n    if (isCreating) {\n      dispatch(equivalenceStore.sagaCreate(formData));\n    } else {\n      dispatch(equivalenceStore.sagaUpdate({\n        id: data.id,\n        formData: formData\n      }));\n    }\n  });\n\n  var onGetNextCode = function onGetNextCode() {\n    var currentValues = equivalenceForm.getValues();\n    dispatch(equivalenceStore.sagaGetNextCode(currentValues));\n  };\n\n  var handleChangeImage = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(image) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              equivalenceForm.setValue('image', image.file);\n              _context3.next = 3;\n              return equivalenceForm.trigger('image');\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleChangeImage(_x5) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsx(DialogMain, {\n    open: dialogState.open,\n    maxWidth: \"md\",\n    loading: dialogState.loading,\n    onOk: onSubmitForm,\n    onClose: onCloseDialog,\n    title: /*#__PURE__*/_jsx(BtnHelp, {\n      title: title,\n      href: wiki_page\n    }),\n    height: isCreating ? 500 : 540,\n    classes: {\n      paperWidthMd: classes.paperRoot\n    },\n    okText: isCreating ? t('common:button.create') : t('common:button.update'),\n    okButtonProps: {\n      disabled: dialogState.loading || !(permissions === null || permissions === void 0 ? void 0 : permissions.edit) && !isCreating\n    },\n    children: /*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      spacing: 2,\n      className: classes.gridMarginTop,\n      children: [/*#__PURE__*/_jsx(When, {\n        condition: Boolean((_equivalenceForm$erro = equivalenceForm.errors) === null || _equivalenceForm$erro === void 0 ? void 0 : _equivalenceForm$erro.standards),\n        children: /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsx(Alert, {\n            severity: \"error\",\n            children: standardErrorMessage\n          })\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 9,\n        spacing: 2,\n        children: /*#__PURE__*/_jsxs(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 12,\n            spacing: 3,\n            children: /*#__PURE__*/_jsx(FormControllerNumberField, {\n              label: \"Equivalence #\",\n              name: \"equiv_id\",\n              control: equivalenceForm.control,\n              required: true,\n              decimalScale: 0,\n              fixedDecimalScale: false,\n              generateCode: true,\n              disabled: !isCreating,\n              loading: dialogState.loading,\n              onGenerateCode: onGetNextCode\n            })\n          }), /*#__PURE__*/_jsx(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsx(FormControllerTextField, {\n              required: true,\n              label: \"Description\",\n              name: \"description\",\n              control: equivalenceForm.control\n            })\n          })]\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 3,\n        style: {\n          height: 88\n        },\n        children: /*#__PURE__*/_jsx(AppImageField, {\n          image: watchImage,\n          onChange: handleChangeImage,\n          error: ((_equivalenceForm$erro2 = equivalenceForm.errors.image) === null || _equivalenceForm$erro2 === void 0 ? void 0 : _equivalenceForm$erro2.message) || ''\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 9,\n        children: /*#__PURE__*/_jsx(AppAutocomplete, {\n          label: \"Equivalent standards per organization\",\n          value: selectedStandards,\n          multiple: true,\n          limitTags: 2,\n          disableCloseOnSelect: true,\n          options: parameters.PLNO,\n          renderOption: function renderOption(option) {\n            return option.description;\n          },\n          filterOptions: filterOrganizationOption,\n          onChange: onSelectStandard\n        })\n      }), /*#__PURE__*/_jsxs(Grid, {\n        item: true,\n        xs: 3,\n        children: [/*#__PURE__*/_jsx(Button, {\n          startIcon: /*#__PURE__*/_jsx(CreateIcon, {}),\n          onClick: onAddEquivalentStandards,\n          disabled: selectedStandards.length === 0,\n          style: {\n            textTransform: 'capitalize'\n          },\n          children: \"Add\"\n        }), /*#__PURE__*/_jsx(Button, {\n          startIcon: /*#__PURE__*/_jsx(DeleteIcon, {}),\n          onClick: onRemoveEquivalentStandards,\n          disabled: selectedRows.length <= 0,\n          style: {\n            textTransform: 'capitalize'\n          },\n          children: \"Remove\"\n        })]\n      }), /*#__PURE__*/_jsx(\"input\", {\n        type: \"file\",\n        onChange: onChangeFiles,\n        ref: setInputELement,\n        className: classes.input,\n        accept: ['image/png', 'image/jpg', 'image/jpeg'].join(',')\n      }), /*#__PURE__*/_jsxs(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsx(Paper, {\n          children: /*#__PURE__*/_jsx(DataTable, {\n            tableHeight: ((_equivalenceForm$erro3 = equivalenceForm.errors) === null || _equivalenceForm$erro3 === void 0 ? void 0 : _equivalenceForm$erro3.standards) ? 263 : 335,\n            hideFooter: true,\n            checkboxSelection: true,\n            disableColumnMenu: true,\n            disableSelectionOnClick: true,\n            rows: watchEquivalentStandards,\n            selectionModel: selectedRows,\n            getRowId: function getRowId(param) {\n              return param.organization;\n            },\n            onSelectionModelChange: onSelectRows,\n            columns: [_objectSpread(_objectSpread({}, columnProperties.editCell('Organization')), {}, {\n              sortable: false,\n              field: 'organization',\n              headerName: 'Organization',\n              flex: 0.5,\n              valueGetter: function valueGetter(params) {\n                var value = getStandard(params.value);\n                return value;\n              },\n              valueFormatter: function valueFormatter(params) {\n                var _params$value;\n\n                return (_params$value = params.value) === null || _params$value === void 0 ? void 0 : _params$value.description;\n              },\n              renderEditCell: function renderEditCell(params) {\n                return /*#__PURE__*/_jsx(DataTableAutocomplete, {\n                  params: params,\n                  options: parameters.PLNO,\n                  onChange: onChangeOrganization(params.id),\n                  filterOptions: filterOrganizationOption\n                });\n              }\n            }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.editCell('Standard')), {}, {\n              field: 'standard',\n              flex: 0.4,\n              renderEditCell: function renderEditCell(params) {\n                return /*#__PURE__*/_jsx(DataTableTextField, {\n                  params: params,\n                  onChangeValue: onChangeStandard\n                });\n              }\n            }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n              field: 'preferred',\n              headerName: 'Preferred',\n              width: 100,\n              align: 'center',\n              headerAlign: 'center',\n              renderCell: function renderCell(params) {\n                return /*#__PURE__*/_jsx(Checkbox, {\n                  color: \"primary\",\n                  style: {\n                    padding: 0\n                  },\n                  checked: params.value,\n                  onChange: onChangePreferred(params.id)\n                });\n              }\n            }), {\n              field: 'image',\n              headerName: 'Image',\n              sortable: false,\n              width: 150,\n              align: 'center',\n              headerAlign: 'center',\n              renderCell: function renderCell(params) {\n                if (params.value) {\n                  return /*#__PURE__*/_jsx(Tooltip, {\n                    title: /*#__PURE__*/_jsx(\"img\", {\n                      src: params.value instanceof File ? URL.createObjectURL(params.value) : params.value,\n                      style: {\n                        height: '150px'\n                      }\n                    }),\n                    placement: \"top-end\",\n                    children: /*#__PURE__*/_jsxs(\"div\", {\n                      style: {\n                        display: 'flex'\n                      },\n                      onClick: onClickToUploadImage(params.id),\n                      children: [/*#__PURE__*/_jsx(Typography, {\n                        noWrap: true,\n                        component: \"div\",\n                        style: {\n                          width: 100\n                        },\n                        children: params.value.name || params.value\n                      }), /*#__PURE__*/_jsx(HighlightOffOutlinedIcon, {\n                        onClick: onRemoveImage(params.id)\n                      })]\n                    })\n                  });\n                }\n\n                return /*#__PURE__*/_jsx(Tooltip, {\n                  title: \"Only PNG, JPG, JPEG files are allowed!\",\n                  children: /*#__PURE__*/_jsx(\"div\", {\n                    style: {\n                      display: 'flex',\n                      alignItems: 'center'\n                    },\n                    onClick: onClickToUploadImage(params.id),\n                    children: /*#__PURE__*/_jsx(BackupIcon, {\n                      style: {\n                        color: '#0A65FF'\n                      }\n                    })\n                  })\n                });\n              }\n            }]\n          })\n        }), /*#__PURE__*/_jsx(Unless, {\n          condition: isCreating,\n          children: /*#__PURE__*/_jsx(SectionTimezone, {\n            value: equivalenceDetail\n          })\n        })]\n      })]\n    })\n  });\n}\n\nexport default StandardEquivalenceCreateEdit;","map":null,"metadata":{},"sourceType":"module"}