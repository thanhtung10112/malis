{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\FormController\\\\Autocomplete\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { useController } from 'react-hook-form';\nimport { AppAutocomplete } from '@/components/index';\nimport _ from 'lodash';\nvar useStyles = makeStyles(function () {\n  return {\n    popper: {\n      zIndex: 9999999\n    }\n  };\n});\n\nvar FormControllerAutocomplete = function FormControllerAutocomplete(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var control = props.control,\n      defaultValue = props.defaultValue,\n      name = props.name,\n      rules = props.rules,\n      primaryKeyOption = props.primaryKeyOption,\n      onChangeProps = props.onChange,\n      textFieldProps = props.textFieldProps,\n      autocompleteProps = _objectWithoutProperties(props, [\"control\", \"defaultValue\", \"name\", \"rules\", \"primaryKeyOption\", \"onChange\", \"textFieldProps\"]);\n\n  var _useController = useController({\n    name: name,\n    rules: rules,\n    defaultValue: defaultValue,\n    control: control\n  }),\n      _useController$field = _useController.field,\n      onChange = _useController$field.onChange,\n      inputProps = _objectWithoutProperties(_useController$field, [\"onChange\"]),\n      invalid = _useController.meta.invalid;\n\n  var onChangeValue = function onChangeValue(event, value) {\n    if (_.isNil(value)) {\n      onChange(null);\n      return;\n    }\n\n    onChange(value[primaryKeyOption]);\n\n    if (_.isFunction(onChangeProps)) {\n      onChangeProps(value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppAutocomplete, _objectSpread(_objectSpread(_objectSpread({}, autocompleteProps), inputProps), {}, {\n    classes: _objectSpread({}, classes),\n    helperText: invalid === null || invalid === void 0 ? void 0 : invalid.message,\n    error: Boolean(invalid),\n    onChange: onChangeValue,\n    textFieldProps: _objectSpread({\n      name: name\n    }, textFieldProps),\n    primaryKeyOption: primaryKeyOption\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(FormControllerAutocomplete, \"sLIHaza1X9DQR+XsxgQyYuJs2QU=\", false, function () {\n  return [useStyles, useController];\n});\n\n_c = FormControllerAutocomplete;\nFormControllerAutocomplete.defaultProps = {\n  primaryKeyOption: 'id'\n};\nexport default FormControllerAutocomplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormControllerAutocomplete\");","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/FormController/Autocomplete/index.tsx"],"names":["React","makeStyles","useController","AppAutocomplete","_","useStyles","popper","zIndex","FormControllerAutocomplete","props","classes","control","defaultValue","name","rules","primaryKeyOption","onChangeProps","onChange","textFieldProps","autocompleteProps","field","inputProps","invalid","meta","onChangeValue","event","value","isNil","isFunction","message","Boolean","defaultProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,SAASC,eAAT,QAAgC,oBAAhC;AAEA,OAAOC,CAAP,MAAc,QAAd;AAIA,IAAMC,SAAS,GAAGJ,UAAU,CAAC;AAAA,SAAO;AAClCK,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE;AADF;AAD0B,GAAP;AAAA,CAAD,CAA5B;;AAMA,IAAMC,0BAAqE,GAAG,SAAxEA,0BAAwE,CAACC,KAAD,EAAW;AAAA;;AACvF,MAAMC,OAAO,GAAGL,SAAS,EAAzB;;AADuF,MAGrFM,OAHqF,GAWnFF,KAXmF,CAGrFE,OAHqF;AAAA,MAIrFC,YAJqF,GAWnFH,KAXmF,CAIrFG,YAJqF;AAAA,MAKrFC,IALqF,GAWnFJ,KAXmF,CAKrFI,IALqF;AAAA,MAMrFC,KANqF,GAWnFL,KAXmF,CAMrFK,KANqF;AAAA,MAOrFC,gBAPqF,GAWnFN,KAXmF,CAOrFM,gBAPqF;AAAA,MAQ3EC,aAR2E,GAWnFP,KAXmF,CAQrFQ,QARqF;AAAA,MASrFC,cATqF,GAWnFT,KAXmF,CASrFS,cATqF;AAAA,MAUlFC,iBAVkF,4BAWnFV,KAXmF;;AAAA,uBAgBnFP,aAAa,CAAC;AAChBW,IAAAA,IAAI,EAAJA,IADgB;AAEhBC,IAAAA,KAAK,EAALA,KAFgB;AAGhBF,IAAAA,YAAY,EAAZA,YAHgB;AAIhBD,IAAAA,OAAO,EAAPA;AAJgB,GAAD,CAhBsE;AAAA,4CAcrFS,KAdqF;AAAA,MAc5EH,QAd4E,wBAc5EA,QAd4E;AAAA,MAc/DI,UAd+D;AAAA,MAe7EC,OAf6E,kBAerFC,IAfqF,CAe7ED,OAf6E;;AAuBvF,MAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,KAAR,EAAkB;AACtC,QAAItB,CAAC,CAACuB,KAAF,CAAQD,KAAR,CAAJ,EAAoB;AAClBT,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACA;AACD;;AACDA,IAAAA,QAAQ,CAACS,KAAK,CAACX,gBAAD,CAAN,CAAR;;AAEA,QAAIX,CAAC,CAACwB,UAAF,CAAaZ,aAAb,CAAJ,EAAiC;AAC/BA,MAAAA,aAAa,CAACU,KAAD,CAAb;AACD;AACF,GAVD;;AAYA,sBACE,QAAC,eAAD,gDACMP,iBADN,GAEME,UAFN;AAGE,IAAA,OAAO,oBAAOX,OAAP,CAHT;AAIE,IAAA,UAAU,EAAGY,OAAH,aAAGA,OAAH,uBAAGA,OAAD,CAAkBO,OAJhC;AAKE,IAAA,KAAK,EAAEC,OAAO,CAACR,OAAD,CALhB;AAME,IAAA,QAAQ,EAAEE,aANZ;AAOE,IAAA,cAAc;AAAIX,MAAAA,IAAI,EAAEA;AAAV,OAAmBK,cAAnB,CAPhB;AAQE,IAAA,gBAAgB,EAAEH;AARpB;AAAA;AAAA;AAAA;AAAA,WADF;AAYD,CA/CD;;GAAMP,0B;UACYH,S,EAeZH,a;;;KAhBAM,0B;AAiDNA,0BAA0B,CAACuB,YAA3B,GAA0C;AACxChB,EAAAA,gBAAgB,EAAE;AADsB,CAA1C;AAIA,eAAeP,0BAAf","sourcesContent":["import React from 'react'\n\nimport { makeStyles } from '@material-ui/core'\nimport { useController } from 'react-hook-form'\n\nimport { AppAutocomplete } from '@/components/index'\n\nimport _ from 'lodash'\n\nimport type { FormControllerAutocompleteProps } from './type'\n\nconst useStyles = makeStyles(() => ({\n  popper: {\n    zIndex: 9999999\n  }\n}))\n\nconst FormControllerAutocomplete: React.FC<FormControllerAutocompleteProps> = (props) => {\n  const classes = useStyles()\n  const {\n    control,\n    defaultValue,\n    name,\n    rules,\n    primaryKeyOption,\n    onChange: onChangeProps,\n    textFieldProps,\n    ...autocompleteProps\n  } = props\n\n  const {\n    field: { onChange, ...inputProps },\n    meta: { invalid }\n  } = useController({\n    name,\n    rules,\n    defaultValue,\n    control\n  })\n\n  const onChangeValue = (event, value) => {\n    if (_.isNil(value)) {\n      onChange(null)\n      return\n    }\n    onChange(value[primaryKeyOption])\n\n    if (_.isFunction(onChangeProps)) {\n      onChangeProps(value)\n    }\n  }\n\n  return (\n    <AppAutocomplete\n      {...autocompleteProps}\n      {...inputProps}\n      classes={{ ...classes }}\n      helperText={(invalid as any)?.message}\n      error={Boolean(invalid)}\n      onChange={onChangeValue}\n      textFieldProps={{ name: name, ...textFieldProps }}\n      primaryKeyOption={primaryKeyOption}\n    />\n  )\n}\n\nFormControllerAutocomplete.defaultProps = {\n  primaryKeyOption: 'id'\n}\n\nexport default FormControllerAutocomplete\n"]},"metadata":{},"sourceType":"module"}