{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { useTranslation } from 'next-i18next';\nimport { DialogMain, FormControllerTabs, BtnHelp, useConfirm, TableExtendedProperties, AppTabHistoryLog } from '@/components';\nimport TabGeneral from './TabGeneral';\nimport TabStandard from './TabStandard';\nimport TabManufacturer from './TabManufacturer';\nimport TabParent from './TabParent';\nimport Context from '../Context';\nimport _ from 'lodash';\nimport getValidationSchema from './validationSchema';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { partStore } from '@/store/reducers';\n\nconst DialogItem = props => {\n  const {\n    permissions,\n    loading,\n    tab,\n    wiki_page,\n    detail,\n    historyLogs,\n    onSubmit,\n    onClose,\n    onChangeTab\n  } = props;\n  const {\n    t\n  } = useTranslation('item');\n  const {\n    confirm\n  } = useConfirm();\n  const isCreating = useMemo(() => _.isNil(detail.id), [detail]);\n  const validationSchema = useMemo(() => getValidationSchema(t), []);\n  const itemForm = useForm({\n    shouldUnregister: false,\n    resolver: yupResolver(validationSchema)\n  });\n  const dispatch = useDispatch();\n  const confirmRef = useSelector(partStore.selectConfirmRef);\n  const parameters = useSelector(partStore.selectParameters);\n  useEffect(() => {\n    itemForm.reset(detail);\n  }, [detail]);\n  useEffect(() => {\n    if (confirmRef.open) {\n      handleConfirmRef();\n    }\n  }, [confirmRef.open]);\n\n  const handleConfirmRef = async () => {\n    const result = await confirm({\n      title: 'Warning',\n      description: confirmRef.message,\n      buttons: [{\n        label: 'Ok',\n        action: 'OK'\n      }]\n    });\n\n    if (result === 'OK') {\n      dispatch(partStore.actions.setConfirmRefOpen(false));\n    }\n  };\n\n  const handleChangeHistoryLogs = data => {\n    dispatch(partStore.actions.setHistoryLogs(data));\n  };\n\n  const handleSubmitForm = itemForm.handleSubmit(formData => {\n    var _formData$material_eq, _formData$manufacture, _formData$drawing_id, _formData$reference_t;\n\n    formData.material_equiv = ((_formData$material_eq = formData.material_equiv) === null || _formData$material_eq === void 0 ? void 0 : _formData$material_eq.value) || null;\n    formData.manufacturer_equiv = ((_formData$manufacture = formData.manufacturer_equiv) === null || _formData$manufacture === void 0 ? void 0 : _formData$manufacture.value) || null;\n    formData.drawing_id = ((_formData$drawing_id = formData.drawing_id) === null || _formData$drawing_id === void 0 ? void 0 : _formData$drawing_id.value) || null;\n    formData.reference_to = ((_formData$reference_t = formData.reference_to) === null || _formData$reference_t === void 0 ? void 0 : _formData$reference_t.value) || null;\n\n    const data = _.pick(formData, ['descriptions', 'dpn', 'drawing_id', 'job_id', 'manufacturer_equiv', 'manufacturers', 'mass', 'material_equiv', 'reference_to', 'unit', 'additional_attributes']); // remove desc attribute from manufacturer list\n\n\n    data.manufacturers = _.map(data.manufacturers, manu => _.omit(manu, 'description'));\n    onSubmit(formData.id, data);\n  });\n  const generalTab = {\n    label: t('common:tab.general'),\n    panel: /*#__PURE__*/_jsx(TabGeneral, {}),\n    errorKey: ['dpn', 'drawing_id', 'mass']\n  };\n  const standardTab = {\n    label: t('form.tab.standard'),\n    panel: /*#__PURE__*/_jsx(TabStandard, {}),\n    errorKey: ['manufacturer_equiv', 'material_equiv']\n  };\n  const manufacturerTab = {\n    label: t('form.tab.manufacturer'),\n    panel: /*#__PURE__*/_jsx(TabManufacturer, {})\n  };\n  const parentTab = {\n    label: t('form.tab.parent'),\n    hide: isCreating,\n    panel: /*#__PURE__*/_jsx(TabParent, {})\n  };\n  const historyTab = {\n    label: t('common:tab.history'),\n    hide: isCreating,\n    panel: /*#__PURE__*/_jsx(AppTabHistoryLog, {\n      data: historyLogs,\n      entityId: detail.id,\n      mode: \"horizonatal\",\n      tableHeight: 320,\n      descriptionRows: 19,\n      entity: \"item\",\n      onChange: handleChangeHistoryLogs\n    })\n  };\n  const extendedPropTab = {\n    label: t('common:tab.extended_properties'),\n    panel: /*#__PURE__*/_jsx(TableExtendedProperties, {\n      control: itemForm.control,\n      name: \"additional_attributes\",\n      editMode: !isCreating,\n      propertiesList: parameters.PAAT,\n      tableHeight: 325,\n      parameterName: \"PAAT\"\n    })\n  };\n  const tabs = [generalTab, standardTab, manufacturerTab, parentTab, extendedPropTab, historyTab];\n  return /*#__PURE__*/_jsx(DialogMain, {\n    open: true,\n    loading: loading,\n    fullWidth: true,\n    maxWidth: \"md\",\n    title: /*#__PURE__*/_jsx(BtnHelp, {\n      title: isCreating ? t('form.title.create_item') : t('form.title.update_item'),\n      href: wiki_page\n    }),\n    onOk: handleSubmitForm,\n    onClose: onClose,\n    height: 400,\n    okText: isCreating ? t('common:button.create') : t('common:button.update'),\n    okButtonProps: {\n      disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.edit) && !isCreating || loading\n    },\n    children: /*#__PURE__*/_jsx(Context.Provider, {\n      value: {\n        loading\n      },\n      children: /*#__PURE__*/_jsx(FormControllerTabs, {\n        value: tab,\n        onChange: onChangeTab,\n        form: itemForm,\n        tabs: tabs\n      })\n    })\n  });\n};\n\nexport default DialogItem;","map":null,"metadata":{},"sourceType":"module"}