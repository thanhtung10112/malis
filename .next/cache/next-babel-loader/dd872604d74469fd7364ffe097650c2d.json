{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Budget\\\\RemindData\\\\index.tsx\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'next-i18next';\nimport parseHTML from 'html-react-parser';\nimport { budgetActions } from '@/store/reducers';\nimport { DialogMain } from '@/components';\n\nfunction DialogRemindData() {\n  const {\n    t\n  } = useTranslation('budget');\n  const dispatch = useDispatch();\n  const remindData = useSelector(budgetActions.selectRemindData);\n  const helperText = React.useMemo(() => parseHTML(remindData.helpText), [remindData.helpText]);\n\n  const handleClose = () => {\n    dispatch(budgetActions.setRemindData({\n      open: false\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(DialogMain, {\n    open: remindData.open,\n    title: t('form.title.remind_data'),\n    hideButtonsAction: true,\n    onClose: handleClose,\n    children: helperText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\nexport default DialogRemindData;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Budget/RemindData/index.tsx"],"names":["React","useDispatch","useSelector","useTranslation","parseHTML","budgetActions","DialogMain","DialogRemindData","t","dispatch","remindData","selectRemindData","helperText","useMemo","helpText","handleClose","setRemindData","open"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,QAA+B,cAA/B;AAEA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,SAASC,gBAAT,GAA4B;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAQL,cAAc,CAAC,QAAD,CAA5B;AAEA,QAAMM,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,UAAU,GAAGR,WAAW,CAACG,aAAa,CAACM,gBAAf,CAA9B;AACA,QAAMC,UAAU,GAAGZ,KAAK,CAACa,OAAN,CAAc,MAAMT,SAAS,CAACM,UAAU,CAACI,QAAZ,CAA7B,EAAoD,CAACJ,UAAU,CAACI,QAAZ,CAApD,CAAnB;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBN,IAAAA,QAAQ,CAACJ,aAAa,CAACW,aAAd,CAA4B;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAA5B,CAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEP,UAAU,CAACO,IAA7B;AAAmC,IAAA,KAAK,EAAET,CAAC,CAAC,wBAAD,CAA3C;AAAuE,IAAA,iBAAiB,MAAxF;AAAyF,IAAA,OAAO,EAAEO,WAAlG;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;AAED,eAAeL,gBAAf","sourcesContent":["import React from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useTranslation } from 'next-i18next'\n\nimport parseHTML from 'html-react-parser'\n\nimport { budgetActions } from '@/store/reducers'\n\nimport { DialogMain } from '@/components'\n\nfunction DialogRemindData() {\n  const { t } = useTranslation('budget')\n\n  const dispatch = useDispatch()\n  const remindData = useSelector(budgetActions.selectRemindData)\n  const helperText = React.useMemo(() => parseHTML(remindData.helpText), [remindData.helpText])\n\n  const handleClose = () => {\n    dispatch(budgetActions.setRemindData({ open: false }))\n  }\n\n  return (\n    <DialogMain open={remindData.open} title={t('form.title.remind_data')} hideButtonsAction onClose={handleClose}>\n      {helperText}\n    </DialogMain>\n  )\n}\n\nexport default DialogRemindData\n"]},"metadata":{},"sourceType":"module"}