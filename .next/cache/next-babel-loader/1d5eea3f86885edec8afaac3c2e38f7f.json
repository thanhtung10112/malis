{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Fersher\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\MakeAList\\\\TabOptions\\\\index.tsx\";\nimport { FormControlLabel, Switch, Tooltip } from '@material-ui/core';\nimport { useTranslation } from 'next-i18next';\nimport useStyles from './styles';\nimport { useFormContext } from 'react-hook-form';\nimport { useConfirm } from '@/components/index';\n\nfunction TabOptions() {\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslation('make_a_list');\n  const {\n    confirm\n  } = useConfirm();\n  const makeAListForm = useFormContext();\n  const watchIgnoreCase = makeAListForm.watch('ignore_case', false);\n  const watchDistinct = makeAListForm.watch('distinct', false);\n\n  const onToggleOption = (event, checked) => {\n    const {\n      name\n    } = event.target;\n    makeAListForm.setValue(name, checked);\n\n    if (name === 'distinct' && checked === true) {\n      confirm({\n        title: t('common:label.warning'),\n        description: t('message.distinct_warning'),\n        buttons: [{\n          label: 'OK',\n          action: 'ok'\n        }]\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        name: \"ignore_case\",\n        checked: watchIgnoreCase,\n        onChange: onToggleOption,\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 18\n      }, this),\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: t('label.ignore_case')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: t('tooltip.ignore_case'),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.infoOptionTab,\n            children: \"(?)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        name: \"distinct\",\n        checked: watchDistinct,\n        onChange: onToggleOption,\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 18\n      }, this),\n      label: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: t('label.distinct')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: t('tooltip.distinct'),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.infoOptionTab,\n            children: \"(?)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport default TabOptions;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/MakeAList/TabOptions/index.tsx"],"names":["FormControlLabel","Switch","Tooltip","useTranslation","useStyles","useFormContext","useConfirm","TabOptions","classes","t","confirm","makeAListForm","watchIgnoreCase","watch","watchDistinct","onToggleOption","event","checked","name","target","setValue","title","description","buttons","label","action","infoOptionTab"],"mappings":";;;AAAA,SAASA,gBAAT,EAA2BC,MAA3B,EAAmCC,OAAnC,QAAkD,mBAAlD;AAEA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,UAAT,QAA2B,oBAA3B;;AAEA,SAASC,UAAT,GAAsB;AACpB,QAAMC,OAAO,GAAGJ,SAAS,EAAzB;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAQN,cAAc,CAAC,aAAD,CAA5B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAcJ,UAAU,EAA9B;AACA,QAAMK,aAAa,GAAGN,cAAc,EAApC;AAEA,QAAMO,eAAe,GAAGD,aAAa,CAACE,KAAd,CAAoB,aAApB,EAAmC,KAAnC,CAAxB;AACA,QAAMC,aAAa,GAAGH,aAAa,CAACE,KAAd,CAAoB,UAApB,EAAgC,KAAhC,CAAtB;;AAEA,QAAME,cAAc,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACzC,UAAM;AAAEC,MAAAA;AAAF,QAAWF,KAAK,CAACG,MAAvB;AACAR,IAAAA,aAAa,CAACS,QAAd,CAAuBF,IAAvB,EAA6BD,OAA7B;;AACA,QAAIC,IAAI,KAAK,UAAT,IAAuBD,OAAO,KAAK,IAAvC,EAA6C;AAC3CP,MAAAA,OAAO,CAAC;AACNW,QAAAA,KAAK,EAAEZ,CAAC,CAAC,sBAAD,CADF;AAENa,QAAAA,WAAW,EAAEb,CAAC,CAAC,0BAAD,CAFR;AAGNc,QAAAA,OAAO,EAAE,CACP;AACEC,UAAAA,KAAK,EAAE,IADT;AAEEC,UAAAA,MAAM,EAAE;AAFV,SADO;AAHH,OAAD,CAAP;AAUD;AACF,GAfD;;AAgBA,sBACE;AAAA,4BACE,QAAC,gBAAD;AACE,MAAA,OAAO,eAAE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,aAAb;AAA2B,QAAA,OAAO,EAAEb,eAApC;AAAqD,QAAA,QAAQ,EAAEG,cAA/D;AAA+E,QAAA,KAAK,EAAC;AAArF;AAAA;AAAA;AAAA;AAAA,cADX;AAEE,MAAA,KAAK,eACH;AAAA,gCACE;AAAA,oBAAON,CAAC,CAAC,mBAAD;AAAR;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAEA,CAAC,CAAC,qBAAD,CAAjB;AAAA,iCACE;AAAM,YAAA,SAAS,EAAED,OAAO,CAACkB,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAA;AAAA;AAAA;AAAA,YAZF,eAcE,QAAC,gBAAD;AACE,MAAA,OAAO,eAAE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,UAAb;AAAwB,QAAA,OAAO,EAAEZ,aAAjC;AAAgD,QAAA,QAAQ,EAAEC,cAA1D;AAA0E,QAAA,KAAK,EAAC;AAAhF;AAAA;AAAA;AAAA;AAAA,cADX;AAEE,MAAA,KAAK,eACH;AAAA,gCACE;AAAA,oBAAON,CAAC,CAAC,gBAAD;AAAR;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAEA,CAAC,CAAC,kBAAD,CAAjB;AAAA,iCACE;AAAM,YAAA,SAAS,EAAED,OAAO,CAACkB,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA,kBADF;AA4BD;;AAED,eAAenB,UAAf","sourcesContent":["import { FormControlLabel, Switch, Tooltip } from '@material-ui/core'\n\nimport { useTranslation } from 'next-i18next'\nimport useStyles from './styles'\nimport { useFormContext } from 'react-hook-form'\nimport { useConfirm } from '@/components/index'\n\nfunction TabOptions() {\n  const classes = useStyles()\n  const { t } = useTranslation('make_a_list')\n  const { confirm } = useConfirm()\n  const makeAListForm = useFormContext()\n\n  const watchIgnoreCase = makeAListForm.watch('ignore_case', false)\n  const watchDistinct = makeAListForm.watch('distinct', false)\n\n  const onToggleOption = (event, checked) => {\n    const { name } = event.target\n    makeAListForm.setValue(name, checked)\n    if (name === 'distinct' && checked === true) {\n      confirm({\n        title: t('common:label.warning'),\n        description: t('message.distinct_warning'),\n        buttons: [\n          {\n            label: 'OK',\n            action: 'ok'\n          }\n        ]\n      })\n    }\n  }\n  return (\n    <>\n      <FormControlLabel\n        control={<Switch name=\"ignore_case\" checked={watchIgnoreCase} onChange={onToggleOption} color=\"primary\" />}\n        label={\n          <>\n            <span>{t('label.ignore_case')}</span>\n            <Tooltip title={t('tooltip.ignore_case')}>\n              <span className={classes.infoOptionTab}>(?)</span>\n            </Tooltip>\n          </>\n        }\n      />\n      <p />\n\n      <FormControlLabel\n        control={<Switch name=\"distinct\" checked={watchDistinct} onChange={onToggleOption} color=\"primary\" />}\n        label={\n          <>\n            <span>{t('label.distinct')}</span>\n            <Tooltip title={t('tooltip.distinct')}>\n              <span className={classes.infoOptionTab}>(?)</span>\n            </Tooltip>\n          </>\n        }\n      />\n    </>\n  )\n}\n\nexport default TabOptions\n"]},"metadata":{},"sourceType":"module"}