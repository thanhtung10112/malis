{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Fersher\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Budget\\\\TabGeneral\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid, FormControl, Tooltip, TextField } from '@material-ui/core';\nimport { When } from 'react-if';\nimport { FormControllerAutocomplete, SectionTimezone, FormControllerTextField, FormControllerNumberField } from '@/components';\nimport useStyles from './styles';\nimport { useSelector } from 'react-redux';\nimport { useFormContext } from 'react-hook-form';\nimport { useTranslation } from 'next-i18next';\nimport { budgetActions } from '@/store/reducers';\nimport _ from 'lodash';\nimport parseHTML from 'html-react-parser';\n\nfunction TabGeneral() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation('budget'),\n      t = _useTranslation.t;\n\n  var budgetForm = useFormContext();\n  var watchPuco = budgetForm.watch('puco', null);\n  var dialogState = useSelector(budgetActions.selectDialogState);\n  var userJob = useSelector(budgetActions.selectUserJob);\n  var initDataForCreateEdit = useSelector(budgetActions.selectInitDataCreateEdit);\n  var tooltipForCode = React.useMemo(function () {\n    return parseHTML(t('tooltip.code'));\n  }, []);\n  React.useEffect(function () {\n    if (watchPuco) {\n      var _findPuco$properties;\n\n      var findPuco = _.find(initDataForCreateEdit.puco_list, {\n        value: watchPuco\n      });\n\n      budgetForm.setValue('currency', (findPuco === null || findPuco === void 0 ? void 0 : (_findPuco$properties = findPuco.properties) === null || _findPuco$properties === void 0 ? void 0 : _findPuco$properties.currency) || '');\n    }\n  }, [watchPuco]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      className: classes.wrapDialog,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"job_id\",\n          label: t('form.label.job'),\n          required: true,\n          disabled: true,\n          value: (userJob === null || userJob === void 0 ? void 0 : userJob.description) || ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: tooltipForCode,\n            children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n              label: t('form.label.code'),\n              name: \"budget_id\",\n              required: true,\n              control: budgetForm.control,\n              transformValue: function transformValue(value) {\n                return value.toUpperCase();\n              },\n              disabled: dialogState.isEdit,\n              InputProps: {\n                readOnly: dialogState.isEdit,\n                className: dialogState.isEdit ? 'Mui-disabled' : undefined\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormControllerAutocomplete, {\n          disableClearable: true,\n          required: true,\n          label: t('form.label.puco'),\n          name: \"puco\",\n          primaryKeyOption: \"value\",\n          options: initDataForCreateEdit.puco_list,\n          control: budgetForm.control,\n          renderOption: function renderOption(option) {\n            return option.description;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n          disabled: true,\n          label: t('form.label.currency'),\n          name: \"currency\",\n          control: budgetForm.control\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormControllerNumberField, {\n          label: t('form.label.amount'),\n          name: \"amount\",\n          required: true,\n          control: budgetForm.control\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n          label: t('form.label.description'),\n          name: \"description\",\n          multiline: true,\n          rows: 10,\n          control: budgetForm.control\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(When, {\n        condition: dialogState.isEdit,\n        children: /*#__PURE__*/_jsxDEV(SectionTimezone, {\n          value: budgetForm.getValues()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(TabGeneral, \"wdpS+AmZi3sgaoK+4u5BoMmT4Lw=\", false, function () {\n  return [useStyles, useTranslation, useFormContext, useSelector, useSelector, useSelector];\n});\n\n_c = TabGeneral;\nexport default TabGeneral;\n\nvar _c;\n\n$RefreshReg$(_c, \"TabGeneral\");","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Budget/TabGeneral/index.tsx"],"names":["React","Grid","FormControl","Tooltip","TextField","When","FormControllerAutocomplete","SectionTimezone","FormControllerTextField","FormControllerNumberField","useStyles","useSelector","useFormContext","useTranslation","budgetActions","_","parseHTML","TabGeneral","classes","t","budgetForm","watchPuco","watch","dialogState","selectDialogState","userJob","selectUserJob","initDataForCreateEdit","selectInitDataCreateEdit","tooltipForCode","useMemo","useEffect","findPuco","find","puco_list","value","setValue","properties","currency","wrapDialog","description","control","toUpperCase","isEdit","readOnly","className","undefined","option","getValues"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { Grid, FormControl, Tooltip, TextField } from '@material-ui/core'\n\nimport { When } from 'react-if'\n\nimport {\n  FormControllerAutocomplete,\n  SectionTimezone,\n  FormControllerTextField,\n  FormControllerNumberField\n} from '@/components'\n\nimport useStyles from './styles'\nimport { useSelector } from 'react-redux'\nimport { useFormContext } from 'react-hook-form'\nimport { useTranslation } from 'next-i18next'\n\nimport { budgetActions } from '@/store/reducers'\n\nimport _ from 'lodash'\nimport parseHTML from 'html-react-parser'\n\nfunction TabGeneral() {\n  const classes = useStyles()\n  const { t } = useTranslation('budget')\n\n  const budgetForm = useFormContext()\n  const watchPuco = budgetForm.watch('puco', null)\n\n  const dialogState = useSelector(budgetActions.selectDialogState)\n  const userJob = useSelector(budgetActions.selectUserJob)\n  const initDataForCreateEdit = useSelector(budgetActions.selectInitDataCreateEdit)\n\n  const tooltipForCode = React.useMemo(() => parseHTML(t('tooltip.code')), [])\n\n  React.useEffect(() => {\n    if (watchPuco) {\n      const findPuco = _.find(initDataForCreateEdit.puco_list, {\n        value: watchPuco\n      })\n      budgetForm.setValue('currency', findPuco?.properties?.currency || '')\n    }\n  }, [watchPuco])\n\n  return (\n    <>\n      <Grid container spacing={2} className={classes.wrapDialog}>\n        <Grid item xs={12}>\n          <TextField name=\"job_id\" label={t('form.label.job')} required disabled value={userJob?.description || ''} />\n        </Grid>\n\n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <Tooltip title={tooltipForCode}>\n              <FormControllerTextField\n                label={t('form.label.code')}\n                name=\"budget_id\"\n                required\n                control={budgetForm.control}\n                transformValue={(value) => value.toUpperCase()}\n                disabled={dialogState.isEdit}\n                InputProps={{\n                  readOnly: dialogState.isEdit,\n                  className: dialogState.isEdit ? 'Mui-disabled' : undefined\n                }}\n              />\n            </Tooltip>\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12}>\n          <FormControllerAutocomplete\n            disableClearable\n            required\n            label={t('form.label.puco')}\n            name=\"puco\"\n            primaryKeyOption=\"value\"\n            options={initDataForCreateEdit.puco_list}\n            control={budgetForm.control}\n            renderOption={(option) => option.description}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <FormControllerTextField\n            disabled\n            label={t('form.label.currency')}\n            name=\"currency\"\n            control={budgetForm.control}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControllerNumberField\n            label={t('form.label.amount')}\n            name=\"amount\"\n            required\n            control={budgetForm.control}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <FormControllerTextField\n            label={t('form.label.description')}\n            name=\"description\"\n            multiline\n            rows={10}\n            control={budgetForm.control}\n          />\n        </Grid>\n\n        <When condition={dialogState.isEdit}>\n          <SectionTimezone value={budgetForm.getValues()} />\n        </When>\n      </Grid>\n    </>\n  )\n}\n\nexport default TabGeneral\n"]},"metadata":{},"sourceType":"module"}