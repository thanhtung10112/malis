{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { takeEvery, put, putResolve } from 'redux-saga/effects';\nimport { select, all, call } from 'typed-redux-saga';\nimport { v1 as uuidv1 } from 'uuid';\nimport { advancedFilterActions, commonStore, userStore, authStore } from '@/store/reducers';\nimport * as errorSaga from '@/store/saga/errorSaga';\nimport userApi from '@/apis/user.api';\nimport { getProfile } from './auth.saga';\nimport { getDefaultValues } from '@/utils/getDefaultValues';\n\nfunction* fetchInitDataForList() {\n  const data = yield call(userApi.getInitDataForList);\n  yield put(userStore.actions.setInitDataForList(data));\n}\n\nfunction* fetchDetail(id) {\n  const {\n    user\n  } = yield call(userApi.getDetail, id);\n  user.job_access = user.job_access.map(item => _objectSpread(_objectSpread({}, item), {}, {\n    id: uuidv1()\n  }));\n  yield put(userStore.actions.setDetail(user));\n}\n\nfunction* fetchList() {\n  const {\n    tableState,\n    searchQuery,\n    filterData\n  } = yield* all({\n    tableState: select(commonStore.selectTableState),\n    searchQuery: select(commonStore.selectSearchQuery),\n    filterData: select(advancedFilterActions.selectFilterData)\n  });\n  const {\n    page,\n    per_page\n  } = tableState;\n  const data = yield call(userApi.getList, _objectSpread({\n    per_page,\n    page,\n    s: searchQuery\n  }, filterData));\n  yield put(commonStore.actions.setTableState({\n    total_items: data.total_items\n  }));\n  yield put(userStore.actions.setDataList(data.user_lists));\n}\n\nfunction* fetchInitDataForCE() {\n  const data = yield call(userApi.getInitDataForCE);\n  const defaultValue = getDefaultValues(data, {\n    default_language: 'parameters.PLLA',\n    puco: 'parameters.PUCO',\n    time_zone: 'timezones'\n  });\n  yield all([put(userStore.actions.setInitDataForCE(data)), put(userStore.actions.setDetail(defaultValue))]);\n}\n\nexport function* getUserList() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchInitDataForList);\n    const permissions = yield* select(userStore.selectPermissions);\n\n    if (permissions.view) {\n      yield call(fetchList);\n    }\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\nexport function* openUserCreateDialog() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchInitDataForCE);\n    yield put(userStore.actions.setDialogStateOpen(true));\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\nexport function* createUser({\n  payload\n}) {\n  yield put(userStore.actions.setDialogStateLoading(true));\n\n  try {\n    const {\n      message\n    } = yield call(userApi.create, payload);\n    yield all([put(commonStore.actions.setSuccessMessage(message)), put(userStore.actions.resetDetail())]);\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(userStore.actions.setDialogStateLoading(false));\n}\nexport function* openUserUpdateDialog({\n  payload: userId\n}) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchInitDataForCE);\n    yield call(fetchDetail, userId);\n    yield put(userStore.actions.setDialogState({\n      open: true,\n      editMode: true\n    }));\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\nexport function* resetPassword({\n  payload\n}) {\n  yield put(userStore.actions.setResetPwdDialogLoading(true));\n\n  try {\n    const {\n      id\n    } = yield* select(userStore.selectDetail);\n    const {\n      message\n    } = yield call(userApi.update, id, payload);\n    yield all([put(commonStore.actions.setSuccessMessage(message)), put(userStore.actions.setResetPwdDialogOpen(false))]);\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(userStore.actions.setResetPwdDialogLoading(false));\n}\nexport function* updateUser({\n  payload\n}) {\n  yield put(userStore.actions.setDialogStateLoading(true));\n\n  try {\n    const {\n      id,\n      formData\n    } = payload;\n    const profile = yield* select(authStore.selectProfile);\n    const {\n      message\n    } = yield call(userApi.update, id, formData);\n    yield put(commonStore.actions.setSuccessMessage(message));\n    yield call(closeUserDialog); // fetch profile after updated myself\n\n    if (formData.user_id === profile.user_name) {\n      yield call(getProfile);\n    }\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(userStore.actions.setDialogStateLoading(false));\n}\nexport function* closeUserDialog() {\n  try {\n    yield putResolve(userStore.actions.setDialogStateOpen(false));\n    yield call(getUserList);\n    yield put(userStore.actions.resetDetail());\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeEvery(userStore.sagaGetList, getUserList);\n  yield takeEvery(userStore.sagaOpenCreateDialog, openUserCreateDialog);\n  yield takeEvery(userStore.sagaCreate, createUser);\n  yield takeEvery(userStore.sagaOpenUpdateDialog, openUserUpdateDialog);\n  yield takeEvery(userStore.sagaUpdate, updateUser);\n  yield takeEvery(userStore.sagaResetPassword, resetPassword);\n  yield takeEvery(userStore.sagaCloseDialog, closeUserDialog);\n}\n\nexport default userSaga;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/saga/user.saga.ts"],"names":["takeEvery","put","putResolve","select","all","call","v1","uuidv1","advancedFilterActions","commonStore","userStore","authStore","errorSaga","userApi","getProfile","getDefaultValues","fetchInitDataForList","data","getInitDataForList","actions","setInitDataForList","fetchDetail","id","user","getDetail","job_access","map","item","setDetail","fetchList","tableState","searchQuery","filterData","selectTableState","selectSearchQuery","selectFilterData","page","per_page","getList","s","setTableState","total_items","setDataList","user_lists","fetchInitDataForCE","getInitDataForCE","defaultValue","default_language","puco","time_zone","setInitDataForCE","getUserList","setLoadingPage","permissions","selectPermissions","view","error","handleError","openUserCreateDialog","setDialogStateOpen","createUser","payload","setDialogStateLoading","message","create","setSuccessMessage","resetDetail","openUserUpdateDialog","userId","setDialogState","open","editMode","resetPassword","setResetPwdDialogLoading","selectDetail","update","setResetPwdDialogOpen","updateUser","formData","profile","selectProfile","closeUserDialog","user_id","user_name","userSaga","sagaGetList","sagaOpenCreateDialog","sagaCreate","sagaOpenUpdateDialog","sagaUpdate","sagaResetPassword","sagaCloseDialog"],"mappings":"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","sourcesContent":["import { takeEvery, put, putResolve } from 'redux-saga/effects'\n\nimport { select, all, call } from 'typed-redux-saga'\n\nimport { v1 as uuidv1 } from 'uuid'\n\nimport { advancedFilterActions, commonStore, userStore, authStore } from '@/store/reducers'\n\nimport * as errorSaga from '@/store/saga/errorSaga'\n\nimport userApi from '@/apis/user.api'\nimport { getProfile } from './auth.saga'\nimport { getDefaultValues } from '@/utils/getDefaultValues'\n\nfunction* fetchInitDataForList() {\n  const data = yield call(userApi.getInitDataForList)\n  yield put(userStore.actions.setInitDataForList(data))\n}\n\nfunction* fetchDetail(id: number) {\n  const { user } = yield call(userApi.getDetail, id)\n  user.job_access = user.job_access.map((item) => ({\n    ...item,\n    id: uuidv1()\n  }))\n  yield put(userStore.actions.setDetail(user))\n}\n\nfunction* fetchList() {\n  const { tableState, searchQuery, filterData } = yield* all({\n    tableState: select(commonStore.selectTableState),\n    searchQuery: select(commonStore.selectSearchQuery),\n    filterData: select(advancedFilterActions.selectFilterData)\n  })\n  const { page, per_page } = tableState\n  const data = yield call(userApi.getList, {\n    per_page,\n    page,\n    s: searchQuery,\n    ...filterData\n  })\n  yield put(commonStore.actions.setTableState({ total_items: data.total_items }))\n  yield put(userStore.actions.setDataList(data.user_lists))\n}\n\nfunction* fetchInitDataForCE() {\n  const data = yield call(userApi.getInitDataForCE)\n  const defaultValue = getDefaultValues(data, {\n    default_language: 'parameters.PLLA',\n    puco: 'parameters.PUCO',\n    time_zone: 'timezones'\n  })\n  yield all([put(userStore.actions.setInitDataForCE(data)), put(userStore.actions.setDetail(defaultValue))])\n}\n\nexport function* getUserList() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchInitDataForList)\n    const permissions = yield* select(userStore.selectPermissions)\n    if (permissions.view) {\n      yield call(fetchList)\n    }\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nexport function* openUserCreateDialog() {\n  yield put(commonStore.actions.setLoadingPage(true))\n\n  try {\n    yield call(fetchInitDataForCE)\n    yield put(userStore.actions.setDialogStateOpen(true))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nexport function* createUser({ payload }: ReturnType<typeof userStore.sagaCreate>) {\n  yield put(userStore.actions.setDialogStateLoading(true))\n  try {\n    const { message } = yield call(userApi.create, payload)\n    yield all([put(commonStore.actions.setSuccessMessage(message)), put(userStore.actions.resetDetail())])\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(userStore.actions.setDialogStateLoading(false))\n}\n\nexport function* openUserUpdateDialog({ payload: userId }: ReturnType<typeof userStore.sagaOpenUpdateDialog>) {\n  yield put(commonStore.actions.setLoadingPage(true))\n\n  try {\n    yield call(fetchInitDataForCE)\n    yield call(fetchDetail, userId)\n    yield put(userStore.actions.setDialogState({ open: true, editMode: true }))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nexport function* resetPassword({ payload }: ReturnType<typeof userStore.sagaResetPassword>) {\n  yield put(userStore.actions.setResetPwdDialogLoading(true))\n\n  try {\n    const { id } = yield* select(userStore.selectDetail)\n    const { message } = yield call(userApi.update, id, payload)\n    yield all([\n      put(commonStore.actions.setSuccessMessage(message)),\n      put(userStore.actions.setResetPwdDialogOpen(false))\n    ])\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(userStore.actions.setResetPwdDialogLoading(false))\n}\n\nexport function* updateUser({ payload }: ReturnType<typeof userStore.sagaUpdate>) {\n  yield put(userStore.actions.setDialogStateLoading(true))\n\n  try {\n    const { id, formData } = payload\n    const profile = yield* select(authStore.selectProfile)\n    const { message } = yield call(userApi.update, id, formData)\n    yield put(commonStore.actions.setSuccessMessage(message))\n    yield call(closeUserDialog)\n    // fetch profile after updated myself\n    if (formData.user_id === profile.user_name) {\n      yield call(getProfile)\n    }\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(userStore.actions.setDialogStateLoading(false))\n}\n\nexport function* closeUserDialog() {\n  try {\n    yield putResolve(userStore.actions.setDialogStateOpen(false))\n    yield call(getUserList)\n    yield put(userStore.actions.resetDetail())\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n}\n\nfunction* userSaga() {\n  yield takeEvery(userStore.sagaGetList, getUserList)\n  yield takeEvery(userStore.sagaOpenCreateDialog, openUserCreateDialog)\n  yield takeEvery(userStore.sagaCreate, createUser)\n  yield takeEvery(userStore.sagaOpenUpdateDialog, openUserUpdateDialog)\n  yield takeEvery(userStore.sagaUpdate, updateUser)\n  yield takeEvery(userStore.sagaResetPassword, resetPassword)\n  yield takeEvery(userStore.sagaCloseDialog, closeUserDialog)\n}\n\nexport default userSaga\n"]},"metadata":{},"sourceType":"module"}