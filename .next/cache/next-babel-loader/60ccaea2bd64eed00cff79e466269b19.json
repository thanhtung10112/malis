{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Fersher\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\FormController\\\\NumberField\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { AppNumberField } from '@/components';\nimport { useController } from 'react-hook-form';\nimport _ from 'lodash';\n\nconst FormControllerNumberField = props => {\n  const {\n    control,\n    name,\n    defaultValue,\n    rules,\n    isNumericString\n  } = props,\n        numberFieldProps = _objectWithoutProperties(props, [\"control\", \"name\", \"defaultValue\", \"rules\", \"isNumericString\"]);\n\n  const _useController = useController({\n    name,\n    rules,\n    defaultValue,\n    control\n  }),\n        {\n    field: {\n      onChange: onChangeController,\n      value\n    },\n    meta: {\n      invalid\n    }\n  } = _useController,\n        inputProps = _objectWithoutProperties(_useController.field, [\"onChange\", \"value\"]);\n\n  const handleChangeValue = params => {\n    const value = isNumericString ? params.value : params.floatValue;\n    onChangeController(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppNumberField, _objectSpread(_objectSpread(_objectSpread({}, inputProps), numberFieldProps), {}, {\n    isNumericString: isNumericString,\n    name: name,\n    onChange: handleChangeValue,\n    error: Boolean(invalid),\n    helperText: invalid === null || invalid === void 0 ? void 0 : invalid.message,\n    value: _.toString(value)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\nexport default FormControllerNumberField;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/components/FormController/NumberField/index.tsx"],"names":["AppNumberField","useController","_","FormControllerNumberField","props","control","name","defaultValue","rules","isNumericString","numberFieldProps","field","onChange","onChangeController","value","meta","invalid","inputProps","handleChangeValue","params","floatValue","Boolean","message","toString"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,cAAT,QAA+B,cAA/B;AAEA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,OAAOC,CAAP,MAAc,QAAd;;AAKA,MAAMC,yBAAmE,GAAIC,KAAD,IAAW;AACrF,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,YAAjB;AAA+BC,IAAAA,KAA/B;AAAsCC,IAAAA;AAAtC,MAA+EL,KAArF;AAAA,QAAgEM,gBAAhE,4BAAqFN,KAArF;;AAEA,yBAGIH,aAAa,CAAC;AAChBK,IAAAA,IADgB;AAEhBE,IAAAA,KAFgB;AAGhBD,IAAAA,YAHgB;AAIhBF,IAAAA;AAJgB,GAAD,CAHjB;AAAA,QAAM;AACJM,IAAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAEC,kBAAZ;AAAgCC,MAAAA;AAAhC,KADH;AAEJC,IAAAA,IAAI,EAAE;AAAEC,MAAAA;AAAF;AAFF,GAAN;AAAA,QACmDC,UADnD,2CACEN,KADF;;AAUA,QAAMO,iBAAiB,GAAIC,MAAD,IAAgC;AACxD,UAAML,KAAK,GAAGL,eAAe,GAAGU,MAAM,CAACL,KAAV,GAAkBK,MAAM,CAACC,UAAtD;AACAP,IAAAA,kBAAkB,CAACC,KAAD,CAAlB;AACD,GAHD;;AAKA,sBACE,QAAC,cAAD,gDACMG,UADN,GAEMP,gBAFN;AAGE,IAAA,eAAe,EAAED,eAHnB;AAIE,IAAA,IAAI,EAAEH,IAJR;AAKE,IAAA,QAAQ,EAAEY,iBALZ;AAME,IAAA,KAAK,EAAEG,OAAO,CAACL,OAAD,CANhB;AAOE,IAAA,UAAU,EAAGA,OAAH,aAAGA,OAAH,uBAAGA,OAAD,CAAkBM,OAPhC;AAQE,IAAA,KAAK,EAAEpB,CAAC,CAACqB,QAAF,CAAWT,KAAX;AART;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA9BD;;AAgCA,eAAeX,yBAAf","sourcesContent":["import { AppNumberField } from '@/components'\n\nimport { useController } from 'react-hook-form'\n\nimport _ from 'lodash'\n\nimport type { FormControllerNumberFieldProps } from './type'\nimport type { NumberFormatValues } from 'react-number-format'\n\nconst FormControllerNumberField: React.FC<FormControllerNumberFieldProps> = (props) => {\n  const { control, name, defaultValue, rules, isNumericString, ...numberFieldProps } = props\n\n  const {\n    field: { onChange: onChangeController, value, ...inputProps },\n    meta: { invalid }\n  } = useController({\n    name,\n    rules,\n    defaultValue,\n    control\n  })\n\n  const handleChangeValue = (params: NumberFormatValues) => {\n    const value = isNumericString ? params.value : params.floatValue\n    onChangeController(value)\n  }\n\n  return (\n    <AppNumberField\n      {...inputProps}\n      {...numberFieldProps}\n      isNumericString={isNumericString}\n      name={name}\n      onChange={handleChangeValue}\n      error={Boolean(invalid)}\n      helperText={(invalid as any)?.message}\n      value={_.toString(value)}\n    />\n  )\n}\n\nexport default FormControllerNumberField\n"]},"metadata":{},"sourceType":"module"}