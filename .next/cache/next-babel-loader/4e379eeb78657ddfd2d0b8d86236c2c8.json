{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { actionTypes } from '@/utils/constant';\nimport { createAction, createSlice, createSelector } from '@reduxjs/toolkit';\nexport var name = 'element';\nexport var resetState = createAction(\"\".concat(name, \"/\").concat(actionTypes.RESET_STATE));\nexport var initialState = {\n  initDataForList: {\n    jobs: [],\n    permissions: {\n      element: null\n    },\n    wiki_page: '',\n    column_tooltips: {}\n  },\n  dataList: []\n};\nvar tagSlice = createSlice({\n  name: name,\n  initialState: initialState,\n  reducers: {\n    setInitDataForList: function setInitDataForList(state, _ref) {\n      var payload = _ref.payload;\n      state.initDataForList = payload;\n    },\n    setDataList: function setDataList(state, _ref2) {\n      var payload = _ref2.payload;\n      state.dataList = payload;\n    }\n  },\n  extraReducers: _defineProperty({}, resetState.type, function () {\n    return initialState;\n  })\n});\nvar actions = tagSlice.actions; // Saga actions\n\nexport { actions };\nexport var sagaGetList = createAction(\"\".concat(name, \"/\").concat(actionTypes.GET_LIST));\nexport var sagaOpenCreateDialog = createAction(\"\".concat(name, \"/\").concat(actionTypes.OPEN_CREATE_DIALOG));\nexport var sagaOpenUpdateDialog = createAction(\"\".concat(name, \"/\").concat(actionTypes.OPEN_UPDATE_DIALOG));\nexport var sagaChangeUserJob = createAction(\"\".concat(name, \"/\").concat(actionTypes.CHANGE_USER_JOB));\nexport var sagaChangeUserSchematic = createAction(\"\".concat(name, \"/CHANGE_USER_SCHEMATIC\"));\nexport var sagaRemove = createAction(\"\".concat(name, \"/\").concat(actionTypes.REMOVE));\nexport var sagaChangeUserDrawing = createAction(\"\".concat(name, \"/\").concat(actionTypes.CHANGE_USER_DRAWING)); // Selectors\n\nexport var selectState = function selectState(state) {\n  return state[name];\n};\nexport var selectInitDataForList = createSelector(selectState, function (state) {\n  return state.initDataForList;\n});\nexport var selectPermissions = createSelector(selectState, function (state) {\n  return state.initDataForList.permissions.element;\n});\nexport var selectSpecification = createSelector(selectState, function (state) {\n  return state.initDataForList.permissions.element;\n});\nexport var selectDataList = createSelector(selectState, function (state) {\n  return state.dataList;\n});\nexport default tagSlice;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/reducers/tag.reducer.ts"],"names":["actionTypes","createAction","createSlice","createSelector","name","resetState","RESET_STATE","initialState","initDataForList","jobs","permissions","element","wiki_page","column_tooltips","dataList","tagSlice","reducers","setInitDataForList","state","payload","setDataList","extraReducers","type","actions","sagaGetList","GET_LIST","sagaOpenCreateDialog","OPEN_CREATE_DIALOG","sagaOpenUpdateDialog","OPEN_UPDATE_DIALOG","sagaChangeUserJob","CHANGE_USER_JOB","sagaChangeUserSchematic","sagaRemove","REMOVE","sagaChangeUserDrawing","CHANGE_USER_DRAWING","selectState","selectInitDataForList","selectPermissions","selectSpecification","selectDataList"],"mappings":"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","sourcesContent":["import { actionTypes } from '@/utils/constant'\nimport { createAction, createSlice, createSelector, PayloadAction } from '@reduxjs/toolkit'\n\nimport type { Entity, ParameterOption, DataForDropdown, PayloadOperation } from '@/types/Common'\nimport type { RootReducerType } from './rootReducer'\nimport type { TagInitDataForList } from '@/types/Tag'\n\nexport const name: Entity = 'element'\nexport const resetState = createAction(`${name}/${actionTypes.RESET_STATE}`)\n\nexport const initialState = {\n  initDataForList: {\n    jobs: [],\n    permissions: {\n      element: null\n    },\n    wiki_page: '',\n    column_tooltips: {}\n  } as TagInitDataForList,\n  dataList: []\n}\n\nconst tagSlice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setInitDataForList(state, { payload }: PayloadAction<TagInitDataForList>) {\n      state.initDataForList = payload\n    },\n    setDataList(state, { payload }) {\n      state.dataList = payload\n    }\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState\n    }\n  }\n})\n\nexport const { actions } = tagSlice\n\n// Saga actions\nexport const sagaGetList = createAction(`${name}/${actionTypes.GET_LIST}`)\nexport const sagaOpenCreateDialog = createAction(`${name}/${actionTypes.OPEN_CREATE_DIALOG}`)\nexport const sagaOpenUpdateDialog = createAction<number>(`${name}/${actionTypes.OPEN_UPDATE_DIALOG}`)\nexport const sagaChangeUserJob = createAction<ParameterOption>(`${name}/${actionTypes.CHANGE_USER_JOB}`)\nexport const sagaChangeUserSchematic = createAction<DataForDropdown>(`${name}/CHANGE_USER_SCHEMATIC`)\n\nexport const sagaRemove = createAction<PayloadOperation[]>(`${name}/${actionTypes.REMOVE}`)\nexport const sagaChangeUserDrawing = createAction<DataForDropdown>(`${name}/${actionTypes.CHANGE_USER_DRAWING}`)\n\n// Selectors\nexport const selectState = (state: RootReducerType) => state[name]\n\nexport const selectInitDataForList = createSelector(selectState, (state) => state.initDataForList)\n\nexport const selectPermissions = createSelector(selectState, (state) => state.initDataForList.permissions.element)\n\nexport const selectSpecification = createSelector(selectState, (state) => state.initDataForList.permissions.element)\n\nexport const selectDataList = createSelector(selectState, (state) => state.dataList)\n\nexport default tagSlice\n"]},"metadata":{},"sourceType":"module"}