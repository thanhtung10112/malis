{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\pages\\\\materials.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useStyles from '@/styles/page/layout';\nimport useAuthMiddleware from '@/hooks/useAuthMiddleware';\nimport { useTranslation } from 'next-i18next';\nimport { AppLayout, EditIcon, CreateIcon, DialogSpecificationCE, AppAutocompleteStyled, DeleteIcon, SaveIcon, MakeAListIcon } from '@/components';\nimport { materialStore, commonStore } from '@/store/reducers';\nimport { defaultProperties, iconColumn } from '@/utils/columnProperties';\nimport { DataGrid } from '@material-ui/data-grid';\n\nconst SpecificationsPage = () => {\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslation('material');\n  const breadcrumbData = useMemo(() => [{\n    label: 'Home',\n    href: '/'\n  }, {\n    label: 'Drawings',\n    href: '/Drawings'\n  }, {\n    label: 'Material List',\n    href: '/materials'\n  }], []);\n  const dispatch = useDispatch();\n  const permissions = useSelector(materialStore.selectPermissions);\n  const userJob = useSelector(commonStore.selectUserValueJob);\n  const materialSum = useSelector(materialStore.selectMaterialSum);\n  useEffect(() => {\n    return () => dispatch(commonStore.actions.resetUserValue());\n  }, []);\n\n  const handleOpenCreateDialog = () => {\n    dispatch(materialStore.actions.setDialogStateOpen(true));\n  };\n\n  const handleChangeUserJob = (event, optionValue) => {\n    console.warn('optionValue', '>>>', optionValue);\n  };\n\n  const columns = [_objectSpread(_objectSpread(_objectSpread({}, defaultProperties), iconColumn), {}, {\n    field: 'id',\n    headerName: 'Edit',\n\n    renderCell() {\n      return /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 16\n      }, this);\n    }\n\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    field: 'part_id',\n    headerName: 'Part #',\n    flex: 0.2\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    field: 'description',\n    headerName: 'Description',\n    flex: 0.3\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    field: 'MASS',\n    headerName: 'U.MASS(Kg)',\n    flex: 0.1\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    field: 'INST',\n    headerName: 'INST',\n    flex: 0.1\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    field: 'SPAR',\n    headerName: 'SPAR',\n    flex: 0.1\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    field: 'COM',\n    headerName: 'COM',\n    flex: 0.1\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    field: 'REP',\n    headerName: 'REP',\n    flex: 0.1\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    field: 'EREC',\n    headerName: 'EREC',\n    flex: 0.1\n  })];\n  const buttonsPage = [{\n    label: t('common:button.new'),\n    startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 18\n    }, this),\n    onClick: handleOpenCreateDialog\n  }, {\n    label: t('common:button.save'),\n    startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 18\n    }, this)\n  }, {\n    label: t('common:button.delete'),\n    startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 18\n    }, this)\n  }, {\n    label: t('common:button.make_a_list'),\n    startIcon: /*#__PURE__*/_jsxDEV(MakeAListIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 18\n    }, this)\n  }];\n\n  const Options = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppAutocompleteStyled, {\n      className: classes.controlAutocomplete,\n      width: 200,\n      label: \"Jobs\",\n      options: [],\n      value: userJob,\n      renderOption: option => option.description,\n      primaryKeyOption: \"value\",\n      onChange: handleChangeUserJob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n\n  const Dialogs = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DialogSpecificationCE, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n\n  const bottomSection = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 35,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      disableSelectionOnClick: true,\n      disableColumnMenu: true,\n      checkboxSelection: true,\n      hideFooter: true,\n      columns: columns,\n      headerHeight: 0,\n      rowHeight: 35,\n      getRowClassName: () => classes.totalBudgetRow,\n      rows: [materialSum],\n      onCellDoubleClick: (_, event) => {\n        event.stopPropagation();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    entity: \"material\",\n    breadcrumbs: breadcrumbData,\n    searchProps: {\n      width: 320\n    },\n    buttons: buttonsPage,\n    permissions: permissions,\n    tableProps: {\n      columns\n    },\n    Dialogs: Dialogs,\n    Options: Options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getServerSideProps = useAuthMiddleware(['common', 'material', 'make_a_list', 'advanced_filter', 'drawing']);\nexport default SpecificationsPage;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/pages/materials.tsx"],"names":["useEffect","useMemo","useDispatch","useSelector","useStyles","useAuthMiddleware","useTranslation","AppLayout","EditIcon","CreateIcon","DialogSpecificationCE","AppAutocompleteStyled","DeleteIcon","SaveIcon","MakeAListIcon","materialStore","commonStore","defaultProperties","iconColumn","DataGrid","SpecificationsPage","classes","t","breadcrumbData","label","href","dispatch","permissions","selectPermissions","userJob","selectUserValueJob","materialSum","selectMaterialSum","actions","resetUserValue","handleOpenCreateDialog","setDialogStateOpen","handleChangeUserJob","event","optionValue","console","warn","columns","field","headerName","renderCell","flex","buttonsPage","startIcon","onClick","Options","controlAutocomplete","option","description","Dialogs","bottomSection","height","width","totalBudgetRow","_","stopPropagation","getServerSideProps"],"mappings":"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","sourcesContent":["import { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useStyles from '@/styles/page/layout'\nimport useAuthMiddleware from '@/hooks/useAuthMiddleware'\nimport { useTranslation } from 'next-i18next'\n\nimport {\n  AppLayout,\n  EditIcon,\n  CreateIcon,\n  DialogSpecificationCE,\n  AppAutocompleteStyled,\n  DeleteIcon,\n  SaveIcon,\n  MakeAListIcon\n} from '@/components'\n\nimport { materialStore, commonStore } from '@/store/reducers'\nimport { defaultProperties, iconColumn } from '@/utils/columnProperties'\nimport { DataGrid } from '@material-ui/data-grid'\n\nimport type { GridColumns } from '@material-ui/data-grid'\nimport type { ParameterOption } from '@/types/Common'\n\nconst SpecificationsPage = () => {\n  const classes = useStyles()\n  const { t } = useTranslation('material')\n\n  const breadcrumbData = useMemo(\n    () => [\n      { label: 'Home', href: '/' },\n      { label: 'Drawings', href: '/Drawings' },\n      { label: 'Material List', href: '/materials' }\n    ],\n    []\n  )\n\n  const dispatch = useDispatch()\n  const permissions = useSelector(materialStore.selectPermissions)\n  const userJob = useSelector(commonStore.selectUserValueJob)\n  const materialSum = useSelector(materialStore.selectMaterialSum)\n\n  useEffect(() => {\n    return () => dispatch(commonStore.actions.resetUserValue())\n  }, [])\n\n  const handleOpenCreateDialog = () => {\n    dispatch(materialStore.actions.setDialogStateOpen(true))\n  }\n\n  const handleChangeUserJob = (event, optionValue: ParameterOption) => {\n    console.warn('optionValue', '>>>', optionValue)\n  }\n\n  const columns: GridColumns = [\n    {\n      ...defaultProperties,\n      ...iconColumn,\n      field: 'id',\n      headerName: 'Edit',\n      renderCell() {\n        return <EditIcon />\n      }\n    },\n    {\n      ...defaultProperties,\n      field: 'part_id',\n      headerName: 'Part #',\n      flex: 0.2\n    },\n    {\n      ...defaultProperties,\n      field: 'description',\n      headerName: 'Description',\n      flex: 0.3\n    },\n    {\n      ...defaultProperties,\n      field: 'MASS',\n      headerName: 'U.MASS(Kg)',\n      flex: 0.1\n    },\n    {\n      ...defaultProperties,\n      field: 'INST',\n      headerName: 'INST',\n      flex: 0.1\n    },\n    {\n      ...defaultProperties,\n      field: 'SPAR',\n      headerName: 'SPAR',\n      flex: 0.1\n    },\n    {\n      ...defaultProperties,\n      field: 'COM',\n      headerName: 'COM',\n      flex: 0.1\n    },\n    {\n      ...defaultProperties,\n      field: 'REP',\n      headerName: 'REP',\n      flex: 0.1\n    },\n    {\n      ...defaultProperties,\n      field: 'EREC',\n      headerName: 'EREC',\n      flex: 0.1\n    }\n  ]\n\n  const buttonsPage = [\n    {\n      label: t('common:button.new'),\n      startIcon: <CreateIcon />,\n      onClick: handleOpenCreateDialog\n    },\n    {\n      label: t('common:button.save'),\n      startIcon: <SaveIcon />\n    },\n    {\n      label: t('common:button.delete'),\n      startIcon: <DeleteIcon />\n    },\n    {\n      label: t('common:button.make_a_list'),\n      startIcon: <MakeAListIcon />\n    }\n  ]\n\n  const Options = (\n    <>\n      <AppAutocompleteStyled\n        className={classes.controlAutocomplete}\n        width={200}\n        label=\"Jobs\"\n        options={[]}\n        value={userJob}\n        renderOption={(option) => option.description}\n        primaryKeyOption=\"value\"\n        onChange={handleChangeUserJob}\n      />\n    </>\n  )\n\n  const Dialogs = (\n    <>\n      <DialogSpecificationCE />\n    </>\n  )\n\n  const bottomSection = (\n    <div style={{ height: 35, width: '100%' }}>\n      <DataGrid\n        disableSelectionOnClick\n        disableColumnMenu\n        checkboxSelection\n        hideFooter\n        columns={columns}\n        headerHeight={0}\n        rowHeight={35}\n        getRowClassName={() => classes.totalBudgetRow}\n        rows={[materialSum]}\n        onCellDoubleClick={(_, event) => {\n          event.stopPropagation()\n        }}\n      />\n    </div>\n  )\n\n  return (\n    <AppLayout\n      entity=\"material\"\n      breadcrumbs={breadcrumbData}\n      searchProps={{\n        width: 320\n      }}\n      buttons={buttonsPage}\n      permissions={permissions}\n      tableProps={{\n        columns\n      }}\n      Dialogs={Dialogs}\n      Options={Options}\n    />\n  )\n}\n\nexport const getServerSideProps = useAuthMiddleware(['common', 'material', 'make_a_list', 'advanced_filter', 'drawing'])\n\nexport default SpecificationsPage\n"]},"metadata":{},"sourceType":"module"}