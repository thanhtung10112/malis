{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { useTranslation } from 'next-i18next';\nimport { useDispatch } from 'react-redux';\nimport useDialogContext from '../Context/useDialogContext';\nimport { Grid, Button, Paper, makeStyles, Box } from '@material-ui/core';\nimport { DeleteIcon, CreateIcon, DataTable, ViewListIcon, DataTableTextField, AppAutocompleteAsync } from '@/components';\nimport DialogManufacturerAttr from './DialogManufacturerAttr';\nimport { partStore } from '@/store/reducers';\nimport _ from 'lodash';\nimport * as columnProperties from '@/utils/columnProperties';\nimport * as yup from 'yup';\nimport immer from 'immer';\nvar useStyles = makeStyles({\n  buttonGroup: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: '0 !important'\n  }\n});\n\nvar TabManufacturer = function TabManufacturer() {\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation('item'),\n      t = _useTranslation.t;\n\n  var _useDialogContext = useDialogContext(),\n      loading = _useDialogContext.loading;\n\n  var _useState = useState([]),\n      selectedManu = _useState[0],\n      setSelectedManu = _useState[1];\n\n  var _useState2 = useState([]),\n      selectedManuOptions = _useState2[0],\n      setSelectedManuOptions = _useState2[1];\n\n  var _useState3 = useState({\n    open: false,\n    attributes: {},\n    manufacturerId: null\n  }),\n      attrDialog = _useState3[0],\n      setAttrDialog = _useState3[1];\n\n  var dispatch = useDispatch();\n  var partForm = useFormContext();\n  var watchManufacturer = partForm.watch('manufacturers', []);\n  var watchReferenceTo = partForm.watch('reference_to', null);\n\n  var handleChangeOption = function handleChangeOption(event, valueOption) {\n    setSelectedManuOptions(valueOption);\n  };\n\n  var handleAddManu = function handleAddManu() {\n    var _partForm$getValues = partForm.getValues(),\n        manufacturers = _partForm$getValues.manufacturers;\n\n    var mapManufacturers = selectedManuOptions.map(function (manu) {\n      return {\n        manufacturer_id: manu.value,\n        reference: '',\n        description: manu.description\n      };\n    });\n    manufacturers.push.apply(manufacturers, _toConsumableArray(mapManufacturers));\n    partForm.setValue('manufacturers', manufacturers);\n    setSelectedManuOptions([]);\n  };\n\n  var handleRemoveManu = function handleRemoveManu() {\n    var _partForm$getValues2 = partForm.getValues(),\n        manufacturers = _partForm$getValues2.manufacturers;\n\n    var newManus = manufacturers.filter(function (manu) {\n      return !selectedManu.includes(manu.manufacturer_id);\n    });\n    setSelectedManu([]);\n    partForm.setValue('manufacturers', newManus);\n  };\n\n  var handleSelectManu = function handleSelectManu(_ref) {\n    var selectionModel = _ref.selectionModel;\n    setSelectedManu(selectionModel);\n  };\n  /**\n   * @param {number} id\n   * @param {string} value\n   */\n\n\n  var handleChangeReference = function handleChangeReference(id, value) {\n    var _partForm$getValues3 = partForm.getValues(),\n        manufacturers = _partForm$getValues3.manufacturers;\n\n    var newManufacturers = immer(manufacturers, function (draft) {\n      var index = _.findIndex(draft, {\n        manufacturer_id: id\n      });\n\n      draft[index].reference = value;\n    });\n    partForm.setValue('manufacturers', newManufacturers);\n  };\n\n  var handleOpenAttrDialog = function handleOpenAttrDialog(_ref2) {\n    var additional_attributes = _ref2.additional_attributes,\n        manufacturer_id = _ref2.manufacturer_id;\n    return function () {\n      setAttrDialog(function (prevState) {\n        return immer(prevState, function (draft) {\n          draft.open = true;\n          draft.attributes = additional_attributes || {};\n          draft.manufacturerId = manufacturer_id;\n        });\n      });\n    };\n  };\n\n  var handleChangeAttr = function handleChangeAttr(attributes) {\n    var _partForm$getValues4 = partForm.getValues(),\n        manufacturers = _partForm$getValues4.manufacturers;\n\n    var newManufacturers = immer(manufacturers, function (draft) {\n      var index = _.findIndex(manufacturers, {\n        manufacturer_id: attrDialog.manufacturerId\n      });\n\n      if (index !== -1) {\n        draft[index].additional_attributes = attributes;\n      }\n    });\n    partForm.setValue('manufacturers', newManufacturers);\n  };\n\n  var handleCloseAttrDialog = function handleCloseAttrDialog() {\n    setAttrDialog(function (prevState) {\n      return immer(prevState, function (draft) {\n        draft.open = false;\n      });\n    });\n  };\n\n  var handleCreateManu = function handleCreateManu() {\n    var formData = partForm.getValues();\n    dispatch(partStore.sagaOpenManuDialog(formData));\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 8,\n        children: /*#__PURE__*/_jsx(AppAutocompleteAsync, {\n          disabled: Boolean(watchReferenceTo),\n          label: \"Manufacturer\",\n          compName: \"manufacturer_list\",\n          value: selectedManuOptions,\n          multiple: true,\n          limitTags: 2,\n          disableCloseOnSelect: true,\n          onChange: handleChangeOption,\n          getOptionDisabled: function getOptionDisabled(option) {\n            return watchManufacturer.some(function (manu) {\n              return manu.manufacturer_id === option.value;\n            });\n          }\n        })\n      }), /*#__PURE__*/_jsxs(Grid, {\n        item: true,\n        xs: 4,\n        className: classes.buttonGroup,\n        children: [/*#__PURE__*/_jsx(Button, {\n          startIcon: /*#__PURE__*/_jsx(CreateIcon, {}),\n          onClick: handleAddManu,\n          disabled: selectedManuOptions.length === 0 || Boolean(watchReferenceTo),\n          children: t('common:button.add')\n        }), /*#__PURE__*/_jsxs(Box, {\n          children: [/*#__PURE__*/_jsx(Button, {\n            startIcon: /*#__PURE__*/_jsx(CreateIcon, {}),\n            onClick: handleCreateManu,\n            disabled: loading,\n            children: t('common:button.new')\n          }), /*#__PURE__*/_jsx(Button, {\n            startIcon: /*#__PURE__*/_jsx(DeleteIcon, {}),\n            onClick: handleRemoveManu,\n            disabled: selectedManu.length === 0 || Boolean(watchReferenceTo),\n            children: t('common:button.remove')\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsx(Paper, {\n          elevation: 2,\n          children: /*#__PURE__*/_jsx(DataTable, {\n            checkboxSelection: !watchReferenceTo,\n            hideFooter: true,\n            tableHeight: 270,\n            selectionModel: selectedManu,\n            onSelectionModelChange: handleSelectManu,\n            getRowId: function getRowId(param) {\n              return param.manufacturer_id;\n            },\n            rows: watchManufacturer,\n            onCellClick: function onCellClick(params, event) {\n              if (params.field === 'manufacturer_id') {\n                event.stopPropagation();\n              }\n            },\n            columns: [_objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n              field: 'description',\n              headerName: 'Manufacturers',\n              flex: 0.3\n            }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.editCell('Reference', !watchReferenceTo)), {}, {\n              field: 'reference',\n              flex: 0.4,\n              renderEditCell: function renderEditCell(params) {\n                return /*#__PURE__*/_jsx(DataTableTextField, {\n                  rules: yup.string().max(255, t('validation_message.manu_ref_max')),\n                  params: params,\n                  onChangeValue: handleChangeReference\n                });\n              }\n            }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n              field: 'manufacturer_id',\n              headerName: 'Attributes',\n              flex: 0.3,\n              renderCell: function renderCell(params) {\n                return /*#__PURE__*/_jsx(ViewListIcon, {\n                  onClick: handleOpenAttrDialog(params.row)\n                });\n              }\n            })]\n          })\n        })\n      })]\n    }), /*#__PURE__*/_jsx(DialogManufacturerAttr, {\n      open: attrDialog.open,\n      attributes: attrDialog.attributes,\n      onChange: handleChangeAttr,\n      onClose: handleCloseAttrDialog\n    })]\n  });\n};\n\nexport default TabManufacturer;","map":null,"metadata":{},"sourceType":"module"}