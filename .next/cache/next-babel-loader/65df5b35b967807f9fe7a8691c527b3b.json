{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Fersher\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Common\\\\Error\\\\index.tsx\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { Typography, Box } from '@material-ui/core';\nimport { DialogMain } from '@/components';\nimport { commonStore } from '@/store/reducers';\n\nconst DialogError = () => {\n  const {\n    t\n  } = useTranslation('common');\n  const dispatch = useDispatch();\n  const errorLog = useSelector(commonStore.selectError);\n\n  const handleClose = () => {\n    dispatch(commonStore.actions.setOpenErrorDialog(false));\n  };\n\n  return /*#__PURE__*/_jsxDEV(DialogMain, {\n    open: errorLog.open,\n    title: \"Error!\",\n    type: \"error\",\n    closeText: \"OK\",\n    closeButtonProps: {\n      color: 'secondary'\n    },\n    onClose: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      component: Box,\n      paddingBottom: 1,\n      variant: \"body1\",\n      children: t('error_message.500')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      children: [\"StatusCode: \", `${errorLog.statusCode} (${errorLog.message})`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\nexport default DialogError;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Common/Error/index.tsx"],"names":["useSelector","useDispatch","useTranslation","Typography","Box","DialogMain","commonStore","DialogError","t","dispatch","errorLog","selectError","handleClose","actions","setOpenErrorDialog","open","color","statusCode","message"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,SAASC,UAAT,EAAqBC,GAArB,QAAgC,mBAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAQN,cAAc,CAAC,QAAD,CAA5B;AACA,QAAMO,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,QAAQ,GAAGV,WAAW,CAACM,WAAW,CAACK,WAAb,CAA5B;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBH,IAAAA,QAAQ,CAACH,WAAW,CAACO,OAAZ,CAAoBC,kBAApB,CAAuC,KAAvC,CAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,UAAD;AACE,IAAA,IAAI,EAAEJ,QAAQ,CAACK,IADjB;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,SAAS,EAAC,IAJZ;AAKE,IAAA,gBAAgB,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KALpB;AAME,IAAA,OAAO,EAAEJ,WANX;AAAA,4BAQE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAER,GAAvB;AAA4B,MAAA,aAAa,EAAE,CAA3C;AAA8C,MAAA,OAAO,EAAC,OAAtD;AAAA,gBACGI,CAAC,CAAC,mBAAD;AADJ;AAAA;AAAA;AAAA;AAAA,YARF,eAWE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAAA,iCAA0C,GAAEE,QAAQ,CAACO,UAAW,KAAIP,QAAQ,CAACQ,OAAQ,GAArF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAxBD;;AA0BA,eAAeX,WAAf","sourcesContent":["import { useSelector, useDispatch } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\nimport { Typography, Box } from '@material-ui/core'\nimport { DialogMain } from '@/components'\n\nimport { commonStore } from '@/store/reducers'\n\nconst DialogError = () => {\n  const { t } = useTranslation('common')\n  const dispatch = useDispatch()\n  const errorLog = useSelector(commonStore.selectError)\n\n  const handleClose = () => {\n    dispatch(commonStore.actions.setOpenErrorDialog(false))\n  }\n\n  return (\n    <DialogMain\n      open={errorLog.open}\n      title=\"Error!\"\n      type=\"error\"\n      closeText=\"OK\"\n      closeButtonProps={{ color: 'secondary' }}\n      onClose={handleClose}\n    >\n      <Typography component={Box} paddingBottom={1} variant=\"body1\">\n        {t('error_message.500')}\n      </Typography>\n      <Typography variant=\"body2\">StatusCode: {`${errorLog.statusCode} (${errorLog.message})`}</Typography>\n    </DialogMain>\n  )\n}\n\nexport default DialogError\n"]},"metadata":{},"sourceType":"module"}