{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\ParameterType\\\\CreateEdit.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useTranslation } from 'next-i18next';\nimport useStyles from './styles';\nimport * as yup from 'yup';\nimport * as constants from '@/utils/constant';\nimport _ from 'lodash';\nimport { Grid, Tooltip, Tabs, Tab } from '@material-ui/core';\nimport { When } from 'react-if';\nimport { FormControllerTextField, FormControllerAutocomplete, FormControllerCheckbox, DialogMain, AppTabHistoryLog, MalisPanel, SectionTimezone, BtnHelp } from '@/components';\nimport { parameterTypeStore } from '@/store/reducers';\n\nfunction ParameterTypeAddEditDialog() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation('parameter_type'),\n      t = _useTranslation.t;\n\n  var _useState = useState(0),\n      tab = _useState[0],\n      setTab = _useState[1];\n\n  var formValidationSchema = useMemo(function () {\n    return yup.object().shape({\n      type_id: yup.string().required(t('validation_message.type_id_required')).max(8, t('validation_message.type_id_max')).matches(constants.REGEX_ALPHA_NUMERIC_ONLY, t('validation_message.type_id_match')),\n      description: yup.string().max(80, t('validation_message.description_max')),\n      nbr_default: yup.string().required(t('validation_message.nbr_default_required')).matches(/^[0-9]+$/, t('validation_message.nbr_default_type_number')),\n      attributes: yup.string().matches(constants.REGEX_SEMICOLON_SEPERATED_ALPHA_NUMERIC_UNDERSCORE_ONLY, {\n        message: t('validation_message.attributes_match'),\n        excludeEmptyString: true\n      }).test('uniq', t('validation_message.attributes_match'), function (value) {\n        if (!value) {\n          return true;\n        }\n\n        var valueSplit = value.split(';');\n        return _.uniq(valueSplit).length === valueSplit.length;\n      }),\n      category: yup.number().required().nullable()\n    });\n  }, [t]);\n  var dispatch = useDispatch();\n  var dialogState = useSelector(parameterTypeStore.selectDialogState);\n  var editPermission = useSelector(parameterTypeStore.selectEditPermission);\n\n  var _useSelector = useSelector(parameterTypeStore.selectInitDataForCE),\n      categories = _useSelector.categories;\n\n  var paramTypeDetail = useSelector(parameterTypeStore.selectDetail);\n\n  var _useSelector2 = useSelector(parameterTypeStore.selectInitDataForCE),\n      wiki_page = _useSelector2.wiki_page;\n\n  var parameterTypeForm = useForm({\n    resolver: yupResolver(formValidationSchema),\n    shouldUnregister: false\n  });\n  useEffect(function () {\n    parameterTypeForm.reset(paramTypeDetail);\n    setTab(0);\n  }, [paramTypeDetail]);\n  var onSubmit = parameterTypeForm.handleSubmit(function (formData) {\n    var data = _.omit(formData, [].concat(_toConsumableArray(constants.removalProperties), ['help', 'parameters']));\n\n    data.nbr_default = parseInt(data.nbr_default);\n\n    if (dialogState.editMode) {\n      dispatch(parameterTypeStore.extraActions.update({\n        id: formData.id,\n        parameterType: data\n      }));\n    } else {\n      dispatch(parameterTypeStore.extraActions.create(data));\n    }\n  });\n\n  var onClose = function onClose() {\n    dispatch(parameterTypeStore.extraActions.closeDialog());\n  };\n\n  var handleChangeTab = function handleChangeTab(event, nextTab) {\n    setTab(nextTab);\n  };\n\n  var handleChangeHistoryLogs = function handleChangeHistoryLogs(data) {\n    dispatch(parameterTypeStore.actions.setHistoryLogs(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DialogMain, {\n      open: dialogState.open,\n      loading: dialogState.loading,\n      height: 557,\n      onOk: onSubmit,\n      onClose: onClose,\n      okText: dialogState.editMode ? t('common:button.update') : t('common:button.create'),\n      okButtonProps: {\n        disabled: dialogState.loading || !editPermission && dialogState.editMode\n      },\n      title: /*#__PURE__*/_jsxDEV(BtnHelp, {\n        title: dialogState.editMode ? t('form.title.update_parameter_type') : t('form.title.create_parameter_type'),\n        href: wiki_page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        value: tab,\n        onChange: handleChangeTab,\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: t('common:tab.general')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: t('common:tab.history'),\n          disabled: !dialogState.editMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MalisPanel, {\n        value: tab,\n        index: 0,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          className: classes.wrapDialog,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n              autoFocus: !dialogState.editMode,\n              control: parameterTypeForm.control,\n              label: \"Type\",\n              name: \"type_id\",\n              required: true,\n              InputProps: {\n                readOnly: dialogState.editMode\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(FormControllerCheckbox, {\n              control: parameterTypeForm.control,\n              name: \"is_multilingual\",\n              disabled: dialogState.editMode,\n              label: \"Multilingual\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 7,\n            children: /*#__PURE__*/_jsxDEV(FormControllerAutocomplete, {\n              name: \"category\",\n              control: parameterTypeForm.control,\n              options: categories,\n              disableClearable: true,\n              renderOption: function renderOption(option) {\n                return option.description;\n              },\n              label: \"Category\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 5,\n            children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n              control: parameterTypeForm.control,\n              label: \"Number of defaults\",\n              name: \"nbr_default\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Must be a semicolon separated string of the attribute names. The attribute names themselves:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"Must contain only A-Z, a-z, 0-9 and underscore (_) character\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: \"Must not begin with a number \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true),\n              children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n                label: \"Attributes\",\n                name: \"attributes\",\n                control: parameterTypeForm.control\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n              label: \"Description\",\n              name: \"description\",\n              control: parameterTypeForm.control,\n              multiline: true,\n              rows: 10\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(When, {\n            condition: dialogState.editMode,\n            children: /*#__PURE__*/_jsxDEV(SectionTimezone, {\n              value: paramTypeDetail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MalisPanel, {\n        value: tab,\n        index: 1,\n        children: /*#__PURE__*/_jsxDEV(AppTabHistoryLog, {\n          isOpenDialog: dialogState.open,\n          data: dialogState.historyLogs,\n          onChange: handleChangeHistoryLogs,\n          entityId: paramTypeDetail === null || paramTypeDetail === void 0 ? void 0 : paramTypeDetail.id,\n          entity: \"parameter_type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ParameterTypeAddEditDialog, \"FMHEt/9giXiKVYiXmhXkiEF2EeA=\", false, function () {\n  return [useStyles, useTranslation, useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useForm];\n});\n\n_c = ParameterTypeAddEditDialog;\nexport default ParameterTypeAddEditDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParameterTypeAddEditDialog\");","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/ParameterType/CreateEdit.tsx"],"names":["useEffect","useMemo","useState","useDispatch","useSelector","useForm","yupResolver","useTranslation","useStyles","yup","constants","_","Grid","Tooltip","Tabs","Tab","When","FormControllerTextField","FormControllerAutocomplete","FormControllerCheckbox","DialogMain","AppTabHistoryLog","MalisPanel","SectionTimezone","BtnHelp","parameterTypeStore","ParameterTypeAddEditDialog","classes","t","tab","setTab","formValidationSchema","object","shape","type_id","string","required","max","matches","REGEX_ALPHA_NUMERIC_ONLY","description","nbr_default","attributes","REGEX_SEMICOLON_SEPERATED_ALPHA_NUMERIC_UNDERSCORE_ONLY","message","excludeEmptyString","test","value","valueSplit","split","uniq","length","category","number","nullable","dispatch","dialogState","selectDialogState","editPermission","selectEditPermission","selectInitDataForCE","categories","paramTypeDetail","selectDetail","wiki_page","parameterTypeForm","resolver","shouldUnregister","reset","onSubmit","handleSubmit","formData","data","omit","removalProperties","parseInt","editMode","extraActions","update","id","parameterType","create","onClose","closeDialog","handleChangeTab","event","nextTab","handleChangeHistoryLogs","actions","setHistoryLogs","open","loading","disabled","wrapDialog","control","readOnly","option","historyLogs"],"mappings":"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","sourcesContent":["import { useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { useTranslation } from 'next-i18next'\nimport useStyles from './styles'\n\nimport * as yup from 'yup'\nimport * as constants from '@/utils/constant'\nimport _ from 'lodash'\n\nimport { Grid, Tooltip, Tabs, Tab } from '@material-ui/core'\n\nimport { When } from 'react-if'\n\nimport {\n  FormControllerTextField,\n  FormControllerAutocomplete,\n  FormControllerCheckbox,\n  DialogMain,\n  AppTabHistoryLog,\n  MalisPanel,\n  SectionTimezone,\n  BtnHelp\n} from '@/components'\n\nimport { parameterTypeStore } from '@/store/reducers'\n\nimport type { ParameterTypeInstace } from '@/types/ParameterType'\nimport type { HistoryLog } from '@/types/Common'\n\nfunction ParameterTypeAddEditDialog() {\n  const classes = useStyles()\n  const { t } = useTranslation('parameter_type')\n\n  const [tab, setTab] = useState(0)\n\n  const formValidationSchema = useMemo(\n    () =>\n      yup.object().shape({\n        type_id: yup\n          .string()\n          .required(t('validation_message.type_id_required'))\n          .max(8, t('validation_message.type_id_max'))\n          .matches(constants.REGEX_ALPHA_NUMERIC_ONLY, t('validation_message.type_id_match')),\n        description: yup.string().max(80, t('validation_message.description_max')),\n        nbr_default: yup\n          .string()\n          .required(t('validation_message.nbr_default_required'))\n          .matches(/^[0-9]+$/, t('validation_message.nbr_default_type_number')),\n        attributes: yup\n          .string()\n          .matches(constants.REGEX_SEMICOLON_SEPERATED_ALPHA_NUMERIC_UNDERSCORE_ONLY, {\n            message: t('validation_message.attributes_match'),\n            excludeEmptyString: true\n          })\n          .test('uniq', t('validation_message.attributes_match'), (value) => {\n            if (!value) {\n              return true\n            }\n            const valueSplit = value.split(';')\n            return _.uniq(valueSplit).length === valueSplit.length\n          }),\n        category: yup.number().required().nullable()\n      }),\n    [t]\n  )\n\n  const dispatch = useDispatch()\n  const dialogState = useSelector(parameterTypeStore.selectDialogState)\n  const editPermission = useSelector(parameterTypeStore.selectEditPermission)\n  const { categories } = useSelector(parameterTypeStore.selectInitDataForCE)\n  const paramTypeDetail = useSelector(parameterTypeStore.selectDetail)\n  const { wiki_page } = useSelector(parameterTypeStore.selectInitDataForCE)\n\n  const parameterTypeForm = useForm<ParameterTypeInstace>({\n    resolver: yupResolver(formValidationSchema),\n    shouldUnregister: false\n  })\n\n  useEffect(() => {\n    parameterTypeForm.reset(paramTypeDetail)\n    setTab(0)\n  }, [paramTypeDetail])\n\n  const onSubmit = parameterTypeForm.handleSubmit((formData) => {\n    const data = _.omit(formData, [...constants.removalProperties, 'help', 'parameters'])\n    data.nbr_default = parseInt((data as any).nbr_default)\n    if (dialogState.editMode) {\n      dispatch(\n        parameterTypeStore.extraActions.update({\n          id: formData.id,\n          parameterType: data\n        })\n      )\n    } else {\n      dispatch(parameterTypeStore.extraActions.create(data))\n    }\n  })\n\n  const onClose = () => {\n    dispatch(parameterTypeStore.extraActions.closeDialog())\n  }\n\n  const handleChangeTab = (event, nextTab: number) => {\n    setTab(nextTab)\n  }\n\n  const handleChangeHistoryLogs = (data: HistoryLog[]) => {\n    dispatch(parameterTypeStore.actions.setHistoryLogs(data))\n  }\n\n  return (\n    <>\n      <DialogMain\n        open={dialogState.open}\n        loading={dialogState.loading}\n        height={557}\n        onOk={onSubmit}\n        onClose={onClose}\n        okText={dialogState.editMode ? t('common:button.update') : t('common:button.create')}\n        okButtonProps={{\n          disabled: dialogState.loading || (!editPermission && dialogState.editMode)\n        }}\n        title={\n          <BtnHelp\n            title={dialogState.editMode ? t('form.title.update_parameter_type') : t('form.title.create_parameter_type')}\n            href={wiki_page}\n          />\n        }\n      >\n        <Tabs value={tab} onChange={handleChangeTab}>\n          <Tab label={t('common:tab.general')} />\n          <Tab label={t('common:tab.history')} disabled={!dialogState.editMode} />\n        </Tabs>\n        <MalisPanel value={tab} index={0}>\n          <Grid container spacing={2} className={classes.wrapDialog}>\n            <Grid item xs={8}>\n              <FormControllerTextField\n                autoFocus={!dialogState.editMode}\n                control={parameterTypeForm.control}\n                label=\"Type\"\n                name=\"type_id\"\n                required\n                InputProps={{\n                  readOnly: dialogState.editMode\n                }}\n              />\n            </Grid>\n\n            <Grid item xs={4}>\n              <FormControllerCheckbox\n                control={parameterTypeForm.control}\n                name=\"is_multilingual\"\n                disabled={dialogState.editMode}\n                label=\"Multilingual\"\n              />\n            </Grid>\n\n            <Grid item xs={7}>\n              <FormControllerAutocomplete\n                name=\"category\"\n                control={parameterTypeForm.control}\n                options={categories}\n                disableClearable\n                renderOption={(option) => option.description}\n                label=\"Category\"\n                required\n              />\n            </Grid>\n\n            <Grid item xs={5}>\n              <FormControllerTextField\n                control={parameterTypeForm.control}\n                label=\"Number of defaults\"\n                name=\"nbr_default\"\n                required\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <Tooltip\n                title={\n                  <>\n                    <p>Must be a semicolon separated string of the attribute names. The attribute names themselves:</p>\n                    <ul>\n                      <li>Must contain only A-Z, a-z, 0-9 and underscore (_) character</li>\n                      <li>Must not begin with a number </li>\n                    </ul>\n                  </>\n                }\n              >\n                <FormControllerTextField label=\"Attributes\" name=\"attributes\" control={parameterTypeForm.control} />\n              </Tooltip>\n            </Grid>\n\n            <Grid item xs={12}>\n              <FormControllerTextField\n                label=\"Description\"\n                name=\"description\"\n                control={parameterTypeForm.control}\n                multiline\n                rows={10}\n              />\n            </Grid>\n\n            <When condition={dialogState.editMode}>\n              <SectionTimezone value={paramTypeDetail} />\n            </When>\n          </Grid>\n        </MalisPanel>\n        <MalisPanel value={tab} index={1}>\n          <AppTabHistoryLog\n            isOpenDialog={dialogState.open}\n            data={dialogState.historyLogs}\n            onChange={handleChangeHistoryLogs}\n            entityId={paramTypeDetail?.id}\n            entity=\"parameter_type\"\n          />\n        </MalisPanel>\n      </DialogMain>\n    </>\n  )\n}\n\nexport default ParameterTypeAddEditDialog\n"]},"metadata":{},"sourceType":"module"}