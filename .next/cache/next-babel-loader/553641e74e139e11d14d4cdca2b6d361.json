{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\pages\\\\budget.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useMemo, useEffect } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { AppAutocompleteStyled, DialogBudgetCreateEdit, DataTableTextField, DialogBudgetImport, EditIcon, CreateIcon, DeleteIcon, MakeAListIcon, SaveIcon, AppLayout, DataTableNumberField } from '@/components';\nimport { useTranslation } from 'next-i18next';\nimport useStyles from '@/styles/page/layout';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useConfirm, confirmConstant } from '@/components/Dialog/Common/Confirmation';\nimport useAuthMiddleware from '@/hooks/useAuthMiddleware';\nimport clsx from 'clsx';\nimport _ from 'lodash';\nimport immer from 'immer';\nimport * as yup from 'yup';\nimport { budgetAmountFormat, unsaveDialogOptions } from '@/utils/constant';\nimport * as columnProperties from '@/utils/columnProperties';\nimport { budgetActions, commonStore, makeAListActions } from '@/store/reducers';\nimport { TABLE_HEIGHT_BUDGET } from '@/styles/vars/size';\nimport DialogRemindData from '@/components/Dialog/Module/Budget/RemindData';\nimport getMessageConfirm from '@/utils/getMessageConfirm';\n\nfunction BudgetPage() {\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslation('budget');\n  const {\n    confirm\n  } = useConfirm();\n  const dispatch = useDispatch();\n  const dataList = useSelector(budgetActions.selectDataList);\n  const userJob = useSelector(budgetActions.selectUserJob);\n  const userPuco = useSelector(budgetActions.selectUserPuco);\n  const pucoList = useSelector(budgetActions.selectPucoList);\n  const jobList = useSelector(budgetActions.selectJobList);\n  const budgetSum = useSelector(budgetActions.selectBudgetSum);\n  const permissions = useSelector(budgetActions.selectPermissions);\n  const selectedRows = useSelector(commonStore.selectSelectedRows);\n\n  const _useSelector = useSelector(budgetActions.selectInitDataForList),\n        {\n    column_tooltips\n  } = _useSelector,\n        initDataForList = _objectWithoutProperties(_useSelector, [\"column_tooltips\"]);\n\n  const editRows = useSelector(commonStore.selectEditRows);\n  const breadcrumbData = useMemo(() => [{\n    label: 'Home',\n    href: '/'\n  }, {\n    label: 'Basic Options',\n    href: '/jobs'\n  }, {\n    label: 'Budget Management',\n    href: '/budget'\n  }], []);\n  useEffect(() => {\n    dispatch(commonStore.actions.setEditRows([]));\n  }, [dataList]); // handle change value\n\n  const onChangeUserValue = value => async (event, option) => {\n    let result = '';\n\n    if (editRows.length > 0) {\n      result = await confirm(unsaveDialogOptions);\n    }\n\n    if (result !== 'cancel') {\n      dispatch(budgetActions.changeUserValue({\n        value,\n        option,\n        confirm: result\n      }));\n    }\n  };\n\n  const onOpenUpdateDialog = id => () => {\n    dispatch(budgetActions.openUpdateDialog(id));\n  };\n\n  const onOpenCreateDialog = () => {\n    dispatch(budgetActions.openCreateDialog());\n  };\n\n  const onOpenImportDialog = () => {\n    dispatch(budgetActions.setImportOpen(true));\n  };\n\n  const onSaveUpdateData = () => {\n    dispatch(commonStore.sagaUpdateMultiple({\n      entity: 'budget'\n    }));\n  };\n\n  const onDeleteBudgets = async () => {\n    const description = getMessageConfirm(t, 'budget', selectedRows, 'delete');\n    const result = await confirm({\n      description\n    });\n\n    if (result === confirmConstant.actionTypes.OK) {\n      dispatch(budgetActions.remove(selectedRows));\n    }\n  };\n\n  const onOpenMakeAList = () => {\n    dispatch(makeAListActions.open());\n  };\n\n  const onChangeEditRows = (budget_id_pk, value, field) => {\n    const newEditRows = immer(editRows, draft => {\n      const findIndex = _.findIndex(draft, {\n        budget_id_pk\n      });\n\n      const valueFormat = field === 'amount' ? Number(value) : value;\n\n      if (findIndex > -1) {\n        draft[findIndex][field] = valueFormat;\n      } else {\n        draft.push({\n          budget_id_pk,\n          [field]: valueFormat\n        });\n      }\n    });\n    dispatch(commonStore.actions.setEditRows(newEditRows));\n  };\n\n  const columns = [_objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.iconColumn), {}, {\n    description: column_tooltips.edit,\n    field: 'id',\n    headerName: 'Edit',\n\n    renderCell(params) {\n      return /*#__PURE__*/_jsxDEV(EditIcon, {\n        onClick: onOpenUpdateDialog(params.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 16\n      }, this);\n    }\n\n  }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n    description: column_tooltips.budget_id,\n    field: 'budget_id',\n    headerName: 'Cost Code',\n    flex: 0.1\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.editCell('Description', permissions === null || permissions === void 0 ? void 0 : permissions.edit, column_tooltips.description)), {}, {\n    field: 'description',\n    flex: 0.3,\n\n    cellClassName(params) {\n      return clsx({\n        [classes.mark]: editRows.some(row => row.budget_id_pk === params.id && typeof row.description !== 'undefined')\n      });\n    },\n\n    renderEditCell(params) {\n      return /*#__PURE__*/_jsxDEV(DataTableTextField, {\n        params: params,\n        rules: yup.string().max(513, 'Description must be less than 513 characters!'),\n        onChangeValue: onChangeEditRows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this);\n    }\n\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    description: column_tooltips.currency_id,\n    field: 'currency_id',\n    headerName: 'Currency',\n    flex: 0.1\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    description: column_tooltips.puco,\n    field: 'puco',\n    headerName: 'Puco',\n    flex: 0.1\n  }), _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.numberColumn), columnProperties.editCell('Amount', permissions === null || permissions === void 0 ? void 0 : permissions.edit, column_tooltips.amount)), {}, {\n    field: 'amount',\n    flex: 0.1,\n\n    cellClassName(params) {\n      return clsx({\n        [classes.mark]: editRows.some(row => row.budget_id_pk === params.id && typeof row.amount !== 'undefined')\n      });\n    },\n\n    renderEditCell(params) {\n      return /*#__PURE__*/_jsxDEV(DataTableNumberField, {\n        params: params,\n        onChangeValue: onChangeEditRows,\n        rules: yup.number().nullable().required(t('validation_message.amount_required')).min(budgetAmountFormat.min, t('validation_message.amount_range')).max(budgetAmountFormat.max, t('validation_message.amount_range'))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this);\n    }\n\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.numberColumn), {}, {\n    description: column_tooltips.used_in_rfq,\n    field: 'used_in_rfq',\n    headerName: 'Used In RFQ',\n    flex: 0.1\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.numberColumn), {}, {\n    description: column_tooltips.left_in_rfq,\n    field: 'left_in_rfq',\n    headerName: 'Left In RFQ',\n    flex: 0.1\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.numberColumn), {}, {\n    description: column_tooltips.used_in_order,\n    field: 'used_in_order',\n    headerName: 'Used In Order',\n    flex: 0.1\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.numberColumn), {}, {\n    description: column_tooltips.left_in_order,\n    field: 'left_in_order',\n    headerName: 'Left In Order',\n    flex: 0.1\n  })];\n\n  const Dialogs = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DialogBudgetCreateEdit, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogBudgetImport, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogRemindData, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  const Options = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppAutocompleteStyled, {\n      width: 250,\n      label: \"Jobs\",\n      className: classes.controlAutocomplete,\n      options: jobList,\n      value: userJob,\n      renderOption: option => option.description,\n      primaryKeyOption: \"value\",\n      onChange: onChangeUserValue('job')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppAutocompleteStyled, {\n      disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.view),\n      width: 250,\n      label: \"Puco\",\n      className: classes.controlAutocomplete,\n      options: pucoList,\n      value: userPuco,\n      renderOption: option => option.description,\n      primaryKeyOption: \"value\",\n      onChange: onChangeUserValue('puco')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  const renderButtons = [{\n    label: t('common:button.new'),\n    disabled: Boolean(userJob.value) === false || !(permissions === null || permissions === void 0 ? void 0 : permissions.create) && !(permissions === null || permissions === void 0 ? void 0 : permissions.import),\n    startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 18\n    }, this),\n    item: [{\n      label: t('button.create'),\n      onClick: onOpenCreateDialog,\n      disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.create)\n    }, {\n      label: t('form.title.import'),\n      onClick: onOpenImportDialog,\n      disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.import)\n    }]\n  }, {\n    label: t('common:button.delete'),\n    disabled: selectedRows.length <= 0 || !(permissions === null || permissions === void 0 ? void 0 : permissions.delete),\n    startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 18\n    }, this),\n    onClick: onDeleteBudgets\n  }, {\n    label: t('common:button.save'),\n    disabled: editRows.length <= 0 || !(permissions === null || permissions === void 0 ? void 0 : permissions.edit),\n    startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 18\n    }, this),\n    onClick: onSaveUpdateData\n  }, {\n    label: t('common:button.make_a_list'),\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.make_a_list),\n    startIcon: /*#__PURE__*/_jsxDEV(MakeAListIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 18\n    }, this),\n    onClick: onOpenMakeAList\n  }];\n\n  const bottomSection = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 35,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      disableSelectionOnClick: true,\n      disableColumnMenu: true,\n      checkboxSelection: true,\n      hideFooter: true,\n      columns: columns,\n      headerHeight: 0,\n      rowHeight: 35,\n      getRowClassName: () => classes.totalBudgetRow // rows={[budgetSum]}\n      ,\n      onCellDoubleClick: (_, event) => {\n        event.stopPropagation();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 315,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    entity: \"budget\",\n    breadcrumbs: breadcrumbData,\n    wikiPage: initDataForList.wiki_page,\n    permissions: permissions,\n    searchProps: {\n      width: 300\n    },\n    buttons: renderButtons,\n    Dialogs: Dialogs,\n    Options: Options,\n    tableProps: {\n      columns\n    },\n    bottomSection: bottomSection,\n    tableHeight: TABLE_HEIGHT_BUDGET\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 5\n  }, this);\n}\n\nexport const getServerSideProps = useAuthMiddleware(['common', 'budget', 'make_a_list', 'advanced_filter']);\nexport default BudgetPage;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/pages/budget.tsx"],"names":["useMemo","useEffect","DataGrid","AppAutocompleteStyled","DialogBudgetCreateEdit","DataTableTextField","DialogBudgetImport","EditIcon","CreateIcon","DeleteIcon","MakeAListIcon","SaveIcon","AppLayout","DataTableNumberField","useTranslation","useStyles","useDispatch","useSelector","useConfirm","confirmConstant","useAuthMiddleware","clsx","_","immer","yup","budgetAmountFormat","unsaveDialogOptions","columnProperties","budgetActions","commonStore","makeAListActions","TABLE_HEIGHT_BUDGET","DialogRemindData","getMessageConfirm","BudgetPage","classes","t","confirm","dispatch","dataList","selectDataList","userJob","selectUserJob","userPuco","selectUserPuco","pucoList","selectPucoList","jobList","selectJobList","budgetSum","selectBudgetSum","permissions","selectPermissions","selectedRows","selectSelectedRows","selectInitDataForList","column_tooltips","initDataForList","editRows","selectEditRows","breadcrumbData","label","href","actions","setEditRows","onChangeUserValue","value","event","option","result","length","changeUserValue","onOpenUpdateDialog","id","openUpdateDialog","onOpenCreateDialog","openCreateDialog","onOpenImportDialog","setImportOpen","onSaveUpdateData","sagaUpdateMultiple","entity","onDeleteBudgets","description","actionTypes","OK","remove","onOpenMakeAList","open","onChangeEditRows","budget_id_pk","field","newEditRows","draft","findIndex","valueFormat","Number","push","columns","defaultProperties","iconColumn","edit","headerName","renderCell","params","budget_id","flex","editCell","cellClassName","mark","some","row","renderEditCell","string","max","centerColumn","currency_id","puco","numberColumn","amount","number","nullable","required","min","used_in_rfq","left_in_rfq","used_in_order","left_in_order","Dialogs","Options","controlAutocomplete","view","renderButtons","disabled","Boolean","create","import","startIcon","item","onClick","delete","make_a_list","bottomSection","height","width","totalBudgetRow","stopPropagation","wiki_page","getServerSideProps"],"mappings":"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","sourcesContent":["import { useMemo, useEffect } from 'react'\n\nimport { DataGrid, GridColumns } from '@material-ui/data-grid'\n\nimport {\n  AppAutocompleteStyled,\n  DialogBudgetCreateEdit,\n  DataTableTextField,\n  DialogBudgetImport,\n  EditIcon,\n  CreateIcon,\n  DeleteIcon,\n  MakeAListIcon,\n  SaveIcon,\n  AppLayout,\n  DataTableNumberField\n} from '@/components'\n\nimport { useTranslation } from 'next-i18next'\nimport useStyles from '@/styles/page/layout'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useConfirm, confirmConstant } from '@/components/Dialog/Common/Confirmation'\nimport useAuthMiddleware from '@/hooks/useAuthMiddleware'\n\nimport clsx from 'clsx'\nimport _ from 'lodash'\nimport immer from 'immer'\nimport * as yup from 'yup'\n\nimport { budgetAmountFormat, unsaveDialogOptions } from '@/utils/constant'\nimport * as columnProperties from '@/utils/columnProperties'\n\nimport { budgetActions, commonStore, makeAListActions } from '@/store/reducers'\n\nimport { TABLE_HEIGHT_BUDGET } from '@/styles/vars/size'\nimport DialogRemindData from '@/components/Dialog/Module/Budget/RemindData'\nimport getMessageConfirm from '@/utils/getMessageConfirm'\n\nfunction BudgetPage() {\n  const classes = useStyles()\n  const { t } = useTranslation('budget')\n  const { confirm } = useConfirm()\n\n  const dispatch = useDispatch()\n  const dataList = useSelector(budgetActions.selectDataList)\n  const userJob = useSelector(budgetActions.selectUserJob)\n  const userPuco = useSelector(budgetActions.selectUserPuco)\n  const pucoList = useSelector(budgetActions.selectPucoList)\n  const jobList = useSelector(budgetActions.selectJobList)\n  const budgetSum = useSelector(budgetActions.selectBudgetSum)\n  const permissions = useSelector(budgetActions.selectPermissions)\n  const selectedRows = useSelector(commonStore.selectSelectedRows)\n  const { column_tooltips, ...initDataForList } = useSelector(budgetActions.selectInitDataForList)\n\n  const editRows = useSelector(commonStore.selectEditRows)\n\n  const breadcrumbData = useMemo(\n    () => [\n      { label: 'Home', href: '/' },\n      { label: 'Basic Options', href: '/jobs' },\n      { label: 'Budget Management', href: '/budget' }\n    ],\n    []\n  )\n\n  useEffect(() => {\n    dispatch(commonStore.actions.setEditRows([]))\n  }, [dataList])\n\n  // handle change value\n  const onChangeUserValue = (value) => async (event, option) => {\n    let result = ''\n    if (editRows.length > 0) {\n      result = await confirm(unsaveDialogOptions)\n    }\n    if (result !== 'cancel') {\n      dispatch(budgetActions.changeUserValue({ value, option, confirm: result }))\n    }\n  }\n\n  const onOpenUpdateDialog = (id: number) => () => {\n    dispatch(budgetActions.openUpdateDialog(id))\n  }\n\n  const onOpenCreateDialog = () => {\n    dispatch(budgetActions.openCreateDialog())\n  }\n\n  const onOpenImportDialog = () => {\n    dispatch(budgetActions.setImportOpen(true))\n  }\n\n  const onSaveUpdateData = () => {\n    dispatch(commonStore.sagaUpdateMultiple({ entity: 'budget' }))\n  }\n\n  const onDeleteBudgets = async () => {\n    const description = getMessageConfirm(t, 'budget', selectedRows, 'delete')\n    const result = await confirm({\n      description\n    })\n    if (result === confirmConstant.actionTypes.OK) {\n      dispatch(budgetActions.remove(selectedRows))\n    }\n  }\n\n  const onOpenMakeAList = () => {\n    dispatch(makeAListActions.open())\n  }\n\n  const onChangeEditRows = (budget_id_pk, value, field) => {\n    const newEditRows = immer(editRows, (draft) => {\n      const findIndex = _.findIndex(draft, { budget_id_pk })\n      const valueFormat = field === 'amount' ? Number(value) : value\n      if (findIndex > -1) {\n        draft[findIndex][field] = valueFormat\n      } else {\n        draft.push({ budget_id_pk, [field]: valueFormat })\n      }\n    })\n    dispatch(commonStore.actions.setEditRows(newEditRows))\n  }\n\n  const columns: GridColumns = [\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.iconColumn,\n      description: column_tooltips.edit,\n      field: 'id',\n      headerName: 'Edit',\n      renderCell(params) {\n        return <EditIcon onClick={onOpenUpdateDialog(params.value as number)} />\n      }\n    },\n    {\n      ...columnProperties.defaultProperties,\n      description: column_tooltips.budget_id,\n      field: 'budget_id',\n      headerName: 'Cost Code',\n      flex: 0.1\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.editCell('Description', permissions?.edit, column_tooltips.description),\n      field: 'description',\n      flex: 0.3,\n      cellClassName(params) {\n        return clsx({\n          [classes.mark]: editRows.some(\n            (row) => row.budget_id_pk === params.id && typeof row.description !== 'undefined'\n          )\n        })\n      },\n      renderEditCell(params) {\n        return (\n          <DataTableTextField\n            params={params}\n            rules={yup.string().max(513, 'Description must be less than 513 characters!')}\n            onChangeValue={onChangeEditRows}\n          />\n        )\n      }\n    },\n\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.centerColumn,\n      description: column_tooltips.currency_id,\n      field: 'currency_id',\n      headerName: 'Currency',\n      flex: 0.1\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.centerColumn,\n      description: column_tooltips.puco,\n      field: 'puco',\n      headerName: 'Puco',\n      flex: 0.1\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.numberColumn,\n      ...columnProperties.editCell('Amount', permissions?.edit, column_tooltips.amount),\n      field: 'amount',\n      flex: 0.1,\n      cellClassName(params) {\n        return clsx({\n          [classes.mark]: editRows.some((row) => row.budget_id_pk === params.id && typeof row.amount !== 'undefined')\n        })\n      },\n      renderEditCell(params) {\n        return (\n          <DataTableNumberField\n            params={params}\n            onChangeValue={onChangeEditRows}\n            rules={yup\n              .number()\n              .nullable()\n              .required(t('validation_message.amount_required'))\n              .min(budgetAmountFormat.min, t('validation_message.amount_range'))\n              .max(budgetAmountFormat.max, t('validation_message.amount_range'))}\n          />\n        )\n      }\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.numberColumn,\n      description: column_tooltips.used_in_rfq,\n      field: 'used_in_rfq',\n      headerName: 'Used In RFQ',\n      flex: 0.1\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.numberColumn,\n      description: column_tooltips.left_in_rfq,\n      field: 'left_in_rfq',\n      headerName: 'Left In RFQ',\n      flex: 0.1\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.numberColumn,\n      description: column_tooltips.used_in_order,\n      field: 'used_in_order',\n      headerName: 'Used In Order',\n      flex: 0.1\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.numberColumn,\n      description: column_tooltips.left_in_order,\n      field: 'left_in_order',\n      headerName: 'Left In Order',\n      flex: 0.1\n    }\n  ]\n\n  const Dialogs = (\n    <>\n      <DialogBudgetCreateEdit />\n      <DialogBudgetImport />\n      <DialogRemindData />\n    </>\n  )\n\n  const Options = (\n    <>\n      <AppAutocompleteStyled\n        width={250}\n        label=\"Jobs\"\n        className={classes.controlAutocomplete}\n        options={jobList}\n        value={userJob}\n        renderOption={(option) => option.description}\n        primaryKeyOption=\"value\"\n        onChange={onChangeUserValue('job')}\n      />\n\n      <AppAutocompleteStyled\n        disabled={!permissions?.view}\n        width={250}\n        label=\"Puco\"\n        className={classes.controlAutocomplete}\n        options={pucoList}\n        value={userPuco}\n        renderOption={(option) => option.description}\n        primaryKeyOption=\"value\"\n        onChange={onChangeUserValue('puco')}\n      />\n    </>\n  )\n\n  const renderButtons = [\n    {\n      label: t('common:button.new'),\n      disabled: Boolean(userJob.value) === false || (!permissions?.create && !permissions?.import),\n      startIcon: <CreateIcon />,\n      item: [\n        {\n          label: t('button.create'),\n          onClick: onOpenCreateDialog,\n          disabled: !permissions?.create\n        },\n        {\n          label: t('form.title.import'),\n          onClick: onOpenImportDialog,\n          disabled: !permissions?.import\n        }\n      ]\n    },\n    {\n      label: t('common:button.delete'),\n      disabled: selectedRows.length <= 0 || !permissions?.delete,\n      startIcon: <DeleteIcon />,\n      onClick: onDeleteBudgets\n    },\n    {\n      label: t('common:button.save'),\n      disabled: editRows.length <= 0 || !permissions?.edit,\n      startIcon: <SaveIcon />,\n      onClick: onSaveUpdateData\n    },\n    {\n      label: t('common:button.make_a_list'),\n      disabled: !permissions?.make_a_list,\n      startIcon: <MakeAListIcon />,\n      onClick: onOpenMakeAList\n    }\n  ]\n\n  const bottomSection = (\n    <div style={{ height: 35, width: '100%' }}>\n      <DataGrid\n        disableSelectionOnClick\n        disableColumnMenu\n        checkboxSelection\n        hideFooter\n        columns={columns}\n        headerHeight={0}\n        rowHeight={35}\n        getRowClassName={() => classes.totalBudgetRow}\n        // rows={[budgetSum]}\n        onCellDoubleClick={(_, event) => {\n          event.stopPropagation()\n        }}\n      />\n    </div>\n  )\n\n  return (\n    <AppLayout\n      entity=\"budget\"\n      breadcrumbs={breadcrumbData}\n      wikiPage={initDataForList.wiki_page}\n      permissions={permissions}\n      searchProps={{\n        width: 300\n      }}\n      buttons={renderButtons}\n      Dialogs={Dialogs}\n      Options={Options}\n      tableProps={{ columns }}\n      bottomSection={bottomSection}\n      tableHeight={TABLE_HEIGHT_BUDGET}\n    />\n  )\n}\n\nexport const getServerSideProps = useAuthMiddleware(['common', 'budget', 'make_a_list', 'advanced_filter'])\n\nexport default BudgetPage\n"]},"metadata":{},"sourceType":"module"}