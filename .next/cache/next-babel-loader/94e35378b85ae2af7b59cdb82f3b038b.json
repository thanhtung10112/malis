{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport useStyles from './styles';\nimport useDraggableInPortal from '@/hooks/useDraggableInPortal';\nimport { useFormContext } from 'react-hook-form';\nimport { useTranslation } from 'next-i18next';\nimport useDialogContext from '../Context/useDialogContext';\nimport { Grid, List, ListItem, Paper, Typography, Box } from '@material-ui/core';\nimport { AppTitle, DataTable, DataTableTextField, DataTableDatePicker, CreateIcon, DeleteIcon, DragIcon } from '@/components';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport clsx from 'clsx';\nimport _ from 'lodash';\nimport { v1 as uuidv1 } from 'uuid';\nimport { format as formatDate } from 'date-fns';\nimport immer from 'immer';\nimport * as yup from 'yup';\nimport * as constant from '@/utils/constant';\nimport swapOrder from '@/utils/swapOrder';\nimport * as columnProperties from '@/utils/columnProperties';\n\nfunction TabAdditionalInfo() {\n  var _useTranslation = useTranslation('job'),\n      t = _useTranslation.t;\n\n  var classes = useStyles();\n  var renderDraggable = useDraggableInPortal();\n\n  var _useDialogContext = useDialogContext(),\n      isCreating = _useDialogContext.isCreating;\n\n  var jobForm = useFormContext();\n  var expeditingDates = jobForm.watch('job_expediting_dates', []);\n\n  var _useState = useState([]),\n      selectedExDates = _useState[0],\n      setSelectedExDates = _useState[1];\n\n  var renderItems = function renderItems() {\n    var _jobForm$getValues = jobForm.getValues(),\n        job_standard = _jobForm$getValues.job_standard;\n\n    return job_standard.map(function (item, index) {\n      return /*#__PURE__*/_jsx(Draggable, {\n        draggableId: item.parameter_id,\n        index: index,\n        children: renderDraggable(function (provided) {\n          return /*#__PURE__*/_jsxs(ListItem, _objectSpread(_objectSpread({\n            component: \"div\",\n            className: classes.listItem,\n            ref: provided.innerRef\n          }, provided.draggableProps), {}, {\n            children: [/*#__PURE__*/_jsx(Typography, {\n              variant: \"caption\",\n              component: \"div\",\n              children: index + 1\n            }), /*#__PURE__*/_jsx(Typography, {\n              variant: \"caption\",\n              component: \"div\",\n              children: item.parameter_id + ' - ' + item.description\n            }), /*#__PURE__*/_jsx(\"span\", _objectSpread(_objectSpread({}, provided.dragHandleProps), {}, {\n              className: classes.dragIcon,\n              children: /*#__PURE__*/_jsx(DragIcon, {})\n            }))]\n          }));\n        })\n      }, item.id);\n    });\n  };\n\n  var onAddExpeditingDateRows = function onAddExpeditingDateRows() {\n    var newExDate = immer(expeditingDates, function (draft) {\n      draft.push({\n        id: uuidv1(),\n        exp_date: formatDate(new Date(), constant.DATE_FORMAT),\n        comment: ''\n      });\n    });\n    jobForm.setValue('job_expediting_dates', newExDate);\n  };\n\n  var onDragEndItem = function onDragEndItem(result) {\n    if (result.source && result.destination) {\n      var _jobForm$getValues2 = jobForm.getValues(),\n          job_standard = _jobForm$getValues2.job_standard;\n\n      var items = swapOrder(job_standard, result.source.index, result.destination.index);\n      jobForm.setValue('job_standard', items);\n    }\n  };\n\n  var onChangeExpeditingDate = function onChangeExpeditingDate(id, date) {\n    var value = formatDate(date, constant.DATE_FORMAT);\n    var newExDates = immer(expeditingDates, function (draft) {\n      var indexExDate = _.findIndex(draft, function (exDate) {\n        return exDate.id === id;\n      });\n\n      draft[indexExDate].exp_date = value;\n    });\n    jobForm.setValue('job_expediting_dates', newExDates);\n  };\n\n  var onChangeExpeditingComment = function onChangeExpeditingComment(id, value) {\n    var newExDates = immer(expeditingDates, function (draft) {\n      var indexExDate = _.findIndex(draft, function (exDate) {\n        return exDate.id === id;\n      });\n\n      draft[indexExDate].comment = value;\n    });\n    jobForm.setValue('job_expediting_dates', newExDates);\n  };\n\n  var onSelectedExDate = function onSelectedExDate(_ref) {\n    var selectionModel = _ref.selectionModel;\n    setSelectedExDates(selectionModel);\n  };\n\n  var onDeleteExDate = function onDeleteExDate() {\n    var newExDates = expeditingDates.filter(function (exDate) {\n      return !selectedExDates.some(function (item) {\n        return item === exDate.id;\n      });\n    });\n    jobForm.setValue('job_expediting_dates', newExDates);\n    setSelectedExDates([]);\n  };\n\n  return /*#__PURE__*/_jsxs(Grid, {\n    container: true,\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxs(Grid, {\n      item: true,\n      xs: 6,\n      children: [/*#__PURE__*/_jsx(AppTitle, {\n        label: \"Standards\"\n      }), /*#__PURE__*/_jsx(Paper, {\n        children: /*#__PURE__*/_jsxs(List, {\n          dense: true,\n          className: classes.rootList,\n          component: \"div\",\n          children: [/*#__PURE__*/_jsxs(ListItem, {\n            component: \"div\",\n            className: clsx(classes.listItem, classes.header),\n            children: [/*#__PURE__*/_jsx(Typography, {\n              variant: \"caption\",\n              component: Box,\n              fontWeight: 700,\n              children: \"#\"\n            }), /*#__PURE__*/_jsx(Typography, {\n              variant: \"caption\",\n              component: Box,\n              fontWeight: 700,\n              children: \"Standard\"\n            })]\n          }), /*#__PURE__*/_jsx(DragDropContext, {\n            onDragEnd: onDragEndItem,\n            children: /*#__PURE__*/_jsx(Droppable, {\n              droppableId: \"droppable\",\n              children: function children(provided) {\n                return /*#__PURE__*/_jsxs(\"div\", _objectSpread(_objectSpread({\n                  className: \"\"\n                }, provided.droppableProps), {}, {\n                  ref: provided.innerRef,\n                  children: [renderItems(), provided.placeholder]\n                }));\n              }\n            })\n          })]\n        })\n      })]\n    }), /*#__PURE__*/_jsxs(Grid, {\n      item: true,\n      xs: 6,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.expeditionHeader,\n        children: [/*#__PURE__*/_jsx(AppTitle, {\n          label: \"Expediting Dates\"\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: classes.buttonGroup,\n          children: [/*#__PURE__*/_jsx(CreateIcon, {\n            onClick: onAddExpeditingDateRows\n          }), /*#__PURE__*/_jsx(DeleteIcon, {\n            onClick: onDeleteExDate,\n            className: clsx(selectedExDates.length <= 0 && classes.disabled)\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(Paper, {\n        children: /*#__PURE__*/_jsx(DataTable, {\n          hideFooter: true,\n          disableColumnMenu: true,\n          disableSelectionOnClick: true,\n          checkboxSelection: true,\n          tableHeight: 340,\n          selectionModel: selectedExDates,\n          onSelectionModelChange: onSelectedExDate,\n          rows: expeditingDates,\n          columns: [_objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n            field: 'exp_date',\n            flex: 0.3,\n            headerName: 'Date',\n            renderCell: function renderCell(params) {\n              return /*#__PURE__*/_jsx(DataTableDatePicker, {\n                minDate: isCreating ? new Date() : null,\n                params: params,\n                onChangeValue: onChangeExpeditingDate\n              });\n            }\n          }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.editCell('Comment')), {}, {\n            field: 'comment',\n            flex: 0.7,\n            renderEditCell: function renderEditCell(params) {\n              return /*#__PURE__*/_jsx(DataTableTextField, {\n                params: params,\n                onChangeValue: onChangeExpeditingComment,\n                rules: yup.string().max(255, t('validation_message.ex_date_comment_max'))\n              });\n            }\n          })]\n        })\n      })]\n    })]\n  });\n}\n\nexport default TabAdditionalInfo;","map":null,"metadata":{},"sourceType":"module"}