{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useFormContext } from 'react-hook-form';\nimport { useSelector } from 'react-redux';\nimport { Grid, Paper } from '@material-ui/core';\nimport { DataTable, AppAutocompleteAsync, FormControllerTextField, SectionTimezone, AppAutocomplete } from '@/components';\nimport { When } from 'react-if';\nimport { specificationStore, commonStore } from '@/store/reducers';\nimport { defaultProperties, editCell } from '@/utils/columnProperties';\n\nconst TabGeneral = () => {\n  var _materialsForm$errors, _materialsForm$errors2;\n\n  const materialsForm = useFormContext();\n  const specificationDetail = useSelector(specificationStore.selectDetail);\n  const userJob = useSelector(commonStore.selectUserValueJob);\n\n  const handleChangeDrawingId = (event, optionValue) => {\n    console.warn('optionValue', '>>>', optionValue);\n  };\n\n  const columns = [_objectSpread(_objectSpread({}, editCell('Quantity')), {}, {\n    // ...rightColumn,\n    field: 'quantity',\n    flex: 0.2,\n    sortable: false\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    sortable: false,\n    field: 'mass',\n    headerName: 'Usage',\n    flex: 0.3\n  })];\n  return /*#__PURE__*/_jsxs(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxs(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 12,\n          style: {\n            marginTop: 8\n          },\n          children: /*#__PURE__*/_jsx(AppAutocomplete, {\n            helperText: (_materialsForm$errors = materialsForm.errors.job_id) === null || _materialsForm$errors === void 0 ? void 0 : _materialsForm$errors.message,\n            error: Boolean(materialsForm.errors.job_id),\n            value: userJob,\n            popupIcon: null,\n            disabled: true,\n            label: \"Job\",\n            required: true,\n            primaryKeyOption: \"value\",\n            options: [],\n            renderOption: option => option.description\n          })\n        }), /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsx(AppAutocompleteAsync, {\n            helperText: (_materialsForm$errors2 = materialsForm.errors.drawing_id) === null || _materialsForm$errors2 === void 0 ? void 0 : _materialsForm$errors2.message,\n            error: Boolean(materialsForm.errors.drawing_id),\n            compName: \"part_list\",\n            additionalData: {\n              limit_to_job: userJob.value\n            },\n            required: true,\n            label: \"Part #\",\n            onChange: handleChangeDrawingId\n          })\n        }), /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsx(FormControllerTextField, {\n            disabled: false,\n            control: materialsForm.control,\n            label: \"Description #\",\n            required: true,\n            name: \"spec_id\"\n          })\n        }), /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsx(FormControllerTextField, {\n            disabled: false,\n            control: materialsForm.control,\n            label: \"Mass kg\",\n            required: true,\n            name: \"Mass\"\n          })\n        }), /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsx(FormControllerTextField, {\n            disabled: false,\n            control: materialsForm.control,\n            label: \"Unit #\",\n            name: \"spec_id\"\n          })\n        }), /*#__PURE__*/_jsx(When, {\n          condition: false,\n          children: /*#__PURE__*/_jsx(SectionTimezone, {\n            value: specificationDetail\n          })\n        })]\n      })\n    }), /*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsx(Paper, {\n        children: /*#__PURE__*/_jsx(DataTable, {\n          hideFooter: true,\n          disableSelectionOnClick: true,\n          disableColumnMenu: true,\n          tableHeight: 280,\n          rows: [],\n          columns: columns\n        })\n      })\n    })]\n  });\n};\n\nexport default TabGeneral;","map":null,"metadata":{},"sourceType":"module"}