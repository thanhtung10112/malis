{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Fersher\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\pages\\\\login.tsx\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm, Controller } from 'react-hook-form';\nimport useStyles from '@/styles/page/login';\nimport Head from 'next/head';\nimport { Avatar, Button, CssBaseline, TextField, FormControlLabel, Checkbox, Typography, Container, LinearProgress } from '@material-ui/core';\nimport { Lock as LockIcon } from '@material-ui/icons';\nimport { When } from 'react-if';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { commonStore, authStore } from '@/store/reducers';\n\nfunction Login() {\n  var _loginForm$errors$use, _loginForm$errors$pas;\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const authencationState = useSelector(authStore.selectState);\n  const messageState = useSelector(commonStore.selectMessageState);\n  const defaultData = {\n    user_id: '',\n    password: '',\n    remember: true\n  };\n  const validationSchema = yup.object({\n    user_id: yup.string().required('User is required'),\n    password: yup.string().required('Password is required')\n  });\n  const resolver = yupResolver(validationSchema);\n  const loginForm = useForm({\n    resolver,\n    shouldUnregister: false,\n    defaultValues: _objectSpread({}, defaultData)\n  });\n  useEffect(() => {\n    if (authencationState.access_token) {\n      loginForm.clearErrors();\n    }\n  }, [authencationState]);\n  const onLogin = loginForm.handleSubmit(data => {\n    dispatch(authStore.sagaLogin(data));\n    dispatch(commonStore.actions.setDisplayMessage(false));\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      className: classes.wrapLogin,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.loginForm,\n        role: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(When, {\n          condition: authencationState.loading,\n          children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n            className: classes.progress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.topIcon,\n          children: /*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          className: classes.loginTitle,\n          role: \"heading\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onLogin,\n          role: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(When, {\n            condition: messageState.display,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              role: \"alert\",\n              className: classes.error,\n              children: messageState.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            className: classes.textField,\n            label: \"Username\",\n            name: \"user_id\",\n            role: \"input\",\n            inputProps: {\n              'aria-label': 'user_id'\n            },\n            inputRef: loginForm.register,\n            error: Boolean(loginForm.errors.user_id),\n            helperText: (_loginForm$errors$use = loginForm.errors.user_id) === null || _loginForm$errors$use === void 0 ? void 0 : _loginForm$errors$use.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            type: \"password\",\n            className: classes.textField,\n            label: \"Password\",\n            name: \"password\",\n            role: \"input\",\n            inputProps: {\n              'aria-label': 'password'\n            },\n            error: Boolean(loginForm.errors.password),\n            helperText: (_loginForm$errors$pas = loginForm.errors.password) === null || _loginForm$errors$pas === void 0 ? void 0 : _loginForm$errors$pas.message,\n            inputRef: loginForm.register\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"remember\",\n            control: loginForm.control,\n            render: (_ref) => {\n              let {\n                onChange\n              } = _ref,\n                  props = _objectWithoutProperties(_ref, [\"onChange\"]);\n\n              const remember = loginForm.watch('remember');\n              return /*#__PURE__*/_jsxDEV(FormControlLabel, _objectSpread(_objectSpread({}, props), {}, {\n                className: classes.checkbox,\n                label: \"Remember\",\n                onChange: (_, checked) => {\n                  onChange(checked);\n                },\n                checked: remember,\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  inputProps: {\n                    'aria-label': 'remember'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 30\n                }, this)\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.wrapButton,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.submitButton,\n              disableElevation: true,\n              role: \"button\",\n              \"aria-pressed\": \"true\",\n              children: \"Sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport async function getServerSideProps(context) {\n  const {\n    req\n  } = context;\n  const {\n    token\n  } = req.cookies;\n\n  if (token) {\n    return {\n      redirect: {\n        destination: '/'\n      }\n    };\n  }\n\n  return {\n    props: {\n      namespacesRequired: ['common']\n    }\n  };\n}\nexport default Login;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/pages/login.tsx"],"names":["useEffect","useDispatch","useSelector","useForm","Controller","useStyles","Head","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Typography","Container","LinearProgress","Lock","LockIcon","When","yup","yupResolver","commonStore","authStore","Login","classes","dispatch","authencationState","selectState","messageState","selectMessageState","defaultData","user_id","password","remember","validationSchema","object","string","required","resolver","loginForm","shouldUnregister","defaultValues","access_token","clearErrors","onLogin","handleSubmit","data","sagaLogin","actions","setDisplayMessage","wrapLogin","loading","progress","topIcon","loginTitle","display","error","message","textField","register","Boolean","errors","control","onChange","props","watch","checkbox","_","checked","wrapButton","submitButton","getServerSideProps","context","req","token","cookies","redirect","destination","namespacesRequired"],"mappings":"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","sourcesContent":["import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useForm, Controller } from 'react-hook-form'\nimport useStyles from '@/styles/page/login'\n\nimport Head from 'next/head'\n\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Typography,\n  Container,\n  LinearProgress\n} from '@material-ui/core'\n\nimport { Lock as LockIcon } from '@material-ui/icons'\n\nimport { When } from 'react-if'\n\nimport * as yup from 'yup'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { commonStore, authStore } from '@/store/reducers'\n\nimport type { LoginData } from '@/types/Auth'\n\nfunction Login() {\n  const classes = useStyles()\n\n  const dispatch = useDispatch()\n  const authencationState = useSelector(authStore.selectState)\n  const messageState = useSelector(commonStore.selectMessageState)\n\n  const defaultData = {\n    user_id: '',\n    password: '',\n    remember: true\n  }\n\n  const validationSchema = yup.object({\n    user_id: yup.string().required('User is required'),\n    password: yup.string().required('Password is required')\n  })\n\n  const resolver = yupResolver<LoginData>(validationSchema)\n  const loginForm = useForm<LoginData>({\n    resolver,\n    shouldUnregister: false,\n    defaultValues: { ...defaultData }\n  })\n\n  useEffect(() => {\n    if (authencationState.access_token) {\n      loginForm.clearErrors()\n    }\n  }, [authencationState])\n\n  const onLogin = loginForm.handleSubmit((data) => {\n    dispatch(authStore.sagaLogin(data))\n    dispatch(commonStore.actions.setDisplayMessage(false))\n  })\n\n  return (\n    <>\n      <Head>\n        <title>Sign in</title>\n      </Head>\n      <Container component=\"main\" maxWidth=\"xs\" className={classes.wrapLogin}>\n        <CssBaseline />\n        <div className={classes.loginForm} role=\"login-form\">\n          <When condition={authencationState.loading}>\n            <LinearProgress className={classes.progress} />\n          </When>\n          <Avatar className={classes.topIcon}>\n            <LockIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\" className={classes.loginTitle} role=\"heading\">\n            Sign in\n          </Typography>\n          <form onSubmit={onLogin} role=\"form\">\n            <When condition={messageState.display}>\n              <div role=\"alert\" className={classes.error}>\n                {messageState.message}\n              </div>\n            </When>\n            <TextField\n              required\n              className={classes.textField}\n              label=\"Username\"\n              name=\"user_id\"\n              role=\"input\"\n              inputProps={{\n                'aria-label': 'user_id'\n              }}\n              inputRef={loginForm.register}\n              error={Boolean(loginForm.errors.user_id)}\n              helperText={loginForm.errors.user_id?.message}\n            />\n\n            <TextField\n              required\n              type=\"password\"\n              className={classes.textField}\n              label=\"Password\"\n              name=\"password\"\n              role=\"input\"\n              inputProps={{\n                'aria-label': 'password'\n              }}\n              error={Boolean(loginForm.errors.password)}\n              helperText={loginForm.errors.password?.message}\n              inputRef={loginForm.register}\n            />\n\n            <Controller\n              name=\"remember\"\n              control={loginForm.control}\n              render={({ onChange, ...props }) => {\n                const remember = loginForm.watch('remember')\n                return (\n                  <FormControlLabel\n                    {...props}\n                    className={classes.checkbox}\n                    label=\"Remember\"\n                    onChange={(_, checked) => {\n                      onChange(checked)\n                    }}\n                    checked={remember}\n                    control={<Checkbox inputProps={{ 'aria-label': 'remember' }} />}\n                  />\n                )\n              }}\n            />\n\n            <div className={classes.wrapButton}>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submitButton}\n                disableElevation\n                role=\"button\"\n                aria-pressed=\"true\"\n              >\n                Sign in\n              </Button>\n            </div>\n          </form>\n        </div>\n      </Container>\n    </>\n  )\n}\n\nexport async function getServerSideProps(context) {\n  const { req } = context\n  const { token } = req.cookies\n  if (token) {\n    return {\n      redirect: {\n        destination: '/'\n      }\n    }\n  }\n  return {\n    props: {\n      namespacesRequired: ['common']\n    }\n  }\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}