{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Tag\\\\TabGeneral.tsx\";\nimport { useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useStyles from './styles';\nimport useDialogContext from './Context/useDialogContext';\nimport useGetData from '@/hooks/useGetData';\nimport { Grid } from '@material-ui/core';\nimport { TableMultilingualDescription, AppAutocompleteAsync, FormControllerTextField, SectionTimezone, AppAutocomplete, FormControllerNumberField, useConfirm } from '@/components';\nimport { Unless } from 'react-if';\nimport _ from 'lodash';\nimport partApi from '@/apis/part.api';\nimport { commonStore } from '@/store/reducers';\nimport { StatusCode } from '@/utils/StatusCode';\n\nconst TabGeneral = () => {\n  var _tagForm$errors$job_i, _tagForm$errors$schem;\n\n  const classes = useStyles();\n  const {\n    confirm\n  } = useConfirm();\n  const {\n    getGeneratedCode\n  } = useGetData('elements');\n  const {\n    0: defaultPartList,\n    1: setDefaultPartList\n  } = useState([]);\n  const tagForm = useFormContext();\n  const watchSchematic = tagForm.watch('schematic_id', null);\n  const watchPartId = tagForm.watch('part_id', null);\n  const watchId = tagForm.watch('id', null);\n  const {\n    detail,\n    initData,\n    onChangeLoading\n  } = useDialogContext();\n  const {\n    parameters\n  } = initData;\n  const dispatch = useDispatch();\n  const userJob = useSelector(commonStore.selectUserValueJob);\n\n  const isCreating = _.isNil(detail.id);\n\n  console.log('ðŸš€ðŸš€ðŸŽ‰ðŸŽ‰ >>>>> name', name);\n\n  const handleChangeSchematicId = async (event, optionValue) => {\n    setDefaultPartList([]);\n    onChangeLoading(true);\n\n    try {\n      tagForm.setValue('schematic_id', optionValue);\n      const elementId = await getGeneratedCode({\n        drawing_id: optionValue.value\n      });\n      tagForm.setValue('element_id', elementId);\n    } catch (error) {\n      console.error('error', '>>>', error);\n    }\n\n    onChangeLoading(false);\n  };\n\n  const handleFormatElementId = event => {\n    const {\n      value\n    } = event.target;\n    const formatValue = value.padStart(4, '0');\n    tagForm.setValue('element_id', formatValue);\n  };\n\n  const getAdditionalDataPart = () => {\n    const data = {};\n    data.limit_to_job = userJob.value;\n\n    if (!_.isNil(watchSchematic)) {\n      data.excluded_drawings = [watchSchematic.value];\n    }\n\n    return data;\n  };\n\n  const additionalDataPart = getAdditionalDataPart();\n\n  const displayConfirmRefDialog = async message => {\n    await confirm({\n      title: 'Warning',\n      description: message,\n      buttons: [{\n        label: 'Ok',\n        action: 'OK'\n      }]\n    });\n  };\n\n  const getPart = async selectedPart => {\n    onChangeLoading(true);\n\n    try {\n      var _formData$schematic_i;\n\n      const formData = tagForm.getValues();\n      const reqPayload = {\n        selected_part: selectedPart.value,\n        selected_drawing: (_formData$schematic_i = formData.schematic_id) === null || _formData$schematic_i === void 0 ? void 0 : _formData$schematic_i.value,\n        current_item: formData.id || null\n      };\n      const {\n        part,\n        message\n      } = await partApi.getReferencedPart(reqPayload);\n      const partFormat = {\n        description: '',\n        entity_id: part.dpn,\n        value: part.id\n      };\n      tagForm.setValue('part_id', partFormat);\n      tagForm.setValue('descriptions', part.descriptions);\n\n      if (selectedPart.value !== part.id) {\n        displayConfirmRefDialog(message);\n      } else {\n        dispatch(commonStore.actions.setSuccessMessage(message));\n      }\n    } catch (error) {\n      const {\n        status,\n        data\n      } = error.response;\n\n      if (status === StatusCode.BAD_REQUEST) {\n        displayConfirmRefDialog(data.message);\n      }\n    }\n\n    onChangeLoading(false);\n  };\n\n  const handleSelectPart = (event, optionValue, reason) => {\n    if (reason === 'clear') {\n      tagForm.setValue('part_id', null);\n    } else {\n      getPart(optionValue);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          style: {\n            marginTop: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(AppAutocomplete, {\n            helperText: (_tagForm$errors$job_i = tagForm.errors.job_id) === null || _tagForm$errors$job_i === void 0 ? void 0 : _tagForm$errors$job_i.message,\n            error: Boolean(tagForm.errors.job_id),\n            value: userJob,\n            popupIcon: null,\n            disabled: true,\n            label: \"Job\",\n            required: true,\n            primaryKeyOption: \"value\",\n            options: [],\n            renderOption: option => option.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AppAutocompleteAsync, {\n            disabled: !isCreating,\n            helperText: (_tagForm$errors$schem = tagForm.errors.schematic_id) === null || _tagForm$errors$schem === void 0 ? void 0 : _tagForm$errors$schem.message,\n            error: Boolean(tagForm.errors.schematic_id),\n            value: watchSchematic,\n            compName: \"drawing_list\",\n            additionalData: {\n              limit_to_job: userJob.value\n            },\n            required: true,\n            label: \"Schematic #\",\n            onChange: handleChangeSchematicId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControllerNumberField, {\n            disabled: !isCreating,\n            fixedDecimalScale: false,\n            decimalScale: null,\n            thousandSeparator: \"\",\n            isNumericString: true,\n            control: tagForm.control,\n            label: \"Element #\",\n            required: true,\n            name: \"element_id\",\n            onBlur: handleFormatElementId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n            control: tagForm.control,\n            label: \"Tag #\",\n            name: \"tag\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AppAutocompleteAsync, {\n            disabled: !watchSchematic,\n            disableClearable: false,\n            value: watchPartId,\n            compName: \"part_list\",\n            additionalData: additionalDataPart,\n            label: \"Part #\",\n            onChange: handleSelectPart,\n            defaultOptions: defaultPartList,\n            filterOptions: options => {\n              if (_.isNil(options)) {\n                return [];\n              }\n\n              if (isCreating) {\n                return options;\n              }\n\n              return _.filter(options, option => option.value !== watchId);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(TableMultilingualDescription, {\n        languageList: parameters.PLLA,\n        editMode: !isCreating,\n        name: \"descriptions\",\n        tableHeight: 160,\n        control: tagForm.control,\n        copyable: true,\n        copyDialogProps: {\n          checkboxesToSelect: [{\n            label: 'Drawing',\n            value: 'drawing_list',\n            entity: 'drawings'\n          }, {\n            label: 'Item/Assembly',\n            value: 'part_list',\n            entity: 'parts'\n          }, {\n            label: 'Tag',\n            value: 'element_list',\n            entity: 'elements',\n            default: true\n          }]\n        },\n        disabled: Boolean(watchPartId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.tabGeneral__divider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n            control: tagForm.control,\n            label: \"Fluid\",\n            name: \"fluid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n            control: tagForm.control,\n            label: \"Tech. data\",\n            name: \"tech_data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Unless, {\n        condition: isCreating,\n        children: /*#__PURE__*/_jsxDEV(SectionTimezone, {\n          value: detail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(TableMultilingualDescription, {\n        languageList: parameters.PLLA,\n        editMode: !isCreating,\n        name: \"functions\",\n        tableHeight: 160,\n        control: tagForm.control,\n        copyable: true,\n        copyDialogProps: {\n          checkboxesToSelect: [{\n            label: 'Drawing',\n            value: 'drawing_list',\n            entity: 'drawings'\n          }, {\n            label: 'Item/Assembly',\n            value: 'part_list',\n            entity: 'parts'\n          }, {\n            label: 'Tag',\n            value: 'element_list',\n            entity: 'elements',\n            default: true\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\nexport default TabGeneral;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Tag/TabGeneral.tsx"],"names":["useState","useFormContext","useSelector","useDispatch","useStyles","useDialogContext","useGetData","Grid","TableMultilingualDescription","AppAutocompleteAsync","FormControllerTextField","SectionTimezone","AppAutocomplete","FormControllerNumberField","useConfirm","Unless","_","partApi","commonStore","StatusCode","TabGeneral","classes","confirm","getGeneratedCode","defaultPartList","setDefaultPartList","tagForm","watchSchematic","watch","watchPartId","watchId","detail","initData","onChangeLoading","parameters","dispatch","userJob","selectUserValueJob","isCreating","isNil","id","console","log","name","handleChangeSchematicId","event","optionValue","setValue","elementId","drawing_id","value","error","handleFormatElementId","target","formatValue","padStart","getAdditionalDataPart","data","limit_to_job","excluded_drawings","additionalDataPart","displayConfirmRefDialog","message","title","description","buttons","label","action","getPart","selectedPart","formData","getValues","reqPayload","selected_part","selected_drawing","schematic_id","current_item","part","getReferencedPart","partFormat","entity_id","dpn","descriptions","actions","setSuccessMessage","status","response","BAD_REQUEST","handleSelectPart","reason","marginTop","errors","job_id","Boolean","option","control","options","filter","PLLA","checkboxesToSelect","entity","default","tabGeneral__divider"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AAEA,SAASC,IAAT,QAAqB,mBAArB;AACA,SACEC,4BADF,EAEEC,oBAFF,EAGEC,uBAHF,EAIEC,eAJF,EAKEC,eALF,EAMEC,yBANF,EAOEC,UAPF,QAQO,cARP;AASA,SAASC,MAAT,QAAuB,UAAvB;AAEA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,oBAA3B;;AAMA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,OAAO,GAAGjB,SAAS,EAAzB;AACA,QAAM;AAAEkB,IAAAA;AAAF,MAAcR,UAAU,EAA9B;AACA,QAAM;AAAES,IAAAA;AAAF,MAAuBjB,UAAU,CAAC,UAAD,CAAvC;AAEA,QAAM;AAAA,OAACkB,eAAD;AAAA,OAAkBC;AAAlB,MAAwCzB,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAM0B,OAAO,GAAGzB,cAAc,EAA9B;AACA,QAAM0B,cAAc,GAAGD,OAAO,CAACE,KAAR,CAAc,cAAd,EAA8B,IAA9B,CAAvB;AACA,QAAMC,WAAW,GAAGH,OAAO,CAACE,KAAR,CAAc,SAAd,EAAyB,IAAzB,CAApB;AACA,QAAME,OAAO,GAAGJ,OAAO,CAACE,KAAR,CAAc,IAAd,EAAoB,IAApB,CAAhB;AAEA,QAAM;AAAEG,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA;AAApB,MAAwC5B,gBAAgB,EAA9D;AACA,QAAM;AAAE6B,IAAAA;AAAF,MAAiBF,QAAvB;AAEA,QAAMG,QAAQ,GAAGhC,WAAW,EAA5B;AACA,QAAMiC,OAAO,GAAGlC,WAAW,CAACgB,WAAW,CAACmB,kBAAb,CAA3B;;AAEA,QAAMC,UAAU,GAAGtB,CAAC,CAACuB,KAAF,CAAQR,MAAM,CAACS,EAAf,CAAnB;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCC,IAAnC;;AACA,QAAMC,uBAAuB,GAAG,OAAOC,KAAP,EAAcC,WAAd,KAA+C;AAC7ErB,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAQ,IAAAA,eAAe,CAAC,IAAD,CAAf;;AACA,QAAI;AACFP,MAAAA,OAAO,CAACqB,QAAR,CAAiB,cAAjB,EAAiCD,WAAjC;AACA,YAAME,SAAS,GAAG,MAAMzB,gBAAgB,CAAC;AAAE0B,QAAAA,UAAU,EAAEH,WAAW,CAACI;AAA1B,OAAD,CAAxC;AACAxB,MAAAA,OAAO,CAACqB,QAAR,CAAiB,YAAjB,EAA+BC,SAA/B;AACD,KAJD,CAIE,OAAOG,KAAP,EAAc;AACdV,MAAAA,OAAO,CAACU,KAAR,CAAc,OAAd,EAAuB,KAAvB,EAA8BA,KAA9B;AACD;;AACDlB,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAXD;;AAaA,QAAMmB,qBAAqB,GAAIP,KAAD,IAAW;AACvC,UAAM;AAAEK,MAAAA;AAAF,QAAYL,KAAK,CAACQ,MAAxB;AACA,UAAMC,WAAW,GAAGJ,KAAK,CAACK,QAAN,CAAe,CAAf,EAAkB,GAAlB,CAApB;AACA7B,IAAAA,OAAO,CAACqB,QAAR,CAAiB,YAAjB,EAA+BO,WAA/B;AACD,GAJD;;AAMA,QAAME,qBAAqB,GAAG,MAAM;AAClC,UAAMC,IAAI,GAAG,EAAb;AACAA,IAAAA,IAAI,CAACC,YAAL,GAAoBtB,OAAO,CAACc,KAA5B;;AACA,QAAI,CAAClC,CAAC,CAACuB,KAAF,CAAQZ,cAAR,CAAL,EAA8B;AAC5B8B,MAAAA,IAAI,CAACE,iBAAL,GAAyB,CAAEhC,cAAD,CAAoCuB,KAArC,CAAzB;AACD;;AACD,WAAOO,IAAP;AACD,GAPD;;AASA,QAAMG,kBAAkB,GAAGJ,qBAAqB,EAAhD;;AAEA,QAAMK,uBAAuB,GAAG,MAAOC,OAAP,IAA2B;AACzD,UAAMxC,OAAO,CAAC;AACZyC,MAAAA,KAAK,EAAE,SADK;AAEZC,MAAAA,WAAW,EAAEF,OAFD;AAGZG,MAAAA,OAAO,EAAE,CAAC;AAAEC,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,MAAM,EAAE;AAAvB,OAAD;AAHG,KAAD,CAAb;AAKD,GAND;;AAQA,QAAMC,OAAO,GAAG,MAAOC,YAAP,IAAyC;AACvDpC,IAAAA,eAAe,CAAC,IAAD,CAAf;;AACA,QAAI;AAAA;;AACF,YAAMqC,QAAQ,GAAG5C,OAAO,CAAC6C,SAAR,EAAjB;AACA,YAAMC,UAAU,GAAG;AACjBC,QAAAA,aAAa,EAAEJ,YAAY,CAACnB,KADX;AAEjBwB,QAAAA,gBAAgB,2BAAGJ,QAAQ,CAACK,YAAZ,0DAAE,sBAA4CzB,KAF7C;AAGjB0B,QAAAA,YAAY,EAAEN,QAAQ,CAAC9B,EAAT,IAAe;AAHZ,OAAnB;AAKA,YAAM;AAAEqC,QAAAA,IAAF;AAAQf,QAAAA;AAAR,UAAoB,MAAM7C,OAAO,CAAC6D,iBAAR,CAA0BN,UAA1B,CAAhC;AACA,YAAMO,UAA2B,GAAG;AAClCf,QAAAA,WAAW,EAAE,EADqB;AAElCgB,QAAAA,SAAS,EAAEH,IAAI,CAACI,GAFkB;AAGlC/B,QAAAA,KAAK,EAAE2B,IAAI,CAACrC;AAHsB,OAApC;AAKAd,MAAAA,OAAO,CAACqB,QAAR,CAAiB,SAAjB,EAA4BgC,UAA5B;AACArD,MAAAA,OAAO,CAACqB,QAAR,CAAiB,cAAjB,EAAiC8B,IAAI,CAACK,YAAtC;;AACA,UAAIb,YAAY,CAACnB,KAAb,KAAuB2B,IAAI,CAACrC,EAAhC,EAAoC;AAClCqB,QAAAA,uBAAuB,CAACC,OAAD,CAAvB;AACD,OAFD,MAEO;AACL3B,QAAAA,QAAQ,CAACjB,WAAW,CAACiE,OAAZ,CAAoBC,iBAApB,CAAsCtB,OAAtC,CAAD,CAAR;AACD;AACF,KApBD,CAoBE,OAAOX,KAAP,EAAc;AACd,YAAM;AAAEkC,QAAAA,MAAF;AAAU5B,QAAAA;AAAV,UAAmBN,KAAK,CAACmC,QAA/B;;AACA,UAAID,MAAM,KAAKlE,UAAU,CAACoE,WAA1B,EAAuC;AACrC1B,QAAAA,uBAAuB,CAACJ,IAAI,CAACK,OAAN,CAAvB;AACD;AACF;;AACD7B,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GA7BD;;AA+BA,QAAMuD,gBAAgB,GAAG,CAAC3C,KAAD,EAAQC,WAAR,EAAsC2C,MAAtC,KAA2E;AAClG,QAAIA,MAAM,KAAK,OAAf,EAAwB;AACtB/D,MAAAA,OAAO,CAACqB,QAAR,CAAiB,SAAjB,EAA4B,IAA5B;AACD,KAFD,MAEO;AACLqB,MAAAA,OAAO,CAACtB,WAAD,CAAP;AACD;AACF,GAND;;AAQA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,KAAK,EAAE;AAAE4C,YAAAA,SAAS,EAAE;AAAb,WAA1B;AAAA,iCACE,QAAC,eAAD;AACE,YAAA,UAAU,2BAAEhE,OAAO,CAACiE,MAAR,CAAeC,MAAjB,0DAAE,sBAAuB9B,OADrC;AAEE,YAAA,KAAK,EAAE+B,OAAO,CAACnE,OAAO,CAACiE,MAAR,CAAeC,MAAhB,CAFhB;AAGE,YAAA,KAAK,EAAExD,OAHT;AAIE,YAAA,SAAS,EAAE,IAJb;AAKE,YAAA,QAAQ,MALV;AAME,YAAA,KAAK,EAAC,KANR;AAOE,YAAA,QAAQ,MAPV;AAQE,YAAA,gBAAgB,EAAC,OARnB;AASE,YAAA,OAAO,EAAE,EATX;AAUE,YAAA,YAAY,EAAG0D,MAAD,IAAYA,MAAM,CAAC9B;AAVnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACE,QAAC,oBAAD;AACE,YAAA,QAAQ,EAAE,CAAC1B,UADb;AAEE,YAAA,UAAU,2BAAEZ,OAAO,CAACiE,MAAR,CAAehB,YAAjB,0DAAE,sBAA6Bb,OAF3C;AAGE,YAAA,KAAK,EAAE+B,OAAO,CAACnE,OAAO,CAACiE,MAAR,CAAehB,YAAhB,CAHhB;AAIE,YAAA,KAAK,EAAEhD,cAJT;AAKE,YAAA,QAAQ,EAAC,cALX;AAME,YAAA,cAAc,EAAE;AAAE+B,cAAAA,YAAY,EAAEtB,OAAO,CAACc;AAAxB,aANlB;AAOE,YAAA,QAAQ,MAPV;AAQE,YAAA,KAAK,EAAC,aARR;AASE,YAAA,QAAQ,EAAEN;AATZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAfF,eA6BE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACE,QAAC,yBAAD;AACE,YAAA,QAAQ,EAAE,CAACN,UADb;AAEE,YAAA,iBAAiB,EAAE,KAFrB;AAGE,YAAA,YAAY,EAAE,IAHhB;AAIE,YAAA,iBAAiB,EAAC,EAJpB;AAKE,YAAA,eAAe,MALjB;AAME,YAAA,OAAO,EAAEZ,OAAO,CAACqE,OANnB;AAOE,YAAA,KAAK,EAAC,WAPR;AAQE,YAAA,QAAQ,MARV;AASE,YAAA,IAAI,EAAC,YATP;AAUE,YAAA,MAAM,EAAE3C;AAVV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA7BF,eA4CE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACE,QAAC,uBAAD;AAAyB,YAAA,OAAO,EAAE1B,OAAO,CAACqE,OAA1C;AAAmD,YAAA,KAAK,EAAC,OAAzD;AAAiE,YAAA,IAAI,EAAC,KAAtE;AAA4E,YAAA,QAAQ;AAApF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA5CF,eAgDE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACE,QAAC,oBAAD;AACE,YAAA,QAAQ,EAAE,CAACpE,cADb;AAEE,YAAA,gBAAgB,EAAE,KAFpB;AAGE,YAAA,KAAK,EAAEE,WAHT;AAIE,YAAA,QAAQ,EAAC,WAJX;AAKE,YAAA,cAAc,EAAE+B,kBALlB;AAME,YAAA,KAAK,EAAC,QANR;AAOE,YAAA,QAAQ,EAAE4B,gBAPZ;AAQE,YAAA,cAAc,EAAEhE,eARlB;AASE,YAAA,aAAa,EAAGwE,OAAD,IAAa;AAC1B,kBAAIhF,CAAC,CAACuB,KAAF,CAAQyD,OAAR,CAAJ,EAAsB;AACpB,uBAAO,EAAP;AACD;;AACD,kBAAI1D,UAAJ,EAAgB;AACd,uBAAO0D,OAAP;AACD;;AACD,qBAAOhF,CAAC,CAACiF,MAAF,CAASD,OAAT,EAAmBF,MAAD,IAAYA,MAAM,CAAC5C,KAAP,KAAiBpB,OAA/C,CAAP;AACD;AAjBH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAhDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eA0EE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,6BACE,QAAC,4BAAD;AACE,QAAA,YAAY,EAAEI,UAAU,CAACgE,IAD3B;AAEE,QAAA,QAAQ,EAAE,CAAC5D,UAFb;AAGE,QAAA,IAAI,EAAC,cAHP;AAIE,QAAA,WAAW,EAAE,GAJf;AAKE,QAAA,OAAO,EAAEZ,OAAO,CAACqE,OALnB;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,eAAe,EAAE;AACfI,UAAAA,kBAAkB,EAAE,CAClB;AACEjC,YAAAA,KAAK,EAAE,SADT;AAEEhB,YAAAA,KAAK,EAAE,cAFT;AAGEkD,YAAAA,MAAM,EAAE;AAHV,WADkB,EAMlB;AACElC,YAAAA,KAAK,EAAE,eADT;AAEEhB,YAAAA,KAAK,EAAE,WAFT;AAGEkD,YAAAA,MAAM,EAAE;AAHV,WANkB,EAWlB;AACElC,YAAAA,KAAK,EAAE,KADT;AAEEhB,YAAAA,KAAK,EAAE,cAFT;AAGEkD,YAAAA,MAAM,EAAE,UAHV;AAIEC,YAAAA,OAAO,EAAE;AAJX,WAXkB;AADL,SAPnB;AA2BE,QAAA,QAAQ,EAAER,OAAO,CAAChE,WAAD;AA3BnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA1EF,eA0GE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAER,OAAO,CAACiF;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA1GF,eA8GE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACE,QAAC,uBAAD;AAAyB,YAAA,OAAO,EAAE5E,OAAO,CAACqE,OAA1C;AAAmD,YAAA,KAAK,EAAC,OAAzD;AAAiE,YAAA,IAAI,EAAC;AAAtE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACE,QAAC,uBAAD;AAAyB,YAAA,OAAO,EAAErE,OAAO,CAACqE,OAA1C;AAAmD,YAAA,KAAK,EAAC,YAAzD;AAAsE,YAAA,IAAI,EAAC;AAA3E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAEzD,UAAnB;AAAA,+BACE,QAAC,eAAD;AAAiB,UAAA,KAAK,EAAEP;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YA9GF,eA6HE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,6BACE,QAAC,4BAAD;AACE,QAAA,YAAY,EAAEG,UAAU,CAACgE,IAD3B;AAEE,QAAA,QAAQ,EAAE,CAAC5D,UAFb;AAGE,QAAA,IAAI,EAAC,WAHP;AAIE,QAAA,WAAW,EAAE,GAJf;AAKE,QAAA,OAAO,EAAEZ,OAAO,CAACqE,OALnB;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,eAAe,EAAE;AACfI,UAAAA,kBAAkB,EAAE,CAClB;AACEjC,YAAAA,KAAK,EAAE,SADT;AAEEhB,YAAAA,KAAK,EAAE,cAFT;AAGEkD,YAAAA,MAAM,EAAE;AAHV,WADkB,EAMlB;AACElC,YAAAA,KAAK,EAAE,eADT;AAEEhB,YAAAA,KAAK,EAAE,WAFT;AAGEkD,YAAAA,MAAM,EAAE;AAHV,WANkB,EAWlB;AACElC,YAAAA,KAAK,EAAE,KADT;AAEEhB,YAAAA,KAAK,EAAE,cAFT;AAGEkD,YAAAA,MAAM,EAAE,UAHV;AAIEC,YAAAA,OAAO,EAAE;AAJX,WAXkB;AADL;AAPnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA7HF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8JD,CAhQD;;AAkQA,eAAejF,UAAf","sourcesContent":["import { useState } from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useStyles from './styles'\nimport useDialogContext from './Context/useDialogContext'\nimport useGetData from '@/hooks/useGetData'\n\nimport { Grid } from '@material-ui/core'\nimport {\n  TableMultilingualDescription,\n  AppAutocompleteAsync,\n  FormControllerTextField,\n  SectionTimezone,\n  AppAutocomplete,\n  FormControllerNumberField,\n  useConfirm\n} from '@/components'\nimport { Unless } from 'react-if'\n\nimport _ from 'lodash'\nimport partApi from '@/apis/part.api'\nimport { commonStore } from '@/store/reducers'\nimport { StatusCode } from '@/utils/StatusCode'\n\nimport type { AutocompleteChangeReason } from '@material-ui/lab'\nimport type { TagDetail } from '@/types/Tag'\nimport type { DataForDropdown } from '@/types/Common'\n\nconst TabGeneral = () => {\n  const classes = useStyles()\n  const { confirm } = useConfirm()\n  const { getGeneratedCode } = useGetData('elements')\n\n  const [defaultPartList, setDefaultPartList] = useState([])\n\n  const tagForm = useFormContext<TagDetail>()\n  const watchSchematic = tagForm.watch('schematic_id', null) as DataForDropdown\n  const watchPartId = tagForm.watch('part_id', null) as DataForDropdown\n  const watchId = tagForm.watch('id', null)\n\n  const { detail, initData, onChangeLoading } = useDialogContext()\n  const { parameters } = initData\n\n  const dispatch = useDispatch()\n  const userJob = useSelector(commonStore.selectUserValueJob)\n\n  const isCreating = _.isNil(detail.id)\n\n  console.log('ðŸš€ðŸš€ðŸŽ‰ðŸŽ‰ >>>>> name', name)\n  const handleChangeSchematicId = async (event, optionValue: DataForDropdown) => {\n    setDefaultPartList([])\n    onChangeLoading(true)\n    try {\n      tagForm.setValue('schematic_id', optionValue)\n      const elementId = await getGeneratedCode({ drawing_id: optionValue.value })\n      tagForm.setValue('element_id', elementId)\n    } catch (error) {\n      console.error('error', '>>>', error)\n    }\n    onChangeLoading(false)\n  }\n\n  const handleFormatElementId = (event) => {\n    const { value } = event.target\n    const formatValue = value.padStart(4, '0')\n    tagForm.setValue('element_id', formatValue)\n  }\n\n  const getAdditionalDataPart = () => {\n    const data = {} as any\n    data.limit_to_job = userJob.value\n    if (!_.isNil(watchSchematic)) {\n      data.excluded_drawings = [(watchSchematic as DataForDropdown).value]\n    }\n    return data\n  }\n\n  const additionalDataPart = getAdditionalDataPart()\n\n  const displayConfirmRefDialog = async (message: string) => {\n    await confirm({\n      title: 'Warning',\n      description: message,\n      buttons: [{ label: 'Ok', action: 'OK' }]\n    })\n  }\n\n  const getPart = async (selectedPart: DataForDropdown) => {\n    onChangeLoading(true)\n    try {\n      const formData = tagForm.getValues()\n      const reqPayload = {\n        selected_part: selectedPart.value,\n        selected_drawing: (formData.schematic_id as DataForDropdown)?.value,\n        current_item: formData.id || null\n      }\n      const { part, message } = await partApi.getReferencedPart(reqPayload)\n      const partFormat: DataForDropdown = {\n        description: '',\n        entity_id: part.dpn,\n        value: part.id\n      }\n      tagForm.setValue('part_id', partFormat)\n      tagForm.setValue('descriptions', part.descriptions)\n      if (selectedPart.value !== part.id) {\n        displayConfirmRefDialog(message)\n      } else {\n        dispatch(commonStore.actions.setSuccessMessage(message))\n      }\n    } catch (error) {\n      const { status, data } = error.response\n      if (status === StatusCode.BAD_REQUEST) {\n        displayConfirmRefDialog(data.message)\n      }\n    }\n    onChangeLoading(false)\n  }\n\n  const handleSelectPart = (event, optionValue: DataForDropdown, reason: AutocompleteChangeReason) => {\n    if (reason === 'clear') {\n      tagForm.setValue('part_id', null)\n    } else {\n      getPart(optionValue)\n    }\n  }\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={6}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} style={{ marginTop: 8 }}>\n            <AppAutocomplete\n              helperText={tagForm.errors.job_id?.message}\n              error={Boolean(tagForm.errors.job_id)}\n              value={userJob}\n              popupIcon={null}\n              disabled\n              label=\"Job\"\n              required\n              primaryKeyOption=\"value\"\n              options={[]}\n              renderOption={(option) => option.description}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <AppAutocompleteAsync\n              disabled={!isCreating}\n              helperText={tagForm.errors.schematic_id?.message}\n              error={Boolean(tagForm.errors.schematic_id)}\n              value={watchSchematic}\n              compName=\"drawing_list\"\n              additionalData={{ limit_to_job: userJob.value }}\n              required\n              label=\"Schematic #\"\n              onChange={handleChangeSchematicId}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <FormControllerNumberField\n              disabled={!isCreating}\n              fixedDecimalScale={false}\n              decimalScale={null}\n              thousandSeparator=\"\"\n              isNumericString\n              control={tagForm.control}\n              label=\"Element #\"\n              required\n              name=\"element_id\"\n              onBlur={handleFormatElementId}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <FormControllerTextField control={tagForm.control} label=\"Tag #\" name=\"tag\" required />\n          </Grid>\n\n          <Grid item xs={12}>\n            <AppAutocompleteAsync\n              disabled={!watchSchematic}\n              disableClearable={false}\n              value={watchPartId}\n              compName=\"part_list\"\n              additionalData={additionalDataPart}\n              label=\"Part #\"\n              onChange={handleSelectPart}\n              defaultOptions={defaultPartList}\n              filterOptions={(options) => {\n                if (_.isNil(options)) {\n                  return []\n                }\n                if (isCreating) {\n                  return options\n                }\n                return _.filter(options, (option) => option.value !== watchId)\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Grid item xs={6}>\n        <TableMultilingualDescription\n          languageList={parameters.PLLA}\n          editMode={!isCreating}\n          name=\"descriptions\"\n          tableHeight={160}\n          control={tagForm.control}\n          copyable\n          copyDialogProps={{\n            checkboxesToSelect: [\n              {\n                label: 'Drawing',\n                value: 'drawing_list',\n                entity: 'drawings'\n              },\n              {\n                label: 'Item/Assembly',\n                value: 'part_list',\n                entity: 'parts'\n              },\n              {\n                label: 'Tag',\n                value: 'element_list',\n                entity: 'elements',\n                default: true\n              }\n            ]\n          }}\n          disabled={Boolean(watchPartId)}\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        <div className={classes.tabGeneral__divider} />\n      </Grid>\n\n      <Grid item xs={6}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <FormControllerTextField control={tagForm.control} label=\"Fluid\" name=\"fluid\" />\n          </Grid>\n          <Grid item xs={12}>\n            <FormControllerTextField control={tagForm.control} label=\"Tech. data\" name=\"tech_data\" />\n          </Grid>\n        </Grid>\n\n        <Unless condition={isCreating}>\n          <SectionTimezone value={detail} />\n        </Unless>\n      </Grid>\n\n      <Grid item xs={6}>\n        <TableMultilingualDescription\n          languageList={parameters.PLLA}\n          editMode={!isCreating}\n          name=\"functions\"\n          tableHeight={160}\n          control={tagForm.control}\n          copyable\n          copyDialogProps={{\n            checkboxesToSelect: [\n              {\n                label: 'Drawing',\n                value: 'drawing_list',\n                entity: 'drawings'\n              },\n              {\n                label: 'Item/Assembly',\n                value: 'part_list',\n                entity: 'parts'\n              },\n              {\n                label: 'Tag',\n                value: 'element_list',\n                entity: 'elements',\n                default: true\n              }\n            ]\n          }}\n        />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default TabGeneral\n"]},"metadata":{},"sourceType":"module"}