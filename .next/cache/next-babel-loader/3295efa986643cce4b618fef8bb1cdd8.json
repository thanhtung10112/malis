{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createSlice, createAction } from '@reduxjs/toolkit';\nexport const name = 'advancedFilter';\nexport const resetState = createAction(name + '/RESET_STATE');\nexport const initialState = {\n  isOpen: false,\n  isEditMode: false,\n  isOpenFilterDetail: false,\n  isExpanedSection: false,\n  permissions: {\n    update_system_default_presets: false\n  },\n  systemPreset: {\n    id: null,\n    name: ''\n  },\n  defaultFilter: {\n    id: null,\n    name: '',\n    entity: '',\n    is_system_default: false,\n    where_conditions: null,\n    sort_conditions: null\n  },\n  filterPresetList: [],\n  filterType: 'own',\n  initData: {\n    columns: [],\n    comparators: [],\n    sortOptions: [],\n    logicalOperators: []\n  },\n  filterDetail: {\n    name: '',\n    entity: '',\n    is_shared: false,\n    is_system_default: false,\n    is_user_default: false,\n    sort_conditions: null,\n    where_conditions: null\n  },\n  saveAsForm: {\n    open: false,\n    clearError: false,\n    error: ''\n  },\n  afForm: {\n    clearError: false,\n    error: ''\n  },\n  loading: {\n    table: false,\n    dialog: false,\n    section: false\n  }\n};\nconst advancedFilter = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setOpenAdvanceSearch(state, action) {\n      state.isOpen = action.payload;\n    },\n\n    setDefaultFilter(state, action) {\n      state.defaultFilter = _objectSpread(_objectSpread({}, state.defaultFilter), action.payload);\n    },\n\n    setFilterPresetList(state, action) {\n      state.filterPresetList = action.payload;\n    },\n\n    setFilterType(state, action) {\n      state.filterType = action.payload;\n    },\n\n    setOpenFilterDetail(state, action) {\n      state.isOpenFilterDetail = action.payload;\n    },\n\n    setEditMode(state, action) {\n      state.isEditMode = action.payload;\n    },\n\n    setInitData(state, action) {\n      state.initData = action.payload;\n    },\n\n    setFilterDetail(state, action) {\n      state.filterDetail = _objectSpread(_objectSpread({}, state.filterDetail), action.payload);\n    },\n\n    setExpandedSection(state, action) {\n      state.isExpanedSection = action.payload;\n    },\n\n    setPermissions(state, action) {\n      state.permissions = action.payload;\n    },\n\n    setSystemPreset(state, action) {\n      state.systemPreset = action.payload;\n    },\n\n    setSaveAsForm(state, action) {\n      state.saveAsForm = _objectSpread(_objectSpread({}, state.saveAsForm), action.payload);\n    },\n\n    setAfForm(state, action) {\n      state.afForm = _objectSpread(_objectSpread({}, state.afForm), action.payload);\n    },\n\n    setLoadingTable(state, action) {\n      state.loading.table = action.payload;\n    },\n\n    setLoadingDialog(state, action) {\n      state.loading.dialog = action.payload;\n    },\n\n    setLoadingSection(state, {\n      payload\n    }) {\n      state.loading.section = payload;\n    },\n\n    resetFilterDetail(state, {\n      payload\n    }) {\n      state.filterDetail = {\n        name: '',\n        entity: payload,\n        is_shared: false,\n        is_system_default: false,\n        is_user_default: false,\n        sort_conditions: [],\n        where_conditions: {\n          conjunction: 'AND',\n          type: 'group',\n          conditions: []\n        }\n      };\n    }\n\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState;\n    }\n\n  }\n});\nexport const create = createAction(name + '/CREATE');\nexport const getList = createAction(name + '/GET_LIST');\nexport const clearDefaultFilter = createAction(name + '/CLEAR_DEFAULT_FILTER');\nexport const getDefaultFilter = createAction(name + '/GET_DEFAULT_FILTER');\nexport const changeFilterType = createAction(name + '/CHANGE_FILTER_TYPE');\nexport const open = createAction(name + '/OPEN');\nexport const apply = createAction(name + '/APPLY');\nexport const close = createAction(name + '/CLOSE');\nexport const remove = createAction(name + '/REMOVE');\nexport const getDetail = createAction(name + '/GET_DETAIL');\nexport const update = createAction(name + '/UPDATE');\nexport const share = createAction(name + '/SHARE');\nexport const saveAs = createAction(name + '/SAVE_AS');\nexport const {\n  setOpenAdvanceSearch,\n  setDefaultFilter,\n  setFilterPresetList,\n  setFilterType,\n  setOpenFilterDetail,\n  setEditMode,\n  setInitData,\n  setFilterDetail,\n  setExpandedSection,\n  resetFilterDetail,\n  setPermissions,\n  setSystemPreset,\n  setSaveAsForm,\n  setAfForm,\n  setLoadingDialog,\n  setLoadingTable,\n  setLoadingSection\n} = advancedFilter.actions; // Selector\n\nexport const advanceSearchSelector = state => state.advancedFilter;\nexport const selectEditMode = state => state.advancedFilter.isEditMode;\nexport const selectDefaultFilter = state => state.advancedFilter.defaultFilter;\nexport const selectFilterType = state => state.advancedFilter.filterType;\nexport const selectIsExpanedSection = state => state.advancedFilter.isExpanedSection;\nexport const selectColumn = state => state.advancedFilter.initData.columns;\nexport const selectComparator = state => state.advancedFilter.initData.comparators;\nexport const selectSortOptions = state => state.advancedFilter.initData.sortOptions;\nexport const selectFilterDetail = state => state.advancedFilter.filterDetail;\nexport const selectConditionTree = state => state.advancedFilter.filterDetail.where_conditions;\nexport const selectSortConditions = state => state.advancedFilter.filterDetail.sort_conditions;\nexport const selectUserDefault = state => state.advancedFilter.filterDetail.is_user_default;\nexport const selectFilterDetailName = state => state.advancedFilter.filterDetail.name;\nexport const selectListData = state => state.advancedFilter.filterPresetList;\nexport const selectPermissions = state => state.advancedFilter.permissions;\nexport const selectSystemPreset = state => state.advancedFilter.systemPreset;\nexport const selectOpenAdvanceSearch = state => state.advancedFilter.isOpen;\nexport const selectAfForm = state => state.advancedFilter.afForm;\nexport const selectSaveAsForm = state => state.advancedFilter.saveAsForm;\nexport const selectLoading = state => state.advancedFilter.loading;\nexport const selectFilterData = state => {\n  const {\n    where_conditions: whereConditions,\n    sort_conditions: sortConditions\n  } = state.advancedFilter.defaultFilter;\n  const where_conditions = whereConditions ? JSON.stringify(whereConditions) : null;\n  const sort_conditions = sortConditions ? JSON.stringify(sortConditions) : null;\n  return {\n    where_conditions,\n    sort_conditions\n  };\n};\nexport default advancedFilter.reducer;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/store/reducers/advancedFilter.ts"],"names":["createSlice","createAction","name","resetState","initialState","isOpen","isEditMode","isOpenFilterDetail","isExpanedSection","permissions","update_system_default_presets","systemPreset","id","defaultFilter","entity","is_system_default","where_conditions","sort_conditions","filterPresetList","filterType","initData","columns","comparators","sortOptions","logicalOperators","filterDetail","is_shared","is_user_default","saveAsForm","open","clearError","error","afForm","loading","table","dialog","section","advancedFilter","reducers","setOpenAdvanceSearch","state","action","payload","setDefaultFilter","setFilterPresetList","setFilterType","setOpenFilterDetail","setEditMode","setInitData","setFilterDetail","setExpandedSection","setPermissions","setSystemPreset","setSaveAsForm","setAfForm","setLoadingTable","setLoadingDialog","setLoadingSection","resetFilterDetail","conjunction","type","conditions","extraReducers","create","getList","clearDefaultFilter","getDefaultFilter","changeFilterType","apply","close","remove","getDetail","update","share","saveAs","actions","advanceSearchSelector","selectEditMode","selectDefaultFilter","selectFilterType","selectIsExpanedSection","selectColumn","selectComparator","selectSortOptions","selectFilterDetail","selectConditionTree","selectSortConditions","selectUserDefault","selectFilterDetailName","selectListData","selectPermissions","selectSystemPreset","selectOpenAdvanceSearch","selectAfForm","selectSaveAsForm","selectLoading","selectFilterData","whereConditions","sortConditions","JSON","stringify","reducer"],"mappings":"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","sourcesContent":["import { createSlice, createAction, PayloadAction } from '@reduxjs/toolkit'\n\nimport type { RootReducerType } from './rootReducer'\nimport type { Entity, FilterType } from '@/types/Common'\nimport type {\n  AdvancedFilterPermission,\n  AdvancedFilter,\n  AdvancedFilterParameter,\n  SystemFilter\n} from '@/types/AdvancedFilter'\n\nexport const name = 'advancedFilter'\n\nexport const resetState = createAction(name + '/RESET_STATE')\n\nexport const initialState = {\n  isOpen: false,\n  isEditMode: false,\n  isOpenFilterDetail: false,\n  isExpanedSection: false,\n  permissions: {\n    update_system_default_presets: false\n  } as AdvancedFilterPermission,\n  systemPreset: {\n    id: null,\n    name: ''\n  } as SystemFilter,\n  defaultFilter: {\n    id: null,\n    name: '',\n    entity: '',\n    is_system_default: false,\n    where_conditions: null,\n    sort_conditions: null\n  } as AdvancedFilter,\n  filterPresetList: [] as AdvancedFilter[],\n  filterType: 'own' as FilterType,\n  initData: {\n    columns: [],\n    comparators: [],\n    sortOptions: [],\n    logicalOperators: []\n  } as AdvancedFilterParameter,\n  filterDetail: {\n    name: '',\n    entity: '',\n    is_shared: false,\n    is_system_default: false,\n    is_user_default: false,\n    sort_conditions: null,\n    where_conditions: null\n  } as AdvancedFilter,\n  saveAsForm: {\n    open: false,\n    clearError: false,\n    error: ''\n  },\n  afForm: {\n    clearError: false,\n    error: ''\n  },\n  loading: {\n    table: false,\n    dialog: false,\n    section: false\n  }\n}\n\nconst advancedFilter = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setOpenAdvanceSearch(state, action: PayloadAction<boolean>) {\n      state.isOpen = action.payload\n    },\n    setDefaultFilter(state, action: PayloadAction<Partial<AdvancedFilter>>) {\n      state.defaultFilter = {\n        ...state.defaultFilter,\n        ...action.payload\n      }\n    },\n    setFilterPresetList(state, action: PayloadAction<AdvancedFilter[]>) {\n      state.filterPresetList = action.payload\n    },\n    setFilterType(state, action: PayloadAction<FilterType>) {\n      state.filterType = action.payload\n    },\n    setOpenFilterDetail(state, action: PayloadAction<boolean>) {\n      state.isOpenFilterDetail = action.payload\n    },\n    setEditMode(state, action: PayloadAction<boolean>) {\n      state.isEditMode = action.payload\n    },\n    setInitData(state, action: PayloadAction<AdvancedFilterParameter>) {\n      state.initData = action.payload\n    },\n    setFilterDetail(state, action: PayloadAction<Partial<AdvancedFilter>>) {\n      state.filterDetail = {\n        ...state.filterDetail,\n        ...action.payload\n      }\n    },\n    setExpandedSection(state, action: PayloadAction<boolean>) {\n      state.isExpanedSection = action.payload\n    },\n    setPermissions(state, action: PayloadAction<AdvancedFilterPermission>) {\n      state.permissions = action.payload\n    },\n    setSystemPreset(state, action: PayloadAction<SystemFilter>) {\n      state.systemPreset = action.payload\n    },\n    setSaveAsForm(state, action: PayloadAction<Partial<typeof initialState.saveAsForm>>) {\n      state.saveAsForm = {\n        ...state.saveAsForm,\n        ...action.payload\n      }\n    },\n    setAfForm(state, action: PayloadAction<Partial<typeof initialState.afForm>>) {\n      state.afForm = {\n        ...state.afForm,\n        ...action.payload\n      }\n    },\n    setLoadingTable(state, action: PayloadAction<boolean>) {\n      state.loading.table = action.payload\n    },\n    setLoadingDialog(state, action: PayloadAction<boolean>) {\n      state.loading.dialog = action.payload\n    },\n    setLoadingSection(state, { payload }: PayloadAction<boolean>) {\n      state.loading.section = payload\n    },\n    resetFilterDetail(state, { payload }: PayloadAction<Entity>) {\n      state.filterDetail = {\n        name: '',\n        entity: payload,\n        is_shared: false,\n        is_system_default: false,\n        is_user_default: false,\n        sort_conditions: [],\n        where_conditions: {\n          conjunction: 'AND',\n          type: 'group',\n          conditions: []\n        }\n      }\n    }\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState\n    }\n  }\n})\n\nexport const create = createAction(name + '/CREATE')\nexport const getList = createAction(name + '/GET_LIST')\nexport const clearDefaultFilter = createAction(name + '/CLEAR_DEFAULT_FILTER')\nexport const getDefaultFilter = createAction(name + '/GET_DEFAULT_FILTER')\nexport const changeFilterType = createAction<FilterType>(name + '/CHANGE_FILTER_TYPE')\nexport const open = createAction(name + '/OPEN')\nexport const apply = createAction(name + '/APPLY')\nexport const close = createAction(name + '/CLOSE')\nexport const remove = createAction(name + '/REMOVE')\nexport const getDetail = createAction<number>(name + '/GET_DETAIL')\nexport const update = createAction(name + '/UPDATE')\nexport const share = createAction<{ id: number; is_shared: boolean }>(name + '/SHARE')\nexport const saveAs = createAction<string>(name + '/SAVE_AS')\n\nexport const {\n  setOpenAdvanceSearch,\n  setDefaultFilter,\n  setFilterPresetList,\n  setFilterType,\n  setOpenFilterDetail,\n  setEditMode,\n  setInitData,\n  setFilterDetail,\n  setExpandedSection,\n  resetFilterDetail,\n  setPermissions,\n  setSystemPreset,\n  setSaveAsForm,\n  setAfForm,\n  setLoadingDialog,\n  setLoadingTable,\n  setLoadingSection\n} = advancedFilter.actions\n\n// Selector\nexport const advanceSearchSelector = (state: RootReducerType) => state.advancedFilter\n\nexport const selectEditMode = (state: RootReducerType) => state.advancedFilter.isEditMode\n\nexport const selectDefaultFilter = (state: RootReducerType) => state.advancedFilter.defaultFilter\n\nexport const selectFilterType = (state: RootReducerType) => state.advancedFilter.filterType\n\nexport const selectIsExpanedSection = (state: RootReducerType) => state.advancedFilter.isExpanedSection\n\nexport const selectColumn = (state: RootReducerType) => state.advancedFilter.initData.columns\nexport const selectComparator = (state: RootReducerType) => state.advancedFilter.initData.comparators\nexport const selectSortOptions = (state: RootReducerType) => state.advancedFilter.initData.sortOptions\n\nexport const selectFilterDetail = (state: RootReducerType) => state.advancedFilter.filterDetail\nexport const selectConditionTree = (state: RootReducerType) => state.advancedFilter.filterDetail.where_conditions\nexport const selectSortConditions = (state: RootReducerType) => state.advancedFilter.filterDetail.sort_conditions\nexport const selectUserDefault = (state: RootReducerType) => state.advancedFilter.filterDetail.is_user_default\nexport const selectFilterDetailName = (state: RootReducerType) => state.advancedFilter.filterDetail.name\nexport const selectListData = (state: RootReducerType) => state.advancedFilter.filterPresetList\n\nexport const selectPermissions = (state: RootReducerType) => state.advancedFilter.permissions\n\nexport const selectSystemPreset = (state: RootReducerType) => state.advancedFilter.systemPreset\n\nexport const selectOpenAdvanceSearch = (state: RootReducerType) => state.advancedFilter.isOpen\n\nexport const selectAfForm = (state: RootReducerType) => state.advancedFilter.afForm\nexport const selectSaveAsForm = (state: RootReducerType) => state.advancedFilter.saveAsForm\nexport const selectLoading = (state: RootReducerType) => state.advancedFilter.loading\nexport const selectFilterData = (state: RootReducerType) => {\n  const { where_conditions: whereConditions, sort_conditions: sortConditions } = state.advancedFilter.defaultFilter\n  const where_conditions = whereConditions ? JSON.stringify(whereConditions) : null\n  const sort_conditions = sortConditions ? JSON.stringify(sortConditions) : null\n  return { where_conditions, sort_conditions }\n}\n\nexport default advancedFilter.reducer\n"]},"metadata":{},"sourceType":"module"}