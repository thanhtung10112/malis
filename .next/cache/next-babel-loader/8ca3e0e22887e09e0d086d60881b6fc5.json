{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Grid } from '@material-ui/core';\nimport { DialogMain, FormControllerTextField } from '@/components';\nimport { useEffect, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { useTranslation } from 'next-i18next';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { drawingStore } from '@/store/reducers';\n\nconst DialogRevision = () => {\n  const {\n    t\n  } = useTranslation('drawing');\n  const validationSchema = useMemo(() => yup.object({\n    new_revision: yup.string().required(t('validation_message.new_revision_required')).matches(/^[A-Z0-9]{1,8}$/, t('validation_message.new_revision_matches')),\n    description: yup.string().required(t('validation_message.description_required'))\n  }), []);\n  const revisionForm = useForm({\n    shouldUnregister: false,\n    resolver: yupResolver(validationSchema)\n  });\n  const dispatch = useDispatch();\n  const {\n    open,\n    loading,\n    detail: revisionDetail\n  } = useSelector(drawingStore.selectRevisionDialog);\n  const drawingDetail = useSelector(drawingStore.selectDetail);\n  useEffect(() => {\n    if (!open) {\n      dispatch(drawingStore.actions.resetRevisionDialogDetail());\n    }\n  }, [open]);\n  useEffect(() => {\n    revisionForm.reset(revisionDetail);\n  }, [revisionDetail]);\n  const handleSaveRevision = revisionForm.handleSubmit(formData => {\n    dispatch(drawingStore.sagaSaveNewRev({\n      revision: formData,\n      drawingId: drawingDetail.id\n    }));\n  });\n\n  const handleClose = () => {\n    dispatch(drawingStore.actions.setRevisionDialogOpen(false));\n  };\n\n  return /*#__PURE__*/_jsx(DialogMain, {\n    open: open,\n    loading: loading,\n    fullWidth: true,\n    title: t('form.title.save_as_revision'),\n    maxWidth: \"sm\",\n    okText: t('common:button.save'),\n    onOk: handleSaveRevision,\n    onClose: handleClose,\n    children: /*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      spacing: 2,\n      style: {\n        marginTop: 4\n      },\n      children: [/*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsx(FormControllerTextField, {\n          name: \"new_revision\",\n          label: \"New revision\",\n          required: true,\n          control: revisionForm.control\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsx(FormControllerTextField, {\n          name: \"reason\",\n          label: \"Reason of Change(internal)\",\n          control: revisionForm.control,\n          multiline: true,\n          rows: 10\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsx(FormControllerTextField, {\n          name: \"description\",\n          label: \"Description(external)\",\n          required: true,\n          control: revisionForm.control\n        })\n      })]\n    })\n  });\n};\n\nexport default DialogRevision;","map":null,"metadata":{},"sourceType":"module"}