{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchGenerateCode),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(openPartCreateDialog),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(changePartDrawing),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(getPartRefItem),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(createPart),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(fetchPartDetail),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(openPartUpdateDialog),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(updatePart),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(closePartDialog),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(itemSelectEquiv),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(openManuDialog),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(createManu),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(closeManuDialog),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(getManuId),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(getItemCopy),\n    _marked16 = /*#__PURE__*/_regeneratorRuntime.mark(getDrawingItems),\n    _marked17 = /*#__PURE__*/_regeneratorRuntime.mark(partSaga);\n\nimport { takeLatest, call, put, putResolve, takeEvery } from 'redux-saga/effects';\nimport { select, all } from 'typed-redux-saga';\nimport { createAction } from '@reduxjs/toolkit';\nimport _ from 'lodash';\nimport { partStore, commonStore, drawingStore } from '@/store/reducers';\nimport * as errorSaga from '@/store/saga/errorSaga';\nimport { StatusCode } from '@/utils/StatusCode';\nimport { getDefaultValues } from '@/utils/getDefaultValues';\nimport { actionTypes } from '@/utils/constant';\nimport { isAssemblyByDpn } from '@/utils/isAssembly';\nimport itemApi from '@/apis/item.api';\nimport assemblyApi from '@/apis/assembly.api';\nimport partRefApi from '@/apis/part.api';\nimport equivalenceApi from '@/apis/equivalence.api';\nimport manufacturerApi from '@/apis/manufacturer.api';\nimport drawingApi from '@/apis/drawing.api';\n\nvar getPartApi = function getPartApi(entity) {\n  return entity === 'item' ? itemApi : assemblyApi;\n};\n\nfunction fetchGenerateCode(entity, drawing) {\n  var partApi, _yield$call, generated_code;\n\n  return _regeneratorRuntime.wrap(function fetchGenerateCode$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          partApi = getPartApi(entity);\n          _context.next = 3;\n          return call(partApi.getGenerateCode, drawing.value);\n\n        case 3:\n          _yield$call = _context.sent;\n          generated_code = _yield$call.generated_code;\n          return _context.abrupt(\"return\", generated_code);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction openPartCreateDialog(_ref) {\n  var payload, partApi, _yield$all, userJob, userDrawing, initDetail, _yield$call2, permissions, wiki_page, initData, defaultValues;\n\n  return _regeneratorRuntime.wrap(function openPartCreateDialog$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          payload = _ref.payload;\n          _context2.next = 3;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 3:\n          _context2.prev = 3;\n          partApi = getPartApi(payload);\n          return _context2.delegateYield(all({\n            userJob: select(commonStore.selectUserValueJob),\n            userDrawing: select(commonStore.selectUserValueDrawing)\n          }), \"t0\", 6);\n\n        case 6:\n          _yield$all = _context2.t0;\n          userJob = _yield$all.userJob;\n          userDrawing = _yield$all.userDrawing;\n          initDetail = payload === 'item' ? partStore.itemDetail : partStore.assemblyDetail;\n          _context2.next = 12;\n          return call(partApi.getInitDataForCE, {\n            job_id_pk: userJob.value\n          });\n\n        case 12:\n          _yield$call2 = _context2.sent;\n          permissions = _yield$call2.permissions;\n          wiki_page = _yield$call2.wiki_page;\n          initData = _objectWithoutProperties(_yield$call2, [\"permissions\", \"wiki_page\"]);\n          defaultValues = getDefaultValues(initData.parameters, {\n            unit: 'UNIT'\n          }, initDetail);\n          defaultValues.drawing_id = userDrawing.value < 0 ? null : userDrawing;\n          defaultValues.job_id = userJob.value;\n\n          if (!defaultValues.drawing_id) {\n            _context2.next = 23;\n            break;\n          }\n\n          _context2.next = 22;\n          return call(fetchGenerateCode, payload, defaultValues.drawing_id);\n\n        case 22:\n          defaultValues.dpn = _context2.sent;\n\n        case 23:\n          _context2.next = 25;\n          return putResolve(partStore.actions.setInitData(initData));\n\n        case 25:\n          _context2.next = 27;\n          return put(partStore.actions.addPart({\n            detail: defaultValues,\n            wiki_page: wiki_page,\n            permissions: permissions[payload]\n          }));\n\n        case 27:\n          _context2.next = 33;\n          break;\n\n        case 29:\n          _context2.prev = 29;\n          _context2.t1 = _context2[\"catch\"](3);\n          _context2.next = 33;\n          return errorSaga.handleError(_context2.t1);\n\n        case 33:\n          _context2.next = 35;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 35:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[3, 29]]);\n}\n\nfunction changePartDrawing(_ref2) {\n  var payload, formData, drawing, entity, partApi, _yield$call3, generated_code;\n\n  return _regeneratorRuntime.wrap(function changePartDrawing$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          payload = _ref2.payload;\n          _context3.next = 3;\n          return put(partStore.actions.setPartLoading(true));\n\n        case 3:\n          _context3.prev = 3;\n          formData = payload.formData, drawing = payload.drawing, entity = payload.entity;\n          partApi = getPartApi(entity);\n          _context3.next = 8;\n          return call(partApi.getGenerateCode, drawing.value);\n\n        case 8:\n          _yield$call3 = _context3.sent;\n          generated_code = _yield$call3.generated_code;\n          _context3.next = 12;\n          return put(partStore.actions.updateCurrentPart(_objectSpread(_objectSpread({}, formData), {}, {\n            dpn: generated_code,\n            drawing_id: drawing\n          })));\n\n        case 12:\n          _context3.next = 18;\n          break;\n\n        case 14:\n          _context3.prev = 14;\n          _context3.t0 = _context3[\"catch\"](3);\n          _context3.next = 18;\n          return errorSaga.handleError(_context3.t0);\n\n        case 18:\n          _context3.next = 20;\n          return put(partStore.actions.setPartLoading(false));\n\n        case 20:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[3, 14]]);\n}\n\nfunction getPartRefItem(_ref3) {\n  var payload, selected_part, _yield$call4, part, message, item, response, status, data;\n\n  return _regeneratorRuntime.wrap(function getPartRefItem$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          payload = _ref3.payload;\n          _context4.next = 3;\n          return put(partStore.actions.setPartLoading(true));\n\n        case 3:\n          _context4.prev = 3;\n          selected_part = payload.selected_part;\n\n          if (!_.isNull(selected_part)) {\n            _context4.next = 10;\n            break;\n          }\n\n          _context4.next = 8;\n          return put(partStore.actions.updateCurrentPart({\n            reference_to: null\n          }));\n\n        case 8:\n          _context4.next = 28;\n          break;\n\n        case 10:\n          _context4.next = 12;\n          return call(partRefApi.getReferencedPart, payload);\n\n        case 12:\n          _yield$call4 = _context4.sent;\n          part = _yield$call4.part;\n          message = _yield$call4.message;\n          item = _.pick(part, ['descriptions', 'manufacturer_equiv', 'manufacturers', 'mass', 'material_equiv', 'unit', 'manufacturer_equiv_standards', 'material_equiv_standards']);\n          item.reference_to = {\n            description: '',\n            entity_id: part.dpn,\n            value: part.id\n          };\n          item.manufacturer_equiv = part.manufacturer_equiv_object;\n          item.material_equiv = part.material_equiv_object;\n          _context4.next = 21;\n          return putResolve(partStore.actions.updateCurrentPart(item));\n\n        case 21:\n          if (!(selected_part !== part.id)) {\n            _context4.next = 26;\n            break;\n          }\n\n          _context4.next = 24;\n          return put(partStore.actions.setConfirmRef({\n            open: true,\n            message: message\n          }));\n\n        case 24:\n          _context4.next = 28;\n          break;\n\n        case 26:\n          _context4.next = 28;\n          return put(commonStore.actions.setSuccessMessage(message));\n\n        case 28:\n          _context4.next = 42;\n          break;\n\n        case 30:\n          _context4.prev = 30;\n          _context4.t0 = _context4[\"catch\"](3);\n          response = _context4.t0.response;\n\n          if (!_.isNil(response)) {\n            _context4.next = 38;\n            break;\n          }\n\n          _context4.next = 36;\n          return errorSaga.handleError(_context4.t0);\n\n        case 36:\n          _context4.next = 42;\n          break;\n\n        case 38:\n          status = response.status, data = response.data;\n\n          if (!(status === StatusCode.BAD_REQUEST)) {\n            _context4.next = 42;\n            break;\n          }\n\n          _context4.next = 42;\n          return put(partStore.actions.setConfirmRef({\n            open: true,\n            message: data.message\n          }));\n\n        case 42:\n          _context4.next = 44;\n          return put(partStore.actions.setPartLoading(false));\n\n        case 44:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[3, 30]]);\n}\n\nfunction createPart(_ref4) {\n  var payload, entity, formData, partApi, _yield$call5, message, _yield$all2, userJob, userDrawing, generateCode;\n\n  return _regeneratorRuntime.wrap(function createPart$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          payload = _ref4.payload;\n          _context5.next = 3;\n          return put(partStore.actions.setPartLoading(true));\n\n        case 3:\n          _context5.prev = 3;\n          entity = payload.entity, formData = payload.formData;\n          partApi = getPartApi(entity);\n          _context5.next = 8;\n          return call(partApi.create, formData);\n\n        case 8:\n          _yield$call5 = _context5.sent;\n          message = _yield$call5.message;\n          return _context5.delegateYield(all({\n            userJob: select(commonStore.selectUserValueJob),\n            userDrawing: select(commonStore.selectUserValueDrawing)\n          }), \"t0\", 11);\n\n        case 11:\n          _yield$all2 = _context5.t0;\n          userJob = _yield$all2.userJob;\n          userDrawing = _yield$all2.userDrawing;\n          generateCode = '';\n\n          if (!(userDrawing.value >= 0)) {\n            _context5.next = 19;\n            break;\n          }\n\n          _context5.next = 18;\n          return call(fetchGenerateCode, entity, userDrawing);\n\n        case 18:\n          generateCode = _context5.sent;\n\n        case 19:\n          _context5.next = 21;\n          return putResolve(partStore.actions.resetCurrentPart({\n            userJob: userJob,\n            userDrawing: userDrawing,\n            generateCode: generateCode\n          }));\n\n        case 21:\n          _context5.next = 23;\n          return all([put(commonStore.actions.setSuccessMessage(message)), put(partStore.actions.setPartTab(0))]);\n\n        case 23:\n          _context5.next = 29;\n          break;\n\n        case 25:\n          _context5.prev = 25;\n          _context5.t1 = _context5[\"catch\"](3);\n          _context5.next = 29;\n          return errorSaga.handleError(_context5.t1);\n\n        case 29:\n          _context5.next = 31;\n          return put(partStore.actions.setPartLoading(false));\n\n        case 31:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[3, 25]]);\n}\n\nvar getPartDpn = function getPartDpn(entity, dpn) {\n  // const type = entity === 'item' ? 'H' : 'G'\n  var regexItem = /H\\S+/g;\n  var regexAssembly = /G\\S+/g;\n  var regex = entity === 'item' ? regexItem : regexAssembly;\n  var match = dpn.match(regex);\n\n  if (_.isArray(match)) {\n    return match[0];\n  }\n\n  return '';\n};\n\nfunction fetchPartDetail(entity, id) {\n  var partApi, data, partDetail;\n  return _regeneratorRuntime.wrap(function fetchPartDetail$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          partApi = getPartApi(entity);\n          _context6.next = 3;\n          return call(partApi.getDetail, id);\n\n        case 3:\n          data = _context6.sent;\n          partDetail = data[entity];\n          partDetail.dpn = getPartDpn(entity, partDetail.dpn);\n          partDetail.drawing_id = partDetail.related_drawing;\n          partDetail.items = (partDetail.components || []).map(function (_ref5) {\n            var id = _ref5.id,\n                quantity = _ref5.quantity;\n            return {\n              item_id: id,\n              quantity: quantity\n            };\n          });\n\n          if (entity === 'item') {\n            partDetail.manufacturer_equiv = partDetail.manufacturer_equiv_object;\n            partDetail.material_equiv = partDetail.material_equiv_object;\n          }\n\n          return _context6.abrupt(\"return\", partDetail);\n\n        case 10:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction openPartUpdateDialog(_ref6) {\n  var payload, id, entity, partApi, partDetail, _yield$call6, permissions, wiki_page, initData;\n\n  return _regeneratorRuntime.wrap(function openPartUpdateDialog$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          payload = _ref6.payload;\n          _context7.next = 3;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 3:\n          _context7.prev = 3;\n          id = payload.id, entity = payload.entity;\n          partApi = getPartApi(entity);\n          _context7.next = 8;\n          return call(fetchPartDetail, entity, id);\n\n        case 8:\n          partDetail = _context7.sent;\n          _context7.next = 11;\n          return call(partApi.getInitDataForCE, {\n            job_id_pk: partDetail.job_id\n          });\n\n        case 11:\n          _yield$call6 = _context7.sent;\n          permissions = _yield$call6.permissions;\n          wiki_page = _yield$call6.wiki_page;\n          initData = _objectWithoutProperties(_yield$call6, [\"permissions\", \"wiki_page\"]);\n          _context7.next = 17;\n          return putResolve(partStore.actions.setInitData(initData));\n\n        case 17:\n          _context7.next = 19;\n          return put(partStore.actions.addPart({\n            detail: partDetail,\n            wiki_page: wiki_page,\n            permissions: permissions[entity]\n          }));\n\n        case 19:\n          _context7.next = 25;\n          break;\n\n        case 21:\n          _context7.prev = 21;\n          _context7.t0 = _context7[\"catch\"](3);\n          _context7.next = 25;\n          return errorSaga.handleError(_context7.t0);\n\n        case 25:\n          _context7.next = 27;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 27:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[3, 21]]);\n}\n\nfunction updatePart(_ref7) {\n  var payload, entity, formData, id, partApi, _yield$call7, message;\n\n  return _regeneratorRuntime.wrap(function updatePart$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          payload = _ref7.payload;\n          _context8.next = 3;\n          return put(partStore.actions.setPartLoading(true));\n\n        case 3:\n          _context8.prev = 3;\n          entity = payload.entity, formData = payload.formData, id = payload.id;\n          partApi = getPartApi(entity);\n          _context8.next = 8;\n          return call(partApi.update, id, formData);\n\n        case 8:\n          _yield$call7 = _context8.sent;\n          message = _yield$call7.message;\n          _context8.next = 12;\n          return call(closePartDialog);\n\n        case 12:\n          _context8.next = 14;\n          return put(commonStore.actions.setSuccessMessage(message));\n\n        case 14:\n          _context8.next = 20;\n          break;\n\n        case 16:\n          _context8.prev = 16;\n          _context8.t0 = _context8[\"catch\"](3);\n          _context8.next = 20;\n          return errorSaga.handleError(_context8.t0);\n\n        case 20:\n          _context8.next = 22;\n          return put(partStore.actions.setPartLoading(false));\n\n        case 22:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[3, 16]]);\n}\n\nfunction closePartDialog() {\n  var partList, entity, _$last, detail, partEntity, partDetail, getListAction;\n\n  return _regeneratorRuntime.wrap(function closePartDialog$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return putResolve(partStore.actions.removePart());\n\n        case 3:\n          return _context9.delegateYield(select(partStore.selectPartList), \"t0\", 4);\n\n        case 4:\n          partList = _context9.t0;\n          return _context9.delegateYield(select(commonStore.selectEntity), \"t1\", 6);\n\n        case 6:\n          entity = _context9.t1;\n\n          if (!(partList.length > 0)) {\n            _context9.next = 19;\n            break;\n          }\n\n          _$last = _.last(partList), detail = _$last.detail;\n          partEntity = detail.is_assembly ? 'assembly' : 'item';\n          _context9.next = 12;\n          return call(fetchPartDetail, partEntity, detail.id);\n\n        case 12:\n          partDetail = _context9.sent;\n          _context9.next = 15;\n          return put(partStore.actions.updateCurrentPart(partDetail));\n\n        case 15:\n          if (!isAssemblyByDpn(detail.dpn)) {\n            _context9.next = 18;\n            break;\n          }\n\n          _context9.next = 18;\n          return call(getDrawingItems, {\n            type: '',\n            payload: partDetail.related_drawing.value\n          });\n\n        case 18:\n          return _context9.abrupt(\"return\");\n\n        case 19:\n          if (!(entity === 'drawing')) {\n            _context9.next = 24;\n            break;\n          }\n\n          _context9.next = 22;\n          return put(drawingStore.sagaGetDrawingPartList());\n\n        case 22:\n          _context9.next = 27;\n          break;\n\n        case 24:\n          getListAction = createAction(\"\".concat(entity, \"/\").concat(actionTypes.GET_LIST));\n          _context9.next = 27;\n          return put(getListAction());\n\n        case 27:\n          _context9.next = 33;\n          break;\n\n        case 29:\n          _context9.prev = 29;\n          _context9.t2 = _context9[\"catch\"](0);\n          _context9.next = 33;\n          return errorSaga.handleError(_context9.t2);\n\n        case 33:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 29]]);\n}\n\nfunction itemSelectEquiv(_ref8) {\n  var payload, _partStore$actions$up, type, equiv, _yield$call8, standards, equivKey, standardKey;\n\n  return _regeneratorRuntime.wrap(function itemSelectEquiv$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          payload = _ref8.payload;\n          _context10.next = 3;\n          return put(partStore.actions.setPartLoading(true));\n\n        case 3:\n          _context10.prev = 3;\n          type = payload.type, equiv = payload.equiv;\n          _context10.next = 7;\n          return call(equivalenceApi.getEquivalenceStandards, equiv.value);\n\n        case 7:\n          _yield$call8 = _context10.sent;\n          standards = _yield$call8.standards;\n          equivKey = type === 'manufacturing_standard' ? 'manufacturer_equiv' : 'material_equiv';\n          standardKey = \"\".concat(equivKey, \"_standards\");\n          _context10.next = 13;\n          return put(partStore.actions.updateCurrentPart((_partStore$actions$up = {}, _defineProperty(_partStore$actions$up, equivKey, equiv), _defineProperty(_partStore$actions$up, standardKey, standards), _partStore$actions$up)));\n\n        case 13:\n          _context10.next = 19;\n          break;\n\n        case 15:\n          _context10.prev = 15;\n          _context10.t0 = _context10[\"catch\"](3);\n          _context10.next = 19;\n          return errorSaga.handleError(_context10.t0);\n\n        case 19:\n          _context10.next = 21;\n          return put(partStore.actions.setPartLoading(false));\n\n        case 21:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10, null, [[3, 15]]);\n}\n\nfunction openManuDialog(_ref9) {\n  var payload, _yield$call9, next_code, initData;\n\n  return _regeneratorRuntime.wrap(function openManuDialog$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          payload = _ref9.payload;\n          _context11.next = 3;\n          return put(partStore.actions.setPartLoading(true));\n\n        case 3:\n          _context11.prev = 3;\n          _context11.next = 6;\n          return put(partStore.actions.updateCurrentPart(payload));\n\n        case 6:\n          _context11.next = 8;\n          return call(manufacturerApi.getInitDataForCE);\n\n        case 8:\n          _yield$call9 = _context11.sent;\n          next_code = _yield$call9.next_code;\n          initData = _objectWithoutProperties(_yield$call9, [\"next_code\"]);\n          _context11.next = 13;\n          return all([putResolve(partStore.actions.setManuDetail({\n            manufacturer_id: next_code\n          })), putResolve(partStore.actions.setManuInitData(initData))]);\n\n        case 13:\n          _context11.next = 15;\n          return put(partStore.actions.setManuDialogOpen(true));\n\n        case 15:\n          _context11.next = 21;\n          break;\n\n        case 17:\n          _context11.prev = 17;\n          _context11.t0 = _context11[\"catch\"](3);\n          _context11.next = 21;\n          return errorSaga.handleError(_context11.t0);\n\n        case 21:\n          _context11.next = 23;\n          return put(partStore.actions.setPartLoading(false));\n\n        case 23:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[3, 17]]);\n}\n\nfunction createManu(_ref10) {\n  var payload, _yield$call10, message, id, _yield$call11, next_code, name;\n\n  return _regeneratorRuntime.wrap(function createManu$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          payload = _ref10.payload;\n          _context12.next = 3;\n          return put(partStore.actions.setManuDialogLoading(true));\n\n        case 3:\n          _context12.prev = 3;\n          _context12.next = 6;\n          return call(manufacturerApi.create, payload);\n\n        case 6:\n          _yield$call10 = _context12.sent;\n          message = _yield$call10.message;\n          id = _yield$call10.id;\n          _context12.next = 11;\n          return call(manufacturerApi.getInitDataForCE);\n\n        case 11:\n          _yield$call11 = _context12.sent;\n          next_code = _yield$call11.next_code;\n          name = payload.name;\n          _context12.next = 16;\n          return putResolve(partStore.actions.setManuDetail(_objectSpread(_objectSpread({}, partStore.initialState.manufacturer.detail), {}, {\n            manufacturer_id: next_code\n          })));\n\n        case 16:\n          _context12.next = 18;\n          return all([put(commonStore.actions.setSuccessMessage(message)), put(partStore.actions.addManufacturer({\n            manufacturer_id: id,\n            reference: '',\n            description: name\n          }))]);\n\n        case 18:\n          _context12.next = 24;\n          break;\n\n        case 20:\n          _context12.prev = 20;\n          _context12.t0 = _context12[\"catch\"](3);\n          _context12.next = 24;\n          return errorSaga.handleError(_context12.t0);\n\n        case 24:\n          _context12.next = 26;\n          return put(partStore.actions.setManuDialogLoading(false));\n\n        case 26:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12, null, [[3, 20]]);\n}\n\nfunction closeManuDialog() {\n  return _regeneratorRuntime.wrap(function closeManuDialog$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return putResolve(partStore.actions.setManuDialogOpen(false));\n\n        case 2:\n          _context13.next = 4;\n          return put(partStore.actions.setManuDetail({\n            manufacturer_id: null,\n            name: ''\n          }));\n\n        case 4:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n\nfunction getManuId(_ref11) {\n  var payload, _yield$call12, generated_code;\n\n  return _regeneratorRuntime.wrap(function getManuId$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          payload = _ref11.payload;\n          _context14.next = 3;\n          return put(partStore.actions.setManuDialogLoading(true));\n\n        case 3:\n          _context14.prev = 3;\n          _context14.next = 6;\n          return call(manufacturerApi.getNextCode, payload.manufacturer_id);\n\n        case 6:\n          _yield$call12 = _context14.sent;\n          generated_code = _yield$call12.generated_code;\n          _context14.next = 10;\n          return put(partStore.actions.setManuDetail(_objectSpread(_objectSpread({}, payload), {}, {\n            manufacturer_id: generated_code\n          })));\n\n        case 10:\n          _context14.next = 16;\n          break;\n\n        case 12:\n          _context14.prev = 12;\n          _context14.t0 = _context14[\"catch\"](3);\n          _context14.next = 16;\n          return errorSaga.handleError(_context14.t0);\n\n        case 16:\n          _context14.next = 18;\n          return put(partStore.actions.setManuDialogLoading(false));\n\n        case 18:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14, null, [[3, 12]]);\n}\n\nfunction getItemCopy(_ref12) {\n  var payload, data, part;\n  return _regeneratorRuntime.wrap(function getItemCopy$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          payload = _ref12.payload;\n          _context15.next = 3;\n          return put(partStore.actions.setPartLoading(true));\n\n        case 3:\n          _context15.prev = 3;\n          _context15.next = 6;\n          return call(partRefApi.getDetail, payload.value);\n\n        case 6:\n          data = _context15.sent;\n          // get the allowed attributes\n          part = _.pick(data.part, ['descriptions', 'manufacturer_equiv', 'manufacturers', 'mass', 'material_equiv', 'unit', 'manufacturer_equiv_standards', 'material_equiv_standards']);\n          part.manufacturer_equiv = data.part.manufacturer_equiv_object;\n          part.material_equiv = data.part.material_equiv_object;\n          _context15.next = 12;\n          return put(partStore.actions.updateCurrentPart(part));\n\n        case 12:\n          _context15.next = 14;\n          return put(commonStore.actions.setSuccessMessage(data.message));\n\n        case 14:\n          _context15.next = 20;\n          break;\n\n        case 16:\n          _context15.prev = 16;\n          _context15.t0 = _context15[\"catch\"](3);\n          _context15.next = 20;\n          return errorSaga.handleError(_context15.t0);\n\n        case 20:\n          _context15.next = 22;\n          return put(partStore.actions.setPartLoading(false));\n\n        case 22:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15, null, [[3, 16]]);\n}\n\nfunction getDrawingItems(_ref13) {\n  var payload, _yield$call13, items;\n\n  return _regeneratorRuntime.wrap(function getDrawingItems$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          payload = _ref13.payload;\n          _context16.next = 3;\n          return put(partStore.actions.setPartLoading(true));\n\n        case 3:\n          _context16.prev = 3;\n          _context16.next = 6;\n          return call(drawingApi.getItemList, payload);\n\n        case 6:\n          _yield$call13 = _context16.sent;\n          items = _yield$call13.items;\n          _context16.next = 10;\n          return put(partStore.actions.setDrawingItems(items));\n\n        case 10:\n          _context16.next = 16;\n          break;\n\n        case 12:\n          _context16.prev = 12;\n          _context16.t0 = _context16[\"catch\"](3);\n          _context16.next = 16;\n          return errorSaga.handleError(_context16.t0);\n\n        case 16:\n          _context16.next = 18;\n          return put(partStore.actions.setPartLoading(false));\n\n        case 18:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16, null, [[3, 12]]);\n}\n\nfunction partSaga() {\n  return _regeneratorRuntime.wrap(function partSaga$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return takeLatest(partStore.sagaOpenCreateDialog, openPartCreateDialog);\n\n        case 2:\n          _context17.next = 4;\n          return takeLatest(partStore.sagaChangeDrawing, changePartDrawing);\n\n        case 4:\n          _context17.next = 6;\n          return takeLatest(partStore.sagaGetPartRefItem, getPartRefItem);\n\n        case 6:\n          _context17.next = 8;\n          return takeLatest(partStore.sagaCreate, createPart);\n\n        case 8:\n          _context17.next = 10;\n          return takeLatest(partStore.sagaOpenUpdateDialog, openPartUpdateDialog);\n\n        case 10:\n          _context17.next = 12;\n          return takeLatest(partStore.sagaUpdate, updatePart);\n\n        case 12:\n          _context17.next = 14;\n          return takeEvery(partStore.sagaCloseDialog, closePartDialog);\n\n        case 14:\n          _context17.next = 16;\n          return takeLatest(partStore.sagaSelectEquiv, itemSelectEquiv);\n\n        case 16:\n          _context17.next = 18;\n          return takeLatest(partStore.sagaOpenManuDialog, openManuDialog);\n\n        case 18:\n          _context17.next = 20;\n          return takeEvery(partStore.sagaCreateManu, createManu);\n\n        case 20:\n          _context17.next = 22;\n          return takeEvery(partStore.sagaCloseManuDialog, closeManuDialog);\n\n        case 22:\n          _context17.next = 24;\n          return takeLatest(partStore.sagaGetManuId, getManuId);\n\n        case 24:\n          _context17.next = 26;\n          return takeLatest(partStore.sagaGetItemCopy, getItemCopy);\n\n        case 26:\n          _context17.next = 28;\n          return takeLatest(partStore.sagaGetDrawingItems, getDrawingItems);\n\n        case 28:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17);\n}\n\nexport default partSaga;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/saga/part.saga.ts"],"names":["fetchGenerateCode","openPartCreateDialog","changePartDrawing","getPartRefItem","createPart","fetchPartDetail","openPartUpdateDialog","updatePart","closePartDialog","itemSelectEquiv","openManuDialog","createManu","closeManuDialog","getManuId","getItemCopy","getDrawingItems","partSaga","takeLatest","call","put","putResolve","takeEvery","select","all","createAction","_","partStore","commonStore","drawingStore","errorSaga","StatusCode","getDefaultValues","actionTypes","isAssemblyByDpn","itemApi","assemblyApi","partRefApi","equivalenceApi","manufacturerApi","drawingApi","getPartApi","entity","drawing","partApi","getGenerateCode","value","generated_code","payload","actions","setLoadingPage","userJob","selectUserValueJob","userDrawing","selectUserValueDrawing","initDetail","itemDetail","assemblyDetail","getInitDataForCE","job_id_pk","permissions","wiki_page","initData","defaultValues","parameters","unit","drawing_id","job_id","dpn","setInitData","addPart","detail","handleError","setPartLoading","formData","updateCurrentPart","selected_part","isNull","reference_to","getReferencedPart","part","message","item","pick","description","entity_id","id","manufacturer_equiv","manufacturer_equiv_object","material_equiv","material_equiv_object","setConfirmRef","open","setSuccessMessage","response","isNil","status","data","BAD_REQUEST","create","generateCode","resetCurrentPart","setPartTab","getPartDpn","regexItem","regexAssembly","regex","match","isArray","getDetail","partDetail","related_drawing","items","components","map","quantity","item_id","update","removePart","selectPartList","partList","selectEntity","length","last","partEntity","is_assembly","type","sagaGetDrawingPartList","getListAction","GET_LIST","equiv","getEquivalenceStandards","standards","equivKey","standardKey","next_code","setManuDetail","manufacturer_id","setManuInitData","setManuDialogOpen","setManuDialogLoading","name","initialState","manufacturer","addManufacturer","reference","getNextCode","getItemList","setDrawingItems","sagaOpenCreateDialog","sagaChangeDrawing","sagaGetPartRefItem","sagaCreate","sagaOpenUpdateDialog","sagaUpdate","sagaCloseDialog","sagaSelectEquiv","sagaOpenManuDialog","sagaCreateManu","sagaCloseManuDialog","sagaGetManuId","sagaGetItemCopy","sagaGetDrawingItems"],"mappings":"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","sourcesContent":["import { takeLatest, call, put, putResolve, takeEvery } from 'redux-saga/effects'\nimport { select, all } from 'typed-redux-saga'\nimport { createAction } from '@reduxjs/toolkit'\nimport _ from 'lodash'\n\nimport { partStore, commonStore, drawingStore } from '@/store/reducers'\nimport * as errorSaga from '@/store/saga/errorSaga'\nimport { StatusCode } from '@/utils/StatusCode'\nimport { getDefaultValues } from '@/utils/getDefaultValues'\nimport { actionTypes } from '@/utils/constant'\nimport { isAssemblyByDpn } from '@/utils/isAssembly'\n\nimport itemApi from '@/apis/item.api'\nimport assemblyApi from '@/apis/assembly.api'\nimport partRefApi from '@/apis/part.api'\nimport equivalenceApi from '@/apis/equivalence.api'\nimport manufacturerApi from '@/apis/manufacturer.api'\nimport drawingApi from '@/apis/drawing.api'\n\nimport type { DataForDropdown } from '@/types/Common'\nimport type { PartEntity } from '@/types/Part'\n\nconst getPartApi = (entity: PartEntity) => (entity === 'item' ? itemApi : assemblyApi)\n\nfunction* fetchGenerateCode(entity: PartEntity, drawing: DataForDropdown) {\n  const partApi = getPartApi(entity)\n  const { generated_code } = yield call(partApi.getGenerateCode, drawing.value)\n  return generated_code\n}\n\nfunction* openPartCreateDialog({ payload }: ReturnType<typeof partStore.sagaOpenCreateDialog>) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    const partApi = getPartApi(payload)\n    const { userJob, userDrawing } = yield* all({\n      userJob: select(commonStore.selectUserValueJob),\n      userDrawing: select(commonStore.selectUserValueDrawing)\n    })\n    const initDetail = payload === 'item' ? partStore.itemDetail : partStore.assemblyDetail\n    const { permissions, wiki_page, ...initData } = yield call(partApi.getInitDataForCE, {\n      job_id_pk: userJob.value\n    })\n    const defaultValues = getDefaultValues(initData.parameters, { unit: 'UNIT' }, initDetail)\n    defaultValues.drawing_id = userDrawing.value < 0 ? null : userDrawing\n    defaultValues.job_id = userJob.value\n    if (defaultValues.drawing_id) {\n      defaultValues.dpn = yield call(fetchGenerateCode, payload, defaultValues.drawing_id)\n    }\n    yield putResolve(partStore.actions.setInitData(initData))\n    yield put(partStore.actions.addPart({ detail: defaultValues, wiki_page, permissions: permissions[payload] }))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* changePartDrawing({ payload }: ReturnType<typeof partStore.sagaChangeDrawing>) {\n  yield put(partStore.actions.setPartLoading(true))\n  try {\n    const { formData, drawing, entity } = payload\n    const partApi = getPartApi(entity)\n    const { generated_code } = yield call(partApi.getGenerateCode, drawing.value)\n    yield put(partStore.actions.updateCurrentPart({ ...formData, dpn: generated_code, drawing_id: drawing }))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(partStore.actions.setPartLoading(false))\n}\n\nfunction* getPartRefItem({ payload }: ReturnType<typeof partStore.sagaGetPartRefItem>) {\n  yield put(partStore.actions.setPartLoading(true))\n  try {\n    const { selected_part } = payload\n    if (_.isNull(selected_part)) {\n      yield put(partStore.actions.updateCurrentPart({ reference_to: null }))\n    } else {\n      const { part, message } = yield call(partRefApi.getReferencedPart, payload)\n      const item = _.pick(part, [\n        'descriptions',\n        'manufacturer_equiv',\n        'manufacturers',\n        'mass',\n        'material_equiv',\n        'unit',\n        'manufacturer_equiv_standards',\n        'material_equiv_standards'\n      ]) as any\n      item.reference_to = {\n        description: '',\n        entity_id: part.dpn,\n        value: part.id\n      }\n      item.manufacturer_equiv = part.manufacturer_equiv_object\n      item.material_equiv = part.material_equiv_object\n      yield putResolve(partStore.actions.updateCurrentPart(item))\n      if (selected_part !== part.id) {\n        yield put(partStore.actions.setConfirmRef({ open: true, message }))\n      } else {\n        yield put(commonStore.actions.setSuccessMessage(message))\n      }\n    }\n  } catch (error) {\n    const { response } = error\n    if (_.isNil(response)) {\n      yield errorSaga.handleError(error)\n    } else {\n      const { status, data } = response\n      if (status === StatusCode.BAD_REQUEST) {\n        yield put(partStore.actions.setConfirmRef({ open: true, message: data.message }))\n      }\n    }\n  }\n  yield put(partStore.actions.setPartLoading(false))\n}\n\nfunction* createPart({ payload }: ReturnType<typeof partStore.sagaCreate>) {\n  yield put(partStore.actions.setPartLoading(true))\n  try {\n    const { entity, formData } = payload\n    const partApi = getPartApi(entity)\n    const { message } = yield call(partApi.create, formData)\n    const { userJob, userDrawing } = yield* all({\n      userJob: select(commonStore.selectUserValueJob),\n      userDrawing: select(commonStore.selectUserValueDrawing)\n    })\n    let generateCode = ''\n    if (userDrawing.value >= 0) {\n      generateCode = yield call(fetchGenerateCode, entity, userDrawing)\n    }\n    yield putResolve(partStore.actions.resetCurrentPart({ userJob, userDrawing, generateCode }))\n    yield all([put(commonStore.actions.setSuccessMessage(message)), put(partStore.actions.setPartTab(0))])\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(partStore.actions.setPartLoading(false))\n}\n\nconst getPartDpn = (entity: PartEntity, dpn: string) => {\n  // const type = entity === 'item' ? 'H' : 'G'\n  const regexItem = /H\\S+/g\n  const regexAssembly = /G\\S+/g\n  const regex = entity === 'item' ? regexItem : regexAssembly\n  const match = dpn.match(regex)\n  if (_.isArray(match)) {\n    return match[0]\n  }\n  return ''\n}\n\nfunction* fetchPartDetail(entity: PartEntity, id: number) {\n  const partApi = getPartApi(entity)\n  const data = yield call(partApi.getDetail, id)\n  const partDetail = data[entity]\n  partDetail.dpn = getPartDpn(entity, partDetail.dpn)\n  partDetail.drawing_id = partDetail.related_drawing\n  partDetail.items = (partDetail.components || []).map(({ id, quantity }) => ({\n    item_id: id,\n    quantity\n  }))\n\n  if (entity === 'item') {\n    partDetail.manufacturer_equiv = partDetail.manufacturer_equiv_object\n    partDetail.material_equiv = partDetail.material_equiv_object\n  }\n  return partDetail\n}\n\nfunction* openPartUpdateDialog({ payload }: ReturnType<typeof partStore.sagaOpenUpdateDialog>) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    const { id, entity } = payload\n    const partApi = getPartApi(entity)\n    const partDetail = yield call(fetchPartDetail, entity, id)\n    const { permissions, wiki_page, ...initData } = yield call(partApi.getInitDataForCE, {\n      job_id_pk: partDetail.job_id\n    })\n    yield putResolve(partStore.actions.setInitData(initData))\n    yield put(partStore.actions.addPart({ detail: partDetail, wiki_page, permissions: permissions[entity] }))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* updatePart({ payload }: ReturnType<typeof partStore.sagaUpdate>) {\n  yield put(partStore.actions.setPartLoading(true))\n  try {\n    const { entity, formData, id } = payload\n    const partApi = getPartApi(entity)\n    const { message } = yield call(partApi.update, id, formData)\n    yield call(closePartDialog)\n    yield put(commonStore.actions.setSuccessMessage(message))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n\n  yield put(partStore.actions.setPartLoading(false))\n}\n\nfunction* closePartDialog() {\n  try {\n    yield putResolve(partStore.actions.removePart())\n    const partList = yield* select(partStore.selectPartList)\n    const entity = yield* select(commonStore.selectEntity)\n    if (partList.length > 0) {\n      const { detail } = _.last(partList)\n      const partEntity = (detail as any).is_assembly ? 'assembly' : 'item'\n      const partDetail = yield call(fetchPartDetail, partEntity, detail.id)\n      yield put(partStore.actions.updateCurrentPart(partDetail))\n      if (isAssemblyByDpn(detail.dpn)) {\n        yield call(getDrawingItems, { type: '', payload: partDetail.related_drawing.value })\n      }\n      return\n    }\n    if (entity === 'drawing') {\n      yield put(drawingStore.sagaGetDrawingPartList())\n    } else {\n      const getListAction = createAction(`${entity}/${actionTypes.GET_LIST}`)\n      yield put(getListAction())\n    }\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n}\n\nfunction* itemSelectEquiv({ payload }: ReturnType<typeof partStore.sagaSelectEquiv>) {\n  yield put(partStore.actions.setPartLoading(true))\n  try {\n    const { type, equiv } = payload\n    const { standards } = yield call(equivalenceApi.getEquivalenceStandards, equiv.value)\n    const equivKey = type === 'manufacturing_standard' ? 'manufacturer_equiv' : 'material_equiv'\n    const standardKey = `${equivKey}_standards`\n    yield put(\n      partStore.actions.updateCurrentPart({\n        [equivKey]: equiv,\n        [standardKey]: standards\n      })\n    )\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(partStore.actions.setPartLoading(false))\n}\n\nfunction* openManuDialog({ payload }: ReturnType<typeof partStore.sagaOpenManuDialog>) {\n  yield put(partStore.actions.setPartLoading(true))\n  try {\n    yield put(partStore.actions.updateCurrentPart(payload))\n    const { next_code, ...initData } = yield call(manufacturerApi.getInitDataForCE)\n    yield all([\n      putResolve(partStore.actions.setManuDetail({ manufacturer_id: next_code })),\n      putResolve(partStore.actions.setManuInitData(initData))\n    ])\n    yield put(partStore.actions.setManuDialogOpen(true))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(partStore.actions.setPartLoading(false))\n}\n\nfunction* createManu({ payload }: ReturnType<typeof partStore.sagaCreateManu>) {\n  yield put(partStore.actions.setManuDialogLoading(true))\n  try {\n    const { message, id } = yield call(manufacturerApi.create, payload)\n    const { next_code } = yield call(manufacturerApi.getInitDataForCE)\n    const { name } = payload\n    yield putResolve(\n      partStore.actions.setManuDetail({ ...partStore.initialState.manufacturer.detail, manufacturer_id: next_code })\n    )\n    yield all([\n      put(commonStore.actions.setSuccessMessage(message)),\n      put(partStore.actions.addManufacturer({ manufacturer_id: id, reference: '', description: name }))\n    ])\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(partStore.actions.setManuDialogLoading(false))\n}\n\nfunction* closeManuDialog() {\n  yield putResolve(partStore.actions.setManuDialogOpen(false))\n  yield put(partStore.actions.setManuDetail({ manufacturer_id: null, name: '' }))\n}\n\nfunction* getManuId({ payload }: ReturnType<typeof partStore.sagaGetManuId>) {\n  yield put(partStore.actions.setManuDialogLoading(true))\n  try {\n    const { generated_code } = yield call(manufacturerApi.getNextCode, payload.manufacturer_id)\n    yield put(partStore.actions.setManuDetail({ ...payload, manufacturer_id: generated_code }))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(partStore.actions.setManuDialogLoading(false))\n}\n\nfunction* getItemCopy({ payload }: ReturnType<typeof partStore.sagaGetItemCopy>) {\n  yield put(partStore.actions.setPartLoading(true))\n  try {\n    const data = yield call(partRefApi.getDetail, payload.value)\n    // get the allowed attributes\n    const part = _.pick(data.part, [\n      'descriptions',\n      'manufacturer_equiv',\n      'manufacturers',\n      'mass',\n      'material_equiv',\n      'unit',\n      'manufacturer_equiv_standards',\n      'material_equiv_standards'\n    ])\n    part.manufacturer_equiv = data.part.manufacturer_equiv_object\n    part.material_equiv = data.part.material_equiv_object\n    yield put(partStore.actions.updateCurrentPart(part))\n    yield put(commonStore.actions.setSuccessMessage(data.message))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n\n  yield put(partStore.actions.setPartLoading(false))\n}\n\nfunction* getDrawingItems({ payload }: ReturnType<typeof partStore.sagaGetDrawingItems>) {\n  yield put(partStore.actions.setPartLoading(true))\n  try {\n    const { items } = yield call(drawingApi.getItemList, payload)\n    yield put(partStore.actions.setDrawingItems(items))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(partStore.actions.setPartLoading(false))\n}\n\nfunction* partSaga() {\n  yield takeLatest(partStore.sagaOpenCreateDialog, openPartCreateDialog)\n  yield takeLatest(partStore.sagaChangeDrawing, changePartDrawing)\n  yield takeLatest(partStore.sagaGetPartRefItem, getPartRefItem)\n  yield takeLatest(partStore.sagaCreate, createPart)\n  yield takeLatest(partStore.sagaOpenUpdateDialog, openPartUpdateDialog)\n  yield takeLatest(partStore.sagaUpdate, updatePart)\n  yield takeEvery(partStore.sagaCloseDialog, closePartDialog)\n  yield takeLatest(partStore.sagaSelectEquiv, itemSelectEquiv)\n  yield takeLatest(partStore.sagaOpenManuDialog, openManuDialog)\n  yield takeEvery(partStore.sagaCreateManu, createManu)\n  yield takeEvery(partStore.sagaCloseManuDialog, closeManuDialog)\n  yield takeLatest(partStore.sagaGetManuId, getManuId)\n  yield takeLatest(partStore.sagaGetItemCopy, getItemCopy)\n  yield takeLatest(partStore.sagaGetDrawingItems, getDrawingItems)\n}\n\nexport default partSaga\n"]},"metadata":{},"sourceType":"module"}