{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice, createAction, createSelector } from '@reduxjs/toolkit';\nimport { actionTypes } from '@/utils/constant';\nexport var name = 'manufacturer';\nexport var resetState = createAction(\"\".concat(name, \"/\").concat(actionTypes.RESET_STATE));\nexport var initialState = {\n  dialogState: {\n    open: false,\n    loading: false\n  },\n  dataList: [],\n  detail: {\n    manufacturer_id: null,\n    name: ''\n  },\n  initDataForCE: {\n    next_code: null,\n    wiki_page: ''\n  },\n  initDataForList: {\n    permissions: {\n      manufacturer: null\n    },\n    wiki_page: '',\n    column_tooltips: {}\n  }\n};\nvar manufacturer = createSlice({\n  name: name,\n  initialState: initialState,\n  reducers: {\n    setDialogState: function setDialogState(state, _ref) {\n      var payload = _ref.payload;\n      state.dialogState = _objectSpread(_objectSpread({}, state.dialogState), payload);\n    },\n    setDialogStateOpen: function setDialogStateOpen(state, _ref2) {\n      var payload = _ref2.payload;\n      state.dialogState.open = payload;\n    },\n    setDialogStateLoading: function setDialogStateLoading(state, _ref3) {\n      var payload = _ref3.payload;\n      state.dialogState.loading = payload;\n    },\n    setDataList: function setDataList(state, _ref4) {\n      var payload = _ref4.payload;\n      state.dataList = payload;\n    },\n    setDetail: function setDetail(state, _ref5) {\n      var payload = _ref5.payload;\n      state.detail = _objectSpread(_objectSpread({}, state.detail), payload);\n    },\n    setInitDataForList: function setInitDataForList(state, _ref6) {\n      var payload = _ref6.payload;\n      state.initDataForList = payload;\n    },\n    setInitDataForCE: function setInitDataForCE(state, _ref7) {\n      var payload = _ref7.payload;\n      state.initDataForCE = payload;\n    },\n    setPermissions: function setPermissions(state, _ref8) {\n      var payload = _ref8.payload;\n      state.initDataForList.permissions.manufacturer = payload;\n    },\n    setNextCode: function setNextCode(state, _ref9) {\n      var payload = _ref9.payload;\n      state.initDataForCE.next_code = payload;\n    },\n    resetDetail: function resetDetail(state) {\n      state.detail = _objectSpread(_objectSpread({}, initialState.detail), {}, {\n        manufacturer_id: state.initDataForCE.next_code\n      });\n    }\n  },\n  extraReducers: _defineProperty({}, resetState.type, function () {\n    return initialState;\n  })\n}); // Actions\n\nvar actions = manufacturer.actions; // Saga actions\n\nexport { actions };\nexport var sagaGetList = createAction(\"\".concat(name, \"/\").concat(actionTypes.GET_LIST));\nexport var sagaCreate = createAction(\"\".concat(name, \"/\").concat(actionTypes.CREATE));\nexport var sagaUpdate = createAction(\"\".concat(name, \"/\").concat(actionTypes.UPDATE));\nexport var sagaOpenCreateDialog = createAction(\"\".concat(name, \"/\").concat(actionTypes.OPEN_CREATE_DIALOG));\nexport var sagaOpenUpdateDialog = createAction(\"\".concat(name, \"/\").concat(actionTypes.OPEN_UPDATE_DIALOG));\nexport var sagaGenerateCode = createAction(\"\".concat(name, \"/\").concat(actionTypes.GET_GENERATE_CODE));\nexport var sagaCloseDialog = createAction(\"\".concat(name, \"/\").concat(actionTypes.CLOSE_DIALOG)); // Selectors\n\nexport var selectState = function selectState(state) {\n  return state[name];\n};\nexport var selectDialogState = createSelector(selectState, function (state) {\n  return state.dialogState;\n});\nexport var selectDataList = createSelector(selectState, function (state) {\n  return state.dataList;\n});\nexport var selectDetail = createSelector(selectState, function (state) {\n  return state.detail;\n});\nexport var selectPermissions = createSelector(selectState, function (state) {\n  return state.initDataForList.permissions.manufacturer;\n});\nexport var selectInitDataForList = createSelector(selectState, function (state) {\n  return state.initDataForList;\n});\nexport var selectInitDataForCE = createSelector(selectState, function (state) {\n  return state.initDataForCE;\n});\nexport default manufacturer;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/reducers/manufacturer.reducer.ts"],"names":["createSlice","createAction","createSelector","actionTypes","name","resetState","RESET_STATE","initialState","dialogState","open","loading","dataList","detail","manufacturer_id","initDataForCE","next_code","wiki_page","initDataForList","permissions","manufacturer","column_tooltips","reducers","setDialogState","state","payload","setDialogStateOpen","setDialogStateLoading","setDataList","setDetail","setInitDataForList","setInitDataForCE","setPermissions","setNextCode","resetDetail","extraReducers","type","actions","sagaGetList","GET_LIST","sagaCreate","CREATE","sagaUpdate","UPDATE","sagaOpenCreateDialog","OPEN_CREATE_DIALOG","sagaOpenUpdateDialog","OPEN_UPDATE_DIALOG","sagaGenerateCode","GET_GENERATE_CODE","sagaCloseDialog","CLOSE_DIALOG","selectState","selectDialogState","selectDataList","selectDetail","selectPermissions","selectInitDataForList","selectInitDataForCE"],"mappings":"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","sourcesContent":["import { createSlice, createAction, PayloadAction, createSelector } from '@reduxjs/toolkit'\nimport { actionTypes } from '@/utils/constant'\n\nimport type { Entity } from '@/types/Common'\nimport type { RootReducerType } from './rootReducer'\nimport type {\n  ManufacturerInitDataForCE,\n  ManufacturerInitDataForList,\n  ManufacturerItem,\n  ManufacturerPermissions\n} from '@/types/Manufacturer'\n\nexport const name: Entity = 'manufacturer'\n\nexport const resetState = createAction(`${name}/${actionTypes.RESET_STATE}`)\n\nexport const initialState = {\n  dialogState: {\n    open: false,\n    loading: false\n  },\n  dataList: [] as ManufacturerItem[],\n  detail: {\n    manufacturer_id: null,\n    name: ''\n  } as ManufacturerItem,\n  initDataForCE: {\n    next_code: null,\n    wiki_page: ''\n  } as ManufacturerInitDataForCE,\n  initDataForList: {\n    permissions: {\n      manufacturer: null\n    },\n    wiki_page: '',\n    column_tooltips: {}\n  } as ManufacturerInitDataForList\n}\n\nconst manufacturer = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setDialogState(state, { payload }) {\n      state.dialogState = {\n        ...state.dialogState,\n        ...payload\n      }\n    },\n    setDialogStateOpen(state, { payload }: PayloadAction<boolean>) {\n      state.dialogState.open = payload\n    },\n    setDialogStateLoading(state, { payload }: PayloadAction<boolean>) {\n      state.dialogState.loading = payload\n    },\n    setDataList(state, { payload }: PayloadAction<ManufacturerItem[]>) {\n      state.dataList = payload\n    },\n    setDetail(state, { payload }: PayloadAction<Partial<ManufacturerItem>>) {\n      state.detail = {\n        ...state.detail,\n        ...payload\n      }\n    },\n    setInitDataForList(state, { payload }: PayloadAction<ManufacturerInitDataForList>) {\n      state.initDataForList = payload\n    },\n    setInitDataForCE(state, { payload }: PayloadAction<ManufacturerInitDataForCE>) {\n      state.initDataForCE = payload\n    },\n    setPermissions(state, { payload }: PayloadAction<ManufacturerPermissions>) {\n      state.initDataForList.permissions.manufacturer = payload\n    },\n    setNextCode(state, { payload }: PayloadAction<number>) {\n      state.initDataForCE.next_code = payload\n    },\n    resetDetail(state) {\n      state.detail = {\n        ...initialState.detail,\n        manufacturer_id: state.initDataForCE.next_code\n      }\n    }\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState\n    }\n  }\n})\n\n// Actions\nexport const { actions } = manufacturer\n\n// Saga actions\nexport const sagaGetList = createAction(`${name}/${actionTypes.GET_LIST}`)\nexport const sagaCreate = createAction<ManufacturerItem>(`${name}/${actionTypes.CREATE}`)\nexport const sagaUpdate = createAction<{ id: number; formData: ManufacturerItem }>(`${name}/${actionTypes.UPDATE}`)\nexport const sagaOpenCreateDialog = createAction(`${name}/${actionTypes.OPEN_CREATE_DIALOG}`)\nexport const sagaOpenUpdateDialog = createAction<number>(`${name}/${actionTypes.OPEN_UPDATE_DIALOG}`)\nexport const sagaGenerateCode = createAction<ManufacturerItem>(`${name}/${actionTypes.GET_GENERATE_CODE}`)\nexport const sagaCloseDialog = createAction(`${name}/${actionTypes.CLOSE_DIALOG}`)\n\n// Selectors\nexport const selectState = (state: RootReducerType) => state[name]\n\nexport const selectDialogState = createSelector(selectState, (state) => state.dialogState)\nexport const selectDataList = createSelector(selectState, (state) => state.dataList)\nexport const selectDetail = createSelector(selectState, (state) => state.detail)\nexport const selectPermissions = createSelector(selectState, (state) => state.initDataForList.permissions.manufacturer)\n\nexport const selectInitDataForList = createSelector(selectState, (state) => state.initDataForList)\n\nexport const selectInitDataForCE = createSelector(selectState, (state) => state.initDataForCE)\n\nexport default manufacturer\n"]},"metadata":{},"sourceType":"module"}