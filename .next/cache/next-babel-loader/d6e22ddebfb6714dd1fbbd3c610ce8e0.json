{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { v1 as uuidv1 } from 'uuid';\nimport { useTranslation } from 'next-i18next';\nimport { AddCircle, Cancel } from '@material-ui/icons';\nimport { IconButton, ButtonGroup, Tooltip, Typography } from '@material-ui/core';\nimport * as _ from 'lodash';\nimport ColumnOptions from './ColumnOptions';\nimport SortOptions from './SortOptions';\nimport { Unless, If, Then, When, Else } from 'react-if';\nimport useStyles from '../styles'; // The main component (which is exported)\n\nfunction SortConditionList({\n  columnOptions,\n  sortOptions,\n  sortData: sortConditionData,\n  disabled\n}) {\n  // trick for forcing rerender\n  const {\n    1: setValue\n  } = useState(0);\n\n  const forceRerender = () => {\n    setValue(value => value + 1);\n  };\n\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslation(['advanced_filter']);\n  const sortConditionComponents = [];\n\n  const addNewSortCondition = sortConditionId => () => {\n    const sortConditionIndex = _.findIndex(sortConditionData, {\n      condition_id: sortConditionId\n    });\n\n    const selectedColumns = sortConditionData.map(cond => cond.id);\n    sortConditionData.splice(sortConditionIndex + 1, 0, {\n      id: columnOptions.filter(col => !selectedColumns.includes(col.id))[0].id,\n      condition_id: uuidv1(),\n      direction: sortOptions[0].value\n    });\n    forceRerender();\n  };\n\n  const removeSortCondition = sortConditionId => () => {\n    const sortConditionIndex = _.findIndex(sortConditionData, {\n      condition_id: sortConditionId\n    });\n\n    sortConditionData.splice(sortConditionIndex, 1);\n    forceRerender();\n  };\n\n  for (const sortCond of sortConditionData) {\n    sortConditionComponents.push( /*#__PURE__*/_jsxs(\"div\", {\n      style: {\n        marginBottom: '0.5rem'\n      },\n      children: [/*#__PURE__*/_jsx(ColumnOptions, {\n        columnOptions: columnOptions,\n        condition: sortCond,\n        conditionData: sortConditionData,\n        disabled: disabled\n      }), /*#__PURE__*/_jsx(SortOptions, {\n        sortOptions: sortOptions,\n        condition: sortCond,\n        disabled: disabled\n      }), /*#__PURE__*/_jsx(Unless, {\n        condition: disabled,\n        children: /*#__PURE__*/_jsxs(ButtonGroup, {\n          style: {\n            marginLeft: '0.5rem'\n          },\n          size: \"small\",\n          children: [!(sortConditionData.length >= columnOptions.length) && /*#__PURE__*/_jsx(Tooltip, {\n            title: t('tooltip.sort_add_rule'),\n            children: /*#__PURE__*/_jsx(IconButton, {\n              onClick: addNewSortCondition(sortCond.condition_id),\n              children: /*#__PURE__*/_jsx(AddCircle, {\n                className: classes.iconButton\n              })\n            })\n          }), /*#__PURE__*/_jsx(Tooltip, {\n            title: t('tooltip.sort_remove_rule'),\n            children: /*#__PURE__*/_jsx(IconButton, {\n              onClick: removeSortCondition(sortCond.condition_id),\n              children: /*#__PURE__*/_jsx(Cancel, {\n                className: classes.iconButton\n              })\n            })\n          })]\n        })\n      })]\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(When, {\n      condition: sortConditionData.length === 0,\n      children: /*#__PURE__*/_jsxs(If, {\n        condition: disabled,\n        children: [/*#__PURE__*/_jsx(Then, {\n          children: /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              marginLeft: '1.6rem'\n            },\n            children: /*#__PURE__*/_jsx(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              color: \"textSecondary\",\n              children: t('sort_condition.no_sort_conditions')\n            })\n          })\n        }), /*#__PURE__*/_jsx(Else, {\n          children: /*#__PURE__*/_jsx(Tooltip, {\n            title: t('sort_condition.add_sort_condition'),\n            children: /*#__PURE__*/_jsx(IconButton, {\n              onClick: addNewSortCondition(),\n              children: /*#__PURE__*/_jsx(AddCircle, {\n                className: classes.iconButton\n              })\n            })\n          })\n        })]\n      })\n    }), sortConditionComponents]\n  });\n}\n\nexport default SortConditionList;","map":null,"metadata":{},"sourceType":"module"}