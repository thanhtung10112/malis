{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Fersher\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\AdvancedFilter\\\\ConditionTree\\\\index.tsx\";\nimport { useState } from 'react';\nimport { TreeView } from '@material-ui/lab';\nimport ConditionGroup from './ConditionGroup';\n\nfunction ConditionTree({\n  columnOptions,\n  comparatorOptions,\n  conjunctionOptions,\n  data,\n  disabled,\n  maxLevel = 2\n}) {\n  // Trick for forcing rerender\n  const {\n    1: setValue\n  } = useState(0);\n\n  const forceRerender = () => {\n    setValue(value => value + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TreeView, {\n      expanded: ['group'],\n      disableSelection: true,\n      children: /*#__PURE__*/_jsxDEV(ConditionGroup, {\n        level: 0,\n        groupData: data,\n        parent: null,\n        forceParentRerender: forceRerender,\n        columnOptions: columnOptions,\n        comparatorOptions: comparatorOptions,\n        conjunctionOptions: conjunctionOptions,\n        disabled: disabled,\n        maxLevel: maxLevel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\nexport default ConditionTree;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/components/AdvancedFilter/ConditionTree/index.tsx"],"names":["useState","TreeView","ConditionGroup","ConditionTree","columnOptions","comparatorOptions","conjunctionOptions","data","disabled","maxLevel","setValue","forceRerender","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA,iBAAjB;AAAoCC,EAAAA,kBAApC;AAAwDC,EAAAA,IAAxD;AAA8DC,EAAAA,QAA9D;AAAwEC,EAAAA,QAAQ,GAAG;AAAnF,CAAvB,EAA+G;AAC7G;AACA,QAAM;AAAA,OAAGC;AAAH,MAAeV,QAAQ,CAAC,CAAD,CAA7B;;AAEA,QAAMW,aAAa,GAAG,MAAM;AAC1BD,IAAAA,QAAQ,CAAEE,KAAD,IAAWA,KAAK,GAAG,CAApB,CAAR;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,CAAC,OAAD,CAApB;AAA+B,MAAA,gBAAgB,MAA/C;AAAA,6BACE,QAAC,cAAD;AACE,QAAA,KAAK,EAAE,CADT;AAEE,QAAA,SAAS,EAAEL,IAFb;AAGE,QAAA,MAAM,EAAE,IAHV;AAIE,QAAA,mBAAmB,EAAEI,aAJvB;AAKE,QAAA,aAAa,EAAEP,aALjB;AAME,QAAA,iBAAiB,EAAEC,iBANrB;AAOE,QAAA,kBAAkB,EAAEC,kBAPtB;AAQE,QAAA,QAAQ,EAAEE,QARZ;AASE,QAAA,QAAQ,EAAEC;AATZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAiBD;;AAED,eAAeN,aAAf","sourcesContent":["import { useState } from 'react'\n\nimport { TreeView } from '@material-ui/lab'\n\nimport ConditionGroup from './ConditionGroup'\n\nfunction ConditionTree({ columnOptions, comparatorOptions, conjunctionOptions, data, disabled, maxLevel = 2 }) {\n  // Trick for forcing rerender\n  const [, setValue] = useState(0)\n\n  const forceRerender = () => {\n    setValue((value) => value + 1)\n  }\n\n  return (\n    <>\n      <TreeView expanded={['group']} disableSelection>\n        <ConditionGroup\n          level={0}\n          groupData={data}\n          parent={null}\n          forceParentRerender={forceRerender}\n          columnOptions={columnOptions}\n          comparatorOptions={comparatorOptions}\n          conjunctionOptions={conjunctionOptions}\n          disabled={disabled}\n          maxLevel={maxLevel}\n        />\n      </TreeView>\n    </>\n  )\n}\n\nexport default ConditionTree\n"]},"metadata":{},"sourceType":"module"}