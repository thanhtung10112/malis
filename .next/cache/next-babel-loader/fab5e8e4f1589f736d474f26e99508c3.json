{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Part\\\\Assembly\\\\TabComponent.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFormContext } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport { makeStyles, Paper, Link } from '@material-ui/core';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { DataTable, DataTableNumberField } from '@/components';\nimport { partStore } from '@/store/reducers';\nimport * as dataForDD from '@/utils/dataForDD';\nimport { defaultProperties, editCell, rightColumn } from '@/utils/columnProperties';\nimport AppNumber from '@/helper/AppNumber';\nimport * as yup from 'yup';\nimport immer from 'immer';\nimport _ from 'lodash';\nimport { itemQuantityFormat } from '@/utils/constant';\nimport { isAssemblyByDpn } from '@/utils/isAssembly';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    total: {\n      fontWeight: theme.typography.fontWeightBold,\n      fontSize: theme.typography.body1.fontSize,\n      borderTop: '1.5px solid #DAE1EC',\n      '&:hover': {\n        backgroundColor: 'transparent !important'\n      },\n      '& .MuiDataGrid-cellCheckbox': {\n        opacity: 0\n      },\n      '& .MuiDataGrid-cell:nth-child(2)': {\n        opacity: 0\n      }\n    }\n  };\n});\n\nvar TabComponent = function TabComponent() {\n  _s();\n\n  var _useTranslation = useTranslation('assembly'),\n      t = _useTranslation.t;\n\n  var classes = useStyles();\n  var assemblyForm = useFormContext();\n  var watchItems = assemblyForm.watch('items', []) || [];\n  var wacthDrawingId = assemblyForm.watch('drawing_id', dataForDD.defaultValue);\n  var dispatch = useDispatch();\n  var drawingItems = useSelector(partStore.selectDrawingItems);\n  useEffect(function () {\n    if ((wacthDrawingId === null || wacthDrawingId === void 0 ? void 0 : wacthDrawingId.value) && drawingItems.length === 0) {\n      dispatch(partStore.sagaGetDrawingItems(wacthDrawingId.value));\n    }\n  }, []);\n\n  var handleChangeQuantity = function handleChangeQuantity(item_id, value) {\n    var _assemblyForm$getValu = assemblyForm.getValues(),\n        items = _assemblyForm$getValu.items;\n\n    var quantity = AppNumber.convertToNumber(value);\n    var newItems = immer(items, function (draft) {\n      var index = _.findIndex(draft, {\n        item_id: item_id\n      });\n\n      if (index === -1) {\n        draft.push({\n          item_id: item_id,\n          quantity: quantity\n        });\n      } else {\n        draft[index].quantity = quantity;\n      }\n    });\n    assemblyForm.setValue('items', newItems);\n  };\n\n  var getMultipMass = function getMultipMass(item_id, qty) {\n    var item = _.find(drawingItems, {\n      item_id: item_id\n    });\n\n    var mass = (item === null || item === void 0 ? void 0 : item.mass) || 0;\n    return qty * mass;\n  };\n\n  var getTotalMass = function getTotalMass() {\n    var totalMass = watchItems.reduce(function (prevValue, currentValue) {\n      var multipMass = getMultipMass(currentValue.item_id, currentValue.quantity);\n      return prevValue + multipMass;\n    }, 0);\n    return AppNumber.format(totalMass, itemQuantityFormat);\n  };\n\n  var handleOpenPartDialog = function handleOpenPartDialog(id, dpn) {\n    return function (event) {\n      event.preventDefault();\n      var entity = isAssemblyByDpn(dpn) ? 'assembly' : 'item';\n      dispatch(partStore.sagaOpenUpdateDialog({\n        id: id,\n        entity: entity\n      }));\n    };\n  };\n\n  var columns = [_objectSpread(_objectSpread({}, defaultProperties), {}, {\n    field: 'raw_item_id',\n    headerName: 'Item',\n    flex: 0.15,\n    renderCell: function renderCell(params) {\n      var value = params.value,\n          id = params.id;\n      return /*#__PURE__*/_jsxDEV(Link, {\n        href: \"#\",\n        onClick: handleOpenPartDialog(id, value),\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this);\n    }\n  }), _objectSpread(_objectSpread(_objectSpread({}, editCell('Quantity')), rightColumn), {}, {\n    field: 'quantity',\n    flex: 0.15,\n    sortable: false,\n    valueGetter: function valueGetter(params) {\n      var item = _.find(watchItems, {\n        item_id: params.id\n      });\n\n      return (item === null || item === void 0 ? void 0 : item.quantity) || 0;\n    },\n    valueFormatter: function valueFormatter(params) {\n      return AppNumber.format(params.value, itemQuantityFormat);\n    },\n    renderEditCell: function renderEditCell(params) {\n      return /*#__PURE__*/_jsxDEV(DataTableNumberField, {\n        params: params,\n        onChangeValue: handleChangeQuantity,\n        rules: yup.number().nullable().required(t('validation_message.quantity_range')).min(itemQuantityFormat.min, t('validation_message.quantity_range')).max(itemQuantityFormat.max, t('validation_message.quantity_range'))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this);\n    }\n  }), _objectSpread(_objectSpread({}, rightColumn), {}, {\n    sortable: false,\n    field: 'mass',\n    headerName: 'Unit Mass (kg)',\n    flex: 0.15,\n    valueFormatter: function valueFormatter(params) {\n      return AppNumber.format(params.value, itemQuantityFormat);\n    }\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    field: 'reference_to',\n    headerName: 'Reference',\n    flex: 0.2,\n    renderCell: function renderCell(params) {\n      var value = params.value,\n          row = params.row;\n      return /*#__PURE__*/_jsxDEV(Link, {\n        href: \"#\",\n        onClick: handleOpenPartDialog(row.id_ref, value),\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this);\n    }\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    field: 'description',\n    headerName: 'Description',\n    flex: 0.15\n  }), _objectSpread(_objectSpread({\n    field: 'total_mass',\n    headerName: 'Mass (kg)',\n    flex: 0.2,\n    sortable: false\n  }, rightColumn), {}, {\n    valueGetter: function valueGetter(params) {\n      var quantity = params.getValue(params.id, 'quantity');\n      var mass = params.getValue(params.id, 'mass');\n      return quantity * mass;\n    },\n    valueFormatter: function valueFormatter(params) {\n      return AppNumber.format(params.value, itemQuantityFormat);\n    }\n  })];\n  var columnsTotal = [_objectSpread(_objectSpread({}, defaultProperties), {}, {\n    field: 'raw_item_id',\n    headerName: 'Item',\n    flex: 0.15\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    field: 'quantity',\n    flex: 0.15\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    field: 'mass',\n    headerName: 'Unit Mass (kg)'\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    field: 'reference',\n    headerName: 'Reference',\n    flex: 0.15\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    field: 'description',\n    headerName: 'Description',\n    flex: 0.2\n  }), _objectSpread(_objectSpread({}, rightColumn), {}, {\n    field: 'total_mass',\n    headerName: 'Mass (kg)',\n    flex: 0.2\n  })];\n  var totalRows = {\n    id: 1,\n    description: 'Total',\n    total_mass: getTotalMass()\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 1,\n    children: [/*#__PURE__*/_jsxDEV(DataTable, {\n      getRowId: function getRowId(params) {\n        return params.item_id;\n      },\n      hideFooter: true,\n      disableSelectionOnClick: true,\n      disableColumnMenu: true,\n      tableHeight: 280,\n      rows: drawingItems,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 35,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        disableSelectionOnClick: true,\n        disableColumnMenu: true,\n        checkboxSelection: true,\n        hideFooter: true,\n        columns: columnsTotal,\n        headerHeight: 0,\n        rowHeight: 35,\n        getRowClassName: function getRowClassName() {\n          return classes.total;\n        },\n        rows: [totalRows],\n        onCellDoubleClick: function onCellDoubleClick(_, event) {\n          event.stopPropagation();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TabComponent, \"he5+8SOg4iIDCtoLsgCjqcvP0TM=\", false, function () {\n  return [useTranslation, useStyles, useFormContext, useDispatch, useSelector];\n});\n\n_c = TabComponent;\nexport default TabComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TabComponent\");","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Part/Assembly/TabComponent.tsx"],"names":["useEffect","useDispatch","useSelector","useFormContext","useTranslation","makeStyles","Paper","Link","DataGrid","DataTable","DataTableNumberField","partStore","dataForDD","defaultProperties","editCell","rightColumn","AppNumber","yup","immer","_","itemQuantityFormat","isAssemblyByDpn","useStyles","theme","total","fontWeight","typography","fontWeightBold","fontSize","body1","borderTop","backgroundColor","opacity","TabComponent","t","classes","assemblyForm","watchItems","watch","wacthDrawingId","defaultValue","dispatch","drawingItems","selectDrawingItems","value","length","sagaGetDrawingItems","handleChangeQuantity","item_id","getValues","items","quantity","convertToNumber","newItems","draft","index","findIndex","push","setValue","getMultipMass","qty","item","find","mass","getTotalMass","totalMass","reduce","prevValue","currentValue","multipMass","format","handleOpenPartDialog","id","dpn","event","preventDefault","entity","sagaOpenUpdateDialog","columns","field","headerName","flex","renderCell","params","sortable","valueGetter","valueFormatter","renderEditCell","number","nullable","required","min","max","row","id_ref","getValue","columnsTotal","totalRows","description","total_mass","height","width","stopPropagation"],"mappings":"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","sourcesContent":["import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useFormContext } from 'react-hook-form'\nimport { useTranslation } from 'react-i18next'\n\nimport { makeStyles, Paper, Link } from '@material-ui/core'\nimport { DataGrid } from '@material-ui/data-grid'\nimport { DataTable, DataTableNumberField } from '@/components'\n\nimport { partStore } from '@/store/reducers'\nimport * as dataForDD from '@/utils/dataForDD'\nimport { defaultProperties, editCell, rightColumn } from '@/utils/columnProperties'\nimport AppNumber from '@/helper/AppNumber'\nimport * as yup from 'yup'\nimport immer from 'immer'\nimport _ from 'lodash'\nimport { itemQuantityFormat } from '@/utils/constant'\nimport { isAssemblyByDpn } from '@/utils/isAssembly'\n\nimport type { AssemblyDetail } from '@/types/Assembly'\nimport type { DataForDropdown } from '@/types/Common'\nimport type { GridColumns } from '@material-ui/data-grid'\n\nconst useStyles = makeStyles((theme) => ({\n  total: {\n    fontWeight: theme.typography.fontWeightBold,\n    fontSize: theme.typography.body1.fontSize,\n    borderTop: '1.5px solid #DAE1EC',\n    '&:hover': {\n      backgroundColor: 'transparent !important'\n    },\n    '& .MuiDataGrid-cellCheckbox': {\n      opacity: 0\n    },\n    '& .MuiDataGrid-cell:nth-child(2)': {\n      opacity: 0\n    }\n  }\n}))\n\nconst TabComponent: React.FC = () => {\n  const { t } = useTranslation('assembly')\n  const classes = useStyles()\n\n  const assemblyForm = useFormContext<AssemblyDetail>()\n  const watchItems = assemblyForm.watch('items', []) || []\n  const wacthDrawingId = assemblyForm.watch('drawing_id', dataForDD.defaultValue) as DataForDropdown\n\n  const dispatch = useDispatch()\n  const drawingItems = useSelector(partStore.selectDrawingItems)\n\n  useEffect(() => {\n    if (wacthDrawingId?.value && drawingItems.length === 0) {\n      dispatch(partStore.sagaGetDrawingItems(wacthDrawingId.value))\n    }\n  }, [])\n\n  const handleChangeQuantity = (item_id, value) => {\n    const { items } = assemblyForm.getValues()\n    const quantity = AppNumber.convertToNumber(value)\n    const newItems = immer(items, (draft) => {\n      const index = _.findIndex(draft, { item_id })\n      if (index === -1) {\n        draft.push({ item_id, quantity })\n      } else {\n        draft[index].quantity = quantity\n      }\n    })\n    assemblyForm.setValue('items', newItems)\n  }\n\n  const getMultipMass = (item_id: number, qty: number) => {\n    const item = _.find(drawingItems, { item_id })\n    const mass = item?.mass || 0\n    return qty * mass\n  }\n\n  const getTotalMass = () => {\n    const totalMass = watchItems.reduce((prevValue, currentValue) => {\n      const multipMass = getMultipMass(currentValue.item_id, currentValue.quantity)\n      return prevValue + multipMass\n    }, 0)\n    return AppNumber.format(totalMass, itemQuantityFormat)\n  }\n\n  const handleOpenPartDialog = (id: number, dpn: string) => (event) => {\n    event.preventDefault()\n    const entity = isAssemblyByDpn(dpn) ? 'assembly' : 'item'\n    dispatch(partStore.sagaOpenUpdateDialog({ id, entity }))\n  }\n\n  const columns: GridColumns = [\n    {\n      ...defaultProperties,\n      field: 'raw_item_id',\n      headerName: 'Item',\n      flex: 0.15,\n      renderCell(params) {\n        const { value, id } = params\n        return (\n          <Link href=\"#\" onClick={handleOpenPartDialog(id as number, value as string)}>\n            {value}\n          </Link>\n        )\n      }\n    },\n    {\n      ...editCell('Quantity'),\n      ...rightColumn,\n      field: 'quantity',\n      flex: 0.15,\n      sortable: false,\n      valueGetter(params) {\n        const item = _.find(watchItems, { item_id: params.id }) as any\n        return item?.quantity || 0\n      },\n      valueFormatter(params) {\n        return AppNumber.format(params.value, itemQuantityFormat)\n      },\n      renderEditCell(params) {\n        return (\n          <DataTableNumberField\n            params={params}\n            onChangeValue={handleChangeQuantity}\n            rules={yup\n              .number()\n              .nullable()\n              .required(t('validation_message.quantity_range'))\n              .min(itemQuantityFormat.min, t('validation_message.quantity_range'))\n              .max(itemQuantityFormat.max, t('validation_message.quantity_range'))}\n          />\n        )\n      }\n    },\n    {\n      ...rightColumn,\n      sortable: false,\n      field: 'mass',\n      headerName: 'Unit Mass (kg)',\n      flex: 0.15,\n      valueFormatter(params) {\n        return AppNumber.format(params.value, itemQuantityFormat)\n      }\n    },\n    {\n      ...defaultProperties,\n      field: 'reference_to',\n      headerName: 'Reference',\n      flex: 0.2,\n      renderCell(params) {\n        const { value, row } = params\n        return (\n          <Link href=\"#\" onClick={handleOpenPartDialog(row.id_ref, value as string)}>\n            {value}\n          </Link>\n        )\n      }\n    },\n    {\n      ...defaultProperties,\n      field: 'description',\n      headerName: 'Description',\n      flex: 0.15\n    },\n    {\n      field: 'total_mass',\n      headerName: 'Mass (kg)',\n      flex: 0.2,\n      sortable: false,\n      ...rightColumn,\n      valueGetter(params) {\n        const quantity = params.getValue(params.id, 'quantity') as number\n        const mass = params.getValue(params.id, 'mass') as number\n        return quantity * mass\n      },\n      valueFormatter(params) {\n        return AppNumber.format(params.value, itemQuantityFormat)\n      }\n    }\n  ]\n\n  const columnsTotal: GridColumns = [\n    {\n      ...defaultProperties,\n      field: 'raw_item_id',\n      headerName: 'Item',\n      flex: 0.15\n    },\n    {\n      ...defaultProperties,\n      field: 'quantity',\n      flex: 0.15\n    },\n    {\n      ...defaultProperties,\n      field: 'mass',\n      headerName: 'Unit Mass (kg)'\n    },\n    {\n      ...defaultProperties,\n      field: 'reference',\n      headerName: 'Reference',\n      flex: 0.15\n    },\n    {\n      ...defaultProperties,\n      field: 'description',\n      headerName: 'Description',\n      flex: 0.2\n    },\n    {\n      ...rightColumn,\n      field: 'total_mass',\n      headerName: 'Mass (kg)',\n      flex: 0.2\n    }\n  ]\n\n  const totalRows = {\n    id: 1,\n    description: 'Total',\n    total_mass: getTotalMass()\n  }\n\n  return (\n    <Paper elevation={1}>\n      <DataTable\n        getRowId={(params) => params.item_id}\n        hideFooter\n        disableSelectionOnClick\n        disableColumnMenu\n        tableHeight={280}\n        rows={drawingItems}\n        columns={columns}\n      />\n      <div style={{ height: 35, width: '100%' }}>\n        <DataGrid\n          disableSelectionOnClick\n          disableColumnMenu\n          checkboxSelection\n          hideFooter\n          columns={columnsTotal}\n          headerHeight={0}\n          rowHeight={35}\n          getRowClassName={() => classes.total}\n          rows={[totalRows]}\n          onCellDoubleClick={(_, event) => {\n            event.stopPropagation()\n          }}\n        />\n      </div>\n    </Paper>\n  )\n}\n\nexport default TabComponent\n"]},"metadata":{},"sourceType":"module"}