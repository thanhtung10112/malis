{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice, createAction, createSelector } from '@reduxjs/toolkit';\nimport _ from 'lodash';\nimport { actionTypes } from '@/utils/constant';\nimport createExtraActions from '@/utils/createExtraActions';\nexport var name = 'parameter_type';\nexport var resetState = createAction(\"\".concat(name, \"/\").concat(actionTypes.RESET_STATE));\nexport var initialState = {\n  dataList: [],\n  detail: {\n    type_id: '',\n    category: 1,\n    is_multilingual: false,\n    description: '',\n    attributes: '',\n    nbr_default: 0\n  },\n  dialogState: {\n    open: false,\n    editMode: false,\n    loading: false,\n    historyLogs: []\n  },\n  initDataForList: {\n    permissions: {\n      application_parameter_type: null,\n      developer_parameter_type: null,\n      simple_parameter_type: null\n    },\n    wiki_page: '',\n    column_tooltips: {}\n  },\n  initDataForCE: {\n    categories: [],\n    wiki_page: ''\n  }\n};\nvar parameterTypeSlice = createSlice({\n  name: name,\n  initialState: initialState,\n  reducers: {\n    setDataList: function setDataList(state, _ref) {\n      var payload = _ref.payload;\n      state.dataList = payload;\n    },\n    setDetail: function setDetail(state, _ref2) {\n      var payload = _ref2.payload;\n      state.detail = _objectSpread(_objectSpread({}, state.detail), payload);\n    },\n    setDialogState: function setDialogState(state, _ref3) {\n      var payload = _ref3.payload;\n      state.dialogState = _objectSpread(_objectSpread({}, state.dialogState), payload);\n    },\n    setHistoryLogs: function setHistoryLogs(state, _ref4) {\n      var payload = _ref4.payload;\n      state.dialogState.historyLogs = payload;\n    },\n    setDialogStateOpen: function setDialogStateOpen(state, _ref5) {\n      var payload = _ref5.payload;\n      state.dialogState.open = payload;\n    },\n    setDialogStateEditMode: function setDialogStateEditMode(state, _ref6) {\n      var payload = _ref6.payload;\n      state.dialogState.editMode = payload;\n    },\n    setDialogStateLoading: function setDialogStateLoading(state, _ref7) {\n      var payload = _ref7.payload;\n      state.dialogState.loading = payload;\n    },\n    setInitDataForList: function setInitDataForList(state, _ref8) {\n      var payload = _ref8.payload;\n      state.initDataForList = payload;\n    },\n    setInitDataForCE: function setInitDataForCE(state, _ref9) {\n      var payload = _ref9.payload;\n      state.initDataForCE = payload;\n    },\n    setPermissions: function setPermissions(state, _ref10) {\n      var payload = _ref10.payload;\n      state.initDataForList.permissions = payload;\n    },\n    resetDetail: function resetDetail(state) {\n      state.detail = _objectSpread({}, initialState.detail);\n    }\n  },\n  extraReducers: _defineProperty({}, resetState.type, function () {\n    return initialState;\n  })\n});\nvar actions = parameterTypeSlice.actions;\nexport { actions };\nexport var extraActions = createExtraActions(name, {\n  getList: actionTypes.GET_LIST,\n  create: actionTypes.CREATE,\n  update: actionTypes.UPDATE,\n  openUpdateDialog: actionTypes.OPEN_UPDATE_DIALOG,\n  openCreateDialog: actionTypes.OPEN_CREATE_DIALOG,\n  executeOperation: actionTypes.EXECUTE_OPERATION,\n  closeDialog: actionTypes.CLOSE_DIALOG\n});\n\nvar selectState = function selectState(state) {\n  return state[name];\n};\n\nexport var selectDialogState = createSelector(selectState, function (_ref11) {\n  var dialogState = _ref11.dialogState;\n  return dialogState;\n});\nexport var selectDataList = createSelector(selectState, function (_ref12) {\n  var dataList = _ref12.dataList;\n  return dataList;\n});\nexport var selectDetail = createSelector(selectState, function (_ref13) {\n  var detail = _ref13.detail;\n  return detail;\n});\nexport var selectInitDataForList = createSelector(selectState, function (_ref14) {\n  var initDataForList = _ref14.initDataForList;\n  return initDataForList;\n});\nexport var selectInitDataForCE = createSelector(selectState, function (_ref15) {\n  var initDataForCE = _ref15.initDataForCE;\n  return initDataForCE;\n});\nexport var selectPermissions = createSelector(selectState, function (_ref16) {\n  var initDataForList = _ref16.initDataForList;\n  var permissions = initDataForList.permissions;\n\n  if (_.isNull(permissions.application_parameter_type)) {\n    return null;\n  }\n\n  var getPermissionBaseOnName = function getPermissionBaseOnName(name) {\n    return permissions.application_parameter_type[name] || permissions.developer_parameter_type[name] || permissions.simple_parameter_type[name];\n  };\n\n  return {\n    view: getPermissionBaseOnName('view'),\n    create: getPermissionBaseOnName('create'),\n    disable_enable: getPermissionBaseOnName('disable_enable'),\n    \"delete\": getPermissionBaseOnName('delete')\n  };\n});\nexport var selectEditPermission = createSelector(selectState, function (_ref17) {\n  var initDataForList = _ref17.initDataForList,\n      detail = _ref17.detail;\n  var permissions = initDataForList.permissions;\n  var category = detail.category;\n\n  if (_.isNull(permissions.application_parameter_type)) {\n    return false;\n  }\n\n  return category === 1 && permissions.simple_parameter_type.edit || category === 2 && permissions.application_parameter_type.edit || category === 3 && permissions.developer_parameter_type.edit;\n});\nexport default parameterTypeSlice;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/reducers/parameterType.reducer.ts"],"names":["createSlice","createAction","createSelector","_","actionTypes","createExtraActions","name","resetState","RESET_STATE","initialState","dataList","detail","type_id","category","is_multilingual","description","attributes","nbr_default","dialogState","open","editMode","loading","historyLogs","initDataForList","permissions","application_parameter_type","developer_parameter_type","simple_parameter_type","wiki_page","column_tooltips","initDataForCE","categories","parameterTypeSlice","reducers","setDataList","state","payload","setDetail","setDialogState","setHistoryLogs","setDialogStateOpen","setDialogStateEditMode","setDialogStateLoading","setInitDataForList","setInitDataForCE","setPermissions","resetDetail","extraReducers","type","actions","extraActions","getList","GET_LIST","create","CREATE","update","UPDATE","openUpdateDialog","OPEN_UPDATE_DIALOG","openCreateDialog","OPEN_CREATE_DIALOG","executeOperation","EXECUTE_OPERATION","closeDialog","CLOSE_DIALOG","selectState","selectDialogState","selectDataList","selectDetail","selectInitDataForList","selectInitDataForCE","selectPermissions","isNull","getPermissionBaseOnName","view","disable_enable","selectEditPermission","edit"],"mappings":"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","sourcesContent":["import { createSlice, createAction, PayloadAction, createSelector } from '@reduxjs/toolkit'\nimport _ from 'lodash'\n\nimport { actionTypes } from '@/utils/constant'\nimport createExtraActions from '@/utils/createExtraActions'\n\nimport type { Entity, HistoryLog } from '@/types/Common'\nimport type { RootReducerType } from './rootReducer'\nimport type {\n  ParameterTypeItem,\n  ParameterTypeInstace,\n  ParameterTypeInitDataForList,\n  ParameterTypeInitDataForCE,\n  ParameterTypePermissions,\n  ParameterTypePermission\n} from '@/types/ParameterType'\n\nexport const name: Entity = 'parameter_type'\nexport const resetState = createAction(`${name}/${actionTypes.RESET_STATE}`)\nexport const initialState = {\n  dataList: [],\n  detail: {\n    type_id: '',\n    category: 1,\n    is_multilingual: false,\n    description: '',\n    attributes: '',\n    nbr_default: 0\n  } as ParameterTypeInstace,\n  dialogState: {\n    open: false,\n    editMode: false,\n    loading: false,\n    historyLogs: [] as HistoryLog[]\n  },\n  initDataForList: {\n    permissions: {\n      application_parameter_type: null,\n      developer_parameter_type: null,\n      simple_parameter_type: null\n    },\n    wiki_page: '',\n    column_tooltips: {}\n  } as ParameterTypeInitDataForList,\n  initDataForCE: {\n    categories: [],\n    wiki_page: ''\n  } as ParameterTypeInitDataForCE\n}\n\nconst parameterTypeSlice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setDataList(state, { payload }: PayloadAction<ParameterTypeItem[]>) {\n      state.dataList = payload\n    },\n    setDetail(state, { payload }: PayloadAction<Partial<ParameterTypeInstace>>) {\n      state.detail = {\n        ...state.detail,\n        ...payload\n      }\n    },\n    setDialogState(state, { payload }: PayloadAction<Partial<typeof initialState.dialogState>>) {\n      state.dialogState = {\n        ...state.dialogState,\n        ...payload\n      }\n    },\n    setHistoryLogs(state, { payload }: PayloadAction<HistoryLog[]>) {\n      state.dialogState.historyLogs = payload\n    },\n    setDialogStateOpen(state, { payload }: PayloadAction<boolean>) {\n      state.dialogState.open = payload\n    },\n    setDialogStateEditMode(state, { payload }: PayloadAction<boolean>) {\n      state.dialogState.editMode = payload\n    },\n    setDialogStateLoading(state, { payload }: PayloadAction<boolean>) {\n      state.dialogState.loading = payload\n    },\n    setInitDataForList(state, { payload }: PayloadAction<ParameterTypeInitDataForList>) {\n      state.initDataForList = payload\n    },\n    setInitDataForCE(state, { payload }: PayloadAction<ParameterTypeInitDataForCE>) {\n      state.initDataForCE = payload\n    },\n    setPermissions(state, { payload }: PayloadAction<ParameterTypePermissions>) {\n      state.initDataForList.permissions = payload\n    },\n    resetDetail(state) {\n      state.detail = { ...initialState.detail }\n    }\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState\n    }\n  }\n})\n\nexport const { actions } = parameterTypeSlice\n\nexport const extraActions = createExtraActions(name, {\n  getList: actionTypes.GET_LIST,\n  create: actionTypes.CREATE,\n  update: actionTypes.UPDATE,\n  openUpdateDialog: actionTypes.OPEN_UPDATE_DIALOG,\n  openCreateDialog: actionTypes.OPEN_CREATE_DIALOG,\n  executeOperation: actionTypes.EXECUTE_OPERATION,\n  closeDialog: actionTypes.CLOSE_DIALOG\n})\n\nconst selectState = (state: RootReducerType) => state[name]\nexport const selectDialogState = createSelector(selectState, ({ dialogState }) => dialogState)\nexport const selectDataList = createSelector(selectState, ({ dataList }) => dataList)\nexport const selectDetail = createSelector(selectState, ({ detail }) => detail)\nexport const selectInitDataForList = createSelector(selectState, ({ initDataForList }) => initDataForList)\nexport const selectInitDataForCE = createSelector(selectState, ({ initDataForCE }) => initDataForCE)\n\nexport const selectPermissions = createSelector(selectState, ({ initDataForList }) => {\n  const { permissions } = initDataForList\n  if (_.isNull(permissions.application_parameter_type)) {\n    return null\n  }\n  const getPermissionBaseOnName = (name: keyof ParameterTypePermission) =>\n    permissions.application_parameter_type[name] ||\n    permissions.developer_parameter_type[name] ||\n    permissions.simple_parameter_type[name]\n  return {\n    view: getPermissionBaseOnName('view'),\n    create: getPermissionBaseOnName('create'),\n    disable_enable: getPermissionBaseOnName('disable_enable'),\n    delete: getPermissionBaseOnName('delete')\n  }\n})\n\nexport const selectEditPermission = createSelector(selectState, ({ initDataForList, detail }) => {\n  const { permissions } = initDataForList\n  const { category } = detail\n  if (_.isNull(permissions.application_parameter_type)) {\n    return false\n  }\n  return (\n    (category === 1 && permissions.simple_parameter_type.edit) ||\n    (category === 2 && permissions.application_parameter_type.edit) ||\n    (category === 3 && permissions.developer_parameter_type.edit)\n  )\n})\nexport default parameterTypeSlice\n"]},"metadata":{},"sourceType":"module"}