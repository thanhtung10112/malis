{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useMemo, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFormContext } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport { Grid, Button, Paper } from '@material-ui/core';\nimport { CreateIcon, DeleteIcon, DataTable, AppAutocomplete } from '@/components';\nimport _ from 'lodash';\nimport { locationStore } from '@/store/reducers';\nimport { centerColumn, defaultProperties } from '@/utils/columnProperties';\n\nvar TabSpecialties = function TabSpecialties() {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var _useState = useState([]),\n      selectedSpecialties = _useState[0],\n      setSelectedSpecialties = _useState[1];\n\n  var _useState2 = useState([]),\n      selectedRows = _useState2[0],\n      setSelectedRows = _useState2[1];\n\n  var locationForm = useFormContext();\n  var watchSpecialties = locationForm.watch('specialties', '');\n\n  var _useSelector = useSelector(locationStore.selectInitDataForCE),\n      parameters = _useSelector.parameters;\n\n  var specialtiesList = useMemo(function () {\n    if (!watchSpecialties) {\n      return [];\n    }\n\n    var list = watchSpecialties.split(';');\n    return parameters.SSPE.filter(function (item) {\n      return list.includes(item.parameter_id);\n    });\n  }, [watchSpecialties]);\n  var filterOptions = useCallback(function (options) {\n    return _.differenceWith(options, specialtiesList, _.isEqual);\n  }, [specialtiesList]);\n\n  var handleAddSpecialties = function handleAddSpecialties() {\n    var idSpecialties = selectedSpecialties.map(function (_ref) {\n      var parameter_id = _ref.parameter_id;\n      return parameter_id;\n    }).join(';');\n    setSelectedSpecialties([]);\n    var newList = watchSpecialties ? \"\".concat(watchSpecialties, \";\").concat(idSpecialties) : idSpecialties;\n    locationForm.setValue('specialties', newList);\n  };\n\n  var handleSelectSpecialties = function handleSelectSpecialties(_, specialties) {\n    setSelectedSpecialties(specialties);\n  };\n\n  var handleSelectRows = function handleSelectRows(params) {\n    setSelectedRows(params.selectionModel);\n  };\n\n  var handleRemoveRows = function handleRemoveRows() {\n    var filterItem = specialtiesList.filter(function (item) {\n      return !selectedRows.includes(item.id);\n    }).map(function (item) {\n      return item.parameter_id;\n    }).join(';');\n    setSelectedRows([]);\n    locationForm.setValue('specialties', filterItem);\n  };\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      alignItems: \"center\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 8,\n        children: /*#__PURE__*/_jsx(AppAutocomplete, {\n          label: \"Specialties\",\n          style: {\n            marginTop: 4\n          },\n          value: selectedSpecialties,\n          multiple: true,\n          limitTags: 2,\n          disableCloseOnSelect: true,\n          options: parameters.SSPE,\n          filterOptions: filterOptions,\n          renderOption: function renderOption(_ref2) {\n            var parameter_id = _ref2.parameter_id,\n                description = _ref2.description;\n            return \"\".concat(parameter_id, \" - \").concat(description);\n          },\n          onChange: handleSelectSpecialties\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 2,\n        children: /*#__PURE__*/_jsx(Button, {\n          startIcon: /*#__PURE__*/_jsx(CreateIcon, {}),\n          disabled: selectedSpecialties.length === 0,\n          onClick: handleAddSpecialties,\n          children: t('common:button.add')\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 2,\n        style: {\n          padding: 0\n        },\n        children: /*#__PURE__*/_jsx(Button, {\n          startIcon: /*#__PURE__*/_jsx(DeleteIcon, {}),\n          disabled: selectedRows.length === 0,\n          onClick: handleRemoveRows,\n          children: t('common:button.remove')\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsx(Paper, {\n          elevation: 2,\n          children: /*#__PURE__*/_jsx(DataTable, {\n            rows: specialtiesList,\n            columns: [_objectSpread(_objectSpread(_objectSpread({}, defaultProperties), centerColumn), {}, {\n              field: 'parameter_id',\n              headerName: 'Parameter #',\n              flex: 0.25\n            }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n              field: 'description',\n              headerName: 'Description',\n              flex: 0.85\n            })],\n            hideFooter: true,\n            tableHeight: 430,\n            checkboxSelection: true,\n            selectionModel: selectedRows,\n            onSelectionModelChange: handleSelectRows\n          })\n        })\n      })]\n    })\n  });\n};\n\nexport default TabSpecialties;","map":null,"metadata":{},"sourceType":"module"}