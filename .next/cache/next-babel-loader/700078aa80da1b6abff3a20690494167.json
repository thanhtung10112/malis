{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { takeLatest, call, put, putResolve, takeEvery } from 'redux-saga/effects';\nimport { select, all } from 'typed-redux-saga';\nimport { createAction } from '@reduxjs/toolkit';\nimport _ from 'lodash';\nimport { partStore, commonStore, drawingStore } from '@/store/reducers';\nimport * as errorSaga from '@/store/saga/errorSaga';\nimport { getDefaultValues } from '@/utils/getDefaultValues';\nimport { actionTypes } from '@/utils/constant';\nimport { isAssemblyByDpn } from '@/utils/isAssembly';\nimport itemApi from '@/apis/item.api';\nimport assemblyApi from '@/apis/assembly.api';\nimport partRefApi from '@/apis/part.api';\nimport manufacturerApi from '@/apis/manufacturer.api';\nimport drawingApi from '@/apis/drawing.api';\n\nconst getPartApi = entity => entity === 'item' ? itemApi : assemblyApi;\n\nfunction* fetchGenerateCode(entity, drawing) {\n  const partApi = getPartApi(entity);\n  const {\n    generated_code\n  } = yield call(partApi.getGenerateCode, drawing.value);\n  return generated_code;\n}\n\nfunction* openPartCreateDialog({\n  payload\n}) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    const partApi = getPartApi(payload);\n    const {\n      userJob,\n      userDrawing\n    } = yield* all({\n      userJob: select(commonStore.selectUserValueJob),\n      userDrawing: select(commonStore.selectUserValueDrawing)\n    });\n    const initDetail = payload === 'item' ? partStore.itemDetail : partStore.assemblyDetail;\n\n    const _yield$call = yield call(partApi.getInitDataForCE, {\n      job_id_pk: userJob.value\n    }),\n          {\n      permissions,\n      wiki_page\n    } = _yield$call,\n          initData = _objectWithoutProperties(_yield$call, [\"permissions\", \"wiki_page\"]);\n\n    const defaultValues = getDefaultValues(initData.parameters, {\n      unit: 'UNIT'\n    }, initDetail);\n    defaultValues.drawing_id = userDrawing.value < 0 ? null : userDrawing;\n    defaultValues.job_id = userJob.value;\n\n    if (defaultValues.drawing_id) {\n      defaultValues.dpn = yield call(fetchGenerateCode, payload, defaultValues.drawing_id);\n    }\n\n    yield putResolve(partStore.actions.setInitData(initData));\n    yield put(partStore.actions.addPart({\n      detail: defaultValues,\n      wiki_page,\n      permissions: permissions[payload]\n    }));\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* createPart({\n  payload\n}) {\n  yield put(partStore.actions.setPartLoading(true));\n\n  try {\n    const {\n      entity,\n      formData\n    } = payload;\n    const partApi = getPartApi(entity);\n    const {\n      message\n    } = yield call(partApi.create, formData);\n    const {\n      userJob,\n      userDrawing\n    } = yield* all({\n      userJob: select(commonStore.selectUserValueJob),\n      userDrawing: select(commonStore.selectUserValueDrawing)\n    });\n    let generateCode = '';\n\n    if (userDrawing.value >= 0) {\n      generateCode = yield call(fetchGenerateCode, entity, userDrawing);\n    }\n\n    yield putResolve(partStore.actions.resetCurrentPart({\n      userJob,\n      userDrawing,\n      generateCode\n    }));\n    yield all([put(commonStore.actions.setSuccessMessage(message)), put(partStore.actions.setPartTab(0))]);\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(partStore.actions.setPartLoading(false));\n}\n\nconst getPartDpn = (entity, dpn) => {\n  // const type = entity === 'item' ? 'H' : 'G'\n  const regexItem = /H\\S+/g;\n  const regexAssembly = /G\\S+/g;\n  const regex = entity === 'item' ? regexItem : regexAssembly;\n  const match = dpn.match(regex);\n\n  if (_.isArray(match)) {\n    return match[0];\n  }\n\n  return '';\n};\n\nfunction* fetchPartDetail(entity, id) {\n  const partApi = getPartApi(entity);\n  const data = yield call(partApi.getDetail, id);\n  const partDetail = data[entity];\n  partDetail.dpn = getPartDpn(entity, partDetail.dpn);\n  partDetail.drawing_id = partDetail.related_drawing;\n  partDetail.items = (partDetail.components || []).map(({\n    id,\n    quantity\n  }) => ({\n    item_id: id,\n    quantity\n  }));\n\n  if (entity === 'item') {\n    partDetail.manufacturer_equiv = partDetail.manufacturer_equiv_object;\n    partDetail.material_equiv = partDetail.material_equiv_object;\n  }\n\n  return partDetail;\n}\n\nfunction* openPartUpdateDialog({\n  payload\n}) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    const {\n      id,\n      entity\n    } = payload;\n    const partApi = getPartApi(entity);\n    const partDetail = yield call(fetchPartDetail, entity, id);\n\n    const _yield$call2 = yield call(partApi.getInitDataForCE, {\n      job_id_pk: partDetail.job_id\n    }),\n          {\n      permissions,\n      wiki_page\n    } = _yield$call2,\n          initData = _objectWithoutProperties(_yield$call2, [\"permissions\", \"wiki_page\"]);\n\n    yield putResolve(partStore.actions.setInitData(initData));\n    yield put(partStore.actions.addPart({\n      detail: partDetail,\n      wiki_page,\n      permissions: permissions[entity]\n    }));\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* updatePart({\n  payload\n}) {\n  yield put(partStore.actions.setPartLoading(true));\n\n  try {\n    const {\n      entity,\n      formData,\n      id\n    } = payload;\n    const partApi = getPartApi(entity);\n    const {\n      message\n    } = yield call(partApi.update, id, formData);\n    yield call(closePartDialog);\n    yield put(commonStore.actions.setSuccessMessage(message));\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(partStore.actions.setPartLoading(false));\n}\n\nfunction* closePartDialog() {\n  try {\n    yield putResolve(partStore.actions.removePart());\n    const partList = yield* select(partStore.selectPartList);\n    const entity = yield* select(commonStore.selectEntity);\n\n    if (partList.length > 0) {\n      const {\n        detail\n      } = _.last(partList);\n\n      const partEntity = detail.is_assembly ? 'assembly' : 'item';\n      const partDetail = yield call(fetchPartDetail, partEntity, detail.id);\n      yield put(partStore.actions.updateCurrentPart(partDetail));\n\n      if (isAssemblyByDpn(detail.dpn)) {\n        yield call(getDrawingItems, {\n          type: '',\n          payload: partDetail.related_drawing.value\n        });\n      }\n\n      return;\n    }\n\n    if (entity === 'drawing') {\n      yield put(drawingStore.sagaGetDrawingPartList());\n    } else {\n      const getListAction = createAction(`${entity}/${actionTypes.GET_LIST}`);\n      yield put(getListAction());\n    }\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n}\n\nfunction* openManuDialog({\n  payload\n}) {\n  yield put(partStore.actions.setPartLoading(true));\n\n  try {\n    yield put(partStore.actions.updateCurrentPart(payload));\n\n    const _yield$call3 = yield call(manufacturerApi.getInitDataForCE),\n          {\n      next_code\n    } = _yield$call3,\n          initData = _objectWithoutProperties(_yield$call3, [\"next_code\"]);\n\n    yield all([putResolve(partStore.actions.setManuDetail({\n      manufacturer_id: next_code\n    })), putResolve(partStore.actions.setManuInitData(initData))]);\n    yield put(partStore.actions.setManuDialogOpen(true));\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(partStore.actions.setPartLoading(false));\n}\n\nfunction* createManu({\n  payload\n}) {\n  yield put(partStore.actions.setManuDialogLoading(true));\n\n  try {\n    const {\n      message,\n      id\n    } = yield call(manufacturerApi.create, payload);\n    const {\n      next_code\n    } = yield call(manufacturerApi.getInitDataForCE);\n    const {\n      name\n    } = payload;\n    yield putResolve(partStore.actions.setManuDetail(_objectSpread(_objectSpread({}, partStore.initialState.manufacturer.detail), {}, {\n      manufacturer_id: next_code\n    })));\n    yield all([put(commonStore.actions.setSuccessMessage(message)), put(partStore.actions.addManufacturer({\n      manufacturer_id: id,\n      reference: '',\n      description: name\n    }))]);\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(partStore.actions.setManuDialogLoading(false));\n}\n\nfunction* closeManuDialog() {\n  yield putResolve(partStore.actions.setManuDialogOpen(false));\n  yield put(partStore.actions.setManuDetail({\n    manufacturer_id: null,\n    name: ''\n  }));\n}\n\nfunction* getManuId({\n  payload\n}) {\n  yield put(partStore.actions.setManuDialogLoading(true));\n\n  try {\n    const {\n      generated_code\n    } = yield call(manufacturerApi.getNextCode, payload.manufacturer_id);\n    yield put(partStore.actions.setManuDetail(_objectSpread(_objectSpread({}, payload), {}, {\n      manufacturer_id: generated_code\n    })));\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(partStore.actions.setManuDialogLoading(false));\n}\n\nfunction* getItemCopy({\n  payload\n}) {\n  yield put(partStore.actions.setPartLoading(true));\n\n  try {\n    const data = yield call(partRefApi.getDetail, payload.value); // get the allowed attributes\n\n    const part = _.pick(data.part, ['descriptions', 'manufacturer_equiv', 'manufacturers', 'mass', 'material_equiv', 'unit', 'manufacturer_equiv_standards', 'material_equiv_standards']);\n\n    part.manufacturer_equiv = data.part.manufacturer_equiv_object;\n    part.material_equiv = data.part.material_equiv_object;\n    yield put(partStore.actions.updateCurrentPart(part));\n    yield put(commonStore.actions.setSuccessMessage(data.message));\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(partStore.actions.setPartLoading(false));\n}\n\nfunction* getDrawingItems({\n  payload\n}) {\n  yield put(partStore.actions.setPartLoading(true));\n\n  try {\n    const {\n      items\n    } = yield call(drawingApi.getItemList, payload);\n    yield put(partStore.actions.setDrawingItems(items));\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(partStore.actions.setPartLoading(false));\n}\n\nfunction* partSaga() {\n  yield takeLatest(partStore.sagaOpenCreateDialog, openPartCreateDialog);\n  yield takeLatest(partStore.sagaCreate, createPart);\n  yield takeLatest(partStore.sagaOpenUpdateDialog, openPartUpdateDialog);\n  yield takeLatest(partStore.sagaUpdate, updatePart);\n  yield takeEvery(partStore.sagaCloseDialog, closePartDialog);\n  yield takeLatest(partStore.sagaOpenManuDialog, openManuDialog);\n  yield takeEvery(partStore.sagaCreateManu, createManu);\n  yield takeEvery(partStore.sagaCloseManuDialog, closeManuDialog);\n  yield takeLatest(partStore.sagaGetManuId, getManuId);\n  yield takeLatest(partStore.sagaGetItemCopy, getItemCopy);\n  yield takeLatest(partStore.sagaGetDrawingItems, getDrawingItems);\n}\n\nexport default partSaga;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/saga/part.saga.ts"],"names":["takeLatest","call","put","putResolve","takeEvery","select","all","createAction","_","partStore","commonStore","drawingStore","errorSaga","getDefaultValues","actionTypes","isAssemblyByDpn","itemApi","assemblyApi","partRefApi","manufacturerApi","drawingApi","getPartApi","entity","fetchGenerateCode","drawing","partApi","generated_code","getGenerateCode","value","openPartCreateDialog","payload","actions","setLoadingPage","userJob","userDrawing","selectUserValueJob","selectUserValueDrawing","initDetail","itemDetail","assemblyDetail","getInitDataForCE","job_id_pk","permissions","wiki_page","initData","defaultValues","parameters","unit","drawing_id","job_id","dpn","setInitData","addPart","detail","error","handleError","createPart","setPartLoading","formData","message","create","generateCode","resetCurrentPart","setSuccessMessage","setPartTab","getPartDpn","regexItem","regexAssembly","regex","match","isArray","fetchPartDetail","id","data","getDetail","partDetail","related_drawing","items","components","map","quantity","item_id","manufacturer_equiv","manufacturer_equiv_object","material_equiv","material_equiv_object","openPartUpdateDialog","updatePart","update","closePartDialog","removePart","partList","selectPartList","selectEntity","length","last","partEntity","is_assembly","updateCurrentPart","getDrawingItems","type","sagaGetDrawingPartList","getListAction","GET_LIST","openManuDialog","next_code","setManuDetail","manufacturer_id","setManuInitData","setManuDialogOpen","createManu","setManuDialogLoading","name","initialState","manufacturer","addManufacturer","reference","description","closeManuDialog","getManuId","getNextCode","getItemCopy","part","pick","getItemList","setDrawingItems","partSaga","sagaOpenCreateDialog","sagaCreate","sagaOpenUpdateDialog","sagaUpdate","sagaCloseDialog","sagaOpenManuDialog","sagaCreateManu","sagaCloseManuDialog","sagaGetManuId","sagaGetItemCopy","sagaGetDrawingItems"],"mappings":"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","sourcesContent":["import { takeLatest, call, put, putResolve, takeEvery } from 'redux-saga/effects'\nimport { select, all } from 'typed-redux-saga'\nimport { createAction } from '@reduxjs/toolkit'\nimport _ from 'lodash'\n\nimport { partStore, commonStore, drawingStore } from '@/store/reducers'\nimport * as errorSaga from '@/store/saga/errorSaga'\nimport { getDefaultValues } from '@/utils/getDefaultValues'\nimport { actionTypes } from '@/utils/constant'\nimport { isAssemblyByDpn } from '@/utils/isAssembly'\n\nimport itemApi from '@/apis/item.api'\nimport assemblyApi from '@/apis/assembly.api'\nimport partRefApi from '@/apis/part.api'\nimport manufacturerApi from '@/apis/manufacturer.api'\nimport drawingApi from '@/apis/drawing.api'\n\nimport type { DataForDropdown } from '@/types/Common'\nimport type { PartEntity } from '@/types/Part'\n\nconst getPartApi = (entity: PartEntity) => (entity === 'item' ? itemApi : assemblyApi)\n\nfunction* fetchGenerateCode(entity: PartEntity, drawing: DataForDropdown) {\n  const partApi = getPartApi(entity)\n  const { generated_code } = yield call(partApi.getGenerateCode, drawing.value)\n  return generated_code\n}\n\nfunction* openPartCreateDialog({ payload }: ReturnType<typeof partStore.sagaOpenCreateDialog>) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    const partApi = getPartApi(payload)\n    const { userJob, userDrawing } = yield* all({\n      userJob: select(commonStore.selectUserValueJob),\n      userDrawing: select(commonStore.selectUserValueDrawing)\n    })\n    const initDetail = payload === 'item' ? partStore.itemDetail : partStore.assemblyDetail\n    const { permissions, wiki_page, ...initData } = yield call(partApi.getInitDataForCE, {\n      job_id_pk: userJob.value\n    })\n    const defaultValues = getDefaultValues(initData.parameters, { unit: 'UNIT' }, initDetail)\n    defaultValues.drawing_id = userDrawing.value < 0 ? null : userDrawing\n    defaultValues.job_id = userJob.value\n    if (defaultValues.drawing_id) {\n      defaultValues.dpn = yield call(fetchGenerateCode, payload, defaultValues.drawing_id)\n    }\n    yield putResolve(partStore.actions.setInitData(initData))\n    yield put(partStore.actions.addPart({ detail: defaultValues, wiki_page, permissions: permissions[payload] }))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* createPart({ payload }: ReturnType<typeof partStore.sagaCreate>) {\n  yield put(partStore.actions.setPartLoading(true))\n  try {\n    const { entity, formData } = payload\n    const partApi = getPartApi(entity)\n    const { message } = yield call(partApi.create, formData)\n    const { userJob, userDrawing } = yield* all({\n      userJob: select(commonStore.selectUserValueJob),\n      userDrawing: select(commonStore.selectUserValueDrawing)\n    })\n    let generateCode = ''\n    if (userDrawing.value >= 0) {\n      generateCode = yield call(fetchGenerateCode, entity, userDrawing)\n    }\n    yield putResolve(partStore.actions.resetCurrentPart({ userJob, userDrawing, generateCode }))\n    yield all([put(commonStore.actions.setSuccessMessage(message)), put(partStore.actions.setPartTab(0))])\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(partStore.actions.setPartLoading(false))\n}\n\nconst getPartDpn = (entity: PartEntity, dpn: string) => {\n  // const type = entity === 'item' ? 'H' : 'G'\n  const regexItem = /H\\S+/g\n  const regexAssembly = /G\\S+/g\n  const regex = entity === 'item' ? regexItem : regexAssembly\n  const match = dpn.match(regex)\n  if (_.isArray(match)) {\n    return match[0]\n  }\n  return ''\n}\n\nfunction* fetchPartDetail(entity: PartEntity, id: number) {\n  const partApi = getPartApi(entity)\n  const data = yield call(partApi.getDetail, id)\n  const partDetail = data[entity]\n  partDetail.dpn = getPartDpn(entity, partDetail.dpn)\n  partDetail.drawing_id = partDetail.related_drawing\n  partDetail.items = (partDetail.components || []).map(({ id, quantity }) => ({\n    item_id: id,\n    quantity\n  }))\n\n  if (entity === 'item') {\n    partDetail.manufacturer_equiv = partDetail.manufacturer_equiv_object\n    partDetail.material_equiv = partDetail.material_equiv_object\n  }\n  return partDetail\n}\n\nfunction* openPartUpdateDialog({ payload }: ReturnType<typeof partStore.sagaOpenUpdateDialog>) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    const { id, entity } = payload\n    const partApi = getPartApi(entity)\n    const partDetail = yield call(fetchPartDetail, entity, id)\n    const { permissions, wiki_page, ...initData } = yield call(partApi.getInitDataForCE, {\n      job_id_pk: partDetail.job_id\n    })\n    yield putResolve(partStore.actions.setInitData(initData))\n    yield put(partStore.actions.addPart({ detail: partDetail, wiki_page, permissions: permissions[entity] }))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* updatePart({ payload }: ReturnType<typeof partStore.sagaUpdate>) {\n  yield put(partStore.actions.setPartLoading(true))\n  try {\n    const { entity, formData, id } = payload\n    const partApi = getPartApi(entity)\n    const { message } = yield call(partApi.update, id, formData)\n    yield call(closePartDialog)\n    yield put(commonStore.actions.setSuccessMessage(message))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n\n  yield put(partStore.actions.setPartLoading(false))\n}\n\nfunction* closePartDialog() {\n  try {\n    yield putResolve(partStore.actions.removePart())\n    const partList = yield* select(partStore.selectPartList)\n    const entity = yield* select(commonStore.selectEntity)\n    if (partList.length > 0) {\n      const { detail } = _.last(partList)\n      const partEntity = (detail as any).is_assembly ? 'assembly' : 'item'\n      const partDetail = yield call(fetchPartDetail, partEntity, detail.id)\n      yield put(partStore.actions.updateCurrentPart(partDetail))\n      if (isAssemblyByDpn(detail.dpn)) {\n        yield call(getDrawingItems, { type: '', payload: partDetail.related_drawing.value })\n      }\n      return\n    }\n    if (entity === 'drawing') {\n      yield put(drawingStore.sagaGetDrawingPartList())\n    } else {\n      const getListAction = createAction(`${entity}/${actionTypes.GET_LIST}`)\n      yield put(getListAction())\n    }\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n}\n\nfunction* openManuDialog({ payload }: ReturnType<typeof partStore.sagaOpenManuDialog>) {\n  yield put(partStore.actions.setPartLoading(true))\n  try {\n    yield put(partStore.actions.updateCurrentPart(payload))\n    const { next_code, ...initData } = yield call(manufacturerApi.getInitDataForCE)\n    yield all([\n      putResolve(partStore.actions.setManuDetail({ manufacturer_id: next_code })),\n      putResolve(partStore.actions.setManuInitData(initData))\n    ])\n    yield put(partStore.actions.setManuDialogOpen(true))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(partStore.actions.setPartLoading(false))\n}\n\nfunction* createManu({ payload }: ReturnType<typeof partStore.sagaCreateManu>) {\n  yield put(partStore.actions.setManuDialogLoading(true))\n  try {\n    const { message, id } = yield call(manufacturerApi.create, payload)\n    const { next_code } = yield call(manufacturerApi.getInitDataForCE)\n    const { name } = payload\n    yield putResolve(\n      partStore.actions.setManuDetail({ ...partStore.initialState.manufacturer.detail, manufacturer_id: next_code })\n    )\n    yield all([\n      put(commonStore.actions.setSuccessMessage(message)),\n      put(partStore.actions.addManufacturer({ manufacturer_id: id, reference: '', description: name }))\n    ])\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(partStore.actions.setManuDialogLoading(false))\n}\n\nfunction* closeManuDialog() {\n  yield putResolve(partStore.actions.setManuDialogOpen(false))\n  yield put(partStore.actions.setManuDetail({ manufacturer_id: null, name: '' }))\n}\n\nfunction* getManuId({ payload }: ReturnType<typeof partStore.sagaGetManuId>) {\n  yield put(partStore.actions.setManuDialogLoading(true))\n  try {\n    const { generated_code } = yield call(manufacturerApi.getNextCode, payload.manufacturer_id)\n    yield put(partStore.actions.setManuDetail({ ...payload, manufacturer_id: generated_code }))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(partStore.actions.setManuDialogLoading(false))\n}\n\nfunction* getItemCopy({ payload }: ReturnType<typeof partStore.sagaGetItemCopy>) {\n  yield put(partStore.actions.setPartLoading(true))\n  try {\n    const data = yield call(partRefApi.getDetail, payload.value)\n    // get the allowed attributes\n    const part = _.pick(data.part, [\n      'descriptions',\n      'manufacturer_equiv',\n      'manufacturers',\n      'mass',\n      'material_equiv',\n      'unit',\n      'manufacturer_equiv_standards',\n      'material_equiv_standards'\n    ])\n    part.manufacturer_equiv = data.part.manufacturer_equiv_object\n    part.material_equiv = data.part.material_equiv_object\n    yield put(partStore.actions.updateCurrentPart(part))\n    yield put(commonStore.actions.setSuccessMessage(data.message))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n\n  yield put(partStore.actions.setPartLoading(false))\n}\n\nfunction* getDrawingItems({ payload }: ReturnType<typeof partStore.sagaGetDrawingItems>) {\n  yield put(partStore.actions.setPartLoading(true))\n  try {\n    const { items } = yield call(drawingApi.getItemList, payload)\n    yield put(partStore.actions.setDrawingItems(items))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(partStore.actions.setPartLoading(false))\n}\n\nfunction* partSaga() {\n  yield takeLatest(partStore.sagaOpenCreateDialog, openPartCreateDialog)\n  yield takeLatest(partStore.sagaCreate, createPart)\n  yield takeLatest(partStore.sagaOpenUpdateDialog, openPartUpdateDialog)\n  yield takeLatest(partStore.sagaUpdate, updatePart)\n  yield takeEvery(partStore.sagaCloseDialog, closePartDialog)\n  yield takeLatest(partStore.sagaOpenManuDialog, openManuDialog)\n  yield takeEvery(partStore.sagaCreateManu, createManu)\n  yield takeEvery(partStore.sagaCloseManuDialog, closeManuDialog)\n  yield takeLatest(partStore.sagaGetManuId, getManuId)\n  yield takeLatest(partStore.sagaGetItemCopy, getItemCopy)\n  yield takeLatest(partStore.sagaGetDrawingItems, getDrawingItems)\n}\n\nexport default partSaga\n"]},"metadata":{},"sourceType":"module"}