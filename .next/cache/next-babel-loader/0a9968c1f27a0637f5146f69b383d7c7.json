{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport isEmpty from 'lodash/isEmpty';\nimport cookies from 'js-cookie';\nvar domain = process.env.NEXT_PUBLIC_BACKEND_URL || 'http://localhost:5000/';\n\nvar Http = /*#__PURE__*/function () {\n  function Http() {\n    _classCallCheck(this, Http);\n  }\n\n  _createClass(Http, [{\n    key: \"get\",\n    value: function get(path, query) {\n      var options = {};\n      var requestUrl = domain + path;\n\n      if (isEmpty(query) === false) {\n        options.params = query;\n      }\n\n      var token = cookies.get('token');\n\n      if (isEmpty(token) === false) {\n        options.headers = {\n          Authorization: \"Bearer \".concat(token)\n        };\n      }\n\n      return axios.get(requestUrl, options);\n    }\n  }, {\n    key: \"post\",\n    value: function post(path, data) {\n      var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var requestUrl = domain + path;\n      var token = cookies.get('token');\n      var options = {};\n\n      if (isEmpty(token) === false) {\n        options = {\n          headers: _objectSpread({\n            Authorization: \"Bearer \".concat(token)\n          }, headers)\n        };\n      }\n\n      return axios.post(requestUrl, data, options);\n    }\n  }, {\n    key: \"put\",\n    value: function put(path, data, query) {\n      var headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var requestUrl = domain + path;\n\n      if (isEmpty(query) === false) {\n        requestUrl += this.queryStringBuilder(query);\n      }\n\n      var token = cookies.get('token');\n      var options = {};\n\n      if (isEmpty(token) === false) {\n        options = {\n          headers: _objectSpread({\n            Authorization: \"Bearer \".concat(token)\n          }, headers)\n        };\n      }\n\n      return axios.put(requestUrl, data, options);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(path, data, query) {\n      var requestUrl = domain + path;\n\n      if (isEmpty(query) === false) {\n        requestUrl += this.queryStringBuilder(query);\n      }\n\n      var token = cookies.get('token');\n      var options = {};\n\n      if (isEmpty(token) === false) {\n        options = {\n          headers: {\n            Authorization: \"Bearer \".concat(token)\n          }\n        };\n      }\n\n      options = _objectSpread(_objectSpread({}, options), {}, {\n        data: data\n      });\n      return axios[\"delete\"](requestUrl, options);\n    }\n  }, {\n    key: \"queryStringBuilder\",\n    value: function queryStringBuilder(query) {\n      var str = [];\n\n      for (var p in query) {\n        var value = p + '=' + query[p];\n        str.push(value);\n      }\n\n      return '?' + str.join('&');\n    }\n  }]);\n\n  return Http;\n}();\n\nexport default new Http();","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/utils/Http.ts"],"names":["axios","isEmpty","cookies","domain","process","env","NEXT_PUBLIC_BACKEND_URL","Http","path","query","options","requestUrl","params","token","get","headers","Authorization","data","post","queryStringBuilder","put","str","p","value","push","join"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport isEmpty from 'lodash/isEmpty'\nimport cookies from 'js-cookie'\n\nconst domain = process.env.NEXT_PUBLIC_BACKEND_URL || 'http://localhost:5000/'\n\nclass Http {\n  get<T = any>(path: string, query?) {\n    const options: any = {}\n    const requestUrl = domain + path\n    if (isEmpty(query) === false) {\n      options.params = query\n    }\n    const token: string = cookies.get('token')\n    if (isEmpty(token) === false) {\n      options.headers = {\n        Authorization: `Bearer ${token}`\n      }\n    }\n    return axios.get<T>(requestUrl, options)\n  }\n\n  post<T = any, P = any>(path: string, data: P, headers = {}) {\n    const requestUrl = domain + path\n    const token: string = cookies.get('token')\n    let options = {}\n    if (isEmpty(token) === false) {\n      options = {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          ...headers\n        }\n      }\n    }\n    return axios.post<T>(requestUrl, data, options)\n  }\n\n  put<T = any>(path: string, data, query?, headers = {}) {\n    let requestUrl = domain + path\n    if (isEmpty(query) === false) {\n      requestUrl += this.queryStringBuilder(query)\n    }\n    const token: string = cookies.get('token')\n    let options = {}\n    if (isEmpty(token) === false) {\n      options = {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          ...headers\n        }\n      }\n    }\n    return axios.put<T>(requestUrl, data, options)\n  }\n\n  delete<T = any>(path: string, data, query?) {\n    let requestUrl = domain + path\n    if (isEmpty(query) === false) {\n      requestUrl += this.queryStringBuilder(query)\n    }\n    const token: string = cookies.get('token')\n    let options = {}\n    if (isEmpty(token) === false) {\n      options = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }\n    }\n    options = { ...options, data }\n    return axios.delete<T>(requestUrl, options)\n  }\n\n  queryStringBuilder(query): string {\n    const str = []\n    for (const p in query) {\n      const value = p + '=' + query[p]\n      str.push(value)\n    }\n    return '?' + str.join('&')\n  }\n}\n\nexport default new Http()\n"]},"metadata":{},"sourceType":"module"}