{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useMemo, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { useTranslation } from 'next-i18next';\nimport useStyles from './style';\nimport { Grid, Tabs, Tab } from '@material-ui/core';\nimport { Unless } from 'react-if';\nimport { SectionTimezone, FormControllerTextField, MalisPanel, DialogMain, AppTabHistoryLog, BtnHelp } from '@/components';\nimport _ from 'lodash';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { groupStore } from '@/store/reducers';\nimport getValidationSchema from './validationSchema';\n\nfunction GroupAddEditDialog() {\n  var _useTranslation = useTranslation('group'),\n      t = _useTranslation.t;\n\n  var _useState = useState(0),\n      tab = _useState[0],\n      setTab = _useState[1];\n\n  var classes = useStyles();\n  var dispatch = useDispatch();\n  var dialogState = useSelector(groupStore.selectDialogState);\n  var groupDetail = useSelector(groupStore.selectDetail);\n  var permissions = useSelector(groupStore.selectPermissions);\n\n  var _useSelector = useSelector(groupStore.selectInitDataForCE),\n      wiki_page = _useSelector.wiki_page;\n\n  var isCreating = _.isNil(groupDetail.id);\n\n  var validationSchema = useMemo(function () {\n    return getValidationSchema(t, isCreating);\n  }, [isCreating]);\n  var groupForm = useForm({\n    resolver: yupResolver(validationSchema),\n    shouldUnregister: false\n  });\n  var formData = groupForm.getValues();\n  useEffect(function () {\n    groupForm.reset(groupDetail);\n  }, [groupDetail]);\n  var onSubmitDialog = groupForm.handleSubmit(function (data) {\n    var payload = _.pick(data, ['group_id', 'name', 'description']);\n\n    if (isCreating) {\n      dispatch(groupStore.sagaCreate(payload));\n    } else {\n      var group = _.omit(payload, 'group_id');\n\n      dispatch(groupStore.sagaUpdate({\n        formData: group,\n        id: data.id\n      }));\n    }\n  });\n\n  var onCloseDialog = function onCloseDialog() {\n    groupForm.clearErrors();\n    dispatch(groupStore.sagaCloseDialog());\n    setTab(0);\n  };\n\n  var onChangeTab = function onChangeTab(event, newValue) {\n    setTab(newValue);\n  };\n\n  var handleChangeHistoryLogs = function handleChangeHistoryLogs(data) {\n    dispatch(groupStore.actions.setHistoryLogs(data));\n  };\n\n  return /*#__PURE__*/_jsxs(DialogMain, {\n    open: dialogState.open,\n    height: 557,\n    title: /*#__PURE__*/_jsx(BtnHelp, {\n      title: isCreating ? t('form.title.create_group') : t('form.title.update_group'),\n      href: wiki_page\n    }),\n    onOk: onSubmitDialog,\n    onClose: onCloseDialog,\n    okButtonProps: {\n      disabled: dialogState.loading || !(permissions === null || permissions === void 0 ? void 0 : permissions.edit) && !isCreating\n    },\n    okText: isCreating ? t('common:button.create') : t('common:button.update'),\n    loading: dialogState.loading,\n    children: [/*#__PURE__*/_jsxs(Tabs, {\n      value: tab,\n      onChange: onChangeTab,\n      children: [/*#__PURE__*/_jsx(Tab, {\n        label: t('common:tab.general')\n      }), /*#__PURE__*/_jsx(Tab, {\n        label: t('common:tab.history'),\n        disabled: isCreating\n      })]\n    }), /*#__PURE__*/_jsx(MalisPanel, {\n      value: tab,\n      index: 0,\n      children: /*#__PURE__*/_jsxs(Grid, {\n        container: true,\n        spacing: 2,\n        className: classes.wrapDialog,\n        children: [/*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsx(FormControllerTextField, {\n            control: groupForm.control,\n            required: true,\n            name: \"group_id\",\n            label: \"Group #\",\n            disabled: !isCreating\n          })\n        }), /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsx(FormControllerTextField, {\n            control: groupForm.control,\n            required: true,\n            name: \"name\",\n            label: \"Group Name\"\n          })\n        }), /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsx(FormControllerTextField, {\n            control: groupForm.control,\n            name: \"description\",\n            label: \"Description\",\n            multiline: true,\n            rows: 10\n          })\n        }), /*#__PURE__*/_jsx(Unless, {\n          condition: isCreating,\n          children: /*#__PURE__*/_jsx(SectionTimezone, {\n            value: formData\n          })\n        })]\n      })\n    }), /*#__PURE__*/_jsx(MalisPanel, {\n      value: tab,\n      index: 1,\n      children: /*#__PURE__*/_jsx(Grid, {\n        container: true,\n        spacing: 2,\n        children: /*#__PURE__*/_jsx(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsx(AppTabHistoryLog, {\n            isOpenDialog: dialogState.open,\n            data: dialogState.historyLogs,\n            onChange: handleChangeHistoryLogs,\n            entityId: groupDetail.id,\n            entity: \"group\"\n          })\n        })\n      })\n    })]\n  });\n}\n\nexport default GroupAddEditDialog;","map":null,"metadata":{},"sourceType":"module"}