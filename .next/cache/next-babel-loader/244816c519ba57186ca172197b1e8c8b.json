{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useDispatch } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport { useTranslation } from 'next-i18next';\nimport { AppAutocompleteAsync, DialogMain } from '@/components';\nimport { partStore } from '@/store/reducers';\n\nvar DialogCopyItem = function DialogCopyItem(props) {\n  var open = props.open,\n      onClose = props.onClose;\n\n  var _useTranslation = useTranslation('item'),\n      t = _useTranslation.t;\n\n  var _useState = useState({\n    value: null,\n    entity_id: '',\n    description: ''\n  }),\n      itemSelected = _useState[0],\n      setItemSelected = _useState[1]; // when close this dialog, then reset itemSelected\n\n\n  useEffect(function () {\n    if (!open) {\n      setItemSelected({\n        value: null,\n        entity_id: '',\n        description: ''\n      });\n    }\n  }, [open]);\n  var dispatch = useDispatch();\n\n  var handleOk = function handleOk(event) {\n    dispatch(partStore.sagaGetItemCopy(itemSelected));\n    onClose(event);\n  };\n  /**\n   * @param {DataForDropdown} optionValue\n   */\n\n\n  var handleSelectItem = function handleSelectItem(event, optionValue) {\n    setItemSelected(optionValue);\n  };\n\n  return /*#__PURE__*/_jsx(DialogMain, {\n    title: t('form.title.copy_attribute'),\n    open: open,\n    onOk: handleOk,\n    onClose: onClose,\n    okText: t('common:button.save'),\n    children: /*#__PURE__*/_jsx(AppAutocompleteAsync, {\n      style: {\n        marginTop: 4\n      },\n      label: \"Part #\",\n      compName: \"part_list\",\n      onChange: handleSelectItem\n    })\n  });\n};\n\nexport default DialogCopyItem;","map":null,"metadata":{},"sourceType":"module"}