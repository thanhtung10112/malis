{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\pages\\\\tags.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useStyles from '@/styles/page/layout';\nimport { useTranslation } from 'next-i18next';\nimport { Link } from '@material-ui/core';\nimport { AppLayout, EditIcon, CreateIcon, AppAutocompleteStyled, DeleteIcon, SaveIcon, MakeAListIcon, DialogTag, useConfirm, AppAutocompleteStyledAsync, DialogDrawingCreateEdit } from '@/components';\nimport _ from 'lodash';\nimport immer from 'immer';\nimport tagApi from '@/apis/tag.api';\nimport { tagStore, commonStore, drawingStore } from '@/store/reducers';\nimport { defaultProperties, iconColumn, descriptionsColumn } from '@/utils/columnProperties';\nimport getMessageConfirm from '@/utils/getMessageConfirm';\nimport { defaultTagInitDataForCE, defaultTagDetail } from '@/utils/defaultValues';\n\nvar Specifications_Page = function Specifications_Page() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation('element'),\n      t = _useTranslation.t;\n\n  var _useConfirm = useConfirm(),\n      confirm = _useConfirm.confirm;\n\n  var _useState = useState(false),\n      openDialog = _useState[0],\n      setOpenDialog = _useState[1];\n\n  var _useState2 = useState(defaultTagInitDataForCE),\n      initDataForCE = _useState2[0],\n      setInitDataForCE = _useState2[1];\n\n  var _useState3 = useState(defaultTagDetail),\n      tagDetail = _useState3[0],\n      setTagDetail = _useState3[1];\n\n  var breadcrumbData = useMemo(function () {\n    return [{\n      label: 'Home',\n      href: '/'\n    }, {\n      label: 'Drawings',\n      href: '/Drawings'\n    }, {\n      label: 'Tags Management',\n      href: '/Tags'\n    }];\n  }, []);\n  var dispatch = useDispatch();\n  var permissions = useSelector(tagStore.selectPermissions);\n  var userJob = useSelector(commonStore.selectUserValueJob);\n\n  var _useSelector = useSelector(tagStore.selectInitDataForList),\n      wiki_page = _useSelector.wiki_page,\n      column_tooltips = _useSelector.column_tooltips,\n      jobOptions = _useSelector.jobs;\n\n  var selectedRows = useSelector(commonStore.selectSelectedRows);\n  var dataList = useSelector(tagStore.selectDataList);\n  var userDrawing = useSelector(commonStore.selectUserValueDrawing);\n  var currentLang = useSelector(commonStore.selectCurrentLanguage);\n  useEffect(function () {\n    return function () {\n      return dispatch(commonStore.actions.resetUserValue());\n    };\n  }, []);\n  useEffect(function () {\n    var schematicValue = userDrawing.value > 0 ? userDrawing : null;\n    setTagDetail(function (currentState) {\n      return immer(currentState, function (draft) {\n        draft.schematic_id = schematicValue;\n      });\n    });\n  }, [userDrawing]);\n  useEffect(function () {\n    setTagDetail(function (currentState) {\n      return immer(currentState, function (draft) {\n        draft.job_id = userJob.value;\n      });\n    });\n  }, [userJob]);\n\n  var resetDetail = function resetDetail() {\n    setTagDetail(function () {\n      return immer(defaultTagDetail, function (draft) {\n        draft.schematic_id = userDrawing.value > 0 ? userDrawing : null;\n        draft.job_id = userJob.value;\n      });\n    });\n  };\n\n  var handleOpenCreateDialog = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var resInitDataForCE, _yield$tagApi$getGene, generated_code;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(commonStore.actions.setLoadingPage(true));\n              _context.prev = 1;\n              _context.next = 4;\n              return tagApi.getInitDataForCE({\n                job_id_pk: userJob.value\n              });\n\n            case 4:\n              resInitDataForCE = _context.sent;\n              setInitDataForCE(resInitDataForCE);\n\n              if (!(userDrawing.value > 0)) {\n                _context.next = 12;\n                break;\n              }\n\n              _context.next = 9;\n              return tagApi.getGenerateCode(userDrawing.value);\n\n            case 9:\n              _yield$tagApi$getGene = _context.sent;\n              generated_code = _yield$tagApi$getGene.generated_code;\n              setTagDetail(function (currentState) {\n                return immer(currentState, function (draft) {\n                  draft.element_id = generated_code;\n                });\n              });\n\n            case 12:\n              setOpenDialog(true);\n              _context.next = 18;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch(commonStore.actions.setError(_context.t0));\n\n            case 18:\n              dispatch(commonStore.actions.setLoadingPage(false));\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 15]]);\n    }));\n\n    return function handleOpenCreateDialog() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleOpenUpdateDialog = function handleOpenUpdateDialog(id) {\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var resInitDataForCE, _yield$tagApi$getDeta, element;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch(commonStore.actions.setLoadingPage(true));\n              _context2.prev = 1;\n              _context2.next = 4;\n              return tagApi.getInitDataForCE({\n                job_id_pk: userJob.value\n              });\n\n            case 4:\n              resInitDataForCE = _context2.sent;\n              _context2.next = 7;\n              return tagApi.getDetail(id);\n\n            case 7:\n              _yield$tagApi$getDeta = _context2.sent;\n              element = _yield$tagApi$getDeta.element;\n              setInitDataForCE(resInitDataForCE);\n              setTagDetail(immer(element, function (draft) {\n                draft.schematic_id = element.related_schematic;\n                draft.part_id = element.related_part;\n              }));\n              setOpenDialog(true);\n              _context2.next = 17;\n              break;\n\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](1);\n              dispatch(commonStore.actions.setError(_context2.t0));\n\n            case 17:\n              dispatch(commonStore.actions.setLoadingPage(false));\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 14]]);\n    }));\n  };\n\n  var handleChangeUserJob = function handleChangeUserJob(event, optionValue) {\n    dispatch(tagStore.sagaChangeUserJob(optionValue));\n  };\n\n  var handleChangeUserDrawing = function handleChangeUserDrawing(event, optionValue) {\n    dispatch(tagStore.sagaChangeUserDrawing(optionValue));\n  };\n\n  var handleDeleteTags = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var description, result, tags;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              description = getMessageConfirm(t, 'element', selectedRows, 'delete');\n              _context3.next = 3;\n              return confirm({\n                description: description\n              });\n\n            case 3:\n              result = _context3.sent;\n\n              if (result === 'OK') {\n                tags = _.map(selectedRows, function (partId) {\n                  var _$find = _.find(dataList, {\n                    id: partId\n                  }),\n                      schematic_id = _$find.schematic_id,\n                      id = _$find.id;\n\n                  return {\n                    entity_id: schematic_id,\n                    id: id\n                  };\n                });\n                dispatch(commonStore.sagaExecuteOperation({\n                  entity: 'element',\n                  operation: 'delete',\n                  operationList: tags\n                }));\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleDeleteTags() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleOpenDrawingDialog = function handleOpenDrawingDialog(schematicId) {\n    return function () {\n      dispatch(drawingStore.sagaOpenUpdateDialog(schematicId));\n    };\n  };\n\n  var handleCloseDialog = function handleCloseDialog() {\n    setOpenDialog(false);\n    resetDetail();\n    dispatch(tagStore.sagaGetList());\n  };\n\n  var columns = [_objectSpread(_objectSpread(_objectSpread({}, defaultProperties), iconColumn), {}, {\n    description: column_tooltips.edit,\n    field: 'id',\n    headerName: 'Edit',\n    renderCell: function renderCell(params) {\n      return /*#__PURE__*/_jsxDEV(EditIcon, {\n        onClick: handleOpenUpdateDialog(params.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 16\n      }, _this);\n    }\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.schematic_id,\n    field: 'schematic_id',\n    headerName: 'Schematic #',\n    flex: 0.15,\n    renderCell: function renderCell(params) {\n      var value = params.value,\n          row = params.row;\n      return /*#__PURE__*/_jsxDEV(Link, {\n        href: \"#\",\n        onClick: handleOpenDrawingDialog(row.schematic_pk_id),\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this);\n    }\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.element_id,\n    field: 'element_id',\n    headerName: 'Element #',\n    flex: 0.15\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.tag,\n    field: 'tag',\n    headerName: 'Tag #',\n    flex: 0.15\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.part_id,\n    field: 'part_id',\n    headerName: 'Part #',\n    flex: 0.2\n  }), _objectSpread(_objectSpread(_objectSpread({}, defaultProperties), descriptionsColumn(currentLang)), {}, {\n    description: column_tooltips.description,\n    flex: 0.6\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.rfq_id,\n    field: 'rfq_id',\n    headerName: 'RFQ #',\n    width: 80\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.rfo_id,\n    field: 'rfo_id',\n    headerName: 'RFO  #',\n    width: 80\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.puco_id,\n    field: 'puco',\n    headerName: 'PuCo',\n    width: 80\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.order_id,\n    field: 'order_id',\n    headerName: 'Order  #',\n    width: 120\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.box_nr,\n    field: 'box_nr',\n    headerName: 'BoxNr',\n    width: 80\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.cnt_nr,\n    field: 'cnt_nr',\n    headerName: 'CntNr',\n    width: 80\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.package_id,\n    field: 'package_id',\n    headerName: 'Package #',\n    width: 80\n  })];\n  var buttonsPage = [{\n    label: t('common:button.new'),\n    startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 18\n    }, _this),\n    onClick: handleOpenCreateDialog,\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.create) || userJob.value < 0 || !(userJob === null || userJob === void 0 ? void 0 : userJob.value)\n  }, {\n    label: t('common:button.save'),\n    startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 18\n    }, _this),\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.edit)\n  }, {\n    label: t('common:button.delete'),\n    startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 18\n    }, _this),\n    onClick: handleDeleteTags,\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions[\"delete\"]) || selectedRows.length === 0\n  }, {\n    label: t('common:button.make_a_list'),\n    startIcon: /*#__PURE__*/_jsxDEV(MakeAListIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 18\n    }, _this)\n  }];\n\n  var Dialogs = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DialogTag, {\n      open: openDialog,\n      initData: initDataForCE,\n      detail: tagDetail,\n      onClose: handleCloseDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(DialogDrawingCreateEdit, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n\n  var Options = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppAutocompleteStyled, {\n      className: classes.controlAutocomplete,\n      width: 200,\n      label: \"Jobs\",\n      options: jobOptions,\n      value: userJob,\n      renderOption: function renderOption(option) {\n        return option.description;\n      },\n      primaryKeyOption: \"value\",\n      onChange: handleChangeUserJob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(AppAutocompleteStyledAsync, {\n      disabled: !(userJob === null || userJob === void 0 ? void 0 : userJob.value),\n      width: 250,\n      label: \"Schematics\",\n      className: classes.controlAutocomplete,\n      compName: \"drawing_list\",\n      additionalData: {\n        limit_to_job: userJob.value,\n        include_all_drawings_option: true\n      },\n      onChange: handleChangeUserDrawing,\n      value: userDrawing,\n      defaultOptions: [commonStore.initialState.userValue.drawing]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    entity: \"element\",\n    breadcrumbs: breadcrumbData,\n    wikiPage: wiki_page,\n    searchProps: {\n      width: 320\n    },\n    buttons: buttonsPage,\n    permissions: permissions,\n    tableProps: {\n      columns: columns\n    },\n    Dialogs: Dialogs,\n    Options: Options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Specifications_Page, \"w1Vj/DzdmULFEb56mAwRrkIP/eM=\", false, function () {\n  return [useStyles, useTranslation, useConfirm, useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Specifications_Page;\nexport var __N_SSP = true;\nexport default Specifications_Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Specifications_Page\");","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/pages/tags.tsx"],"names":["useEffect","useMemo","useState","useDispatch","useSelector","useStyles","useTranslation","Link","AppLayout","EditIcon","CreateIcon","AppAutocompleteStyled","DeleteIcon","SaveIcon","MakeAListIcon","DialogTag","useConfirm","AppAutocompleteStyledAsync","DialogDrawingCreateEdit","_","immer","tagApi","tagStore","commonStore","drawingStore","defaultProperties","iconColumn","descriptionsColumn","getMessageConfirm","defaultTagInitDataForCE","defaultTagDetail","Specifications_Page","classes","t","confirm","openDialog","setOpenDialog","initDataForCE","setInitDataForCE","tagDetail","setTagDetail","breadcrumbData","label","href","dispatch","permissions","selectPermissions","userJob","selectUserValueJob","selectInitDataForList","wiki_page","column_tooltips","jobOptions","jobs","selectedRows","selectSelectedRows","dataList","selectDataList","userDrawing","selectUserValueDrawing","currentLang","selectCurrentLanguage","actions","resetUserValue","schematicValue","value","currentState","draft","schematic_id","job_id","resetDetail","handleOpenCreateDialog","setLoadingPage","getInitDataForCE","job_id_pk","resInitDataForCE","getGenerateCode","generated_code","element_id","setError","handleOpenUpdateDialog","id","getDetail","element","related_schematic","part_id","related_part","handleChangeUserJob","event","optionValue","sagaChangeUserJob","handleChangeUserDrawing","sagaChangeUserDrawing","handleDeleteTags","description","result","tags","map","partId","find","entity_id","sagaExecuteOperation","entity","operation","operationList","handleOpenDrawingDialog","schematicId","sagaOpenUpdateDialog","handleCloseDialog","sagaGetList","columns","edit","field","headerName","renderCell","params","flex","row","schematic_pk_id","tag","rfq_id","width","rfo_id","puco_id","order_id","box_nr","cnt_nr","package_id","buttonsPage","startIcon","onClick","disabled","create","length","Dialogs","Options","controlAutocomplete","option","limit_to_job","include_all_drawings_option","initialState","userValue","drawing"],"mappings":"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","sourcesContent":["import { useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useStyles from '@/styles/page/layout'\nimport useAuthMiddleware from '@/hooks/useAuthMiddleware'\nimport { useTranslation } from 'next-i18next'\n\nimport { Link } from '@material-ui/core'\n\nimport {\n  AppLayout,\n  EditIcon,\n  CreateIcon,\n  AppAutocompleteStyled,\n  DeleteIcon,\n  SaveIcon,\n  MakeAListIcon,\n  DialogTag,\n  useConfirm,\n  AppAutocompleteStyledAsync,\n  DialogDrawingCreateEdit\n} from '@/components'\n\nimport _ from 'lodash'\nimport immer from 'immer'\n\nimport tagApi from '@/apis/tag.api'\nimport { tagStore, commonStore, drawingStore } from '@/store/reducers'\nimport { defaultProperties, iconColumn, descriptionsColumn } from '@/utils/columnProperties'\nimport getMessageConfirm from '@/utils/getMessageConfirm'\nimport { defaultTagInitDataForCE, defaultTagDetail } from '@/utils/defaultValues'\n\nimport type { GridColumns } from '@material-ui/data-grid'\nimport type { ParameterOption, PayloadOperation, DataForDropdown } from '@/types/Common'\n\nconst Specifications_Page = () => {\n  const classes = useStyles()\n  const { t } = useTranslation('element')\n  const { confirm } = useConfirm()\n\n  const [openDialog, setOpenDialog] = useState(false)\n  const [initDataForCE, setInitDataForCE] = useState(defaultTagInitDataForCE)\n  const [tagDetail, setTagDetail] = useState(defaultTagDetail)\n\n  const breadcrumbData = useMemo(\n    () => [\n      { label: 'Home', href: '/' },\n      { label: 'Drawings', href: '/Drawings' },\n      { label: 'Tags Management', href: '/Tags' }\n    ],\n    []\n  )\n\n  const dispatch = useDispatch()\n  const permissions = useSelector(tagStore.selectPermissions)\n  const userJob = useSelector(commonStore.selectUserValueJob)\n  const { wiki_page, column_tooltips, jobs: jobOptions } = useSelector(tagStore.selectInitDataForList)\n  const selectedRows = useSelector(commonStore.selectSelectedRows)\n  const dataList = useSelector(tagStore.selectDataList)\n  const userDrawing = useSelector(commonStore.selectUserValueDrawing)\n  const currentLang = useSelector(commonStore.selectCurrentLanguage)\n\n  useEffect(() => {\n    return () => dispatch(commonStore.actions.resetUserValue())\n  }, [])\n\n  useEffect(() => {\n    const schematicValue = userDrawing.value > 0 ? userDrawing : null\n    setTagDetail((currentState) =>\n      immer(currentState, (draft) => {\n        draft.schematic_id = schematicValue\n      })\n    )\n  }, [userDrawing])\n\n  useEffect(() => {\n    setTagDetail((currentState) =>\n      immer(currentState, (draft) => {\n        draft.job_id = userJob.value\n      })\n    )\n  }, [userJob])\n\n  const resetDetail = () => {\n    setTagDetail(() =>\n      immer(defaultTagDetail, (draft) => {\n        draft.schematic_id = userDrawing.value > 0 ? userDrawing : null\n        draft.job_id = userJob.value\n      })\n    )\n  }\n\n  const handleOpenCreateDialog = async () => {\n    dispatch(commonStore.actions.setLoadingPage(true))\n    try {\n      const resInitDataForCE = await tagApi.getInitDataForCE({ job_id_pk: userJob.value })\n      setInitDataForCE(resInitDataForCE)\n      if (userDrawing.value > 0) {\n        const { generated_code } = await tagApi.getGenerateCode(userDrawing.value)\n        setTagDetail((currentState) =>\n          immer(currentState, (draft) => {\n            draft.element_id = generated_code\n          })\n        )\n      }\n      setOpenDialog(true)\n    } catch (error) {\n      dispatch(commonStore.actions.setError(error))\n    }\n    dispatch(commonStore.actions.setLoadingPage(false))\n  }\n\n  const handleOpenUpdateDialog = (id: number) => async () => {\n    dispatch(commonStore.actions.setLoadingPage(true))\n    try {\n      const resInitDataForCE = await tagApi.getInitDataForCE({ job_id_pk: userJob.value })\n      const { element } = await tagApi.getDetail(id)\n      setInitDataForCE(resInitDataForCE)\n      setTagDetail(\n        immer(element, (draft) => {\n          draft.schematic_id = element.related_schematic\n          draft.part_id = element.related_part\n        }) as any\n      )\n      setOpenDialog(true)\n    } catch (error) {\n      dispatch(commonStore.actions.setError(error))\n    }\n    dispatch(commonStore.actions.setLoadingPage(false))\n  }\n\n  const handleChangeUserJob = (event, optionValue: ParameterOption) => {\n    dispatch(tagStore.sagaChangeUserJob(optionValue))\n  }\n\n  const handleChangeUserDrawing = (event, optionValue: DataForDropdown) => {\n    dispatch(tagStore.sagaChangeUserDrawing(optionValue))\n  }\n\n  const handleDeleteTags = async () => {\n    const description = getMessageConfirm(t, 'element', selectedRows, 'delete')\n    const result = await confirm({ description })\n    if (result === 'OK') {\n      const tags: PayloadOperation[] = _.map(selectedRows, (partId) => {\n        const { schematic_id, id } = _.find(dataList, { id: partId })\n        return { entity_id: schematic_id, id }\n      })\n      dispatch(commonStore.sagaExecuteOperation({ entity: 'element', operation: 'delete', operationList: tags }))\n    }\n  }\n\n  const handleOpenDrawingDialog = (schematicId: number) => () => {\n    dispatch(drawingStore.sagaOpenUpdateDialog(schematicId))\n  }\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false)\n    resetDetail()\n    dispatch(tagStore.sagaGetList())\n  }\n\n  const columns: GridColumns = [\n    {\n      ...defaultProperties,\n      ...iconColumn,\n      description: column_tooltips.edit,\n      field: 'id',\n      headerName: 'Edit',\n      renderCell: (params) => {\n        return <EditIcon onClick={handleOpenUpdateDialog(params.value as number)} />\n      }\n    },\n    {\n      ...defaultProperties,\n      description: column_tooltips.schematic_id,\n      field: 'schematic_id',\n      headerName: 'Schematic #',\n      flex: 0.15,\n      renderCell(params) {\n        const { value, row } = params\n        return (\n          <Link href=\"#\" onClick={handleOpenDrawingDialog(row.schematic_pk_id)}>\n            {value}\n          </Link>\n        )\n      }\n    },\n    {\n      ...defaultProperties,\n      description: column_tooltips.element_id,\n      field: 'element_id',\n      headerName: 'Element #',\n      flex: 0.15\n    },\n    {\n      ...defaultProperties,\n      description: column_tooltips.tag,\n      field: 'tag',\n      headerName: 'Tag #',\n      flex: 0.15\n    },\n    {\n      ...defaultProperties,\n      description: column_tooltips.part_id,\n      field: 'part_id',\n      headerName: 'Part #',\n      flex: 0.2\n    },\n    {\n      ...defaultProperties,\n      ...descriptionsColumn(currentLang),\n      description: column_tooltips.description,\n      flex: 0.6\n    },\n    {\n      ...defaultProperties,\n      description: column_tooltips.rfq_id,\n      field: 'rfq_id',\n      headerName: 'RFQ #',\n      width: 80\n    },\n    {\n      ...defaultProperties,\n      description: column_tooltips.rfo_id,\n      field: 'rfo_id',\n      headerName: 'RFO  #',\n      width: 80\n    },\n    {\n      ...defaultProperties,\n      description: column_tooltips.puco_id,\n      field: 'puco',\n      headerName: 'PuCo',\n      width: 80\n    },\n    {\n      ...defaultProperties,\n      description: column_tooltips.order_id,\n      field: 'order_id',\n      headerName: 'Order  #',\n      width: 120\n    },\n    {\n      ...defaultProperties,\n      description: column_tooltips.box_nr,\n      field: 'box_nr',\n      headerName: 'BoxNr',\n      width: 80\n    },\n    {\n      ...defaultProperties,\n      description: column_tooltips.cnt_nr,\n      field: 'cnt_nr',\n      headerName: 'CntNr',\n      width: 80\n    },\n    {\n      ...defaultProperties,\n      description: column_tooltips.package_id,\n      field: 'package_id',\n      headerName: 'Package #',\n      width: 80\n    }\n  ]\n\n  const buttonsPage = [\n    {\n      label: t('common:button.new'),\n      startIcon: <CreateIcon />,\n      onClick: handleOpenCreateDialog,\n      disabled: !permissions?.create || userJob.value < 0 || !userJob?.value\n    },\n    {\n      label: t('common:button.save'),\n      startIcon: <SaveIcon />,\n      disabled: !permissions?.edit\n    },\n    {\n      label: t('common:button.delete'),\n      startIcon: <DeleteIcon />,\n      onClick: handleDeleteTags,\n      disabled: !permissions?.delete || selectedRows.length === 0\n    },\n    {\n      label: t('common:button.make_a_list'),\n      startIcon: <MakeAListIcon />\n    }\n  ]\n\n  const Dialogs = (\n    <>\n      <DialogTag open={openDialog} initData={initDataForCE} detail={tagDetail} onClose={handleCloseDialog} />\n      <DialogDrawingCreateEdit />\n    </>\n  )\n\n  const Options = (\n    <>\n      <AppAutocompleteStyled\n        className={classes.controlAutocomplete}\n        width={200}\n        label=\"Jobs\"\n        options={jobOptions}\n        value={userJob}\n        renderOption={(option) => option.description}\n        primaryKeyOption=\"value\"\n        onChange={handleChangeUserJob}\n      />\n\n      <AppAutocompleteStyledAsync\n        disabled={!userJob?.value}\n        width={250}\n        label=\"Schematics\"\n        className={classes.controlAutocomplete}\n        compName=\"drawing_list\"\n        additionalData={{\n          limit_to_job: userJob.value,\n          include_all_drawings_option: true\n        }}\n        onChange={handleChangeUserDrawing}\n        value={userDrawing}\n        defaultOptions={[commonStore.initialState.userValue.drawing]}\n      />\n    </>\n  )\n\n  return (\n    <AppLayout\n      entity=\"element\"\n      breadcrumbs={breadcrumbData}\n      wikiPage={wiki_page}\n      searchProps={{\n        width: 320\n      }}\n      buttons={buttonsPage}\n      permissions={permissions}\n      tableProps={{\n        columns\n      }}\n      Dialogs={Dialogs}\n      Options={Options}\n    />\n  )\n}\n\nexport const getServerSideProps = useAuthMiddleware([\n  'common',\n  'element',\n  'make_a_list',\n  'advanced_filter',\n  'drawing',\n  'item',\n  'assembly'\n])\n\nexport default Specifications_Page\n"]},"metadata":{},"sourceType":"module"}