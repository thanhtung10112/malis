{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { useState } from 'react';\nimport { v1 as uuidv1 } from 'uuid';\nimport { useTranslation } from 'next-i18next';\nimport { AddCircle, Cancel } from '@material-ui/icons';\nimport { IconButton, ButtonGroup, Tooltip, Typography } from '@material-ui/core';\nimport * as _ from 'lodash';\nimport ColumnOptions from './ColumnOptions';\nimport SortOptions from './SortOptions';\nimport { Unless, If, Then, When, Else } from 'react-if';\nimport useStyles from '../styles'; // The main component (which is exported)\n\nfunction SortConditionList(_ref) {\n  var columnOptions = _ref.columnOptions,\n      sortOptions = _ref.sortOptions,\n      sortConditionData = _ref.sortData,\n      disabled = _ref.disabled;\n\n  // trick for forcing rerender\n  var _useState = useState(0),\n      setValue = _useState[1];\n\n  var forceRerender = function forceRerender() {\n    setValue(function (value) {\n      return value + 1;\n    });\n  };\n\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(['advanced_filter']),\n      t = _useTranslation.t;\n\n  var sortConditionComponents = [];\n\n  var addNewSortCondition = function addNewSortCondition(sortConditionId) {\n    return function () {\n      var sortConditionIndex = _.findIndex(sortConditionData, {\n        condition_id: sortConditionId\n      });\n\n      var selectedColumns = sortConditionData.map(function (cond) {\n        return cond.id;\n      });\n      sortConditionData.splice(sortConditionIndex + 1, 0, {\n        id: columnOptions.filter(function (col) {\n          return !selectedColumns.includes(col.id);\n        })[0].id,\n        condition_id: uuidv1(),\n        direction: sortOptions[0].value\n      });\n      forceRerender();\n    };\n  };\n\n  var removeSortCondition = function removeSortCondition(sortConditionId) {\n    return function () {\n      var sortConditionIndex = _.findIndex(sortConditionData, {\n        condition_id: sortConditionId\n      });\n\n      sortConditionData.splice(sortConditionIndex, 1);\n      forceRerender();\n    };\n  };\n\n  var _iterator = _createForOfIteratorHelper(sortConditionData),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var sortCond = _step.value;\n      sortConditionComponents.push( /*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          marginBottom: '0.5rem'\n        },\n        children: [/*#__PURE__*/_jsx(ColumnOptions, {\n          columnOptions: columnOptions,\n          condition: sortCond,\n          conditionData: sortConditionData,\n          disabled: disabled\n        }), /*#__PURE__*/_jsx(SortOptions, {\n          sortOptions: sortOptions,\n          condition: sortCond,\n          disabled: disabled\n        }), /*#__PURE__*/_jsx(Unless, {\n          condition: disabled,\n          children: /*#__PURE__*/_jsxs(ButtonGroup, {\n            style: {\n              marginLeft: '0.5rem'\n            },\n            size: \"small\",\n            children: [!(sortConditionData.length >= columnOptions.length) && /*#__PURE__*/_jsx(Tooltip, {\n              title: t('tooltip.sort_add_rule'),\n              children: /*#__PURE__*/_jsx(IconButton, {\n                onClick: addNewSortCondition(sortCond.condition_id),\n                children: /*#__PURE__*/_jsx(AddCircle, {\n                  className: classes.iconButton\n                })\n              })\n            }), /*#__PURE__*/_jsx(Tooltip, {\n              title: t('tooltip.sort_remove_rule'),\n              children: /*#__PURE__*/_jsx(IconButton, {\n                onClick: removeSortCondition(sortCond.condition_id),\n                children: /*#__PURE__*/_jsx(Cancel, {\n                  className: classes.iconButton\n                })\n              })\n            })]\n          })\n        })]\n      }));\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(When, {\n      condition: sortConditionData.length === 0,\n      children: /*#__PURE__*/_jsxs(If, {\n        condition: disabled,\n        children: [/*#__PURE__*/_jsx(Then, {\n          children: /*#__PURE__*/_jsx(\"div\", {\n            style: {\n              marginLeft: '1.6rem'\n            },\n            children: /*#__PURE__*/_jsx(Typography, {\n              variant: \"subtitle1\",\n              gutterBottom: true,\n              color: \"textSecondary\",\n              children: t('sort_condition.no_sort_conditions')\n            })\n          })\n        }), /*#__PURE__*/_jsx(Else, {\n          children: /*#__PURE__*/_jsx(Tooltip, {\n            title: t('sort_condition.add_sort_condition'),\n            children: /*#__PURE__*/_jsx(IconButton, {\n              onClick: addNewSortCondition(),\n              children: /*#__PURE__*/_jsx(AddCircle, {\n                className: classes.iconButton\n              })\n            })\n          })\n        })]\n      })\n    }), sortConditionComponents]\n  });\n}\n\nexport default SortConditionList;","map":null,"metadata":{},"sourceType":"module"}