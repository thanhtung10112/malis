{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Material\\\\CreateEdit.tsx\";\nimport { useEffect, useMemo } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DialogMain, FormControllerTabs, TableExtendedProperties, BtnHelp } from '@/components';\nimport TabGeneral from './TabGeneral';\nimport { commonStore, materialStore } from '@/store/reducers';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport getValidationSchema from './validationSchema';\n\nconst DialogMaterialCE = () => {\n  var _permissions;\n\n  const {\n    t\n  } = useTranslation('material');\n  const dispatch = useDispatch();\n  const dialogState = useSelector(materialStore.selectDialogState);\n  const specificationDetail = useSelector(materialStore.selectDetail);\n  const userDrawing = useSelector(commonStore.selectUserValueDrawing);\n  const vaidationSchema = useMemo(() => getValidationSchema(t), []);\n  const specificationForm = useForm({\n    shouldUnregister: false,\n    resolver: yupResolver(vaidationSchema)\n  });\n  useEffect(() => {\n    specificationForm.reset(specificationDetail);\n  }, [specificationDetail]);\n  useEffect(() => {\n    if (userDrawing.value === -1) {\n      dispatch(materialStore.actions.setDetail({\n        drawing_id: null\n      }));\n    } else {\n      dispatch(materialStore.actions.setDetail({\n        drawing_id: userDrawing\n      }));\n    }\n  }, [userDrawing]);\n  const handleSubmitForm = specificationForm.handleSubmit(formData => {\n    console.warn('formData', '>>>', formData);\n  });\n\n  const handleClose = () => {\n    dispatch(materialStore.actions.setDialogStateOpen(false));\n  };\n\n  const handleChangeTab = (event, nextTab) => {\n    dispatch(materialStore.actions.setDialogStateTab(nextTab));\n  };\n\n  const generalTab = {\n    label: t('common:tab.general'),\n    panel: /*#__PURE__*/_jsxDEV(TabGeneral, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this),\n    errorKey: ['drawing_id', 'spec_id', 'job_id']\n  };\n  const extendedPropertyTab = {\n    label: t('common:tab.extended_properties'),\n    panel: /*#__PURE__*/_jsxDEV(TableExtendedProperties, {\n      control: specificationForm.control,\n      name: \"additional_attributes\",\n      editMode: !isCreating,\n      propertiesList: parameters.SSAT,\n      tableHeight: 335,\n      parameterName: \"SSAT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  };\n  const tabs = [generalTab, extendedPropertyTab, historyTab];\n  return /*#__PURE__*/_jsxDEV(DialogMain, {\n    fullWidth: true,\n    maxWidth: \"md\",\n    open: dialogState.open,\n    loading: dialogState.loading,\n    title: /*#__PURE__*/_jsxDEV(BtnHelp, {\n      title: isCreating ? t('form.title.create_specification') : t('form.title.update_specification'),\n      href: wiki_page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this),\n    onOk: handleSubmitForm,\n    onClose: handleClose,\n    okText: isCreating ? t('common:button.create') : t('common:button.update'),\n    okButtonProps: {\n      disabled: dialogState.loading || !((_permissions = permissions) === null || _permissions === void 0 ? void 0 : _permissions.edit) && !isCreating\n    },\n    children: /*#__PURE__*/_jsxDEV(FormControllerTabs, {\n      form: specificationForm,\n      value: dialogState.tab,\n      onChange: handleChangeTab,\n      tabs: tabs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\nexport default DialogMaterialCE;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Material/CreateEdit.tsx"],"names":["useEffect","useMemo","useForm","useTranslation","useDispatch","useSelector","DialogMain","FormControllerTabs","TableExtendedProperties","BtnHelp","TabGeneral","commonStore","materialStore","yupResolver","getValidationSchema","DialogMaterialCE","t","dispatch","dialogState","selectDialogState","specificationDetail","selectDetail","userDrawing","selectUserValueDrawing","vaidationSchema","specificationForm","shouldUnregister","resolver","reset","value","actions","setDetail","drawing_id","handleSubmitForm","handleSubmit","formData","console","warn","handleClose","setDialogStateOpen","handleChangeTab","event","nextTab","setDialogStateTab","generalTab","label","panel","errorKey","extendedPropertyTab","control","isCreating","parameters","SSAT","tabs","historyTab","open","loading","wiki_page","disabled","permissions","edit","tab"],"mappings":"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","sourcesContent":["import { useEffect, useMemo } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useTranslation } from 'react-i18next'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { DialogMain, FormControllerTabs, AppTabHistoryLog, TableExtendedProperties, BtnHelp } from '@/components'\nimport TabGeneral from './TabGeneral'\n\nimport { commonStore, materialStore } from '@/store/reducers'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport _ from 'lodash'\nimport getValidationSchema from './validationSchema'\n\nimport type { SpecificationDetail } from '@/types/Specification'\nimport type { DataForDropdown, HistoryLog } from '@/types/Common'\n\nconst DialogMaterialCE = () => {\n  const { t } = useTranslation('material')\n\n  const dispatch = useDispatch()\n\n  const dialogState = useSelector(materialStore.selectDialogState)\n  const specificationDetail = useSelector(materialStore.selectDetail)\n  const userDrawing = useSelector(commonStore.selectUserValueDrawing)\n\n  const vaidationSchema = useMemo(() => getValidationSchema(t), [])\n  const specificationForm = useForm<SpecificationDetail>({\n    shouldUnregister: false,\n    resolver: yupResolver(vaidationSchema)\n  })\n\n  useEffect(() => {\n    specificationForm.reset(specificationDetail)\n  }, [specificationDetail])\n\n  useEffect(() => {\n    if (userDrawing.value === -1) {\n      dispatch(materialStore.actions.setDetail({ drawing_id: null }))\n    } else {\n      dispatch(materialStore.actions.setDetail({ drawing_id: userDrawing }))\n    }\n  }, [userDrawing])\n\n  const handleSubmitForm = specificationForm.handleSubmit((formData) => {\n    console.warn('formData', '>>>', formData)\n  })\n\n  const handleClose = () => {\n    dispatch(materialStore.actions.setDialogStateOpen(false))\n  }\n\n  const handleChangeTab = (event, nextTab: number) => {\n    dispatch(materialStore.actions.setDialogStateTab(nextTab))\n  }\n\n  const generalTab = {\n    label: t('common:tab.general'),\n    panel: <TabGeneral />,\n    errorKey: ['drawing_id', 'spec_id', 'job_id']\n  }\n\n  const extendedPropertyTab = {\n    label: t('common:tab.extended_properties'),\n    panel: (\n      <TableExtendedProperties\n        control={specificationForm.control}\n        name=\"additional_attributes\"\n        editMode={!isCreating}\n        propertiesList={parameters.SSAT}\n        tableHeight={335}\n        parameterName=\"SSAT\"\n      />\n    )\n  }\n\n  const tabs = [generalTab, extendedPropertyTab, historyTab]\n\n  return (\n    <DialogMain\n      fullWidth\n      maxWidth=\"md\"\n      open={dialogState.open}\n      loading={dialogState.loading}\n      title={\n        <BtnHelp\n          title={isCreating ? t('form.title.create_specification') : t('form.title.update_specification')}\n          href={wiki_page}\n        />\n      }\n      onOk={handleSubmitForm}\n      onClose={handleClose}\n      okText={isCreating ? t('common:button.create') : t('common:button.update')}\n      okButtonProps={{\n        disabled: dialogState.loading || (!permissions?.edit && !isCreating)\n      }}\n    >\n      <FormControllerTabs form={specificationForm} value={dialogState.tab} onChange={handleChangeTab} tabs={tabs} />\n    </DialogMain>\n  )\n}\n\nexport default DialogMaterialCE\n"]},"metadata":{},"sourceType":"module"}