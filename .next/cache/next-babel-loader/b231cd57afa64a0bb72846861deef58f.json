{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Fersher\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Tag\\\\TabGeneral.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useStyles from './styles';\nimport useDialogContext from './Context/useDialogContext';\nimport { Grid } from '@material-ui/core';\nimport { TableMultilingualDescription, AppAutocompleteAsync, FormControllerTextField, SectionTimezone, AppAutocomplete, FormControllerNumberField, useConfirm } from '@/components';\nimport { Unless } from 'react-if';\nimport _ from 'lodash';\nimport partApi from '@/apis/part.api';\nimport tagApi from '@/apis/tag.api';\nimport { commonStore } from '@/store/reducers';\nimport { StatusCode } from '@/utils/StatusCode';\n\nvar TabGeneral = function TabGeneral() {\n  _s();\n\n  var _tagForm$errors$job_i, _tagForm$errors$schem;\n\n  var classes = useStyles();\n\n  var _useConfirm = useConfirm(),\n      confirm = _useConfirm.confirm;\n\n  var _useState = useState([]),\n      defaultPartList = _useState[0],\n      setDefaultPartList = _useState[1];\n\n  var tagForm = useFormContext();\n  var watchSchematic = tagForm.watch('schematic_id', null);\n  var watchPartId = tagForm.watch('part_id', null);\n  var watchId = tagForm.watch('id', null);\n\n  var _useDialogContext = useDialogContext(),\n      detail = _useDialogContext.detail,\n      initData = _useDialogContext.initData,\n      onChangeLoading = _useDialogContext.onChangeLoading;\n\n  var parameters = initData.parameters;\n  var dispatch = useDispatch();\n  var userJob = useSelector(commonStore.selectUserValueJob);\n\n  var isCreating = _.isNil(detail.id);\n\n  var handleChangeSchematicId = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event, optionValue) {\n      var _yield$tagApi$getGene, generated_code;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setDefaultPartList([]);\n              onChangeLoading(true);\n              _context.prev = 2;\n              tagForm.clearErrors('schematic_id');\n              tagForm.setValue('schematic_id', optionValue);\n              _context.next = 7;\n              return tagApi.getGenerateCode(optionValue.value);\n\n            case 7:\n              _yield$tagApi$getGene = _context.sent;\n              generated_code = _yield$tagApi$getGene.generated_code;\n              tagForm.setValue('element_id', generated_code);\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](2);\n              dispatch(commonStore.actions.setError(_context.t0));\n\n            case 15:\n              onChangeLoading(false);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 12]]);\n    }));\n\n    return function handleChangeSchematicId(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleFormatElementId = function handleFormatElementId(event) {\n    var value = event.target.value;\n\n    if (_.size(value) > 0) {\n      var formatValue = value.padStart(4, '0');\n      tagForm.setValue('element_id', formatValue);\n    }\n  };\n\n  var getAdditionalDataPart = function getAdditionalDataPart() {\n    var data = {};\n    data.limit_to_job = userJob.value;\n\n    if (!_.isNil(watchSchematic)) {\n      data.excluded_drawings = [watchSchematic.value];\n    }\n\n    return data;\n  };\n\n  var additionalDataPart = getAdditionalDataPart();\n\n  var displayConfirmRefDialog = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(message) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return confirm({\n                title: 'Warning',\n                description: message,\n                buttons: [{\n                  label: 'Ok',\n                  action: 'OK'\n                }]\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function displayConfirmRefDialog(_x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var getPart = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(selectedPart) {\n      var _formData$schematic_i, formData, reqPayload, _yield$partApi$getRef, part, message, partFormat, status, _message;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              onChangeLoading(true);\n              _context3.prev = 1;\n              formData = tagForm.getValues();\n              reqPayload = {\n                selected_part: selectedPart.value,\n                selected_drawing: (_formData$schematic_i = formData.schematic_id) === null || _formData$schematic_i === void 0 ? void 0 : _formData$schematic_i.value,\n                current_item: formData.id || null\n              };\n              _context3.next = 6;\n              return partApi.getReferencedPart(reqPayload);\n\n            case 6:\n              _yield$partApi$getRef = _context3.sent;\n              part = _yield$partApi$getRef.part;\n              message = _yield$partApi$getRef.message;\n              partFormat = {\n                description: '',\n                entity_id: part.dpn,\n                value: part.id\n              };\n              tagForm.setValue('part_id', partFormat);\n              tagForm.setValue('descriptions', part.descriptions);\n\n              if (selectedPart.value !== part.id) {\n                displayConfirmRefDialog(message);\n              } else {\n                dispatch(commonStore.actions.setSuccessMessage(message));\n              }\n\n              _context3.next = 19;\n              break;\n\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](1);\n              status = _context3.t0.status, _message = _context3.t0.message;\n\n              if (status === StatusCode.BAD_REQUEST) {\n                displayConfirmRefDialog(_message);\n              } else {\n                dispatch(commonStore.actions.setError(_context3.t0));\n              }\n\n            case 19:\n              onChangeLoading(false);\n\n            case 20:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 15]]);\n    }));\n\n    return function getPart(_x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleSelectPart = function handleSelectPart(event, optionValue, reason) {\n    if (reason === 'clear') {\n      tagForm.setValue('part_id', null);\n    } else {\n      getPart(optionValue);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          style: {\n            marginTop: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(AppAutocomplete, {\n            helperText: (_tagForm$errors$job_i = tagForm.errors.job_id) === null || _tagForm$errors$job_i === void 0 ? void 0 : _tagForm$errors$job_i.message,\n            error: Boolean(tagForm.errors.job_id),\n            value: userJob,\n            popupIcon: null,\n            disabled: true,\n            label: \"Job\",\n            required: true,\n            primaryKeyOption: \"value\",\n            options: [],\n            renderOption: function renderOption(option) {\n              return option.description;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AppAutocompleteAsync, {\n            disabled: !isCreating,\n            helperText: (_tagForm$errors$schem = tagForm.errors.schematic_id) === null || _tagForm$errors$schem === void 0 ? void 0 : _tagForm$errors$schem.message,\n            error: Boolean(tagForm.errors.schematic_id),\n            value: watchSchematic,\n            compName: \"drawing_list\",\n            additionalData: {\n              limit_to_job: userJob.value\n            },\n            required: true,\n            label: \"Schematic #\",\n            onChange: handleChangeSchematicId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControllerNumberField, {\n            allowLeadingZeros: true,\n            disabled: !isCreating,\n            fixedDecimalScale: false,\n            decimalScale: null,\n            thousandSeparator: \"\",\n            isNumericString: true,\n            control: tagForm.control,\n            label: \"Element #\",\n            required: true,\n            name: \"element_id\",\n            onBlur: handleFormatElementId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n            control: tagForm.control,\n            label: \"Tag #\",\n            name: \"tag\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AppAutocompleteAsync, {\n            disabled: !watchSchematic,\n            disableClearable: false,\n            value: watchPartId,\n            compName: \"part_list\",\n            additionalData: additionalDataPart,\n            label: \"Part #\",\n            onChange: handleSelectPart,\n            defaultOptions: defaultPartList,\n            filterOptions: function filterOptions(options) {\n              if (_.isNil(options)) {\n                return [];\n              }\n\n              if (isCreating) {\n                return options;\n              }\n\n              return _.filter(options, function (option) {\n                return option.value !== watchId;\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(TableMultilingualDescription, {\n        languageList: parameters.PLLA,\n        editMode: !isCreating,\n        name: \"descriptions\",\n        tableHeight: 160,\n        control: tagForm.control,\n        copyable: true,\n        copyDialogProps: {\n          checkboxesToSelect: [{\n            label: 'Drawing',\n            value: 'drawing_list',\n            entity: 'drawings'\n          }, {\n            label: 'Item/Assembly',\n            value: 'part_list',\n            entity: 'parts'\n          }, {\n            label: 'Tag',\n            value: 'element_list',\n            entity: 'elements',\n            \"default\": true\n          }]\n        },\n        disabled: Boolean(watchPartId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.tabGeneral__divider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n            control: tagForm.control,\n            label: \"Fluid\",\n            name: \"fluid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n            control: tagForm.control,\n            label: \"Tech. data\",\n            name: \"tech_data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Unless, {\n        condition: isCreating,\n        children: /*#__PURE__*/_jsxDEV(SectionTimezone, {\n          value: detail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(TableMultilingualDescription, {\n        languageList: parameters.PLLA,\n        editMode: !isCreating,\n        name: \"functions\",\n        descriptionName: \"function\",\n        tableHeight: 160,\n        control: tagForm.control,\n        copyable: true,\n        copyDialogProps: {\n          compName: 'element_list',\n          entity: 'elements'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TabGeneral, \"G8PN6K9NAfavVnpfyA4QndS9lcY=\", false, function () {\n  return [useStyles, useConfirm, useFormContext, useDialogContext, useDispatch, useSelector];\n});\n\n_c = TabGeneral;\nexport default TabGeneral;\n\nvar _c;\n\n$RefreshReg$(_c, \"TabGeneral\");","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Tag/TabGeneral.tsx"],"names":["useState","useFormContext","useSelector","useDispatch","useStyles","useDialogContext","Grid","TableMultilingualDescription","AppAutocompleteAsync","FormControllerTextField","SectionTimezone","AppAutocomplete","FormControllerNumberField","useConfirm","Unless","_","partApi","tagApi","commonStore","StatusCode","TabGeneral","classes","confirm","defaultPartList","setDefaultPartList","tagForm","watchSchematic","watch","watchPartId","watchId","detail","initData","onChangeLoading","parameters","dispatch","userJob","selectUserValueJob","isCreating","isNil","id","handleChangeSchematicId","event","optionValue","clearErrors","setValue","getGenerateCode","value","generated_code","actions","setError","handleFormatElementId","target","size","formatValue","padStart","getAdditionalDataPart","data","limit_to_job","excluded_drawings","additionalDataPart","displayConfirmRefDialog","message","title","description","buttons","label","action","getPart","selectedPart","formData","getValues","reqPayload","selected_part","selected_drawing","schematic_id","current_item","getReferencedPart","part","partFormat","entity_id","dpn","descriptions","setSuccessMessage","status","BAD_REQUEST","handleSelectPart","reason","marginTop","errors","job_id","Boolean","option","control","options","filter","PLLA","checkboxesToSelect","entity","tabGeneral__divider","compName"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useStyles from './styles'\nimport useDialogContext from './Context/useDialogContext'\n\nimport { Grid } from '@material-ui/core'\nimport {\n  TableMultilingualDescription,\n  AppAutocompleteAsync,\n  FormControllerTextField,\n  SectionTimezone,\n  AppAutocomplete,\n  FormControllerNumberField,\n  useConfirm\n} from '@/components'\nimport { Unless } from 'react-if'\n\nimport _ from 'lodash'\nimport partApi from '@/apis/part.api'\nimport tagApi from '@/apis/tag.api'\nimport { commonStore } from '@/store/reducers'\nimport { StatusCode } from '@/utils/StatusCode'\n\nimport type { AutocompleteChangeReason } from '@material-ui/lab'\nimport type { TagDetail } from '@/types/Tag'\nimport type { DataForDropdown } from '@/types/Common'\n\nconst TabGeneral = () => {\n  const classes = useStyles()\n  const { confirm } = useConfirm()\n\n  const [defaultPartList, setDefaultPartList] = useState([])\n\n  const tagForm = useFormContext<TagDetail>()\n  const watchSchematic = tagForm.watch('schematic_id', null) as DataForDropdown\n  const watchPartId = tagForm.watch('part_id', null) as DataForDropdown\n  const watchId = tagForm.watch('id', null)\n\n  const { detail, initData, onChangeLoading } = useDialogContext()\n  const { parameters } = initData\n\n  const dispatch = useDispatch()\n  const userJob = useSelector(commonStore.selectUserValueJob)\n\n  const isCreating = _.isNil(detail.id)\n\n  const handleChangeSchematicId = async (event, optionValue: DataForDropdown) => {\n    setDefaultPartList([])\n    onChangeLoading(true)\n    try {\n      tagForm.clearErrors('schematic_id')\n      tagForm.setValue('schematic_id', optionValue)\n      const { generated_code } = await tagApi.getGenerateCode(optionValue.value)\n      tagForm.setValue('element_id', generated_code)\n    } catch (error) {\n      dispatch(commonStore.actions.setError(error))\n    }\n    onChangeLoading(false)\n  }\n\n  const handleFormatElementId = (event) => {\n    const { value } = event.target\n    if (_.size(value) > 0) {\n      const formatValue = value.padStart(4, '0')\n      tagForm.setValue('element_id', formatValue)\n    }\n  }\n\n  const getAdditionalDataPart = () => {\n    const data = {} as any\n    data.limit_to_job = userJob.value\n    if (!_.isNil(watchSchematic)) {\n      data.excluded_drawings = [(watchSchematic as DataForDropdown).value]\n    }\n    return data\n  }\n\n  const additionalDataPart = getAdditionalDataPart()\n\n  const displayConfirmRefDialog = async (message: string) => {\n    await confirm({\n      title: 'Warning',\n      description: message,\n      buttons: [{ label: 'Ok', action: 'OK' }]\n    })\n  }\n\n  const getPart = async (selectedPart: DataForDropdown) => {\n    onChangeLoading(true)\n    try {\n      const formData = tagForm.getValues()\n      const reqPayload = {\n        selected_part: selectedPart.value,\n        selected_drawing: (formData.schematic_id as DataForDropdown)?.value,\n        current_item: formData.id || null\n      }\n      const { part, message } = await partApi.getReferencedPart(reqPayload)\n      const partFormat: DataForDropdown = {\n        description: '',\n        entity_id: part.dpn,\n        value: part.id\n      }\n      tagForm.setValue('part_id', partFormat)\n      tagForm.setValue('descriptions', part.descriptions)\n      if (selectedPart.value !== part.id) {\n        displayConfirmRefDialog(message)\n      } else {\n        dispatch(commonStore.actions.setSuccessMessage(message))\n      }\n    } catch (error) {\n      const { status, message } = error\n      if (status === StatusCode.BAD_REQUEST) {\n        displayConfirmRefDialog(message)\n      } else {\n        dispatch(commonStore.actions.setError(error))\n      }\n    }\n    onChangeLoading(false)\n  }\n\n  const handleSelectPart = (event, optionValue: DataForDropdown, reason: AutocompleteChangeReason) => {\n    if (reason === 'clear') {\n      tagForm.setValue('part_id', null)\n    } else {\n      getPart(optionValue)\n    }\n  }\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={6}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} style={{ marginTop: 8 }}>\n            <AppAutocomplete\n              helperText={tagForm.errors.job_id?.message}\n              error={Boolean(tagForm.errors.job_id)}\n              value={userJob}\n              popupIcon={null}\n              disabled\n              label=\"Job\"\n              required\n              primaryKeyOption=\"value\"\n              options={[]}\n              renderOption={(option) => option.description}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <AppAutocompleteAsync\n              disabled={!isCreating}\n              helperText={tagForm.errors.schematic_id?.message}\n              error={Boolean(tagForm.errors.schematic_id)}\n              value={watchSchematic}\n              compName=\"drawing_list\"\n              additionalData={{ limit_to_job: userJob.value }}\n              required\n              label=\"Schematic #\"\n              onChange={handleChangeSchematicId}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <FormControllerNumberField\n              allowLeadingZeros\n              disabled={!isCreating}\n              fixedDecimalScale={false}\n              decimalScale={null}\n              thousandSeparator=\"\"\n              isNumericString\n              control={tagForm.control}\n              label=\"Element #\"\n              required\n              name=\"element_id\"\n              onBlur={handleFormatElementId}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <FormControllerTextField control={tagForm.control} label=\"Tag #\" name=\"tag\" required />\n          </Grid>\n\n          <Grid item xs={12}>\n            <AppAutocompleteAsync\n              disabled={!watchSchematic}\n              disableClearable={false}\n              value={watchPartId}\n              compName=\"part_list\"\n              additionalData={additionalDataPart}\n              label=\"Part #\"\n              onChange={handleSelectPart}\n              defaultOptions={defaultPartList}\n              filterOptions={(options) => {\n                if (_.isNil(options)) {\n                  return []\n                }\n                if (isCreating) {\n                  return options\n                }\n                return _.filter(options, (option) => option.value !== watchId)\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Grid item xs={6}>\n        <TableMultilingualDescription\n          languageList={parameters.PLLA}\n          editMode={!isCreating}\n          name=\"descriptions\"\n          tableHeight={160}\n          control={tagForm.control}\n          copyable\n          copyDialogProps={{\n            checkboxesToSelect: [\n              {\n                label: 'Drawing',\n                value: 'drawing_list',\n                entity: 'drawings'\n              },\n              {\n                label: 'Item/Assembly',\n                value: 'part_list',\n                entity: 'parts'\n              },\n              {\n                label: 'Tag',\n                value: 'element_list',\n                entity: 'elements',\n                default: true\n              }\n            ]\n          }}\n          disabled={Boolean(watchPartId)}\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        <div className={classes.tabGeneral__divider} />\n      </Grid>\n\n      <Grid item xs={6}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <FormControllerTextField control={tagForm.control} label=\"Fluid\" name=\"fluid\" />\n          </Grid>\n          <Grid item xs={12}>\n            <FormControllerTextField control={tagForm.control} label=\"Tech. data\" name=\"tech_data\" />\n          </Grid>\n        </Grid>\n\n        <Unless condition={isCreating}>\n          <SectionTimezone value={detail} />\n        </Unless>\n      </Grid>\n\n      <Grid item xs={6}>\n        <TableMultilingualDescription\n          languageList={parameters.PLLA}\n          editMode={!isCreating}\n          name=\"functions\"\n          descriptionName=\"function\"\n          tableHeight={160}\n          control={tagForm.control}\n          copyable\n          copyDialogProps={{\n            compName: 'element_list',\n            entity: 'elements'\n          }}\n        />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default TabGeneral\n"]},"metadata":{},"sourceType":"module"}