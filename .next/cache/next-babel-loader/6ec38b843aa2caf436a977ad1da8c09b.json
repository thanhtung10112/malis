{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\FormController\\\\Tabs\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect } from 'react';\nimport { Tabs, Tab } from '@material-ui/core';\nimport { FormProvider } from 'react-hook-form';\nimport { MalisPanel } from '@/components/index';\nimport _ from 'lodash';\n\nfunction FormControllerTabs(props) {\n  _s();\n\n  var _this = this;\n\n  var tabs = props.tabs,\n      value = props.value,\n      onChange = props.onChange,\n      form = props.form,\n      resetTabValue = props.resetTabValue;\n  useEffect(function () {\n    var errors = form.errors;\n\n    var keysError = _.keys(errors);\n\n    if (keysError.length === 0) {\n      return;\n    }\n\n    var keyError = keysError[0];\n    var errorKey = tabs.map(function (_ref) {\n      var errorKey = _ref.errorKey;\n      return errorKey || [];\n    });\n\n    for (var i = 0; i < errorKey.length; i++) {\n      if (errorKey[i].includes(keyError)) {\n        onChange(null, i);\n        break;\n      }\n    }\n  }, [form.errors]);\n  useEffect(function () {\n    return function () {\n      if (resetTabValue) {\n        onChange(null, 0);\n      }\n    };\n  }, []);\n\n  var renderTab = function renderTab() {\n    return tabs.filter(function (tab) {\n      return !tab.hide;\n    }).map(function (_ref2, index) {\n      var panel = _ref2.panel,\n          panelProps = _ref2.panelProps,\n          errorKey = _ref2.errorKey,\n          hide = _ref2.hide,\n          tabProps = _objectWithoutProperties(_ref2, [\"panel\", \"panelProps\", \"errorKey\", \"hide\"]);\n\n      return /*#__PURE__*/_jsxDEV(Tab, _objectSpread({\n        value: index\n      }, tabProps), index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this);\n    });\n  };\n\n  var renderTabPanel = function renderTabPanel() {\n    return tabs.filter(function (tab) {\n      return !tab.hide;\n    }).map(function (_ref3, index) {\n      var panel = _ref3.panel,\n          panelProps = _ref3.panelProps;\n      return /*#__PURE__*/_jsxDEV(MalisPanel, _objectSpread(_objectSpread({\n        value: value,\n        index: index\n      }, panelProps), {}, {\n        children: panel\n      }), \"tabPanel - \".concat(index), false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, _this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormProvider, _objectSpread(_objectSpread({}, form), {}, {\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      value: value,\n      onChange: onChange,\n      children: renderTab()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), renderTabPanel()]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormControllerTabs, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n\n_c = FormControllerTabs;\nFormControllerTabs.defaultProps = {\n  resetTabValue: true\n};\nexport default FormControllerTabs;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormControllerTabs\");","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/FormController/Tabs/index.tsx"],"names":["useEffect","Tabs","Tab","FormProvider","MalisPanel","_","FormControllerTabs","props","tabs","value","onChange","form","resetTabValue","errors","keysError","keys","length","keyError","errorKey","map","i","includes","renderTab","filter","tab","hide","index","panel","panelProps","tabProps","renderTabPanel","defaultProps"],"mappings":"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","sourcesContent":["import { useEffect } from 'react'\n\nimport { Tabs, Tab } from '@material-ui/core'\nimport { FormProvider } from 'react-hook-form'\nimport { MalisPanel } from '@/components/index'\n\nimport _ from 'lodash'\n\nimport type { FormControllerTabProps } from './type'\n\nfunction FormControllerTabs<T>(props: FormControllerTabProps<T>) {\n  const { tabs, value, onChange, form, resetTabValue } = props\n\n  useEffect(() => {\n    const { errors } = form\n    const keysError = _.keys(errors)\n    if (keysError.length === 0) {\n      return\n    }\n    const keyError = keysError[0]\n    const errorKey = tabs.map(({ errorKey }) => errorKey || [])\n    for (let i = 0; i < errorKey.length; i++) {\n      if (errorKey[i].includes(keyError)) {\n        onChange(null, i)\n        break\n      }\n    }\n  }, [form.errors])\n\n  useEffect(() => {\n    return () => {\n      if (resetTabValue) {\n        onChange(null, 0)\n      }\n    }\n  }, [])\n\n  const renderTab = () =>\n    tabs\n      .filter((tab) => !tab.hide)\n      .map(({ panel, panelProps, errorKey, hide, ...tabProps }, index) => (\n        <Tab key={index} value={index} {...tabProps} />\n      ))\n\n  const renderTabPanel = () =>\n    tabs\n      .filter((tab) => !tab.hide)\n      .map(({ panel, panelProps }, index) => (\n        <MalisPanel key={`tabPanel - ${index}`} value={value} index={index} {...panelProps}>\n          {panel}\n        </MalisPanel>\n      ))\n\n  return (\n    <FormProvider {...form}>\n      <Tabs value={value} onChange={onChange}>\n        {renderTab()}\n      </Tabs>\n      {renderTabPanel()}\n    </FormProvider>\n  )\n}\n\nFormControllerTabs.defaultProps = {\n  resetTabValue: true\n}\n\nexport default FormControllerTabs\n"]},"metadata":{},"sourceType":"module"}