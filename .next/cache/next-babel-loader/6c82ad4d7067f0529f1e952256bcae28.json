{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Fersher\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\MalisPanel\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { When } from 'react-if';\n\nfunction TabPanel(props) {\n  var children = props.children,\n      value = props.value,\n      index = props.index,\n      other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: \"simple-tabpanel-\".concat(index),\n    \"aria-labelledby\": \"simple-tab-\".concat(index)\n  }, other), {}, {\n    children: /*#__PURE__*/_jsxDEV(When, {\n      condition: value === index,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TabPanel;\nexport default TabPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"TabPanel\");","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/components/MalisPanel/index.tsx"],"names":["When","TabPanel","props","children","value","index","other"],"mappings":";;;;;;;;;AAAA,SAASA,IAAT,QAAqB,UAArB;;AAUA,SAASC,QAAT,CAAkBC,KAAlB,EAAwC;AAAA,MAC9BC,QAD8B,GACOD,KADP,CAC9BC,QAD8B;AAAA,MACpBC,KADoB,GACOF,KADP,CACpBE,KADoB;AAAA,MACbC,KADa,GACOH,KADP,CACbG,KADa;AAAA,MACHC,KADG,4BACOJ,KADP;;AAGtC,sBACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,MAAM,EAAEE,KAAK,KAAKC,KAFpB;AAGE,IAAA,EAAE,4BAAqBA,KAArB,CAHJ;AAIE,4CAA+BA,KAA/B;AAJF,KAKMC,KALN;AAAA,2BAOE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEF,KAAK,KAAKC,KAA3B;AAAA,gBAAmCF;AAAnC;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;KAdQF,Q;AAgBT,eAAeA,QAAf","sourcesContent":["import { When } from 'react-if'\n\nimport type { HTMLAttributes, ReactNode } from 'react'\n\nexport interface TabPanelProps extends HTMLAttributes<HTMLElement> {\n  children?: ReactNode\n  index: number\n  value: number\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      <When condition={value === index}>{children}</When>\n    </div>\n  )\n}\n\nexport default TabPanel\n"]},"metadata":{},"sourceType":"module"}