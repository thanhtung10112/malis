{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Materials\\\\TabGeneral.tsx\";\nimport { useFormContext } from 'react-hook-form';\nimport { useSelector } from 'react-redux';\nimport { Grid, Paper } from '@material-ui/core';\nimport { DataTable, AppAutocompleteAsync, FormControllerTextField, SectionTimezone, AppAutocomplete } from '@/components';\nimport { When } from 'react-if';\nimport { materialStore, specificationStore, commonStore } from '@/store/reducers';\n\nconst TabGeneral = () => {\n  var _materialsForm$errors, _materialsForm$errors2;\n\n  const materialsForm = useFormContext();\n  const materialDetail = useSelector(specificationStore.selectDetail);\n  const userJob = useSelector(commonStore.selectUserValueJob);\n  const materialQuantity = useSelector(materialStore.selectMaterialQuantity);\n\n  const handleChangeDrawingId = (event, optionValue) => {\n    console.warn('optionValue', '>>>', optionValue);\n  };\n\n  const columns = [{\n    field: 'DT_RowId',\n    headerName: 'DT_RowId(ID)',\n    width: 150\n  }, {\n    field: 'color',\n    headerName: 'Color',\n    width: 100\n  }, {\n    field: 'value',\n    headerName: 'Value',\n    width: 130\n  }];\n  const rows = [{\n    id: 1,\n    quantity: 0,\n    usage: 'Installed Parts'\n  },, {\n    DT_RowId: '2',\n    color: 'green',\n    value: '#0f0'\n  }, {\n    DT_RowId: '3',\n    color: 'blue',\n    value: '#00f'\n  }, {\n    DT_RowId: '4',\n    color: 'cyan',\n    value: '#0ff'\n  }];\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          style: {\n            marginTop: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(AppAutocomplete, {\n            helperText: (_materialsForm$errors = materialsForm.errors.job_id) === null || _materialsForm$errors === void 0 ? void 0 : _materialsForm$errors.message,\n            error: Boolean(materialsForm.errors.job_id),\n            value: userJob,\n            popupIcon: null,\n            disabled: true,\n            label: \"Job\",\n            required: true,\n            primaryKeyOption: \"value\",\n            options: [],\n            renderOption: option => option.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AppAutocompleteAsync, {\n            helperText: (_materialsForm$errors2 = materialsForm.errors.drawing_id) === null || _materialsForm$errors2 === void 0 ? void 0 : _materialsForm$errors2.message,\n            error: Boolean(materialsForm.errors.drawing_id),\n            compName: \"part_list\",\n            additionalData: {\n              limit_to_job: userJob.value\n            },\n            required: true,\n            label: \"Part #\",\n            onChange: handleChangeDrawingId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n            disabled: false,\n            control: materialsForm.control,\n            label: \"Description #\",\n            required: true,\n            name: \"spec_id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n            disabled: false,\n            control: materialsForm.control,\n            label: \"Mass kg\",\n            required: true,\n            name: \"Mass\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n            disabled: false,\n            control: materialsForm.control,\n            label: \"Unit #\",\n            name: \"spec_id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(When, {\n          condition: false,\n          children: /*#__PURE__*/_jsxDEV(SectionTimezone, {\n            value: materialDetail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 1,\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          hideFooter: true,\n          disableSelectionOnClick: true,\n          disableColumnMenu: true,\n          tableHeight: 250 // rows={[materialQuantity]}\n          // getRowId={(r) => r.id}\n          // columns={[\n          //   {\n          //     // ...editCell('Quantity'),\n          //     // ...rightColumn,\n          //     headerName: 'Quantity',\n          //     field: 'quantity',\n          //     flex: 0.1,\n          //     sortable: false\n          //   },\n          //   {\n          //     ...defaultProperties,\n          //     field: 'usage',\n          //     headerName: 'Usage',\n          //     flex: 0.3\n          //   }\n          // ]}\n          ,\n          getRowId: r => r.DT_RowId,\n          rows: rows,\n          columns: columns,\n          pageSize: 5,\n          checkboxSelection: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\nexport default TabGeneral;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Materials/TabGeneral.tsx"],"names":["useFormContext","useSelector","Grid","Paper","DataTable","AppAutocompleteAsync","FormControllerTextField","SectionTimezone","AppAutocomplete","When","materialStore","specificationStore","commonStore","TabGeneral","materialsForm","materialDetail","selectDetail","userJob","selectUserValueJob","materialQuantity","selectMaterialQuantity","handleChangeDrawingId","event","optionValue","console","warn","columns","field","headerName","width","rows","id","quantity","usage","DT_RowId","color","value","marginTop","errors","job_id","message","Boolean","option","description","drawing_id","limit_to_job","control","r"],"mappings":"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","sourcesContent":["import { useFormContext } from 'react-hook-form'\nimport { useSelector } from 'react-redux'\n\nimport { Grid, Paper } from '@material-ui/core'\nimport {\n  DataTable,\n  AppAutocompleteAsync,\n  FormControllerTextField,\n  SectionTimezone,\n  AppAutocomplete\n} from '@/components'\nimport { When } from 'react-if'\n\nimport type { GridColumns } from '@material-ui/data-grid'\n\nimport { materialStore, specificationStore, commonStore } from '@/store/reducers'\nimport { defaultProperties, editCell } from '@/utils/columnProperties'\n\nimport type { SpecificationDetail } from '@/types/Specification'\nimport type { DataForDropdown } from '@/types/Common'\n\nconst TabGeneral = () => {\n  const materialsForm = useFormContext<SpecificationDetail>()\n\n  const materialDetail = useSelector(specificationStore.selectDetail)\n  const userJob = useSelector(commonStore.selectUserValueJob)\n  const materialQuantity = useSelector(materialStore.selectMaterialQuantity)\n\n  const handleChangeDrawingId = (event, optionValue: DataForDropdown) => {\n    console.warn('optionValue', '>>>', optionValue)\n  }\n\n  const columns = [\n    { field: 'DT_RowId', headerName: 'DT_RowId(ID)', width: 150 },\n    { field: 'color', headerName: 'Color', width: 100 },\n    { field: 'value', headerName: 'Value', width: 130 }\n  ]\n\n  const rows = [\n    {\n      id: 1,\n      quantity: 0,\n      usage: 'Installed Parts'\n    },\n    ,\n    {\n      DT_RowId: '2',\n      color: 'green',\n      value: '#0f0'\n    },\n    {\n      DT_RowId: '3',\n      color: 'blue',\n      value: '#00f'\n    },\n    {\n      DT_RowId: '4',\n      color: 'cyan',\n      value: '#0ff'\n    }\n  ]\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={6}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} style={{ marginTop: 8 }}>\n            <AppAutocomplete\n              helperText={materialsForm.errors.job_id?.message}\n              error={Boolean(materialsForm.errors.job_id)}\n              value={userJob}\n              popupIcon={null}\n              disabled\n              label=\"Job\"\n              required\n              primaryKeyOption=\"value\"\n              options={[]}\n              renderOption={(option) => option.description}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <AppAutocompleteAsync\n              helperText={materialsForm.errors.drawing_id?.message}\n              error={Boolean(materialsForm.errors.drawing_id)}\n              compName=\"part_list\"\n              additionalData={{ limit_to_job: userJob.value }}\n              required\n              label=\"Part #\"\n              onChange={handleChangeDrawingId}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <FormControllerTextField\n              disabled={false}\n              control={materialsForm.control}\n              label=\"Description #\"\n              required\n              name=\"spec_id\"\n            />\n          </Grid>\n\n          <Grid item xs={6}>\n            <FormControllerTextField\n              disabled={false}\n              control={materialsForm.control}\n              label=\"Mass kg\"\n              required\n              name=\"Mass\"\n            />\n          </Grid>\n\n          <Grid item xs={6}>\n            <FormControllerTextField disabled={false} control={materialsForm.control} label=\"Unit #\" name=\"spec_id\" />\n          </Grid>\n\n          <When condition={false}>\n            <SectionTimezone value={materialDetail} />\n          </When>\n        </Grid>\n      </Grid>\n\n      <Grid item xs={6}>\n        <Paper elevation={1}>\n          <DataTable\n            hideFooter\n            disableSelectionOnClick\n            disableColumnMenu\n            tableHeight={250}\n            // rows={[materialQuantity]}\n            // getRowId={(r) => r.id}\n            // columns={[\n            //   {\n            //     // ...editCell('Quantity'),\n            //     // ...rightColumn,\n            //     headerName: 'Quantity',\n            //     field: 'quantity',\n            //     flex: 0.1,\n            //     sortable: false\n            //   },\n            //   {\n            //     ...defaultProperties,\n            //     field: 'usage',\n            //     headerName: 'Usage',\n            //     flex: 0.3\n            //   }\n            // ]}\n            getRowId={(r) => r.DT_RowId}\n            rows={rows}\n            columns={columns}\n            pageSize={5}\n            checkboxSelection\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default TabGeneral\n"]},"metadata":{},"sourceType":"module"}