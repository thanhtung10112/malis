{"ast":null,"code":"import * as yup from 'yup';\nimport getImageYup from '@/utils/getImageYup';\n\nfunction getValidationSchema(t) {\n  const schema = yup.object().shape({\n    job_id: yup.string().trim().matches(/^(\\d{1,4})$/, t('validation_message.job_id_number')).required(t('validation_message.job_id_required')),\n    language: yup.number().nullable().typeError(t('validation_message.language_required')).required(t('validation_message.language_required')),\n    equipment_type: yup.number().nullable().typeError(t('validation_message.equipment_type_required')).required(t('validation_message.equipment_type_required')),\n    erection_site: yup.number().nullable().typeError(t('validation_message.erection_site_required')).required(t('validation_message.erection_site_required')),\n    contract_no: yup.string().max(80, t('validation_message.contract_no_max')),\n    contract_desc: yup.string().max(255, t('validation_message.contract_desc_max')),\n    credit_letter: yup.string().max(80, t('validation_message.credit_letter_max')),\n    people_responsible: yup.array().min(1, t('validation_message.people_responsible_required')),\n    squad_leader: yup.array().min(1, t('validation_message.squad_leader_required')),\n    job_users: yup.array().min(1, t('validation_message.job_users_required')),\n    logo: getImageYup()\n  });\n  return schema;\n} // image/jpeg image/png\n\n\nexport default getValidationSchema;","map":null,"metadata":{},"sourceType":"module"}