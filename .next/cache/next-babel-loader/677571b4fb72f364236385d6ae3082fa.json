{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice, createAction } from '@reduxjs/toolkit';\nimport { v1 as uuidv1 } from 'uuid';\nimport { actionTypes } from '@/utils/constant';\nexport var name = 'budget';\nexport var resetState = createAction(name + '/RESET_STATE');\nexport var dialogState = {\n  isOpen: false,\n  isEdit: false,\n  isLoading: false\n};\nexport var importDialogState = {\n  isOpen: false,\n  isLoading: false,\n  mode: 0 // 0 -> test, 1 -> write\n\n};\nexport var resultImportDialog = {\n  isOpen: false,\n  success: true,\n  result: '',\n  isLoading: false\n};\nexport var budgetDetail = {\n  job_id: null,\n  budget_id: '',\n  puco: null,\n  description: '',\n  amount: null,\n  currency: ''\n};\nexport var initDataForList = {\n  jobs: [],\n  puco_list: [],\n  selected_job: {\n    description: '',\n    value: null\n  },\n  user_puco: {\n    description: '',\n    value: null\n  },\n  permissions: {\n    budget: null\n  },\n  wiki_page: '',\n  column_tooltips: {}\n};\nexport var initDataForCreateEdit = {\n  puco_list: [],\n  user_currency: {\n    description: '',\n    value: null\n  },\n  user_job: {\n    description: '',\n    value: null\n  },\n  user_puco: {\n    description: '',\n    value: null\n  },\n  wiki_page: ''\n};\nvar remindData = {\n  open: false,\n  helpText: ''\n};\nexport var initialState = {\n  dataList: [],\n  dialogState: dialogState,\n  importDialogState: importDialogState,\n  resultImportDialog: resultImportDialog,\n  budgetDetail: budgetDetail,\n  initDataForList: initDataForList,\n  remindData: remindData,\n  initDataForCreateEdit: initDataForCreateEdit,\n  budgetImportProcess: {\n    celery_id: '',\n    operation_id: '',\n    openDialogProcess: false\n  },\n  budgetSum: {\n    amount: 0,\n    budget_id: '',\n    currency_id: '',\n    description: 'Total of selected cost codes',\n    left_in_order: 0,\n    left_in_rfq: 0,\n    parameter_id: '',\n    used_in_order: 0,\n    used_in_rfq: 0,\n    id: uuidv1()\n  }\n};\nvar budget = createSlice({\n  name: name,\n  initialState: initialState,\n  reducers: {\n    setOpenDialog: function setOpenDialog(state, _ref) {\n      var payload = _ref.payload;\n      state.dialogState.isOpen = payload;\n    },\n    setLoadingDialog: function setLoadingDialog(state, _ref2) {\n      var payload = _ref2.payload;\n      state.dialogState.isLoading = payload;\n    },\n    setEditMode: function setEditMode(state, action) {\n      state.dialogState.isEdit = action.payload;\n    },\n    setInitDataForList: function setInitDataForList(state, _ref3) {\n      var payload = _ref3.payload;\n      state.initDataForList = payload;\n    },\n    setInitDataForCreateEdit: function setInitDataForCreateEdit(state, _ref4) {\n      var payload = _ref4.payload;\n      state.initDataForCreateEdit = payload;\n    },\n    setDataList: function setDataList(state, _ref5) {\n      var payload = _ref5.payload;\n      state.dataList = payload;\n    },\n    setUserValues: function setUserValues(state, _ref6) {\n      var payload = _ref6.payload;\n\n      if (payload.value === 'puco') {\n        state.initDataForList.user_puco = payload.option;\n      } else {\n        state.initDataForList.selected_job = payload.option;\n      }\n    },\n    setBudgetDetail: function setBudgetDetail(state, _ref7) {\n      var payload = _ref7.payload;\n      state.budgetDetail = _objectSpread(_objectSpread({}, state.budgetDetail), payload);\n    },\n    setBudgetSum: function setBudgetSum(state, _ref8) {\n      var payload = _ref8.payload;\n      state.budgetSum.amount = payload.sum_amount;\n      state.budgetSum.used_in_rfq = payload.sum_used_in_rfq;\n      state.budgetSum.left_in_rfq = payload.sum_left_in_rfq;\n      state.budgetSum.used_in_order = payload.sum_used_in_order;\n      state.budgetSum.left_in_order = payload.sum_left_in_order;\n    },\n    setPermissions: function setPermissions(state, _ref9) {\n      var payload = _ref9.payload;\n      state.initDataForList.permissions.budget = payload;\n    },\n    setImportOpen: function setImportOpen(state, _ref10) {\n      var payload = _ref10.payload;\n      state.importDialogState.isOpen = payload;\n    },\n    setImportLoading: function setImportLoading(state, _ref11) {\n      var payload = _ref11.payload;\n      state.importDialogState.isLoading = payload;\n    },\n    setImportMode: function setImportMode(state, _ref12) {\n      var payload = _ref12.payload;\n      state.importDialogState.mode = payload;\n    },\n    setImportResult: function setImportResult(state, _ref13) {\n      var payload = _ref13.payload;\n      state.resultImportDialog = _objectSpread(_objectSpread({}, state.resultImportDialog), payload);\n    },\n    setOpenImportProcess: function setOpenImportProcess(state, _ref14) {\n      var payload = _ref14.payload;\n      state.budgetImportProcess.openDialogProcess = payload;\n    },\n    setCeleryId: function setCeleryId(state, _ref15) {\n      var payload = _ref15.payload;\n      state.budgetImportProcess.celery_id = payload;\n    },\n    setOperationId: function setOperationId(state, _ref16) {\n      var payload = _ref16.payload;\n      state.budgetImportProcess.operation_id = payload;\n    },\n    setRemindData: function setRemindData(state, _ref17) {\n      var payload = _ref17.payload;\n      state.remindData = _objectSpread(_objectSpread({}, state.remindData), payload);\n    }\n  },\n  extraReducers: _defineProperty({}, resetState.type, function () {\n    return initialState;\n  })\n});\nvar _budget$actions = budget.actions,\n    setOpenDialog = _budget$actions.setOpenDialog,\n    setLoadingDialog = _budget$actions.setLoadingDialog,\n    setEditMode = _budget$actions.setEditMode,\n    setInitDataForList = _budget$actions.setInitDataForList,\n    setDataList = _budget$actions.setDataList,\n    setUserValues = _budget$actions.setUserValues,\n    setBudgetDetail = _budget$actions.setBudgetDetail,\n    setInitDataForCreateEdit = _budget$actions.setInitDataForCreateEdit,\n    setBudgetSum = _budget$actions.setBudgetSum,\n    setPermissions = _budget$actions.setPermissions,\n    setImportOpen = _budget$actions.setImportOpen,\n    setImportLoading = _budget$actions.setImportLoading,\n    setImportResult = _budget$actions.setImportResult,\n    setImportMode = _budget$actions.setImportMode,\n    setOpenImportProcess = _budget$actions.setOpenImportProcess,\n    setCeleryId = _budget$actions.setCeleryId,\n    setOperationId = _budget$actions.setOperationId,\n    setRemindData = _budget$actions.setRemindData;\nexport { setOpenDialog, setLoadingDialog, setEditMode, setInitDataForList, setDataList, setUserValues, setBudgetDetail, setInitDataForCreateEdit, setBudgetSum, setPermissions, setImportOpen, setImportLoading, setImportResult, setImportMode, setOpenImportProcess, setCeleryId, setOperationId, setRemindData };\nexport var openUpdateDialog = createAction(name + '/OPEN_UPDATE_DIALOG');\nexport var closeDialog = createAction(name + '/CLOSE_DIALOG');\nexport var openCreateDialog = createAction(name + '/OPEN_CREATE_DIALOG');\nexport var getList = createAction(name + '/GET_LIST');\nexport var changeUserValue = createAction(name + '/CHANGE_USER_VALUE');\nexport var updateMultiple = createAction(name + '/' + actionTypes.UPDATE_MULTIPLE);\nexport var create = createAction(name + '/CREATE');\nexport var update = createAction(name + '/UPDATE');\nexport var remove = createAction(name + '/REMOVE');\nexport var importCostCode = createAction(name + '/IMPORT');\nexport var sendReportMail = createAction(name + '/SEND_REPORT_MAIL');\nexport var getRemindData = createAction(name + '/GET_REMIND_DATA'); // selector\n\nexport var selectDialogState = function selectDialogState(state) {\n  return state.budget.dialogState;\n};\nexport var selectUserJob = function selectUserJob(state) {\n  return state.budget.initDataForList.selected_job;\n};\nexport var selectUserPuco = function selectUserPuco(state) {\n  return state.budget.initDataForList.user_puco;\n};\nexport var selectDataList = function selectDataList(state) {\n  return state.budget.dataList;\n};\nexport var selectJobList = function selectJobList(state) {\n  return state.budget.initDataForList.jobs;\n};\nexport var selectPucoList = function selectPucoList(state) {\n  return state.budget.initDataForList.puco_list;\n};\nexport var selectBudgetDetail = function selectBudgetDetail(state) {\n  return state.budget.budgetDetail;\n};\nexport var selectInitDataCreateEdit = function selectInitDataCreateEdit(state) {\n  return state.budget.initDataForCreateEdit;\n};\nexport var selectBudgetSum = function selectBudgetSum(state) {\n  return state.budget.budgetSum;\n};\nexport var selectPermissions = function selectPermissions(state) {\n  return state.budget.initDataForList.permissions.budget;\n};\nexport var selectImportDialogState = function selectImportDialogState(state) {\n  return state.budget.importDialogState;\n};\nexport var selectImportResultDialog = function selectImportResultDialog(state) {\n  return state.budget.resultImportDialog;\n};\nexport var selectImportDialogProcess = function selectImportDialogProcess(state) {\n  return state.budget.budgetImportProcess;\n};\nexport var selectRemindData = function selectRemindData(state) {\n  return state.budget.remindData;\n};\nexport var selectInitDataForCE = function selectInitDataForCE(state) {\n  return state.budget.initDataForCreateEdit;\n};\nexport var selectInitDataForList = function selectInitDataForList(state) {\n  return state.budget.initDataForList;\n};\nexport default budget.reducer;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/reducers/budget.ts"],"names":["createSlice","createAction","v1","uuidv1","actionTypes","name","resetState","dialogState","isOpen","isEdit","isLoading","importDialogState","mode","resultImportDialog","success","result","budgetDetail","job_id","budget_id","puco","description","amount","currency","initDataForList","jobs","puco_list","selected_job","value","user_puco","permissions","budget","wiki_page","column_tooltips","initDataForCreateEdit","user_currency","user_job","remindData","open","helpText","initialState","dataList","budgetImportProcess","celery_id","operation_id","openDialogProcess","budgetSum","currency_id","left_in_order","left_in_rfq","parameter_id","used_in_order","used_in_rfq","id","reducers","setOpenDialog","state","payload","setLoadingDialog","setEditMode","action","setInitDataForList","setInitDataForCreateEdit","setDataList","setUserValues","option","setBudgetDetail","setBudgetSum","sum_amount","sum_used_in_rfq","sum_left_in_rfq","sum_used_in_order","sum_left_in_order","setPermissions","setImportOpen","setImportLoading","setImportMode","setImportResult","setOpenImportProcess","setCeleryId","setOperationId","setRemindData","extraReducers","type","actions","openUpdateDialog","closeDialog","openCreateDialog","getList","changeUserValue","updateMultiple","UPDATE_MULTIPLE","create","update","remove","importCostCode","sendReportMail","getRemindData","selectDialogState","selectUserJob","selectUserPuco","selectDataList","selectJobList","selectPucoList","selectBudgetDetail","selectInitDataCreateEdit","selectBudgetSum","selectPermissions","selectImportDialogState","selectImportResultDialog","selectImportDialogProcess","selectRemindData","selectInitDataForCE","selectInitDataForList","reducer"],"mappings":"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","sourcesContent":["import {\n  Budget,\n  BudgetInitDataForCreateEdit,\n  BudgetInitDataForList,\n  BudgetItem,\n  BudgetPermission,\n  BudgetSum,\n  BudgetUserValue\n} from '@/types/Budget'\nimport { createSlice, PayloadAction, createAction } from '@reduxjs/toolkit'\n\nimport { v1 as uuidv1 } from 'uuid'\nimport { actionTypes } from '@/utils/constant'\n\nimport { RootReducerType } from './rootReducer'\nimport { NextRouter } from 'next/router'\n\nexport const name = 'budget'\nexport const resetState = createAction(name + '/RESET_STATE')\n\nexport const dialogState = {\n  isOpen: false,\n  isEdit: false,\n  isLoading: false\n}\n\nexport const importDialogState = {\n  isOpen: false,\n  isLoading: false,\n  mode: 0 // 0 -> test, 1 -> write\n}\n\nexport const resultImportDialog = {\n  isOpen: false,\n  success: true,\n  result: '',\n  isLoading: false\n}\n\nexport const budgetDetail = {\n  job_id: null,\n  budget_id: '',\n  puco: null,\n  description: '',\n  amount: null,\n  currency: ''\n}\n\nexport const initDataForList = {\n  jobs: [],\n  puco_list: [],\n  selected_job: {\n    description: '',\n    value: null\n  },\n  user_puco: {\n    description: '',\n    value: null\n  },\n  permissions: {\n    budget: null\n  },\n  wiki_page: '',\n  column_tooltips: {}\n} as BudgetInitDataForList\n\nexport const initDataForCreateEdit = {\n  puco_list: [],\n  user_currency: {\n    description: '',\n    value: null\n  },\n  user_job: {\n    description: '',\n    value: null\n  },\n  user_puco: {\n    description: '',\n    value: null\n  },\n  wiki_page: ''\n} as BudgetInitDataForCreateEdit\n\nconst remindData = {\n  open: false,\n  helpText: ''\n}\n\nexport const initialState = {\n  dataList: [] as BudgetItem[],\n  dialogState,\n  importDialogState,\n  resultImportDialog,\n  budgetDetail,\n  initDataForList,\n  remindData,\n  initDataForCreateEdit,\n  budgetImportProcess: {\n    celery_id: '',\n    operation_id: '',\n    openDialogProcess: false\n  },\n  budgetSum: {\n    amount: 0,\n    budget_id: '',\n    currency_id: '',\n    description: 'Total of selected cost codes',\n    left_in_order: 0,\n    left_in_rfq: 0,\n    parameter_id: '',\n    used_in_order: 0,\n    used_in_rfq: 0,\n    id: uuidv1()\n  } as BudgetItem\n}\n\nconst budget = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setOpenDialog(state, { payload }: PayloadAction<boolean>) {\n      state.dialogState.isOpen = payload\n    },\n    setLoadingDialog(state, { payload }: PayloadAction<boolean>) {\n      state.dialogState.isLoading = payload\n    },\n    setEditMode(state, action: PayloadAction<boolean>) {\n      state.dialogState.isEdit = action.payload\n    },\n    setInitDataForList(state, { payload }: PayloadAction<BudgetInitDataForList>) {\n      state.initDataForList = payload\n    },\n    setInitDataForCreateEdit(state, { payload }: PayloadAction<BudgetInitDataForCreateEdit>) {\n      state.initDataForCreateEdit = payload\n    },\n    setDataList(state, { payload }: PayloadAction<BudgetItem[]>) {\n      state.dataList = payload\n    },\n    setUserValues(state, { payload }: PayloadAction<{ value: 'puco' | 'job'; option: BudgetUserValue }>) {\n      if (payload.value === 'puco') {\n        state.initDataForList.user_puco = payload.option\n      } else {\n        state.initDataForList.selected_job = payload.option\n      }\n    },\n    setBudgetDetail(state, { payload }: PayloadAction<Partial<Budget>>) {\n      state.budgetDetail = {\n        ...state.budgetDetail,\n        ...payload\n      }\n    },\n    setBudgetSum(state, { payload }: PayloadAction<BudgetSum>) {\n      state.budgetSum.amount = payload.sum_amount\n      state.budgetSum.used_in_rfq = payload.sum_used_in_rfq\n      state.budgetSum.left_in_rfq = payload.sum_left_in_rfq\n      state.budgetSum.used_in_order = payload.sum_used_in_order\n      state.budgetSum.left_in_order = payload.sum_left_in_order\n    },\n    setPermissions(state, { payload }: PayloadAction<BudgetPermission>) {\n      state.initDataForList.permissions.budget = payload\n    },\n    setImportOpen(state, { payload }: PayloadAction<boolean>) {\n      state.importDialogState.isOpen = payload\n    },\n    setImportLoading(state, { payload }: PayloadAction<boolean>) {\n      state.importDialogState.isLoading = payload\n    },\n    setImportMode(state, { payload }: PayloadAction<number>) {\n      state.importDialogState.mode = payload\n    },\n    setImportResult(state, { payload }: PayloadAction<Partial<typeof resultImportDialog>>) {\n      state.resultImportDialog = {\n        ...state.resultImportDialog,\n        ...payload\n      }\n    },\n    setOpenImportProcess(state, { payload }: PayloadAction<boolean>) {\n      state.budgetImportProcess.openDialogProcess = payload\n    },\n    setCeleryId(state, { payload }: PayloadAction<string>) {\n      state.budgetImportProcess.celery_id = payload\n    },\n    setOperationId(state, { payload }: PayloadAction<string>) {\n      state.budgetImportProcess.operation_id = payload\n    },\n    setRemindData(state, { payload }: PayloadAction<Partial<typeof remindData>>) {\n      state.remindData = {\n        ...state.remindData,\n        ...payload\n      }\n    }\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState\n    }\n  }\n})\n\nexport const {\n  setOpenDialog,\n  setLoadingDialog,\n  setEditMode,\n  setInitDataForList,\n  setDataList,\n  setUserValues,\n  setBudgetDetail,\n  setInitDataForCreateEdit,\n  setBudgetSum,\n  setPermissions,\n  setImportOpen,\n  setImportLoading,\n  setImportResult,\n  setImportMode,\n  setOpenImportProcess,\n  setCeleryId,\n  setOperationId,\n  setRemindData\n} = budget.actions\n\nexport const openUpdateDialog = createAction<number>(name + '/OPEN_UPDATE_DIALOG')\nexport const closeDialog = createAction(name + '/CLOSE_DIALOG')\nexport const openCreateDialog = createAction(name + '/OPEN_CREATE_DIALOG')\nexport const getList = createAction(name + '/GET_LIST')\nexport const changeUserValue = createAction<any>(name + '/CHANGE_USER_VALUE')\nexport const updateMultiple = createAction<{\n  router: NextRouter\n  href: string\n}>(name + '/' + actionTypes.UPDATE_MULTIPLE)\n\nexport const create = createAction<Budget>(name + '/CREATE')\nexport const update = createAction<Budget>(name + '/UPDATE')\nexport const remove = createAction<number[]>(name + '/REMOVE')\nexport const importCostCode = createAction<{\n  operationData: {\n    job_id_pk: number\n    file_type: 'text' | 'excel'\n    mode: 'test' | 'write'\n  }\n  mode: number\n  file: File\n}>(name + '/IMPORT')\nexport const sendReportMail = createAction<FormData>(name + '/SEND_REPORT_MAIL')\nexport const getRemindData = createAction(name + '/GET_REMIND_DATA')\n\n// selector\nexport const selectDialogState = (state: RootReducerType) => state.budget.dialogState\nexport const selectUserJob = (state: RootReducerType) => state.budget.initDataForList.selected_job\nexport const selectUserPuco = (state: RootReducerType) => state.budget.initDataForList.user_puco\nexport const selectDataList = (state: RootReducerType) => state.budget.dataList\nexport const selectJobList = (state: RootReducerType) => state.budget.initDataForList.jobs\nexport const selectPucoList = (state: RootReducerType) => state.budget.initDataForList.puco_list\nexport const selectBudgetDetail = (state: RootReducerType) => state.budget.budgetDetail\nexport const selectInitDataCreateEdit = (state: RootReducerType) => state.budget.initDataForCreateEdit\nexport const selectBudgetSum = (state: RootReducerType) => state.budget.budgetSum\nexport const selectPermissions = (state: RootReducerType) => state.budget.initDataForList.permissions.budget\nexport const selectImportDialogState = (state: RootReducerType) => state.budget.importDialogState\nexport const selectImportResultDialog = (state: RootReducerType) => state.budget.resultImportDialog\nexport const selectImportDialogProcess = (state: RootReducerType) => state.budget.budgetImportProcess\nexport const selectRemindData = (state: RootReducerType) => state.budget.remindData\n\nexport const selectInitDataForCE = (state: RootReducerType) => state.budget.initDataForCreateEdit\n\nexport const selectInitDataForList = (state: RootReducerType) => state.budget.initDataForList\n\nexport default budget.reducer\n"]},"metadata":{},"sourceType":"module"}