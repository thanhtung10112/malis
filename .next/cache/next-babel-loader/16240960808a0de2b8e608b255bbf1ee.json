{"ast":null,"code":"import * as yup from 'yup';\nimport { REGEX_ONLY_THREE_CAPITAL_LETTER, currencyRateFormat } from '@/utils/constant';\n\nfunction getValidationSchema(t) {\n  var schema = yup.object().shape({\n    currency_id: yup.string().required(t('validation_message.currency_id_required')).matches(REGEX_ONLY_THREE_CAPITAL_LETTER, t('validation_message.currency_id_capital')),\n    multiplier: yup.number().nullable().required(t('validation_message.multiplier_required')),\n    rate: yup.number().nullable().typeError(t('validation_message.rate_required')).required(t('validation_message.rate_required')).min(currencyRateFormat.min, t('validation_message.rate_range')).max(currencyRateFormat.max, t('validation_message.rate_range')),\n    round_to: yup.number().nullable().required(t('validation_message.round_to_required')),\n    description: yup.string().max(40, t('validation_message.description_max'))\n  });\n  return schema;\n}\n\nexport default getValidationSchema;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Currency/validationSchema.ts"],"names":["yup","REGEX_ONLY_THREE_CAPITAL_LETTER","currencyRateFormat","getValidationSchema","t","schema","object","shape","currency_id","string","required","matches","multiplier","number","nullable","rate","typeError","min","max","round_to","description"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,SAASC,+BAAT,EAA0CC,kBAA1C,QAAoE,kBAApE;;AAEA,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAC9B,MAAMC,MAAM,GAAGL,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,IAAAA,WAAW,EAAER,GAAG,CACbS,MADU,GAEVC,QAFU,CAEDN,CAAC,CAAC,yCAAD,CAFA,EAGVO,OAHU,CAGFV,+BAHE,EAG+BG,CAAC,CAAC,wCAAD,CAHhC,CADmB;AAKhCQ,IAAAA,UAAU,EAAEZ,GAAG,CAACa,MAAJ,GAAaC,QAAb,GAAwBJ,QAAxB,CAAiCN,CAAC,CAAC,wCAAD,CAAlC,CALoB;AAMhCW,IAAAA,IAAI,EAAEf,GAAG,CACNa,MADG,GAEHC,QAFG,GAGHE,SAHG,CAGOZ,CAAC,CAAC,kCAAD,CAHR,EAIHM,QAJG,CAIMN,CAAC,CAAC,kCAAD,CAJP,EAKHa,GALG,CAKCf,kBAAkB,CAACe,GALpB,EAKyBb,CAAC,CAAC,+BAAD,CAL1B,EAMHc,GANG,CAMChB,kBAAkB,CAACgB,GANpB,EAMyBd,CAAC,CAAC,+BAAD,CAN1B,CAN0B;AAahCe,IAAAA,QAAQ,EAAEnB,GAAG,CAACa,MAAJ,GAAaC,QAAb,GAAwBJ,QAAxB,CAAiCN,CAAC,CAAC,sCAAD,CAAlC,CAbsB;AAchCgB,IAAAA,WAAW,EAAEpB,GAAG,CAACS,MAAJ,GAAaS,GAAb,CAAiB,EAAjB,EAAqBd,CAAC,CAAC,oCAAD,CAAtB;AAdmB,GAAnB,CAAf;AAgBA,SAAOC,MAAP;AACD;;AAED,eAAeF,mBAAf","sourcesContent":["import * as yup from 'yup'\nimport { REGEX_ONLY_THREE_CAPITAL_LETTER, currencyRateFormat } from '@/utils/constant'\n\nfunction getValidationSchema(t) {\n  const schema = yup.object().shape({\n    currency_id: yup\n      .string()\n      .required(t('validation_message.currency_id_required'))\n      .matches(REGEX_ONLY_THREE_CAPITAL_LETTER, t('validation_message.currency_id_capital')),\n    multiplier: yup.number().nullable().required(t('validation_message.multiplier_required')),\n    rate: yup\n      .number()\n      .nullable()\n      .typeError(t('validation_message.rate_required'))\n      .required(t('validation_message.rate_required'))\n      .min(currencyRateFormat.min, t('validation_message.rate_range'))\n      .max(currencyRateFormat.max, t('validation_message.rate_range')),\n    round_to: yup.number().nullable().required(t('validation_message.round_to_required')),\n    description: yup.string().max(40, t('validation_message.description_max'))\n  })\n  return schema\n}\n\nexport default getValidationSchema\n"]},"metadata":{},"sourceType":"module"}