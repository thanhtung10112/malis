{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\MalisNavigation\\\\NavigationItem\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Typography, Box } from '@material-ui/core';\nimport { ExpandMoreOutlined } from '@material-ui/icons';\nimport Popover from 'material-ui-popup-state/HoverPopover';\nimport useStyles from '../styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { usePopupState, bindHover, bindPopover } from 'material-ui-popup-state/hooks';\nimport { useConfirm } from '@/components/Dialog/Common/Confirmation';\nimport clsx from 'clsx';\nimport { commonStore } from '@/store/reducers';\nimport { unsaveDialogOptions } from '@/utils/constant';\n\nfunction NavigationItem(props) {\n  _s();\n\n  var _this = this;\n\n  var label = props.label,\n      links = props.links;\n  var router = useRouter();\n  var classes = useStyles();\n  var popupState = usePopupState({\n    variant: 'popover',\n    popupId: \"\".concat(label, \" - links\")\n  });\n\n  var _useConfirm = useConfirm(),\n      confirm = _useConfirm.confirm;\n\n  var dispatch = useDispatch();\n  var editRows = useSelector(commonStore.selectEditRows);\n  var entity = useSelector(commonStore.selectEntity);\n\n  var onRedirectPage = function onRedirectPage(href) {\n    return /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                result = '';\n\n                if (!(editRows.length > 0)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 5;\n                return confirm(unsaveDialogOptions);\n\n              case 5:\n                result = _context.sent;\n\n              case 6:\n                if (result === '') {\n                  router.push(href);\n                } else if (result !== 'cancel') {\n                  dispatch(commonStore.sagaUpdateMultiple({\n                    entity: entity,\n                    href: href\n                  }));\n                }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  };\n\n  var activeLink = links.some(function (link) {\n    return link.href === router.pathname;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({\n      className: clsx(classes.navigationItem, _defineProperty({}, classes.active, activeLink))\n    }, bindHover(popupState)), {}, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: Box,\n        variant: \"body1\",\n        fontWeight: \"fontWeightMedium\",\n        className: classes.label,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.dropdownIcon,\n        children: /*#__PURE__*/_jsxDEV(ExpandMoreOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), links && /*#__PURE__*/_jsxDEV(Popover, _objectSpread(_objectSpread({}, bindPopover(popupState)), {}, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      disableRestoreFocus: true,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: classes.dropdownList,\n        children: links.map(function (link) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: classes.dropdownItem,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: link.href,\n              onClick: onRedirectPage(link.href),\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                component: \"div\",\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  fontWeight: \"fontWeightMedium\",\n                  children: link.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, _this)\n          }, link.label + link.href, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NavigationItem, \"DpCYgMHNs7+we2JOu0bAYh5tLzQ=\", false, function () {\n  return [useRouter, useStyles, usePopupState, useConfirm, useDispatch, useSelector, useSelector];\n});\n\n_c = NavigationItem;\nexport default NavigationItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavigationItem\");","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/MalisNavigation/NavigationItem/index.tsx"],"names":["Typography","Box","ExpandMoreOutlined","Popover","useStyles","useSelector","useDispatch","useRouter","usePopupState","bindHover","bindPopover","useConfirm","clsx","commonStore","unsaveDialogOptions","NavigationItem","props","label","links","router","classes","popupState","variant","popupId","confirm","dispatch","editRows","selectEditRows","entity","selectEntity","onRedirectPage","href","event","preventDefault","result","length","push","sagaUpdateMultiple","activeLink","some","link","pathname","navigationItem","active","dropdownIcon","vertical","horizontal","dropdownList","map","dropdownItem"],"mappings":"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","sourcesContent":["import { Typography, Box } from '@material-ui/core'\n\nimport { ExpandMoreOutlined } from '@material-ui/icons'\n\nimport Popover from 'material-ui-popup-state/HoverPopover'\n\nimport { LinkItem } from '../index'\n\nimport useStyles from '../styles'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useRouter } from 'next/router'\nimport { usePopupState, bindHover, bindPopover } from 'material-ui-popup-state/hooks'\nimport { useConfirm } from '@/components/Dialog/Common/Confirmation'\n\nimport clsx from 'clsx'\nimport { commonStore } from '@/store/reducers'\nimport { unsaveDialogOptions } from '@/utils/constant'\n\nexport interface Props {\n  label: string\n  links: LinkItem[]\n}\n\nfunction NavigationItem(props: Props) {\n  const { label, links } = props\n\n  const router = useRouter()\n  const classes = useStyles()\n  const popupState = usePopupState({\n    variant: 'popover',\n    popupId: `${label} - links`\n  })\n  const { confirm } = useConfirm()\n\n  const dispatch = useDispatch()\n  const editRows = useSelector(commonStore.selectEditRows)\n  const entity = useSelector(commonStore.selectEntity)\n\n  const onRedirectPage = (href) => async (event) => {\n    event.preventDefault()\n    let result = ''\n    if (editRows.length > 0) {\n      result = await confirm(unsaveDialogOptions)\n    }\n    if (result === '') {\n      router.push(href)\n    } else if (result !== 'cancel') {\n      dispatch(commonStore.sagaUpdateMultiple({ entity, href }))\n    }\n  }\n\n  const activeLink = links.some((link) => link.href === router.pathname)\n\n  return (\n    <>\n      <div\n        className={clsx(classes.navigationItem, {\n          [classes.active]: activeLink\n        })}\n        {...bindHover(popupState)}\n      >\n        <Typography component={Box} variant=\"body1\" fontWeight=\"fontWeightMedium\" className={classes.label}>\n          {label}\n        </Typography>\n        <span className={classes.dropdownIcon}>\n          <ExpandMoreOutlined />\n        </span>\n      </div>\n      {links && (\n        <Popover\n          {...bindPopover(popupState)}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}\n          disableRestoreFocus\n        >\n          <ul className={classes.dropdownList}>\n            {links.map((link) => (\n              <li key={link.label + link.href} className={classes.dropdownItem}>\n                <a href={link.href} onClick={onRedirectPage(link.href)}>\n                  <Typography variant=\"body1\" component=\"div\">\n                    <Box fontWeight=\"fontWeightMedium\">{link.label}</Box>\n                  </Typography>\n                </a>\n              </li>\n            ))}\n          </ul>\n        </Popover>\n      )}\n    </>\n  )\n}\n\nexport default NavigationItem\n"]},"metadata":{},"sourceType":"module"}