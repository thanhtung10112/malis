{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\User\\\\TabGroups.tsx\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { userStore } from '@/store/reducers';\nimport { useFormContext } from 'react-hook-form';\nimport { Paper } from '@material-ui/core';\nimport { DataTable } from '@/components';\nimport _ from 'lodash';\n\nfunction TabUserGroup() {\n  _s();\n\n  var _this = this;\n\n  var userForm = useFormContext();\n  var watchGroup = userForm.watch('groups', []);\n  var userDetail = useSelector(userStore.selectDetail);\n\n  var _useSelector = useSelector(userStore.selectInitDataForCE),\n      groups = _useSelector.groups;\n\n  var isCreating = _.isNil(userDetail.id);\n\n  var filterRow = useMemo(function () {\n    return groups.filter(function (g) {\n      return g.status === true || (userDetail === null || userDetail === void 0 ? void 0 : userDetail.groups.includes(g.id));\n    });\n  }, [groups, userDetail]);\n\n  var onSelectGroups = function onSelectGroups(_ref) {\n    var selectionModel = _ref.selectionModel;\n    userForm.setValue('groups', selectionModel);\n  };\n\n  var columns = useMemo(function () {\n    return [{\n      field: 'group_id',\n      headerName: 'Group #',\n      width: 100,\n      sortable: false,\n      disableColumnMenu: true,\n      renderCell: function renderCell(param) {\n        if (param.row.status) {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: param.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 20\n          }, _this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: param.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 18\n        }, _this);\n      }\n    }, {\n      field: 'name',\n      headerName: 'Group name',\n      sortable: false,\n      disableColumnMenu: true,\n      flex: 1,\n      renderCell: function renderCell(param) {\n        if (param.row.status) {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: param.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 20\n          }, _this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: param.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 18\n        }, _this);\n      }\n    }];\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 2,\n    children: /*#__PURE__*/_jsxDEV(DataTable, {\n      checkboxSelection: true,\n      tableHeight: isCreating ? 475 : 450,\n      rows: filterRow,\n      columns: columns,\n      headerHeight: 30,\n      rowHeight: 30,\n      hideFooter: true,\n      selectionModel: watchGroup,\n      onSelectionModelChange: onSelectGroups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TabUserGroup, \"48vlgiYJIhd7GfYrxF3bd3YPPj8=\", false, function () {\n  return [useFormContext, useSelector, useSelector];\n});\n\n_c = TabUserGroup;\nexport default TabUserGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"TabUserGroup\");","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/User/TabGroups.tsx"],"names":["useMemo","useSelector","userStore","useFormContext","Paper","DataTable","_","TabUserGroup","userForm","watchGroup","watch","userDetail","selectDetail","selectInitDataForCE","groups","isCreating","isNil","id","filterRow","filter","g","status","includes","onSelectGroups","selectionModel","setValue","columns","field","headerName","width","sortable","disableColumnMenu","renderCell","param","row","value","color","flex"],"mappings":"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","sourcesContent":["import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { userStore } from '@/store/reducers'\nimport { useFormContext } from 'react-hook-form'\n\nimport { Paper } from '@material-ui/core'\nimport { DataTable } from '@/components'\n\nimport _ from 'lodash'\n\nimport type { GridColumns } from '@material-ui/data-grid'\nimport type { UserDetail } from '@/types/User'\n\nfunction TabUserGroup() {\n  const userForm = useFormContext<UserDetail>()\n  const watchGroup = userForm.watch('groups', [])\n\n  const userDetail = useSelector(userStore.selectDetail)\n  const { groups } = useSelector(userStore.selectInitDataForCE)\n\n  const isCreating = _.isNil(userDetail.id)\n\n  const filterRow = useMemo(() => {\n    return groups.filter((g) => g.status === true || userDetail?.groups.includes(g.id))\n  }, [groups, userDetail])\n\n  const onSelectGroups = ({ selectionModel }) => {\n    userForm.setValue('groups', selectionModel)\n  }\n\n  const columns = useMemo<GridColumns>(\n    () => [\n      {\n        field: 'group_id',\n        headerName: 'Group #',\n        width: 100,\n        sortable: false,\n        disableColumnMenu: true,\n        renderCell: (param) => {\n          if (param.row.status) {\n            return <span>{param.value}</span>\n          }\n          return <span style={{ color: 'red' }}>{param.value}</span>\n        }\n      },\n      {\n        field: 'name',\n        headerName: 'Group name',\n        sortable: false,\n        disableColumnMenu: true,\n        flex: 1,\n        renderCell: (param) => {\n          if (param.row.status) {\n            return <span>{param.value}</span>\n          }\n          return <span style={{ color: 'red' }}>{param.value}</span>\n        }\n      }\n    ],\n    []\n  )\n\n  return (\n    <Paper elevation={2}>\n      <DataTable\n        checkboxSelection\n        tableHeight={isCreating ? 475 : 450}\n        rows={filterRow}\n        columns={columns}\n        headerHeight={30}\n        rowHeight={30}\n        hideFooter\n        selectionModel={watchGroup}\n        onSelectionModelChange={onSelectGroups}\n      />\n    </Paper>\n  )\n}\n\nexport default TabUserGroup\n"]},"metadata":{},"sourceType":"module"}