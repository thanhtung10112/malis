{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchTagDataForList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchTagInitDataForCE),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(fetchTagList),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(fetchGenerateCode),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(fetchTagDetail),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(createTag),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(getTagGenerateCode),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(openTagCreateDialog),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(closeTagDialog),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(getTagList),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(removeTag),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(changeUserJob),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(openTagUpdateDialog),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(updateTags),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(getPart),\n    _marked16 = /*#__PURE__*/_regeneratorRuntime.mark(changeUserDrawing),\n    _marked17 = /*#__PURE__*/_regeneratorRuntime.mark(tagSaga);\n\nimport { takeEvery, put, call, putResolve, takeLatest } from 'redux-saga/effects';\nimport { select, all } from 'typed-redux-saga';\nimport _ from 'lodash';\nimport immer from 'immer';\nimport { tagStore, commonStore, advancedFilterActions, summaryReportActions } from '@/store/reducers';\nimport * as errorSaga from '@/store/saga/errorSaga';\nimport { StatusCode } from '@/utils/StatusCode';\nimport tagApi from '@/apis/tag.api';\nimport partRefApi from '@/apis/part.api';\n\nfunction fetchTagDataForList() {\n  var userJob, data;\n  return _regeneratorRuntime.wrap(function fetchTagDataForList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.delegateYield(select(commonStore.selectUserValueJob), \"t0\", 1);\n\n        case 1:\n          userJob = _context.t0;\n          _context.next = 4;\n          return call(tagApi.getInitDataForList, {\n            job_id_pk: userJob.value\n          });\n\n        case 4:\n          data = _context.sent;\n\n          if (_.isNull(data.selected_job)) {\n            data.selected_job = {};\n          }\n\n          _context.next = 8;\n          return put(commonStore.actions.setUserValueJob(data.selected_job));\n\n        case 8:\n          _context.next = 10;\n          return put(tagStore.actions.setInitDataForList(data));\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction fetchTagInitDataForCE() {\n  var jobId,\n      userJob,\n      _yield$call,\n      permissions,\n      selected_job,\n      dataInit,\n      _args2 = arguments;\n\n  return _regeneratorRuntime.wrap(function fetchTagInitDataForCE$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          jobId = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : null;\n          return _context2.delegateYield(select(commonStore.selectUserValueJob), \"t0\", 2);\n\n        case 2:\n          userJob = _context2.t0;\n          _context2.next = 5;\n          return call(tagApi.getInitDataForCE, {\n            job_id_pk: jobId || userJob.value\n          });\n\n        case 5:\n          _yield$call = _context2.sent;\n          permissions = _yield$call.permissions;\n          selected_job = _yield$call.selected_job;\n          dataInit = _objectWithoutProperties(_yield$call, [\"permissions\", \"selected_job\"]);\n          _context2.next = 11;\n          return put(tagStore.actions.setInitDataForCE(dataInit));\n\n        case 11:\n          _context2.next = 13;\n          return put(tagStore.actions.setDetail({\n            job_id: selected_job.value\n          }));\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction fetchTagList() {\n  var _yield$all, tableState, searchQuery, filterData, userJob, userDrawing, page, per_page, data;\n\n  return _regeneratorRuntime.wrap(function fetchTagList$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.delegateYield(all({\n            tableState: select(commonStore.selectTableState),\n            searchQuery: select(commonStore.selectSearchQuery),\n            filterData: select(advancedFilterActions.selectFilterData),\n            userJob: select(commonStore.selectUserValueJob),\n            userDrawing: select(commonStore.selectUserValueDrawing)\n          }), \"t0\", 1);\n\n        case 1:\n          _yield$all = _context3.t0;\n          tableState = _yield$all.tableState;\n          searchQuery = _yield$all.searchQuery;\n          filterData = _yield$all.filterData;\n          userJob = _yield$all.userJob;\n          userDrawing = _yield$all.userDrawing;\n\n          if (userJob.value) {\n            _context3.next = 9;\n            break;\n          }\n\n          return _context3.abrupt(\"return\");\n\n        case 9:\n          page = tableState.page, per_page = tableState.per_page;\n          _context3.next = 12;\n          return call(tagApi.getList, _objectSpread(_objectSpread({\n            per_page: per_page,\n            page: page,\n            s: searchQuery,\n            job_id: userJob.value\n          }, filterData), {}, {\n            drawing_id: userDrawing.value\n          }));\n\n        case 12:\n          data = _context3.sent;\n          _context3.next = 15;\n          return put(commonStore.actions.setTableState({\n            total_items: data.total_items\n          }));\n\n        case 15:\n          _context3.next = 17;\n          return put(tagStore.actions.setDataList(data.elements));\n\n        case 17:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction fetchGenerateCode(drawing) {\n  var _yield$call2, generated_code;\n\n  return _regeneratorRuntime.wrap(function fetchGenerateCode$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return call(tagApi.getGenerateCode, drawing.value);\n\n        case 2:\n          _yield$call2 = _context4.sent;\n          generated_code = _yield$call2.generated_code;\n          return _context4.abrupt(\"return\", generated_code);\n\n        case 5:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport function fetchTagDetail(elementId) {\n  var _yield$call3, element;\n\n  return _regeneratorRuntime.wrap(function fetchTagDetail$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return call(tagApi.getDetail, elementId);\n\n        case 2:\n          _yield$call3 = _context5.sent;\n          element = _yield$call3.element;\n          element.schematic_id = element.related_schematic;\n          element.part_id = element.related_part;\n          return _context5.abrupt(\"return\", element);\n\n        case 7:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction createTag(_ref) {\n  var payload, _yield$call4, message, _yield$all2, userJob, userDrawing, generateCode;\n\n  return _regeneratorRuntime.wrap(function createTag$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          payload = _ref.payload;\n          _context6.next = 3;\n          return put(tagStore.actions.setDialogStateLoading(true));\n\n        case 3:\n          _context6.prev = 3;\n          _context6.next = 6;\n          return call(tagApi.create, payload);\n\n        case 6:\n          _yield$call4 = _context6.sent;\n          message = _yield$call4.message;\n          return _context6.delegateYield(all({\n            userJob: select(commonStore.selectUserValueJob),\n            userDrawing: select(commonStore.selectUserValueDrawing)\n          }), \"t0\", 9);\n\n        case 9:\n          _yield$all2 = _context6.t0;\n          userJob = _yield$all2.userJob;\n          userDrawing = _yield$all2.userDrawing;\n          generateCode = '';\n\n          if (!(userDrawing.value >= 0)) {\n            _context6.next = 17;\n            break;\n          }\n\n          _context6.next = 16;\n          return call(fetchGenerateCode, userDrawing);\n\n        case 16:\n          generateCode = _context6.sent;\n\n        case 17:\n          _context6.next = 19;\n          return putResolve(tagStore.actions.resetDetail({\n            userJob: userJob,\n            userDrawing: userDrawing,\n            generateCode: generateCode\n          }));\n\n        case 19:\n          _context6.next = 21;\n          return all([put(commonStore.actions.setSuccessMessage(message)), put(tagStore.actions.setDialogStateTab(0))]);\n\n        case 21:\n          _context6.next = 27;\n          break;\n\n        case 23:\n          _context6.prev = 23;\n          _context6.t1 = _context6[\"catch\"](3);\n          _context6.next = 27;\n          return errorSaga.handleError(_context6.t1);\n\n        case 27:\n          _context6.next = 29;\n          return put(tagStore.actions.setDialogStateLoading(false));\n\n        case 29:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[3, 23]]);\n}\n\nfunction getTagGenerateCode(_ref2) {\n  var payload, schematic, formData, _yield$call5, generated_code;\n\n  return _regeneratorRuntime.wrap(function getTagGenerateCode$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          payload = _ref2.payload;\n          _context7.next = 3;\n          return put(tagStore.actions.setDialogStateLoading(true));\n\n        case 3:\n          _context7.prev = 3;\n          schematic = payload.schematic, formData = payload.formData;\n          _context7.next = 7;\n          return call(tagApi.getGenerateCode, schematic.value);\n\n        case 7:\n          _yield$call5 = _context7.sent;\n          generated_code = _yield$call5.generated_code;\n          _context7.next = 11;\n          return put(tagStore.actions.setDetail(_objectSpread(_objectSpread({}, formData), {}, {\n            schematic_id: schematic,\n            element_id: generated_code\n          })));\n\n        case 11:\n          _context7.next = 17;\n          break;\n\n        case 13:\n          _context7.prev = 13;\n          _context7.t0 = _context7[\"catch\"](3);\n          _context7.next = 17;\n          return errorSaga.handleError(_context7.t0);\n\n        case 17:\n          _context7.next = 19;\n          return put(tagStore.actions.setDialogStateLoading(false));\n\n        case 19:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[3, 13]]);\n}\n\nfunction openTagCreateDialog() {\n  var userDrawing, generateCode;\n  return _regeneratorRuntime.wrap(function openTagCreateDialog$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 2:\n          _context8.prev = 2;\n          _context8.next = 5;\n          return call(fetchTagInitDataForCE);\n\n        case 5:\n          return _context8.delegateYield(select(commonStore.selectUserValueDrawing), \"t0\", 6);\n\n        case 6:\n          userDrawing = _context8.t0;\n\n          if (!(userDrawing.value >= 0)) {\n            _context8.next = 13;\n            break;\n          }\n\n          _context8.next = 10;\n          return call(fetchGenerateCode, userDrawing);\n\n        case 10:\n          generateCode = _context8.sent;\n          _context8.next = 13;\n          return put(tagStore.actions.setDetail({\n            schematic_id: userDrawing,\n            element_id: generateCode\n          }));\n\n        case 13:\n          _context8.next = 15;\n          return put(tagStore.actions.setDialogStateOpen(true));\n\n        case 15:\n          _context8.next = 21;\n          break;\n\n        case 17:\n          _context8.prev = 17;\n          _context8.t1 = _context8[\"catch\"](2);\n          _context8.next = 21;\n          return errorSaga.handleError(_context8.t1);\n\n        case 21:\n          _context8.next = 23;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 23:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[2, 17]]);\n}\n\nfunction closeTagDialog() {\n  var _yield$all3, userDrawing, userJob;\n\n  return _regeneratorRuntime.wrap(function closeTagDialog$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 2:\n          _context9.prev = 2;\n          return _context9.delegateYield(all({\n            userDrawing: select(commonStore.selectUserValueDrawing),\n            userJob: select(commonStore.selectUserValueJob)\n          }), \"t0\", 4);\n\n        case 4:\n          _yield$all3 = _context9.t0;\n          userDrawing = _yield$all3.userDrawing;\n          userJob = _yield$all3.userJob;\n          _context9.next = 9;\n          return put(tagStore.actions.setDialogStateOpen(false));\n\n        case 9:\n          _context9.next = 11;\n          return call(getTagList);\n\n        case 11:\n          _context9.next = 13;\n          return put(tagStore.actions.resetDetail({\n            userDrawing: userDrawing,\n            userJob: userJob\n          }));\n\n        case 13:\n          _context9.next = 19;\n          break;\n\n        case 15:\n          _context9.prev = 15;\n          _context9.t1 = _context9[\"catch\"](2);\n          _context9.next = 19;\n          return errorSaga.handleError(_context9.t1);\n\n        case 19:\n          _context9.next = 21;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 21:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[2, 15]]);\n}\n\nfunction getTagList() {\n  var permissions;\n  return _regeneratorRuntime.wrap(function getTagList$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 2:\n          _context10.prev = 2;\n          _context10.next = 5;\n          return call(fetchTagDataForList);\n\n        case 5:\n          return _context10.delegateYield(select(tagStore.selectPermissions), \"t0\", 6);\n\n        case 6:\n          permissions = _context10.t0;\n\n          if (!(permissions === null || permissions === void 0 ? void 0 : permissions.view)) {\n            _context10.next = 10;\n            break;\n          }\n\n          _context10.next = 10;\n          return call(fetchTagList);\n\n        case 10:\n          _context10.next = 16;\n          break;\n\n        case 12:\n          _context10.prev = 12;\n          _context10.t1 = _context10[\"catch\"](2);\n          _context10.next = 16;\n          return errorSaga.handleError(_context10.t1);\n\n        case 16:\n          _context10.next = 18;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 18:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10, null, [[2, 12]]);\n}\n\nfunction removeTag(_ref3) {\n  var payload, data;\n  return _regeneratorRuntime.wrap(function removeTag$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          payload = _ref3.payload;\n          _context11.next = 3;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 3:\n          _context11.prev = 3;\n          _context11.next = 6;\n          return call(tagApi.executeOperation, 'delete', payload);\n\n        case 6:\n          data = _context11.sent;\n\n          if (!(data.failed_count > 0)) {\n            _context11.next = 14;\n            break;\n          }\n\n          _context11.next = 10;\n          return put(summaryReportActions.setReportData(data));\n\n        case 10:\n          _context11.next = 12;\n          return put(summaryReportActions.setOpen(true));\n\n        case 12:\n          _context11.next = 16;\n          break;\n\n        case 14:\n          _context11.next = 16;\n          return put(commonStore.actions.setSuccessMessage(data.message));\n\n        case 16:\n          _context11.next = 18;\n          return call(fetchTagList);\n\n        case 18:\n          _context11.next = 24;\n          break;\n\n        case 20:\n          _context11.prev = 20;\n          _context11.t0 = _context11[\"catch\"](3);\n          _context11.next = 24;\n          return errorSaga.handleError(_context11.t0);\n\n        case 24:\n          _context11.next = 26;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 26:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[3, 20]]);\n}\n\nfunction changeUserJob(_ref4) {\n  var payload;\n  return _regeneratorRuntime.wrap(function changeUserJob$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          payload = _ref4.payload;\n          _context12.next = 3;\n          return put(commonStore.actions.setUserValueJob(payload));\n\n        case 3:\n          _context12.next = 5;\n          return call(getTagList);\n\n        case 5:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction openTagUpdateDialog(_ref5) {\n  var payload, element;\n  return _regeneratorRuntime.wrap(function openTagUpdateDialog$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          payload = _ref5.payload;\n          _context13.next = 3;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 3:\n          _context13.prev = 3;\n          _context13.next = 6;\n          return call(fetchTagDetail, payload);\n\n        case 6:\n          element = _context13.sent;\n          _context13.next = 9;\n          return call(fetchTagInitDataForCE, element.job_id);\n\n        case 9:\n          _context13.next = 11;\n          return putResolve(tagStore.actions.setDetail(element));\n\n        case 11:\n          _context13.next = 13;\n          return put(tagStore.actions.setDialogStateOpen(true));\n\n        case 13:\n          _context13.next = 19;\n          break;\n\n        case 15:\n          _context13.prev = 15;\n          _context13.t0 = _context13[\"catch\"](3);\n          _context13.next = 19;\n          return errorSaga.handleError(_context13.t0);\n\n        case 19:\n          _context13.next = 21;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 21:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13, null, [[3, 15]]);\n}\n\nfunction updateTags(_ref6) {\n  var payload, _yield$call6, message;\n\n  return _regeneratorRuntime.wrap(function updateTags$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          payload = _ref6.payload;\n          _context14.next = 3;\n          return put(tagStore.actions.setDialogStateLoading(true));\n\n        case 3:\n          _context14.prev = 3;\n          _context14.next = 6;\n          return call(tagApi.updateMultiple, payload);\n\n        case 6:\n          _yield$call6 = _context14.sent;\n          message = _yield$call6.message;\n          _context14.next = 10;\n          return call(closeTagDialog);\n\n        case 10:\n          _context14.next = 12;\n          return put(commonStore.actions.setSuccessMessage(message));\n\n        case 12:\n          _context14.next = 18;\n          break;\n\n        case 14:\n          _context14.prev = 14;\n          _context14.t0 = _context14[\"catch\"](3);\n          _context14.next = 18;\n          return errorSaga.handleError(_context14.t0);\n\n        case 18:\n          _context14.next = 20;\n          return put(tagStore.actions.setDialogStateLoading(false));\n\n        case 20:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14, null, [[3, 14]]);\n}\n\nfunction getPart(_ref7) {\n  var payload, formData, reqPayload, selected_part, _yield$call7, part, message, descriptions, newFormData, response, status, data;\n\n  return _regeneratorRuntime.wrap(function getPart$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          payload = _ref7.payload;\n          _context15.next = 3;\n          return put(tagStore.actions.setDialogStateLoading(true));\n\n        case 3:\n          _context15.prev = 3;\n          formData = payload.formData, reqPayload = _objectWithoutProperties(payload, [\"formData\"]);\n          selected_part = reqPayload.selected_part;\n\n          if (!_.isNull(selected_part)) {\n            _context15.next = 11;\n            break;\n          }\n\n          _context15.next = 9;\n          return put(tagStore.actions.setDetail({\n            part_id: null\n          }));\n\n        case 9:\n          _context15.next = 27;\n          break;\n\n        case 11:\n          _context15.next = 13;\n          return call(partRefApi.getReferencedPart, reqPayload);\n\n        case 13:\n          _yield$call7 = _context15.sent;\n          part = _yield$call7.part;\n          message = _yield$call7.message;\n          descriptions = part.descriptions;\n          newFormData = immer(formData, function (draft) {\n            draft.descriptions = descriptions;\n            draft.part_id = {\n              description: '',\n              entity_id: part.dpn,\n              value: part.id\n            };\n          });\n          _context15.next = 20;\n          return put(tagStore.actions.setDetail(newFormData));\n\n        case 20:\n          if (!(selected_part !== part.id)) {\n            _context15.next = 25;\n            break;\n          }\n\n          _context15.next = 23;\n          return put(tagStore.actions.setConfirmRef({\n            open: true,\n            message: message\n          }));\n\n        case 23:\n          _context15.next = 27;\n          break;\n\n        case 25:\n          _context15.next = 27;\n          return put(commonStore.actions.setSuccessMessage(message));\n\n        case 27:\n          _context15.next = 41;\n          break;\n\n        case 29:\n          _context15.prev = 29;\n          _context15.t0 = _context15[\"catch\"](3);\n          response = _context15.t0.response;\n\n          if (!_.isNil(response)) {\n            _context15.next = 37;\n            break;\n          }\n\n          _context15.next = 35;\n          return errorSaga.handleError(_context15.t0);\n\n        case 35:\n          _context15.next = 41;\n          break;\n\n        case 37:\n          status = response.status, data = response.data;\n\n          if (!(status === StatusCode.BAD_REQUEST)) {\n            _context15.next = 41;\n            break;\n          }\n\n          _context15.next = 41;\n          return put(tagStore.actions.setConfirmRef({\n            open: true,\n            message: data.message\n          }));\n\n        case 41:\n          _context15.next = 43;\n          return put(tagStore.actions.setDialogStateLoading(false));\n\n        case 43:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15, null, [[3, 29]]);\n}\n\nfunction changeUserDrawing(_ref8) {\n  var payload;\n  return _regeneratorRuntime.wrap(function changeUserDrawing$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          payload = _ref8.payload;\n          _context16.next = 3;\n          return putResolve(commonStore.actions.setUserValueDrawing(payload));\n\n        case 3:\n          _context16.next = 5;\n          return call(getTagList);\n\n        case 5:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nfunction tagSaga() {\n  return _regeneratorRuntime.wrap(function tagSaga$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return takeEvery(tagStore.sagaGetList, getTagList);\n\n        case 2:\n          _context17.next = 4;\n          return takeEvery(tagStore.sagaCreate, createTag);\n\n        case 4:\n          _context17.next = 6;\n          return takeEvery(tagStore.sagaGetGenerateCode, getTagGenerateCode);\n\n        case 6:\n          _context17.next = 8;\n          return takeEvery(tagStore.sagaOpenCreateDialog, openTagCreateDialog);\n\n        case 8:\n          _context17.next = 10;\n          return takeEvery(tagStore.sagaCloseDialog, closeTagDialog);\n\n        case 10:\n          _context17.next = 12;\n          return takeEvery(tagStore.sagaRemove, removeTag);\n\n        case 12:\n          _context17.next = 14;\n          return takeEvery(tagStore.sagaChangeUserJob, changeUserJob);\n\n        case 14:\n          _context17.next = 16;\n          return takeEvery(tagStore.sagaOpenUpdateDialog, openTagUpdateDialog);\n\n        case 16:\n          _context17.next = 18;\n          return takeEvery(tagStore.sagaUpdateMultiple, updateTags);\n\n        case 18:\n          _context17.next = 20;\n          return takeLatest(tagStore.sagaGetPart, getPart);\n\n        case 20:\n          _context17.next = 22;\n          return takeEvery(tagStore.sagaChangeUserDrawing, changeUserDrawing);\n\n        case 22:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17);\n}\n\nexport default tagSaga;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/saga/tag.saga.ts"],"names":["fetchTagDataForList","fetchTagInitDataForCE","fetchTagList","fetchGenerateCode","fetchTagDetail","createTag","getTagGenerateCode","openTagCreateDialog","closeTagDialog","getTagList","removeTag","changeUserJob","openTagUpdateDialog","updateTags","getPart","changeUserDrawing","tagSaga","takeEvery","put","call","putResolve","takeLatest","select","all","_","immer","tagStore","commonStore","advancedFilterActions","summaryReportActions","errorSaga","StatusCode","tagApi","partRefApi","selectUserValueJob","userJob","getInitDataForList","job_id_pk","value","data","isNull","selected_job","actions","setUserValueJob","setInitDataForList","jobId","getInitDataForCE","permissions","dataInit","setInitDataForCE","setDetail","job_id","tableState","selectTableState","searchQuery","selectSearchQuery","filterData","selectFilterData","userDrawing","selectUserValueDrawing","page","per_page","getList","s","drawing_id","setTableState","total_items","setDataList","elements","drawing","getGenerateCode","generated_code","elementId","getDetail","element","schematic_id","related_schematic","part_id","related_part","payload","setDialogStateLoading","create","message","generateCode","resetDetail","setSuccessMessage","setDialogStateTab","handleError","schematic","formData","element_id","setLoadingPage","setDialogStateOpen","selectPermissions","view","executeOperation","failed_count","setReportData","setOpen","updateMultiple","reqPayload","selected_part","getReferencedPart","part","descriptions","newFormData","draft","description","entity_id","dpn","id","setConfirmRef","open","response","isNil","status","BAD_REQUEST","setUserValueDrawing","sagaGetList","sagaCreate","sagaGetGenerateCode","sagaOpenCreateDialog","sagaCloseDialog","sagaRemove","sagaChangeUserJob","sagaOpenUpdateDialog","sagaUpdateMultiple","sagaGetPart","sagaChangeUserDrawing"],"mappings":"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","sourcesContent":["import { takeEvery, put, call, putResolve, takeLatest } from 'redux-saga/effects'\nimport { select, all } from 'typed-redux-saga'\nimport _ from 'lodash'\nimport immer from 'immer'\n\nimport { tagStore, commonStore, advancedFilterActions, summaryReportActions } from '@/store/reducers'\nimport * as errorSaga from '@/store/saga/errorSaga'\nimport { StatusCode } from '@/utils/StatusCode'\n\nimport tagApi from '@/apis/tag.api'\nimport partRefApi from '@/apis/part.api'\n\nimport type { DataForDropdown } from '@/types/Common'\n\nfunction* fetchTagDataForList() {\n  const userJob = yield* select(commonStore.selectUserValueJob)\n  const data = yield call(tagApi.getInitDataForList, {\n    job_id_pk: userJob.value\n  })\n  if (_.isNull(data.selected_job)) {\n    data.selected_job = {}\n  }\n  yield put(commonStore.actions.setUserValueJob(data.selected_job))\n  yield put(tagStore.actions.setInitDataForList(data))\n}\n\nfunction* fetchTagInitDataForCE(jobId = null) {\n  const userJob = yield* select(commonStore.selectUserValueJob)\n  const { permissions, selected_job, ...dataInit } = yield call(tagApi.getInitDataForCE, {\n    job_id_pk: jobId || userJob.value\n  })\n  yield put(tagStore.actions.setInitDataForCE(dataInit))\n  yield put(tagStore.actions.setDetail({ job_id: selected_job.value }))\n}\n\nfunction* fetchTagList() {\n  const { tableState, searchQuery, filterData, userJob, userDrawing } = yield* all({\n    tableState: select(commonStore.selectTableState),\n    searchQuery: select(commonStore.selectSearchQuery),\n    filterData: select(advancedFilterActions.selectFilterData),\n    userJob: select(commonStore.selectUserValueJob),\n    userDrawing: select(commonStore.selectUserValueDrawing)\n  })\n  if (!userJob.value) {\n    return\n  }\n  const { page, per_page } = tableState\n  const data = yield call(tagApi.getList, {\n    per_page,\n    page,\n    s: searchQuery,\n    job_id: userJob.value,\n    ...filterData,\n    drawing_id: userDrawing.value\n  })\n  yield put(commonStore.actions.setTableState({ total_items: data.total_items }))\n  yield put(tagStore.actions.setDataList(data.elements))\n}\n\nfunction* fetchGenerateCode(drawing: DataForDropdown) {\n  const { generated_code } = yield call(tagApi.getGenerateCode, drawing.value)\n  return generated_code\n}\n\nexport function* fetchTagDetail(elementId: number) {\n  const { element } = yield call(tagApi.getDetail, elementId)\n  element.schematic_id = element.related_schematic\n  element.part_id = element.related_part\n  return element\n}\n\nfunction* createTag({ payload }: ReturnType<typeof tagStore.sagaCreate>) {\n  yield put(tagStore.actions.setDialogStateLoading(true))\n  try {\n    const { message } = yield call(tagApi.create, payload)\n    const { userJob, userDrawing } = yield* all({\n      userJob: select(commonStore.selectUserValueJob),\n      userDrawing: select(commonStore.selectUserValueDrawing)\n    })\n    let generateCode = ''\n    if (userDrawing.value >= 0) {\n      generateCode = yield call(fetchGenerateCode, userDrawing)\n    }\n    yield putResolve(tagStore.actions.resetDetail({ userJob, userDrawing, generateCode }))\n    yield all([put(commonStore.actions.setSuccessMessage(message)), put(tagStore.actions.setDialogStateTab(0))])\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(tagStore.actions.setDialogStateLoading(false))\n}\n\nfunction* getTagGenerateCode({ payload }: ReturnType<typeof tagStore.sagaGetGenerateCode>) {\n  yield put(tagStore.actions.setDialogStateLoading(true))\n\n  try {\n    const { schematic, formData } = payload\n    const { generated_code } = yield call(tagApi.getGenerateCode, schematic.value)\n\n    yield put(\n      tagStore.actions.setDetail({\n        ...formData,\n        schematic_id: schematic,\n        element_id: generated_code\n      })\n    )\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n\n  yield put(tagStore.actions.setDialogStateLoading(false))\n}\n\nfunction* openTagCreateDialog() {\n  yield put(commonStore.actions.setLoadingPage(true))\n\n  try {\n    yield call(fetchTagInitDataForCE)\n    const userDrawing = yield* select(commonStore.selectUserValueDrawing)\n    if (userDrawing.value >= 0) {\n      const generateCode = yield call(fetchGenerateCode, userDrawing)\n      yield put(tagStore.actions.setDetail({ schematic_id: userDrawing, element_id: generateCode }))\n    }\n    yield put(tagStore.actions.setDialogStateOpen(true))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* closeTagDialog() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    const { userDrawing, userJob } = yield* all({\n      userDrawing: select(commonStore.selectUserValueDrawing),\n      userJob: select(commonStore.selectUserValueJob)\n    })\n    yield put(tagStore.actions.setDialogStateOpen(false))\n    yield call(getTagList)\n    yield put(tagStore.actions.resetDetail({ userDrawing, userJob }))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* getTagList() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchTagDataForList)\n    const permissions = yield* select(tagStore.selectPermissions)\n    if (permissions?.view) {\n      yield call(fetchTagList)\n    }\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* removeTag({ payload }) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    const data = yield call(tagApi.executeOperation, 'delete', payload)\n    if (data.failed_count > 0) {\n      yield put(summaryReportActions.setReportData(data))\n      yield put(summaryReportActions.setOpen(true))\n    } else {\n      yield put(commonStore.actions.setSuccessMessage(data.message))\n    }\n    yield call(fetchTagList)\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* changeUserJob({ payload }: ReturnType<typeof tagStore.sagaChangeUserJob>) {\n  yield put(commonStore.actions.setUserValueJob(payload))\n  yield call(getTagList)\n}\n\nfunction* openTagUpdateDialog({ payload }: ReturnType<typeof tagStore.sagaOpenUpdateDialog>) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    const element = yield call(fetchTagDetail, payload)\n    yield call(fetchTagInitDataForCE, element.job_id)\n    yield putResolve(tagStore.actions.setDetail(element))\n    yield put(tagStore.actions.setDialogStateOpen(true))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* updateTags({ payload }: ReturnType<typeof tagStore.sagaUpdateMultiple>) {\n  yield put(tagStore.actions.setDialogStateLoading(true))\n  try {\n    const { message } = yield call(tagApi.updateMultiple, payload)\n    yield call(closeTagDialog)\n    yield put(commonStore.actions.setSuccessMessage(message))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(tagStore.actions.setDialogStateLoading(false))\n}\n\nfunction* getPart({ payload }: ReturnType<typeof tagStore.sagaGetPart>) {\n  yield put(tagStore.actions.setDialogStateLoading(true))\n  try {\n    const { formData, ...reqPayload } = payload\n    const { selected_part } = reqPayload\n    if (_.isNull(selected_part)) {\n      yield put(tagStore.actions.setDetail({ part_id: null }))\n    } else {\n      const { part, message } = yield call(partRefApi.getReferencedPart, reqPayload)\n      const { descriptions } = part\n      const newFormData = immer(formData, (draft) => {\n        draft.descriptions = descriptions\n        draft.part_id = {\n          description: '',\n          entity_id: part.dpn,\n          value: part.id\n        }\n      })\n      yield put(tagStore.actions.setDetail(newFormData))\n      if (selected_part !== part.id) {\n        yield put(tagStore.actions.setConfirmRef({ open: true, message }))\n      } else {\n        yield put(commonStore.actions.setSuccessMessage(message))\n      }\n    }\n  } catch (error) {\n    const { response } = error\n    if (_.isNil(response)) {\n      yield errorSaga.handleError(error)\n    } else {\n      const { status, data } = response\n      if (status === StatusCode.BAD_REQUEST) {\n        yield put(tagStore.actions.setConfirmRef({ open: true, message: data.message }))\n      }\n    }\n  }\n  yield put(tagStore.actions.setDialogStateLoading(false))\n}\n\nfunction* changeUserDrawing({ payload }: ReturnType<typeof tagStore.sagaChangeUserDrawing>) {\n  yield putResolve(commonStore.actions.setUserValueDrawing(payload))\n  yield call(getTagList)\n}\n\nfunction* tagSaga() {\n  yield takeEvery(tagStore.sagaGetList, getTagList)\n  yield takeEvery(tagStore.sagaCreate, createTag)\n  yield takeEvery(tagStore.sagaGetGenerateCode, getTagGenerateCode)\n  yield takeEvery(tagStore.sagaOpenCreateDialog, openTagCreateDialog)\n  yield takeEvery(tagStore.sagaCloseDialog, closeTagDialog)\n  yield takeEvery(tagStore.sagaRemove, removeTag)\n  yield takeEvery(tagStore.sagaChangeUserJob, changeUserJob)\n  yield takeEvery(tagStore.sagaOpenUpdateDialog, openTagUpdateDialog)\n  yield takeEvery(tagStore.sagaUpdateMultiple, updateTags)\n  yield takeLatest(tagStore.sagaGetPart, getPart)\n  yield takeEvery(tagStore.sagaChangeUserDrawing, changeUserDrawing)\n}\n\nexport default tagSaga\n"]},"metadata":{},"sourceType":"module"}