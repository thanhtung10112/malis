{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\pages\\\\tags.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useStyles from '@/styles/page/layout';\nimport useAuthMiddleware from '@/hooks/useAuthMiddleware';\nimport { useTranslation } from 'next-i18next';\nimport { Link } from '@material-ui/core';\nimport { AppLayout, EditIcon, CreateIcon, AppAutocompleteStyled, DeleteIcon, SaveIcon, MakeAListIcon, DialogTag, useConfirm, AppAutocompleteStyledAsync, DialogDrawingCreateEdit, DialogPart } from '@/components';\nimport { tagStore, commonStore, drawingStore } from '@/store/reducers';\nimport { defaultProperties, iconColumn } from '@/utils/columnProperties';\nimport getMessageConfirm from '@/utils/getMessageConfirm';\nimport _ from 'lodash';\n\nconst Specifications_Page = () => {\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslation('element');\n  const {\n    confirm\n  } = useConfirm();\n  const breadcrumbData = useMemo(() => [{\n    label: 'Home',\n    href: '/'\n  }, {\n    label: 'Drawings',\n    href: '/Drawings'\n  }, {\n    label: 'Tags Management',\n    href: '/Tags'\n  }], []);\n  const dispatch = useDispatch();\n  const permissions = useSelector(tagStore.selectPermissions);\n  const userJob = useSelector(commonStore.selectUserValueJob);\n  const {\n    wiki_page,\n    column_tooltips,\n    jobs: jobOptions\n  } = useSelector(tagStore.selectInitDataForList);\n  const selectedRows = useSelector(commonStore.selectSelectedRows);\n  const dataList = useSelector(tagStore.selectDataList);\n  const userDrawing = useSelector(commonStore.selectUserValueDrawing);\n  useEffect(() => {\n    return () => dispatch(commonStore.actions.resetUserValue());\n  }, []);\n\n  const handleOpenCreateDialog = () => {\n    dispatch(tagStore.sagaOpenCreateDialog());\n  };\n\n  const handleChangeUserJob = (event, optionValue) => {\n    dispatch(tagStore.sagaChangeUserJob(optionValue));\n  };\n\n  const handleChangeUserDrawing = (event, optionValue) => {\n    dispatch(tagStore.sagaChangeUserDrawing(optionValue));\n  };\n\n  const handleOpenUpdateDialog = id => () => {\n    dispatch(tagStore.sagaOpenUpdateDialog(id));\n  };\n\n  const handleDeleteTags = async () => {\n    const description = getMessageConfirm(t, 'tag', selectedRows, 'delete');\n    const result = await confirm({\n      description\n    });\n\n    if (result === 'OK') {\n      const tags = _.map(selectedRows, partId => {\n        const {\n          schematic_id,\n          id\n        } = _.find(dataList, {\n          id: partId\n        });\n\n        return {\n          entity_id: schematic_id,\n          id\n        };\n      });\n\n      dispatch(tagStore.sagaRemove(tags));\n    }\n  };\n\n  const handleOpenDrawingDialog = schematicId => () => {\n    dispatch(drawingStore.sagaOpenUpdateDialog(schematicId));\n  };\n\n  const columns = useMemo(() => [_objectSpread(_objectSpread(_objectSpread({}, defaultProperties), iconColumn), {}, {\n    description: column_tooltips.edit,\n    field: 'id',\n    headerName: 'Edit',\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(EditIcon, {\n        onClick: handleOpenUpdateDialog(params.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 18\n      }, this);\n    }\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.schematic_id,\n    field: 'schematic_id',\n    headerName: 'Schematic #',\n    flex: 0.15,\n\n    renderCell(params) {\n      const {\n        value,\n        row\n      } = params;\n      return /*#__PURE__*/_jsxDEV(Link, {\n        href: \"#\",\n        onClick: handleOpenDrawingDialog(row.schematic_pk_id),\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this);\n    }\n\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.tag,\n    field: 'tag',\n    headerName: 'Tag #',\n    flex: 0.15\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.part_id,\n    field: 'part_id',\n    headerName: 'Part #',\n    flex: 0.2\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.description,\n    headerName: 'Description',\n    flex: 0.6,\n    field: 'description'\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.rfq_id,\n    field: 'rfq_id',\n    headerName: 'RFQ #',\n    width: 80\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.rfo_id,\n    field: 'rfo_id',\n    headerName: 'RFO  #',\n    width: 80\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.puco_id,\n    field: 'puco',\n    headerName: 'PuCo',\n    width: 80\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.order_id,\n    field: 'order_id',\n    headerName: 'Order  #',\n    width: 120\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.box_nr,\n    field: 'box_nr',\n    headerName: 'BoxNr',\n    width: 80\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.cnt_nr,\n    field: 'cnt_nr',\n    headerName: 'CntNr',\n    width: 80\n  }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    description: column_tooltips.package_id,\n    field: 'package_id',\n    headerName: 'Package #',\n    width: 80\n  })], []);\n  const buttonsPage = [{\n    label: t('common:button.new'),\n    startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 18\n    }, this),\n    onClick: handleOpenCreateDialog,\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.create) || userJob.value < 0 || !(userJob === null || userJob === void 0 ? void 0 : userJob.value)\n  }, {\n    label: t('common:button.save'),\n    startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 18\n    }, this),\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.edit)\n  }, {\n    label: t('common:button.delete'),\n    startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 18\n    }, this),\n    onClick: handleDeleteTags,\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.delete) || selectedRows.length === 0\n  }, {\n    label: t('common:button.make_a_list'),\n    startIcon: /*#__PURE__*/_jsxDEV(MakeAListIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 18\n    }, this)\n  }];\n\n  const Dialogs = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DialogTag, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogDrawingCreateEdit, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogPart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  const Options = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppAutocompleteStyled, {\n      className: classes.controlAutocomplete,\n      width: 200,\n      label: \"Jobs\",\n      options: jobOptions,\n      value: userJob,\n      renderOption: option => option.description,\n      primaryKeyOption: \"value\",\n      onChange: handleChangeUserJob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppAutocompleteStyledAsync, {\n      disabled: !(userJob === null || userJob === void 0 ? void 0 : userJob.value),\n      width: 250,\n      label: \"Schematics\",\n      className: classes.controlAutocomplete,\n      compName: \"drawing_list\",\n      additionalData: {\n        limit_to_job: userJob.value,\n        include_all_drawings_option: true\n      },\n      onChange: handleChangeUserDrawing,\n      value: userDrawing,\n      defaultOptions: [commonStore.initialState.userValue.drawing]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    entity: \"element\",\n    breadcrumbs: breadcrumbData,\n    wikiPage: wiki_page,\n    searchProps: {\n      width: 320\n    },\n    buttons: buttonsPage,\n    permissions: permissions,\n    tableProps: {\n      columns\n    },\n    Dialogs: Dialogs,\n    Options: Options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getServerSideProps = useAuthMiddleware(['common', 'element', 'make_a_list', 'advanced_filter', 'drawing', 'item', 'assembly']);\nexport default Specifications_Page;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/pages/tags.tsx"],"names":["useEffect","useMemo","useDispatch","useSelector","useStyles","useAuthMiddleware","useTranslation","Link","AppLayout","EditIcon","CreateIcon","AppAutocompleteStyled","DeleteIcon","SaveIcon","MakeAListIcon","DialogTag","useConfirm","AppAutocompleteStyledAsync","DialogDrawingCreateEdit","DialogPart","tagStore","commonStore","drawingStore","defaultProperties","iconColumn","getMessageConfirm","_","Specifications_Page","classes","t","confirm","breadcrumbData","label","href","dispatch","permissions","selectPermissions","userJob","selectUserValueJob","wiki_page","column_tooltips","jobs","jobOptions","selectInitDataForList","selectedRows","selectSelectedRows","dataList","selectDataList","userDrawing","selectUserValueDrawing","actions","resetUserValue","handleOpenCreateDialog","sagaOpenCreateDialog","handleChangeUserJob","event","optionValue","sagaChangeUserJob","handleChangeUserDrawing","sagaChangeUserDrawing","handleOpenUpdateDialog","id","sagaOpenUpdateDialog","handleDeleteTags","description","result","tags","map","partId","schematic_id","find","entity_id","sagaRemove","handleOpenDrawingDialog","schematicId","columns","edit","field","headerName","renderCell","params","value","flex","row","schematic_pk_id","tag","part_id","rfq_id","width","rfo_id","puco_id","order_id","box_nr","cnt_nr","package_id","buttonsPage","startIcon","onClick","disabled","create","delete","length","Dialogs","Options","controlAutocomplete","option","limit_to_job","include_all_drawings_option","initialState","userValue","drawing","getServerSideProps"],"mappings":"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","sourcesContent":["import { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useStyles from '@/styles/page/layout'\nimport useAuthMiddleware from '@/hooks/useAuthMiddleware'\nimport { useTranslation } from 'next-i18next'\n\nimport { Link } from '@material-ui/core'\n\nimport {\n  AppLayout,\n  EditIcon,\n  CreateIcon,\n  AppAutocompleteStyled,\n  DeleteIcon,\n  SaveIcon,\n  MakeAListIcon,\n  DialogTag,\n  useConfirm,\n  AppAutocompleteStyledAsync,\n  DialogDrawingCreateEdit,\n  DialogPart\n} from '@/components'\n\nimport { tagStore, commonStore, drawingStore } from '@/store/reducers'\nimport { defaultProperties, iconColumn } from '@/utils/columnProperties'\nimport getMessageConfirm from '@/utils/getMessageConfirm'\nimport _ from 'lodash'\n\nimport type { GridColumns } from '@material-ui/data-grid'\nimport type { ParameterOption, PayloadOperation, DataForDropdown } from '@/types/Common'\n\nconst Specifications_Page = () => {\n  const classes = useStyles()\n  const { t } = useTranslation('element')\n  const { confirm } = useConfirm()\n\n  const breadcrumbData = useMemo(\n    () => [\n      { label: 'Home', href: '/' },\n      { label: 'Drawings', href: '/Drawings' },\n      { label: 'Tags Management', href: '/Tags' }\n    ],\n    []\n  )\n\n  const dispatch = useDispatch()\n  const permissions = useSelector(tagStore.selectPermissions)\n  const userJob = useSelector(commonStore.selectUserValueJob)\n  const { wiki_page, column_tooltips, jobs: jobOptions } = useSelector(tagStore.selectInitDataForList)\n  const selectedRows = useSelector(commonStore.selectSelectedRows)\n  const dataList = useSelector(tagStore.selectDataList)\n  const userDrawing = useSelector(commonStore.selectUserValueDrawing)\n\n  useEffect(() => {\n    return () => dispatch(commonStore.actions.resetUserValue())\n  }, [])\n\n  const handleOpenCreateDialog = () => {\n    dispatch(tagStore.sagaOpenCreateDialog())\n  }\n\n  const handleChangeUserJob = (event, optionValue: ParameterOption) => {\n    dispatch(tagStore.sagaChangeUserJob(optionValue))\n  }\n\n  const handleChangeUserDrawing = (event, optionValue: DataForDropdown) => {\n    dispatch(tagStore.sagaChangeUserDrawing(optionValue))\n  }\n\n  const handleOpenUpdateDialog = (id: number) => () => {\n    dispatch(tagStore.sagaOpenUpdateDialog(id))\n  }\n\n  const handleDeleteTags = async () => {\n    const description = getMessageConfirm(t, 'tag', selectedRows, 'delete')\n    const result = await confirm({ description })\n    if (result === 'OK') {\n      const tags: PayloadOperation[] = _.map(selectedRows, (partId) => {\n        const { schematic_id, id } = _.find(dataList, { id: partId })\n        return { entity_id: schematic_id, id }\n      })\n      dispatch(tagStore.sagaRemove(tags))\n    }\n  }\n\n  const handleOpenDrawingDialog = (schematicId: number) => () => {\n    dispatch(drawingStore.sagaOpenUpdateDialog(schematicId))\n  }\n\n  const columns = useMemo<GridColumns>(\n    () => [\n      {\n        ...defaultProperties,\n        ...iconColumn,\n        description: column_tooltips.edit,\n        field: 'id',\n        headerName: 'Edit',\n        renderCell: (params) => {\n          return <EditIcon onClick={handleOpenUpdateDialog(params.value as number)} />\n        }\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.schematic_id,\n        field: 'schematic_id',\n        headerName: 'Schematic #',\n        flex: 0.15,\n        renderCell(params) {\n          const { value, row } = params\n          return (\n            <Link href=\"#\" onClick={handleOpenDrawingDialog(row.schematic_pk_id)}>\n              {value}\n            </Link>\n          )\n        }\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.tag,\n        field: 'tag',\n        headerName: 'Tag #',\n        flex: 0.15\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.part_id,\n        field: 'part_id',\n        headerName: 'Part #',\n        flex: 0.2\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.description,\n        headerName: 'Description',\n        flex: 0.6,\n        field: 'description'\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.rfq_id,\n        field: 'rfq_id',\n        headerName: 'RFQ #',\n        width: 80\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.rfo_id,\n        field: 'rfo_id',\n        headerName: 'RFO  #',\n        width: 80\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.puco_id,\n        field: 'puco',\n        headerName: 'PuCo',\n        width: 80\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.order_id,\n        field: 'order_id',\n        headerName: 'Order  #',\n        width: 120\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.box_nr,\n        field: 'box_nr',\n        headerName: 'BoxNr',\n        width: 80\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.cnt_nr,\n        field: 'cnt_nr',\n        headerName: 'CntNr',\n        width: 80\n      },\n      {\n        ...defaultProperties,\n        description: column_tooltips.package_id,\n        field: 'package_id',\n        headerName: 'Package #',\n        width: 80\n      }\n    ],\n    []\n  )\n\n  const buttonsPage = [\n    {\n      label: t('common:button.new'),\n      startIcon: <CreateIcon />,\n      onClick: handleOpenCreateDialog,\n      disabled: !permissions?.create || userJob.value < 0 || !userJob?.value\n    },\n    {\n      label: t('common:button.save'),\n      startIcon: <SaveIcon />,\n      disabled: !permissions?.edit\n    },\n    {\n      label: t('common:button.delete'),\n      startIcon: <DeleteIcon />,\n      onClick: handleDeleteTags,\n      disabled: !permissions?.delete || selectedRows.length === 0\n    },\n    {\n      label: t('common:button.make_a_list'),\n      startIcon: <MakeAListIcon />\n    }\n  ]\n\n  const Dialogs = (\n    <>\n      <DialogTag />\n      <DialogDrawingCreateEdit />\n      <DialogPart />\n    </>\n  )\n\n  const Options = (\n    <>\n      <AppAutocompleteStyled\n        className={classes.controlAutocomplete}\n        width={200}\n        label=\"Jobs\"\n        options={jobOptions}\n        value={userJob}\n        renderOption={(option) => option.description}\n        primaryKeyOption=\"value\"\n        onChange={handleChangeUserJob}\n      />\n\n      <AppAutocompleteStyledAsync\n        disabled={!userJob?.value}\n        width={250}\n        label=\"Schematics\"\n        className={classes.controlAutocomplete}\n        compName=\"drawing_list\"\n        additionalData={{\n          limit_to_job: userJob.value,\n          include_all_drawings_option: true\n        }}\n        onChange={handleChangeUserDrawing}\n        value={userDrawing}\n        defaultOptions={[commonStore.initialState.userValue.drawing]}\n      />\n    </>\n  )\n\n  return (\n    <AppLayout\n      entity=\"element\"\n      breadcrumbs={breadcrumbData}\n      wikiPage={wiki_page}\n      searchProps={{\n        width: 320\n      }}\n      buttons={buttonsPage}\n      permissions={permissions}\n      tableProps={{\n        columns\n      }}\n      Dialogs={Dialogs}\n      Options={Options}\n    />\n  )\n}\n\nexport const getServerSideProps = useAuthMiddleware([\n  'common',\n  'element',\n  'make_a_list',\n  'advanced_filter',\n  'drawing',\n  'item',\n  'assembly'\n])\n\nexport default Specifications_Page\n"]},"metadata":{},"sourceType":"module"}