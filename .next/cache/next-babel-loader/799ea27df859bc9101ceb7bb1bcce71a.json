{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\FormController\\\\PasswordField\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Tooltip, Typography, LinearProgress } from '@material-ui/core';\nimport { AppTextField } from '@/components/index';\nimport { useEffect, useState } from 'react';\nimport { useController } from 'react-hook-form';\nimport useStyles from './styles';\nimport _ from 'lodash';\nimport clsx from 'clsx';\nimport { regexes, regexSpecCharacters } from '@/utils/getPasswordYup';\n\nconst FormControllerPasswordField = props => {\n  const classes = useStyles();\n\n  const {\n    control,\n    name,\n    rules\n  } = props,\n        textFieldProps = _objectWithoutProperties(props, [\"control\", \"name\", \"rules\"]);\n\n  const {\n    0: levelPw,\n    1: setLevelPw\n  } = useState([]);\n\n  const _useController = useController({\n    name,\n    control\n  }),\n        {\n    field: {\n      onChange: onChangeController,\n      value: valueController\n    },\n    meta: {\n      invalid\n    }\n  } = _useController,\n        inputProps = _objectWithoutProperties(_useController.field, [\"onChange\", \"value\"]);\n\n  useEffect(() => {\n    const passedRegexes = [];\n\n    if (valueController.length > 0) {\n      regexes.forEach(regex => {\n        const isMatch = new RegExp(regex).test(valueController);\n        isMatch && passedRegexes.push(regex);\n      });\n    }\n\n    setLevelPw(passedRegexes);\n  }, [valueController]);\n\n  const handleChangeValue = event => {\n    const {\n      value\n    } = event.target;\n    onChangeController(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      title: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Password must have:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: clsx(classes.tooltipItem, {\n              active: valueController.length >= 8 && valueController.length <= 30\n            }),\n            children: \"8 - 30 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: clsx(classes.tooltipItem, {\n              active: levelPw.includes('[A-Z]')\n            }),\n            children: \"At least one uppercase letter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: clsx(classes.tooltipItem, {\n              active: levelPw.includes('[a-z]')\n            }),\n            children: \"At least one lowercase letter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: clsx(classes.tooltipItem, {\n              active: levelPw.includes('[0-9]')\n            }),\n            children: \"At least one number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: clsx(classes.tooltipItem, {\n              active: levelPw.includes(regexSpecCharacters)\n            }),\n            children: \"At least one special character\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      children: /*#__PURE__*/_jsxDEV(AppTextField, _objectSpread(_objectSpread(_objectSpread({}, inputProps), textFieldProps), {}, {\n        onChange: handleChangeValue,\n        error: Boolean(invalid),\n        helperText: invalid === null || invalid === void 0 ? void 0 : invalid.message,\n        value: _.isNil(valueController) ? '' : valueController\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      style: {\n        margin: '8px 0'\n      },\n      children: [\"Password Strength:\", ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n      variant: \"determinate\",\n      value: levelPw.length * 25,\n      color: levelPw.length > 2 ? 'primary' : 'secondary'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default FormControllerPasswordField;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/FormController/PasswordField/index.tsx"],"names":["Tooltip","Typography","LinearProgress","AppTextField","useEffect","useState","useController","useStyles","_","clsx","regexes","regexSpecCharacters","FormControllerPasswordField","props","classes","control","name","rules","textFieldProps","levelPw","setLevelPw","field","onChange","onChangeController","value","valueController","meta","invalid","inputProps","passedRegexes","length","forEach","regex","isMatch","RegExp","test","push","handleChangeValue","event","target","tooltipItem","active","includes","Boolean","message","isNil","margin"],"mappings":"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","sourcesContent":["import { Tooltip, Typography, LinearProgress } from '@material-ui/core'\nimport { AppTextField } from '@/components/index'\n\nimport { useEffect, useState } from 'react'\nimport { useController } from 'react-hook-form'\nimport useStyles from './styles'\n\nimport _ from 'lodash'\nimport clsx from 'clsx'\nimport { regexes, regexSpecCharacters } from '@/utils/getPasswordYup'\n\nconst FormControllerPasswordField = (props) => {\n  const classes = useStyles()\n\n  const { control, name, rules, ...textFieldProps } = props\n\n  const [levelPw, setLevelPw] = useState<string[]>([])\n\n  const {\n    field: { onChange: onChangeController, value: valueController, ...inputProps },\n    meta: { invalid }\n  } = useController({\n    name,\n    control\n  })\n\n  useEffect(() => {\n    const passedRegexes = [] as string[]\n    if (valueController.length > 0) {\n      regexes.forEach((regex) => {\n        const isMatch = new RegExp(regex).test(valueController)\n        isMatch && passedRegexes.push(regex)\n      })\n    }\n    setLevelPw(passedRegexes)\n  }, [valueController])\n\n  const handleChangeValue = (event) => {\n    const { value } = event.target\n    onChangeController(value)\n  }\n\n  return (\n    <>\n      <Tooltip\n        title={\n          <>\n            <p>Password must have:</p>\n            <ul>\n              <li\n                className={clsx(classes.tooltipItem, {\n                  active: valueController.length >= 8 && valueController.length <= 30\n                })}\n              >\n                8 - 30 characters\n              </li>\n              <li\n                className={clsx(classes.tooltipItem, {\n                  active: levelPw.includes('[A-Z]')\n                })}\n              >\n                At least one uppercase letter\n              </li>\n              <li\n                className={clsx(classes.tooltipItem, {\n                  active: levelPw.includes('[a-z]')\n                })}\n              >\n                At least one lowercase letter\n              </li>\n              <li\n                className={clsx(classes.tooltipItem, {\n                  active: levelPw.includes('[0-9]')\n                })}\n              >\n                At least one number\n              </li>\n              <li\n                className={clsx(classes.tooltipItem, {\n                  active: levelPw.includes(regexSpecCharacters)\n                })}\n              >\n                At least one special character\n              </li>\n            </ul>\n          </>\n        }\n      >\n        <AppTextField\n          {...inputProps}\n          {...(textFieldProps as any)}\n          onChange={handleChangeValue}\n          error={Boolean(invalid)}\n          helperText={(invalid as any)?.message}\n          value={_.isNil(valueController) ? '' : valueController}\n        />\n      </Tooltip>\n      <Typography variant=\"body2\" color=\"textSecondary\" style={{ margin: '8px 0' }}>\n        Password Strength:{' '}\n      </Typography>\n      <LinearProgress\n        variant=\"determinate\"\n        value={levelPw.length * 25}\n        color={levelPw.length > 2 ? 'primary' : 'secondary'}\n      />\n    </>\n  )\n}\n\nexport default FormControllerPasswordField\n"]},"metadata":{},"sourceType":"module"}