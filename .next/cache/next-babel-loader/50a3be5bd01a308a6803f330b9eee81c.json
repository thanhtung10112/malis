{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createSlice, createAction, createSelector } from '@reduxjs/toolkit';\nimport { setCookie, destroyCookie } from 'nookies';\nimport Router from 'next/router';\nimport { actionTypes } from '@/utils/constant';\nexport const name = 'auth';\nexport const resetState = createAction(`${name}/RESET_STATE`);\nexport const initialState = {\n  access_token: '',\n  loading: false,\n  unauthorized: false,\n  loadingAuth: false,\n  profile: {\n    user_id: '',\n    first_name: '',\n    last_name: '',\n    email: '',\n    valid_until: '',\n    user_name: '',\n    updated_at: '',\n    group_membership: [],\n    default_language_id: null\n  },\n  pwdDialogState: {\n    loading: false,\n    open: false\n  },\n  settings: {\n    initData: {\n      parameters: {\n        PAGES: [],\n        PLLA: []\n      },\n      timezones: []\n    },\n    detail: {\n      default_language: null,\n      home_page: null,\n      time_zone: ''\n    }\n  }\n};\nconst authSlice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    saveTokenLogin(state, {\n      payload\n    }) {\n      state.access_token = payload.access_token;\n      const backUrl = Router.query.back_url;\n\n      if (payload.remember) {\n        setCookie(null, 'token', payload.access_token, {\n          maxAge: 60 * 60 * 24 // 1 day\n\n        });\n      } else {\n        setCookie(null, 'token', payload.access_token);\n      }\n\n      setCookie(null, 'redirect_to', payload.redirect_to, {\n        maxAge: 60 * 60 * 24 * 365\n      });\n\n      if (backUrl) {\n        Router.push(decodeURIComponent(backUrl));\n      } else {\n        Router.push(payload.redirect_to);\n      }\n    },\n\n    setLoading(state, {\n      payload\n    }) {\n      state.loading = payload;\n    },\n\n    setUnauthorized(state, {\n      payload\n    }) {\n      state.unauthorized = payload;\n    },\n\n    setProfile(state, {\n      payload\n    }) {\n      state.profile = payload;\n    },\n\n    logout(state) {\n      destroyCookie(null, 'token');\n      destroyCookie(null, 'redirect_to');\n      destroyCookie(null, 'current_job_id');\n      state.unauthorized = false;\n      state.access_token = '';\n      Router.push('/login');\n    },\n\n    setPwDialogState(state, {\n      payload\n    }) {\n      state.pwdDialogState = _objectSpread(_objectSpread({}, state.pwdDialogState), payload);\n    },\n\n    setProfileAvatar(state, {\n      payload\n    }) {\n      state.profile.avatar = payload;\n    },\n\n    setSettingInitData(state, {\n      payload\n    }) {\n      state.settings.initData = payload;\n    },\n\n    setLoadingAuth(state, {\n      payload\n    }) {\n      state.loadingAuth = payload;\n    },\n\n    setSettingDetail(state, {\n      payload\n    }) {\n      state.settings.detail = _objectSpread(_objectSpread({}, state.settings.detail), payload);\n    },\n\n    setDefaultLanguage(state, {\n      payload\n    }) {\n      state.profile.default_language_id = payload;\n    }\n\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState;\n    }\n\n  }\n}); // Actions\n\nexport const {\n  actions\n} = authSlice; // Saga actions\n\nexport const sagaLogin = createAction(`${name}/${actionTypes.LOGIN}`);\nexport const sagaGetProfile = createAction(`${name}/${actionTypes.GET_PROFILE}`);\nexport const sagaChangePassword = createAction(`${name}/${actionTypes.CHANGE_PASSWORD}`);\nexport const sagaGetSettings = createAction(`${name}/GET_SETTINGS`);\nexport const sagaSaveSettings = createAction(`${name}/SAVE_SETTINGS`);\nexport const sagaLogout = createAction(`${name}/${actionTypes.LOGOUT}`);\nexport const selectState = state => state.auth;\nexport const selectUnauthorized = createSelector(selectState, state => state.unauthorized);\nexport const selectProfile = createSelector(selectState, state => state.profile);\nexport const selectPwdDialogState = createSelector(selectState, state => state.pwdDialogState);\nexport const selectSettings = createSelector(selectState, state => state.settings);\nexport const selectSettingsParameters = createSelector(selectState, state => state.settings.initData.parameters);\nexport const selectLoadingAuth = createSelector(selectState, state => state.loadingAuth);\nexport default authSlice;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/store/reducers/auth.reducer.ts"],"names":["createSlice","createAction","createSelector","setCookie","destroyCookie","Router","actionTypes","name","resetState","initialState","access_token","loading","unauthorized","loadingAuth","profile","user_id","first_name","last_name","email","valid_until","user_name","updated_at","group_membership","default_language_id","pwdDialogState","open","settings","initData","parameters","PAGES","PLLA","timezones","detail","default_language","home_page","time_zone","authSlice","reducers","saveTokenLogin","state","payload","backUrl","query","back_url","remember","maxAge","redirect_to","push","decodeURIComponent","setLoading","setUnauthorized","setProfile","logout","setPwDialogState","setProfileAvatar","avatar","setSettingInitData","setLoadingAuth","setSettingDetail","setDefaultLanguage","extraReducers","type","actions","sagaLogin","LOGIN","sagaGetProfile","GET_PROFILE","sagaChangePassword","CHANGE_PASSWORD","sagaGetSettings","sagaSaveSettings","sagaLogout","LOGOUT","selectState","auth","selectUnauthorized","selectProfile","selectPwdDialogState","selectSettings","selectSettingsParameters","selectLoadingAuth"],"mappings":"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","sourcesContent":["import { createSlice, createAction, PayloadAction, createSelector } from '@reduxjs/toolkit'\nimport { setCookie, destroyCookie } from 'nookies'\nimport Router from 'next/router'\n\nimport { actionTypes } from '@/utils/constant'\n\nimport type { LoginData, Profile, SettingDetail, SettingInitData } from '@/types/Auth'\nimport type { RootReducerType } from './rootReducer'\n\nexport const name = 'auth'\n\nexport const resetState = createAction(`${name}/RESET_STATE`)\n\nexport const initialState = {\n  access_token: '',\n  loading: false,\n  unauthorized: false,\n  loadingAuth: false,\n  profile: {\n    user_id: '',\n    first_name: '',\n    last_name: '',\n    email: '',\n    valid_until: '',\n    user_name: '',\n    updated_at: '',\n    group_membership: [],\n    default_language_id: null\n  } as Profile,\n  pwdDialogState: {\n    loading: false,\n    open: false\n  },\n  settings: {\n    initData: {\n      parameters: {\n        PAGES: [],\n        PLLA: []\n      },\n      timezones: []\n    } as SettingInitData,\n    detail: {\n      default_language: null,\n      home_page: null,\n      time_zone: ''\n    } as SettingDetail\n  }\n}\n\nconst authSlice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    saveTokenLogin(\n      state,\n      { payload }: PayloadAction<{ access_token: string; remember: boolean; redirect_to: string }>\n    ) {\n      state.access_token = payload.access_token\n      const backUrl = Router.query.back_url\n      if (payload.remember) {\n        setCookie(null, 'token', payload.access_token, {\n          maxAge: 60 * 60 * 24 // 1 day\n        })\n      } else {\n        setCookie(null, 'token', payload.access_token)\n      }\n      setCookie(null, 'redirect_to', payload.redirect_to, {\n        maxAge: 60 * 60 * 24 * 365\n      })\n      if (backUrl) {\n        Router.push(decodeURIComponent(backUrl as string))\n      } else {\n        Router.push(payload.redirect_to)\n      }\n    },\n    setLoading(state, { payload }: PayloadAction<boolean>) {\n      state.loading = payload\n    },\n    setUnauthorized(state, { payload }: PayloadAction<boolean>) {\n      state.unauthorized = payload\n    },\n    setProfile(state, { payload }: PayloadAction<Profile>) {\n      state.profile = payload\n    },\n    logout(state) {\n      destroyCookie(null, 'token')\n      destroyCookie(null, 'redirect_to')\n      destroyCookie(null, 'current_job_id')\n      state.unauthorized = false\n      state.access_token = ''\n      Router.push('/login')\n    },\n    setPwDialogState(state, { payload }: PayloadAction<Partial<typeof initialState.pwdDialogState>>) {\n      state.pwdDialogState = {\n        ...state.pwdDialogState,\n        ...payload\n      }\n    },\n    setProfileAvatar(state, { payload }: PayloadAction<string>) {\n      state.profile.avatar = payload\n    },\n    setSettingInitData(state, { payload }: PayloadAction<SettingInitData>) {\n      state.settings.initData = payload\n    },\n    setLoadingAuth(state, { payload }: PayloadAction<boolean>) {\n      state.loadingAuth = payload\n    },\n    setSettingDetail(state, { payload }: PayloadAction<Partial<SettingDetail>>) {\n      state.settings.detail = {\n        ...state.settings.detail,\n        ...payload\n      }\n    },\n    setDefaultLanguage(state, { payload }: PayloadAction<number>) {\n      state.profile.default_language_id = payload\n    }\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState\n    }\n  }\n})\n\n// Actions\nexport const { actions } = authSlice\n\n// Saga actions\n\nexport const sagaLogin = createAction<LoginData>(`${name}/${actionTypes.LOGIN}`)\nexport const sagaGetProfile = createAction(`${name}/${actionTypes.GET_PROFILE}`)\nexport const sagaChangePassword = createAction<{ new_password: string; old_password: string }>(\n  `${name}/${actionTypes.CHANGE_PASSWORD}`\n)\nexport const sagaGetSettings = createAction(`${name}/GET_SETTINGS`)\nexport const sagaSaveSettings = createAction<SettingDetail>(`${name}/SAVE_SETTINGS`)\nexport const sagaLogout = createAction<{ confirm: string }>(`${name}/${actionTypes.LOGOUT}`)\n\nexport const selectState = (state: RootReducerType) => state.auth\nexport const selectUnauthorized = createSelector(selectState, (state) => state.unauthorized)\nexport const selectProfile = createSelector(selectState, (state) => state.profile)\nexport const selectPwdDialogState = createSelector(selectState, (state) => state.pwdDialogState)\nexport const selectSettings = createSelector(selectState, (state) => state.settings)\n\nexport const selectSettingsParameters = createSelector(selectState, (state) => state.settings.initData.parameters)\n\nexport const selectLoadingAuth = createSelector(selectState, (state) => state.loadingAuth)\n\nexport default authSlice\n"]},"metadata":{},"sourceType":"module"}