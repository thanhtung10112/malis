{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useMemo, useState, memo, useCallback } from 'react';\nimport useStyles from './styles';\nimport { TextField, Tooltip, InputAdornment } from '@material-ui/core';\nimport { FormControllerErrorMessage, GenerateCodeIcon } from '@/components';\nimport clsx from 'clsx';\n\nvar AppTextField = function AppTextField(props) {\n  var helperText = props.helperText,\n      error = props.error,\n      InputProps = props.InputProps,\n      disabled = props.disabled,\n      generateCode = props.generateCode,\n      tooltip = props.tooltip,\n      loading = props.loading,\n      onGenerateCode = props.onGenerateCode,\n      textFieldProps = _objectWithoutProperties(props, [\"helperText\", \"error\", \"InputProps\", \"disabled\", \"generateCode\", \"tooltip\", \"loading\", \"onGenerateCode\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      isFocusing = _useState[0],\n      setIsFocusing = _useState[1];\n\n  var openTooltip = useMemo(function () {\n    return isFocusing && error;\n  }, [error, isFocusing]);\n\n  var onHoverField = function onHoverField() {\n    setIsFocusing(true);\n  };\n\n  var onLeavingField = function onLeavingField() {\n    setIsFocusing(false);\n  };\n\n  var renderGenerateIcon = useCallback(function () {\n    if (generateCode) {\n      return /*#__PURE__*/_jsx(InputAdornment, {\n        position: \"end\",\n        disablePointerEvents: disabled || loading,\n        children: /*#__PURE__*/_jsx(Tooltip, {\n          title: tooltip,\n          children: /*#__PURE__*/_jsx(GenerateCodeIcon, {\n            fontSize: \"default\",\n            className: clsx(classes.appTextField__generateIcon, _defineProperty({}, classes.appTextField__generateIcon__disabled, disabled || loading)),\n            onClick: onGenerateCode\n          })\n        })\n      });\n    }\n\n    return null;\n  }, [disabled, loading, generateCode, tooltip, onGenerateCode]);\n  return /*#__PURE__*/_jsx(FormControllerErrorMessage, {\n    title: helperText,\n    open: openTooltip,\n    children: /*#__PURE__*/_jsx(TextField, _objectSpread({\n      disabled: disabled,\n      error: error,\n      onMouseOver: onHoverField,\n      onMouseLeave: onLeavingField,\n      InputProps: _objectSpread({\n        readOnly: disabled,\n        className: clsx({\n          'Mui-disabled': disabled\n        }),\n        endAdornment: renderGenerateIcon()\n      }, InputProps)\n    }, textFieldProps))\n  });\n};\n\nAppTextField.defaultProps = {\n  generateCode: false,\n  tooltip: 'Generate code',\n  loading: false\n};\nexport default /*#__PURE__*/memo(AppTextField);","map":null,"metadata":{},"sourceType":"module"}