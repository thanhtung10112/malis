{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice, createAction, createSelector } from '@reduxjs/toolkit';\nimport { format as formatDate } from 'date-fns';\nimport { getDefaultValues } from '@/utils/getDefaultValues';\nimport { DATE_FORMAT, actionTypes } from '@/utils/constant';\nexport var name = 'user';\nexport var resetState = createAction(\"\".concat(name, \"/\").concat(actionTypes.RESET_STATE));\nvar initialState = {\n  dataList: [],\n  initDataForList: {\n    permissions: {\n      user: null\n    },\n    wiki_page: '',\n    column_tooltips: {}\n  },\n  initDataForCE: {\n    groups: [],\n    jobs: [],\n    parameters: {\n      PLLA: [],\n      PUCO: []\n    },\n    wiki_page: '',\n    timezones: []\n  },\n  dialogState: {\n    open: false,\n    loading: false,\n    historyLogs: []\n  },\n  resetPwdDialog: {\n    open: false,\n    loading: false\n  },\n  detail: {\n    user_id: '',\n    email: null,\n    puco: null,\n    first_name: '',\n    last_name: '',\n    time_zone: '',\n    user_abb: '',\n    login_page: '',\n    valid_from: formatDate(new Date(), DATE_FORMAT),\n    default_language: null,\n    valid_until: null,\n    groups: [],\n    job_access: [],\n    password: '',\n    confirm_password: ''\n  }\n};\nvar userSlice = createSlice({\n  name: name,\n  initialState: initialState,\n  reducers: {\n    setDataList: function setDataList(state, _ref) {\n      var payload = _ref.payload;\n      state.dataList = payload;\n    },\n    setDialogState: function setDialogState(state, _ref2) {\n      var payload = _ref2.payload;\n      state.dialogState = _objectSpread(_objectSpread({}, state.dialogState), payload);\n    },\n    setDialogStateOpen: function setDialogStateOpen(state, _ref3) {\n      var payload = _ref3.payload;\n      state.dialogState.open = payload;\n    },\n    setHistoryLogs: function setHistoryLogs(state, _ref4) {\n      var payload = _ref4.payload;\n      state.dialogState.historyLogs = payload;\n    },\n    setDialogStateLoading: function setDialogStateLoading(state, _ref5) {\n      var payload = _ref5.payload;\n      state.dialogState.loading = payload;\n    },\n    setInitDataForList: function setInitDataForList(state, _ref6) {\n      var payload = _ref6.payload;\n      state.initDataForList = payload;\n    },\n    setPermissions: function setPermissions(state, _ref7) {\n      var payload = _ref7.payload;\n      state.initDataForList.permissions.user = payload;\n    },\n    setInitDataForCE: function setInitDataForCE(state, _ref8) {\n      var payload = _ref8.payload;\n      state.initDataForCE = payload;\n    },\n    setDetail: function setDetail(state, _ref9) {\n      var payload = _ref9.payload;\n      state.detail = _objectSpread(_objectSpread({}, state.detail), payload);\n    },\n    setResetPwdDialog: function setResetPwdDialog(state, _ref10) {\n      var payload = _ref10.payload;\n      state.dialogState = _objectSpread(_objectSpread({}, state.dialogState), payload);\n    },\n    setResetPwdDialogOpen: function setResetPwdDialogOpen(state, _ref11) {\n      var payload = _ref11.payload;\n      state.resetPwdDialog.open = payload;\n    },\n    setResetPwdDialogLoading: function setResetPwdDialogLoading(state, _ref12) {\n      var payload = _ref12.payload;\n      state.resetPwdDialog.loading = payload;\n    },\n    resetDetail: function resetDetail(state) {\n      var detailDefaultValue = getDefaultValues(state.initDataForCE, {\n        default_language: 'parameters.PLLA',\n        puco: 'parameters.PUCO',\n        time_zone: 'timezones'\n      }, initialState.detail);\n      state.detail = _objectSpread({}, detailDefaultValue);\n    }\n  },\n  extraReducers: _defineProperty({}, resetState.type, function () {\n    return initialState;\n  })\n}); // Actions\n\nvar actions = userSlice.actions; // Saga actions\n\nexport { actions };\nexport var sagaGetList = createAction(\"\".concat(name, \"/\").concat(actionTypes.GET_LIST));\nexport var sagaCreate = createAction(\"\".concat(name, \"/\").concat(actionTypes.CREATE));\nexport var sagaUpdate = createAction(\"\".concat(name, \"/\").concat(actionTypes.UPDATE));\nexport var sagaOpenCreateDialog = createAction(\"\".concat(name, \"/\").concat(actionTypes.OPEN_CREATE_DIALOG));\nexport var sagaOpenUpdateDialog = createAction(\"\".concat(name, \"/\").concat(actionTypes.OPEN_UPDATE_DIALOG));\nexport var sagaCloseDialog = createAction(\"\".concat(name, \"/\").concat(actionTypes.CLOSE_DIALOG));\nexport var sagaResetPassword = createAction(\"\".concat(name, \"/RESET_PASSWORD\")); // Selectors\n\nexport var selectState = function selectState(state) {\n  return state[name];\n};\nexport var selectDialogState = createSelector(selectState, function (state) {\n  return state.dialogState;\n});\nexport var selectDataList = createSelector(selectState, function (state) {\n  return state.dataList;\n});\nexport var selectPermissions = createSelector(selectState, function (state) {\n  return state.initDataForList.permissions.user;\n});\nexport var selectResetPwdDialog = createSelector(selectState, function (state) {\n  return state.resetPwdDialog;\n});\nexport var selectDetail = createSelector(selectState, function (state) {\n  return state.detail;\n});\nexport var selectInitDataForCE = createSelector(selectState, function (state) {\n  return state.initDataForCE;\n});\nexport var selectInitDataForList = createSelector(selectState, function (state) {\n  return state.initDataForList;\n});\nexport default userSlice;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/store/reducers/user.reducer.ts"],"names":["createSlice","createAction","createSelector","format","formatDate","getDefaultValues","DATE_FORMAT","actionTypes","name","resetState","RESET_STATE","initialState","dataList","initDataForList","permissions","user","wiki_page","column_tooltips","initDataForCE","groups","jobs","parameters","PLLA","PUCO","timezones","dialogState","open","loading","historyLogs","resetPwdDialog","detail","user_id","email","puco","first_name","last_name","time_zone","user_abb","login_page","valid_from","Date","default_language","valid_until","job_access","password","confirm_password","userSlice","reducers","setDataList","state","payload","setDialogState","setDialogStateOpen","setHistoryLogs","setDialogStateLoading","setInitDataForList","setPermissions","setInitDataForCE","setDetail","setResetPwdDialog","setResetPwdDialogOpen","setResetPwdDialogLoading","resetDetail","detailDefaultValue","extraReducers","type","actions","sagaGetList","GET_LIST","sagaCreate","CREATE","sagaUpdate","UPDATE","sagaOpenCreateDialog","OPEN_CREATE_DIALOG","sagaOpenUpdateDialog","OPEN_UPDATE_DIALOG","sagaCloseDialog","CLOSE_DIALOG","sagaResetPassword","selectState","selectDialogState","selectDataList","selectPermissions","selectResetPwdDialog","selectDetail","selectInitDataForCE","selectInitDataForList"],"mappings":"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","sourcesContent":["import { createSlice, createAction, PayloadAction, createSelector } from '@reduxjs/toolkit'\nimport { format as formatDate } from 'date-fns'\nimport { getDefaultValues } from '@/utils/getDefaultValues'\nimport { DATE_FORMAT, actionTypes } from '@/utils/constant'\n\nimport type { UserItem, UserPermissions, UserInitDataForList, UserInitDataForCE, UserDetail } from '@/types/User'\nimport type { Entity, HistoryLog } from '@/types/Common'\nimport type { RootReducerType } from './rootReducer'\n\nexport const name: Entity = 'user'\nexport const resetState = createAction(`${name}/${actionTypes.RESET_STATE}`)\n\nconst initialState = {\n  dataList: [] as UserItem[],\n  initDataForList: {\n    permissions: {\n      user: null\n    },\n    wiki_page: '',\n    column_tooltips: {}\n  } as UserInitDataForList,\n  initDataForCE: {\n    groups: [],\n    jobs: [],\n    parameters: {\n      PLLA: [],\n      PUCO: []\n    },\n    wiki_page: '',\n    timezones: []\n  } as UserInitDataForCE,\n  dialogState: {\n    open: false,\n    loading: false,\n    historyLogs: [] as HistoryLog[]\n  },\n  resetPwdDialog: {\n    open: false,\n    loading: false\n  },\n  detail: {\n    user_id: '',\n    email: null,\n    puco: null,\n    first_name: '',\n    last_name: '',\n    time_zone: '',\n    user_abb: '',\n    login_page: '',\n    valid_from: formatDate(new Date(), DATE_FORMAT),\n    default_language: null,\n    valid_until: null,\n    groups: [],\n    job_access: [],\n    password: '',\n    confirm_password: ''\n  } as UserDetail\n}\n\nconst userSlice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setDataList(state, { payload }: PayloadAction<UserItem[]>) {\n      state.dataList = payload\n    },\n    setDialogState(state, { payload }: PayloadAction<Partial<typeof initialState.dialogState>>) {\n      state.dialogState = {\n        ...state.dialogState,\n        ...payload\n      }\n    },\n    setDialogStateOpen(state, { payload }: PayloadAction<boolean>) {\n      state.dialogState.open = payload\n    },\n    setHistoryLogs(state, { payload }: PayloadAction<HistoryLog[]>) {\n      state.dialogState.historyLogs = payload\n    },\n    setDialogStateLoading(state, { payload }: PayloadAction<boolean>) {\n      state.dialogState.loading = payload\n    },\n    setInitDataForList(state, { payload }: PayloadAction<UserInitDataForList>) {\n      state.initDataForList = payload\n    },\n    setPermissions(state, { payload }: PayloadAction<UserPermissions>) {\n      state.initDataForList.permissions.user = payload\n    },\n    setInitDataForCE(state, { payload }: PayloadAction<UserInitDataForCE>) {\n      state.initDataForCE = payload\n    },\n    setDetail(state, { payload }: PayloadAction<Partial<UserDetail>>) {\n      state.detail = {\n        ...state.detail,\n        ...payload\n      }\n    },\n    setResetPwdDialog(state, { payload }: PayloadAction<Partial<typeof initialState.resetPwdDialog>>) {\n      state.dialogState = {\n        ...state.dialogState,\n        ...payload\n      }\n    },\n    setResetPwdDialogOpen(state, { payload }: PayloadAction<boolean>) {\n      state.resetPwdDialog.open = payload\n    },\n    setResetPwdDialogLoading(state, { payload }: PayloadAction<boolean>) {\n      state.resetPwdDialog.loading = payload\n    },\n    resetDetail(state) {\n      const detailDefaultValue = getDefaultValues(\n        state.initDataForCE,\n        {\n          default_language: 'parameters.PLLA',\n          puco: 'parameters.PUCO',\n          time_zone: 'timezones'\n        },\n        initialState.detail\n      )\n      state.detail = { ...detailDefaultValue }\n    }\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState\n    }\n  }\n})\n\n// Actions\nexport const { actions } = userSlice\n\n// Saga actions\nexport const sagaGetList = createAction(`${name}/${actionTypes.GET_LIST}`)\nexport const sagaCreate = createAction<UserDetail>(`${name}/${actionTypes.CREATE}`)\nexport const sagaUpdate = createAction<{ id: number; formData: UserDetail }>(`${name}/${actionTypes.UPDATE}`)\nexport const sagaOpenCreateDialog = createAction(`${name}/${actionTypes.OPEN_CREATE_DIALOG}`)\nexport const sagaOpenUpdateDialog = createAction<number>(`${name}/${actionTypes.OPEN_UPDATE_DIALOG}`)\nexport const sagaCloseDialog = createAction(`${name}/${actionTypes.CLOSE_DIALOG}`)\nexport const sagaResetPassword = createAction<{ password: string; confirm_password: string }>(`${name}/RESET_PASSWORD`)\n\n// Selectors\nexport const selectState = (state: RootReducerType) => state[name]\nexport const selectDialogState = createSelector(selectState, (state) => state.dialogState)\nexport const selectDataList = createSelector(selectState, (state) => state.dataList)\nexport const selectPermissions = createSelector(selectState, (state) => state.initDataForList.permissions.user)\n\nexport const selectResetPwdDialog = createSelector(selectState, (state) => state.resetPwdDialog)\n\nexport const selectDetail = createSelector(selectState, (state) => state.detail)\n\nexport const selectInitDataForCE = createSelector(selectState, (state) => state.initDataForCE)\n\nexport const selectInitDataForList = createSelector(selectState, (state) => state.initDataForList)\n\nexport default userSlice\n"]},"metadata":{},"sourceType":"module"}