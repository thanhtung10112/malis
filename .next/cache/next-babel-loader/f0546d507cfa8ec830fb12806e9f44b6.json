{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Parameter\\\\CreateEdit.tsx\";\nimport { useState, useMemo, useEffect } from 'react';\nimport { Tabs, Tab, Grid } from '@material-ui/core';\nimport { When } from 'react-if';\nimport { DialogMain, MalisPanel, AppTabHistoryLog, FormControllerTextField, FormControllerCheckbox, AppTextField, TableMultilingualDescription, SectionTimezone } from '@/components';\nimport TableAttributes from './TableAttributes';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { useRouter } from 'next/router';\nimport { useTranslation } from 'next-i18next';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport _ from 'lodash';\nimport * as constants from '@/utils/constant';\nimport { parameterStore } from '@/store/reducers';\n\nfunction CreateEditParameterCode() {\n  const {\n    t\n  } = useTranslation('parameter');\n  const router = useRouter();\n  const paramTypeId = router.query.param_type_id;\n  const {\n    0: tab,\n    1: setTab\n  } = useState(0);\n  const dispatch = useDispatch();\n  const dialogState = useSelector(parameterStore.selectDialogState);\n  const parameterDetail = useSelector(parameterStore.selectDetail);\n  const initParameter = useSelector(parameterStore.selectInitParameter);\n  const initDataForCE = useSelector(parameterStore.selectInitDataForCE);\n  const permissions = useSelector(parameterStore.selectPermissions);\n  const validationSchema = useMemo(() => yup.object().shape({\n    parameter_id: yup.string().required(t('validation_message.parameter_id_required')).max(8, t('validation_message.parameter_id_required_max')).matches(constants.REGEX_ALPHA_NUMERIC_ONLY, t('validation_message.parameter_id_match')),\n    description: yup.string().nullable().max(80, t('validation_message.description_max')),\n    order: yup.string().trim().nullable().matches(/^\\d+$/, {\n      message: t('validation_message.order_type'),\n      excludeEmptyString: true\n    }).default(null)\n  }), [t]);\n  const parameterForm = useForm({\n    shouldUnregister: false,\n    resolver: yupResolver(validationSchema)\n  });\n  useEffect(() => {\n    parameterForm.reset(parameterDetail);\n  }, [parameterDetail, initDataForCE]);\n  const handleSubmit = parameterForm.handleSubmit(data => {\n    const formData = _.omit(data, [...constants.removalProperties, 'multilingual_descriptions', 'raw_parameter_type_id']);\n\n    if (_.isEmpty(formData.order)) {\n      formData.order = null;\n    } else {\n      formData.order = parseInt(formData.order);\n    }\n\n    formData.parameter_type_id = parseInt(formData.parameter_type_id);\n\n    if (dialogState.editMode) {\n      dispatch(parameterStore.extraActions.update({\n        id: data.id,\n        formData\n      }));\n    } else {\n      dispatch(parameterStore.extraActions.create(formData));\n    }\n  });\n\n  const handleClose = () => {\n    dispatch(parameterStore.extraActions.closeDialog());\n    setTab(0);\n    parameterForm.clearErrors();\n  };\n\n  const handleChangeTab = (event, newTab) => {\n    setTab(newTab);\n  };\n\n  const handleChangeHistoryLogs = data => {\n    dispatch(parameterStore.actions.setHistoryLogs(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(DialogMain, {\n    open: dialogState.open,\n    loading: dialogState.loading,\n    height: dialogState.editMode ? 470 : 400,\n    fullWidth: true,\n    maxWidth: initDataForCE.is_multilingual ? 'md' : 'sm',\n    title: dialogState.editMode ? t('form.title.update_parameter') : t('form.title.create_parameter'),\n    onOk: handleSubmit,\n    onClose: handleClose,\n    okText: dialogState.editMode ? t('common:button.update') : t('common:button.create'),\n    okButtonProps: {\n      disabled: dialogState.loading || !(permissions === null || permissions === void 0 ? void 0 : permissions.edit) && dialogState.editMode\n    },\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      value: tab,\n      onChange: handleChangeTab,\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: t('common:tab.general')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: t('common:tab.history'),\n        disabled: !dialogState.editMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MalisPanel, {\n      value: tab,\n      index: 0,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: initDataForCE.is_multilingual ? 6 : 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(AppTextField, {\n                label: \"Type\",\n                name: \"type_id\",\n                value: paramTypeId,\n                disabled: true,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n                control: parameterForm.control,\n                label: \"Code\",\n                name: \"parameter_id\",\n                value: 224,\n                disabled: dialogState.editMode,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 8,\n              children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n                control: parameterForm.control,\n                label: \"Order\",\n                name: \"order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(FormControllerCheckbox, {\n                name: \"is_default\",\n                label: \"Default\",\n                control: parameterForm.control\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n                label: \"Description\",\n                name: \"description\",\n                control: parameterForm.control\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TableAttributes, {\n                attributes: initDataForCE.attributes,\n                control: parameterForm.control,\n                name: \"properties\",\n                parameterId: initDataForCE.param_type_raw_id,\n                config: initDataForCE.param_type_specific_config\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(When, {\n          condition: initDataForCE.is_multilingual,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(TableMultilingualDescription, {\n              control: parameterForm.control,\n              languageList: initParameter.PLLA,\n              editMode: dialogState.editMode,\n              editor: \"rte\",\n              name: \"descriptions\",\n              tableHeight: 320\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(When, {\n          condition: dialogState.editMode,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            style: {\n              padding: 0,\n              marginLeft: 4\n            },\n            children: /*#__PURE__*/_jsxDEV(SectionTimezone, {\n              value: parameterDetail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MalisPanel, {\n      value: tab,\n      index: 1,\n      children: /*#__PURE__*/_jsxDEV(AppTabHistoryLog, {\n        isOpenDialog: dialogState.open,\n        data: dialogState.historyLogs,\n        onChange: handleChangeHistoryLogs,\n        entityId: parameterDetail.id,\n        mode: initDataForCE.is_multilingual ? 'horizonatal' : 'vertical',\n        tableHeight: initDataForCE.is_multilingual ? 390 : 250,\n        descriptionRows: initDataForCE.is_multilingual ? 25 : 7,\n        entity: \"parameter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\nexport default CreateEditParameterCode;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Parameter/CreateEdit.tsx"],"names":["useState","useMemo","useEffect","Tabs","Tab","Grid","When","DialogMain","MalisPanel","AppTabHistoryLog","FormControllerTextField","FormControllerCheckbox","AppTextField","TableMultilingualDescription","SectionTimezone","TableAttributes","useDispatch","useSelector","useForm","useRouter","useTranslation","yup","yupResolver","_","constants","parameterStore","CreateEditParameterCode","t","router","paramTypeId","query","param_type_id","tab","setTab","dispatch","dialogState","selectDialogState","parameterDetail","selectDetail","initParameter","selectInitParameter","initDataForCE","selectInitDataForCE","permissions","selectPermissions","validationSchema","object","shape","parameter_id","string","required","max","matches","REGEX_ALPHA_NUMERIC_ONLY","description","nullable","order","trim","message","excludeEmptyString","default","parameterForm","shouldUnregister","resolver","reset","handleSubmit","data","formData","omit","removalProperties","isEmpty","parseInt","parameter_type_id","editMode","extraActions","update","id","create","handleClose","closeDialog","clearErrors","handleChangeTab","event","newTab","handleChangeHistoryLogs","actions","setHistoryLogs","open","loading","is_multilingual","disabled","edit","control","attributes","param_type_raw_id","param_type_specific_config","PLLA","padding","marginLeft","historyLogs"],"mappings":"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","sourcesContent":["import { useState, useMemo, useEffect } from 'react'\n\nimport { Tabs, Tab, Grid } from '@material-ui/core'\nimport { When } from 'react-if'\n\nimport {\n  DialogMain,\n  MalisPanel,\n  AppTabHistoryLog,\n  FormControllerTextField,\n  FormControllerCheckbox,\n  AppTextField,\n  TableMultilingualDescription,\n  SectionTimezone\n} from '@/components'\n\nimport TableAttributes from './TableAttributes'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useForm } from 'react-hook-form'\nimport { useRouter } from 'next/router'\nimport { useTranslation } from 'next-i18next'\n\nimport * as yup from 'yup'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport _ from 'lodash'\n\nimport * as constants from '@/utils/constant'\nimport { parameterStore } from '@/store/reducers'\n\nimport type { ParameterInstance } from '@/types/Parameter'\nimport type { HistoryLog } from '@/types/Common'\n\nfunction CreateEditParameterCode() {\n  const { t } = useTranslation('parameter')\n  const router = useRouter()\n  const paramTypeId = router.query.param_type_id as string\n\n  const [tab, setTab] = useState(0)\n\n  const dispatch = useDispatch()\n  const dialogState = useSelector(parameterStore.selectDialogState)\n  const parameterDetail = useSelector(parameterStore.selectDetail)\n  const initParameter = useSelector(parameterStore.selectInitParameter)\n  const initDataForCE = useSelector(parameterStore.selectInitDataForCE)\n  const permissions = useSelector(parameterStore.selectPermissions)\n\n  const validationSchema = useMemo(\n    () =>\n      yup.object().shape({\n        parameter_id: yup\n          .string()\n          .required(t('validation_message.parameter_id_required'))\n          .max(8, t('validation_message.parameter_id_required_max'))\n          .matches(constants.REGEX_ALPHA_NUMERIC_ONLY, t('validation_message.parameter_id_match')),\n        description: yup.string().nullable().max(80, t('validation_message.description_max')),\n        order: yup\n          .string()\n          .trim()\n          .nullable()\n          .matches(/^\\d+$/, {\n            message: t('validation_message.order_type'),\n            excludeEmptyString: true\n          })\n          .default(null)\n      }),\n    [t]\n  )\n\n  const parameterForm = useForm<ParameterInstance>({\n    shouldUnregister: false,\n    resolver: yupResolver(validationSchema)\n  })\n\n  useEffect(() => {\n    parameterForm.reset(parameterDetail)\n  }, [parameterDetail, initDataForCE])\n\n  const handleSubmit = parameterForm.handleSubmit((data) => {\n    const formData = _.omit(data, [\n      ...constants.removalProperties,\n      'multilingual_descriptions',\n      'raw_parameter_type_id'\n    ]) as any\n    if (_.isEmpty(formData.order)) {\n      formData.order = null\n    } else {\n      formData.order = parseInt(formData.order)\n    }\n    formData.parameter_type_id = parseInt(formData.parameter_type_id)\n    if (dialogState.editMode) {\n      dispatch(parameterStore.extraActions.update({ id: data.id, formData }))\n    } else {\n      dispatch(parameterStore.extraActions.create(formData))\n    }\n  })\n\n  const handleClose = () => {\n    dispatch(parameterStore.extraActions.closeDialog())\n    setTab(0)\n    parameterForm.clearErrors()\n  }\n\n  const handleChangeTab = (event, newTab: number) => {\n    setTab(newTab)\n  }\n\n  const handleChangeHistoryLogs = (data: HistoryLog[]) => {\n    dispatch(parameterStore.actions.setHistoryLogs(data))\n  }\n\n  return (\n    <DialogMain\n      open={dialogState.open}\n      loading={dialogState.loading}\n      height={dialogState.editMode ? 470 : 400}\n      fullWidth\n      maxWidth={initDataForCE.is_multilingual ? 'md' : 'sm'}\n      title={dialogState.editMode ? t('form.title.update_parameter') : t('form.title.create_parameter')}\n      onOk={handleSubmit}\n      onClose={handleClose}\n      okText={dialogState.editMode ? t('common:button.update') : t('common:button.create')}\n      okButtonProps={{\n        disabled: dialogState.loading || (!permissions?.edit && dialogState.editMode)\n      }}\n    >\n      <Tabs value={tab} onChange={handleChangeTab}>\n        <Tab label={t('common:tab.general')} />\n        <Tab label={t('common:tab.history')} disabled={!dialogState.editMode} />\n      </Tabs>\n      <MalisPanel value={tab} index={0}>\n        <Grid container spacing={3}>\n          <Grid item xs={initDataForCE.is_multilingual ? 6 : 12}>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <AppTextField label=\"Type\" name=\"type_id\" value={paramTypeId} disabled required />\n              </Grid>\n              <Grid item xs={6}>\n                <FormControllerTextField\n                  control={parameterForm.control}\n                  label=\"Code\"\n                  name=\"parameter_id\"\n                  value={224}\n                  disabled={dialogState.editMode}\n                  required\n                />\n              </Grid>\n              <Grid item xs={8}>\n                <FormControllerTextField control={parameterForm.control} label=\"Order\" name=\"order\" />\n              </Grid>\n              <Grid item xs={4}>\n                <FormControllerCheckbox name=\"is_default\" label=\"Default\" control={parameterForm.control} />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControllerTextField label=\"Description\" name=\"description\" control={parameterForm.control} />\n              </Grid>\n              <Grid item xs={12}>\n                <TableAttributes\n                  attributes={initDataForCE.attributes}\n                  control={parameterForm.control}\n                  name=\"properties\"\n                  parameterId={initDataForCE.param_type_raw_id}\n                  config={initDataForCE.param_type_specific_config}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <When condition={initDataForCE.is_multilingual}>\n            <Grid item xs={6}>\n              <TableMultilingualDescription\n                control={parameterForm.control}\n                languageList={initParameter.PLLA}\n                editMode={dialogState.editMode}\n                editor=\"rte\"\n                name=\"descriptions\"\n                tableHeight={320}\n              />\n            </Grid>\n          </When>\n          <When condition={dialogState.editMode}>\n            <Grid item xs={12} style={{ padding: 0, marginLeft: 4 }}>\n              <SectionTimezone value={parameterDetail} />\n            </Grid>\n          </When>\n        </Grid>\n      </MalisPanel>\n      <MalisPanel value={tab} index={1}>\n        <AppTabHistoryLog\n          isOpenDialog={dialogState.open}\n          data={dialogState.historyLogs}\n          onChange={handleChangeHistoryLogs}\n          entityId={parameterDetail.id}\n          mode={initDataForCE.is_multilingual ? 'horizonatal' : 'vertical'}\n          tableHeight={initDataForCE.is_multilingual ? 390 : 250}\n          descriptionRows={initDataForCE.is_multilingual ? 25 : 7}\n          entity=\"parameter\"\n        />\n      </MalisPanel>\n    </DialogMain>\n  )\n}\n\nexport default CreateEditParameterCode\n"]},"metadata":{},"sourceType":"module"}