{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice, createAction } from '@reduxjs/toolkit';\nexport var resetState = createAction('makeAList/RESET_STATE');\nexport var presetDetail = {\n  id: null,\n  name: '',\n  entity: '',\n  description: '',\n  is_user_default: false,\n  is_shared: false,\n  is_system_default: false,\n  columns_displayed: [],\n  sort_conditions: [],\n  where_conditions: {\n    conjunction: 'AND',\n    type: 'group',\n    conditions: []\n  },\n  ignore_case: false,\n  distinct: false,\n  created_by: '',\n  created_at: '',\n  updated_by: '',\n  updated_at: ''\n};\nexport var systemPreset = {\n  id: null,\n  name: ''\n};\nexport var permissions = {\n  update_system_default_presets: false\n};\nexport var initialState = {\n  isOpen: false,\n  isEditMode: false,\n  entity: '',\n  systemPreset: systemPreset,\n  presetDetail: presetDetail,\n  presetDefault: presetDetail,\n  presetList: [],\n  permissions: permissions,\n  filterType: 'own',\n  initData: {\n    columns: [],\n    comparators: [],\n    logicalOperators: [],\n    sortOptions: []\n  },\n  loading: {\n    table: false,\n    dialog: false\n  },\n  saveAsForm: {\n    open: false,\n    clearError: false,\n    error: ''\n  },\n  malForm: {\n    clearError: false,\n    error: ''\n  }\n};\nvar makeAListReducer = createSlice({\n  name: 'makeAList',\n  initialState: initialState,\n  reducers: {\n    setOpen: function setOpen(state, action) {\n      state.isOpen = action.payload;\n    },\n    setIsEditMode: function setIsEditMode(state, action) {\n      state.isEditMode = action.payload;\n    },\n    setPresetDetail: function setPresetDetail(state, action) {\n      state.presetDetail = _objectSpread(_objectSpread({}, state.presetDetail), action.payload);\n    },\n    resetPresetDetail: function resetPresetDetail(state) {\n      state.presetDetail = _objectSpread(_objectSpread({}, presetDetail), {}, {\n        entity: state.presetDetail.entity\n      });\n    },\n    setPresetList: function setPresetList(state, action) {\n      state.presetList = action.payload;\n    },\n    setFilterType: function setFilterType(state, action) {\n      state.filterType = action.payload;\n    },\n    setInitData: function setInitData(state, action) {\n      state.initData = action.payload;\n    },\n    setSystemPreset: function setSystemPreset(state, action) {\n      state.systemPreset = action.payload;\n    },\n    setPresetDefault: function setPresetDefault(state, action) {\n      state.presetDefault = action.payload;\n    },\n    setPermissions: function setPermissions(state, action) {\n      state.permissions = action.payload;\n    },\n    setLoadingTable: function setLoadingTable(state, action) {\n      state.loading.table = action.payload;\n    },\n    setLoadingDialog: function setLoadingDialog(state, action) {\n      state.loading.dialog = action.payload;\n    },\n    setSaveAsForm: function setSaveAsForm(state, action) {\n      state.saveAsForm = _objectSpread(_objectSpread({}, state.saveAsForm), action.payload);\n    },\n    setMalForm: function setMalForm(state, action) {\n      state.malForm = _objectSpread(_objectSpread({}, state.malForm), action.payload);\n    }\n  },\n  extraReducers: _defineProperty({}, resetState.type, function () {\n    return initialState;\n  })\n});\nvar _makeAListReducer$act = makeAListReducer.actions,\n    setOpen = _makeAListReducer$act.setOpen,\n    setIsEditMode = _makeAListReducer$act.setIsEditMode,\n    setPresetDetail = _makeAListReducer$act.setPresetDetail,\n    resetPresetDetail = _makeAListReducer$act.resetPresetDetail,\n    setPresetList = _makeAListReducer$act.setPresetList,\n    setFilterType = _makeAListReducer$act.setFilterType,\n    setInitData = _makeAListReducer$act.setInitData,\n    setSystemPreset = _makeAListReducer$act.setSystemPreset,\n    setPresetDefault = _makeAListReducer$act.setPresetDefault,\n    setPermissions = _makeAListReducer$act.setPermissions,\n    setLoadingTable = _makeAListReducer$act.setLoadingTable,\n    setSaveAsForm = _makeAListReducer$act.setSaveAsForm,\n    setLoadingDialog = _makeAListReducer$act.setLoadingDialog,\n    setMalForm = _makeAListReducer$act.setMalForm;\nexport { setOpen, setIsEditMode, setPresetDetail, resetPresetDetail, setPresetList, setFilterType, setInitData, setSystemPreset, setPresetDefault, setPermissions, setLoadingTable, setSaveAsForm, setLoadingDialog, setMalForm };\nexport var open = createAction('makeAList/OPEN');\nexport var create = createAction('makeAList/CREATE');\nexport var getList = createAction('makeAList/GET_LIST');\nexport var getDetail = createAction('makeAList/GET_DETAIL');\nexport var getInitData = createAction('makeAList/GET_INIT_DATA');\nexport var share = createAction('makeAList/SHARE');\nexport var update = createAction('makeAList/UPDATE');\nexport var remove = createAction('makeAList/REMOVE');\nexport var clearDefault = createAction('makeAList/CLEAR_DEFAULT');\nexport var exportMakeAList = createAction('makeAList/EXPORT');\nexport var changeFilterType = createAction('makeAList/CHANGE_FILTER_TYPE');\nexport var saveAs = createAction('makeAList/SAVE_AS');\nexport var stopMakeAList = createAction('makeAList/STOP');\nexport var selectIsOpen = function selectIsOpen(state) {\n  return state.makeAList.isOpen;\n};\nexport var selectIsEditMode = function selectIsEditMode(state) {\n  return state.makeAList.isEditMode;\n};\nexport var selectPresetDetail = function selectPresetDetail(state) {\n  return state.makeAList.presetDetail;\n};\nexport var selectColumnDisplay = function selectColumnDisplay(state) {\n  return state.makeAList.presetDetail.columns_displayed;\n};\nexport var selectWhereConditions = function selectWhereConditions(state) {\n  return state.makeAList.presetDetail.where_conditions;\n};\nexport var selectSortConditions = function selectSortConditions(state) {\n  return state.makeAList.presetDetail.sort_conditions;\n};\nexport var selectPresetList = function selectPresetList(state) {\n  return state.makeAList.presetList;\n};\nexport var selectPresetDefault = function selectPresetDefault(state) {\n  return state.makeAList.presetDefault;\n};\nexport var selectSystemPreset = function selectSystemPreset(state) {\n  return state.makeAList.systemPreset;\n};\nexport var selectFilterType = function selectFilterType(state) {\n  return state.makeAList.filterType;\n};\nexport var selectPermissions = function selectPermissions(state) {\n  return state.makeAList.permissions;\n};\nexport var selectEntity = function selectEntity(state) {\n  return state.makeAList.entity;\n};\nexport var selectColumnsData = function selectColumnsData(state) {\n  return state.makeAList.initData.columns;\n};\nexport var selectComparatorsData = function selectComparatorsData(state) {\n  return state.makeAList.initData.comparators;\n};\nexport var selectLogicalOperatorsData = function selectLogicalOperatorsData(state) {\n  return state.makeAList.initData.logicalOperators;\n};\nexport var selectSortOptionsData = function selectSortOptionsData(state) {\n  return state.makeAList.initData.sortOptions;\n};\nexport var selectLoadingTable = function selectLoadingTable(state) {\n  return state.makeAList.loading.table;\n};\nexport var selectLoadingDialog = function selectLoadingDialog(state) {\n  return state.makeAList.loading.dialog;\n};\nexport var selectSaveAsForm = function selectSaveAsForm(state) {\n  return state.makeAList.saveAsForm;\n};\nexport var selectMalForm = function selectMalForm(state) {\n  return state.makeAList.malForm;\n};\nexport default makeAListReducer.reducer;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/reducers/makeAList.ts"],"names":["createSlice","createAction","resetState","presetDetail","id","name","entity","description","is_user_default","is_shared","is_system_default","columns_displayed","sort_conditions","where_conditions","conjunction","type","conditions","ignore_case","distinct","created_by","created_at","updated_by","updated_at","systemPreset","permissions","update_system_default_presets","initialState","isOpen","isEditMode","presetDefault","presetList","filterType","initData","columns","comparators","logicalOperators","sortOptions","loading","table","dialog","saveAsForm","open","clearError","error","malForm","makeAListReducer","reducers","setOpen","state","action","payload","setIsEditMode","setPresetDetail","resetPresetDetail","setPresetList","setFilterType","setInitData","setSystemPreset","setPresetDefault","setPermissions","setLoadingTable","setLoadingDialog","setSaveAsForm","setMalForm","extraReducers","actions","create","getList","getDetail","getInitData","share","update","remove","clearDefault","exportMakeAList","changeFilterType","saveAs","stopMakeAList","selectIsOpen","makeAList","selectIsEditMode","selectPresetDetail","selectColumnDisplay","selectWhereConditions","selectSortConditions","selectPresetList","selectPresetDefault","selectSystemPreset","selectFilterType","selectPermissions","selectEntity","selectColumnsData","selectComparatorsData","selectLogicalOperatorsData","selectSortOptionsData","selectLoadingTable","selectLoadingDialog","selectSaveAsForm","selectMalForm","reducer"],"mappings":"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","sourcesContent":["import { createSlice, createAction, PayloadAction } from '@reduxjs/toolkit'\nimport { RootReducerType } from './rootReducer'\nexport const resetState = createAction('makeAList/RESET_STATE')\n\nexport type FilterType = 'own' | 'shared' | 'system'\n\nexport const presetDetail = {\n  id: null,\n  name: '',\n  entity: '',\n  description: '',\n  is_user_default: false,\n  is_shared: false,\n  is_system_default: false,\n  columns_displayed: [],\n  sort_conditions: [],\n  where_conditions: {\n    conjunction: 'AND',\n    type: 'group',\n    conditions: []\n  },\n  ignore_case: false,\n  distinct: false,\n  created_by: '',\n  created_at: '',\n  updated_by: '',\n  updated_at: ''\n}\n\nexport const systemPreset = {\n  id: null,\n  name: ''\n}\n\nexport const permissions = {\n  update_system_default_presets: false\n}\n\nexport const initialState = {\n  isOpen: false,\n  isEditMode: false,\n  entity: '',\n  systemPreset,\n  presetDetail,\n  presetDefault: presetDetail,\n  presetList: [],\n  permissions,\n  filterType: 'own' as FilterType,\n  initData: {\n    columns: [],\n    comparators: [],\n    logicalOperators: [],\n    sortOptions: []\n  },\n  loading: {\n    table: false,\n    dialog: false\n  },\n  saveAsForm: {\n    open: false,\n    clearError: false,\n    error: ''\n  },\n  malForm: {\n    clearError: false,\n    error: ''\n  }\n}\nconst makeAListReducer = createSlice({\n  name: 'makeAList',\n  initialState,\n  reducers: {\n    setOpen(state, action) {\n      state.isOpen = action.payload\n    },\n    setIsEditMode(state, action) {\n      state.isEditMode = action.payload\n    },\n    setPresetDetail(state, action) {\n      state.presetDetail = {\n        ...state.presetDetail,\n        ...action.payload\n      }\n    },\n    resetPresetDetail(state) {\n      state.presetDetail = {\n        ...presetDetail,\n        entity: state.presetDetail.entity\n      }\n    },\n    setPresetList(state, action) {\n      state.presetList = action.payload\n    },\n    setFilterType(state, action: PayloadAction<FilterType>) {\n      state.filterType = action.payload\n    },\n    setInitData(state, action) {\n      state.initData = action.payload\n    },\n    setSystemPreset(state, action) {\n      state.systemPreset = action.payload\n    },\n    setPresetDefault(state, action) {\n      state.presetDefault = action.payload\n    },\n    setPermissions(state, action) {\n      state.permissions = action.payload\n    },\n    setLoadingTable(state, action: PayloadAction<boolean>) {\n      state.loading.table = action.payload\n    },\n    setLoadingDialog(state, action: PayloadAction<boolean>) {\n      state.loading.dialog = action.payload\n    },\n    setSaveAsForm(state, action: PayloadAction<Partial<typeof initialState.saveAsForm>>) {\n      state.saveAsForm = {\n        ...state.saveAsForm,\n        ...action.payload\n      }\n    },\n    setMalForm(state, action: PayloadAction<Partial<typeof initialState.malForm>>) {\n      state.malForm = {\n        ...state.malForm,\n        ...action.payload\n      }\n    }\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState\n    }\n  }\n})\n\nexport const {\n  setOpen,\n  setIsEditMode,\n  setPresetDetail,\n  resetPresetDetail,\n  setPresetList,\n  setFilterType,\n  setInitData,\n  setSystemPreset,\n  setPresetDefault,\n  setPermissions,\n  setLoadingTable,\n  setSaveAsForm,\n  setLoadingDialog,\n  setMalForm\n} = makeAListReducer.actions\n\nexport const open = createAction('makeAList/OPEN')\nexport const create = createAction<typeof presetDetail>('makeAList/CREATE')\nexport const getList = createAction<string>('makeAList/GET_LIST')\nexport const getDetail = createAction<any>('makeAList/GET_DETAIL')\nexport const getInitData = createAction('makeAList/GET_INIT_DATA')\nexport const share = createAction<{ id: number; shared: boolean }>('makeAList/SHARE')\nexport const update = createAction<typeof presetDetail>('makeAList/UPDATE')\nexport const remove = createAction<{ entity: string }>('makeAList/REMOVE')\nexport const clearDefault = createAction('makeAList/CLEAR_DEFAULT')\nexport const exportMakeAList = createAction<{\n  destination: string\n  displayedColumns: any[]\n  sortConditions: any[]\n  whereCondtions: any\n  distinct: boolean\n  ignoreCase: boolean\n}>('makeAList/EXPORT')\nexport const changeFilterType = createAction<string>('makeAList/CHANGE_FILTER_TYPE')\nexport const saveAs = createAction<typeof presetDetail>('makeAList/SAVE_AS')\nexport const stopMakeAList = createAction<{ celery_id: string }>('makeAList/STOP')\n\nexport const selectIsOpen = (state: RootReducerType) => state.makeAList.isOpen\nexport const selectIsEditMode = (state: RootReducerType) => state.makeAList.isEditMode\n\nexport const selectPresetDetail = (state: RootReducerType) => state.makeAList.presetDetail\nexport const selectColumnDisplay = (state: RootReducerType) => state.makeAList.presetDetail.columns_displayed\nexport const selectWhereConditions = (state: RootReducerType) => state.makeAList.presetDetail.where_conditions\nexport const selectSortConditions = (state: RootReducerType) => state.makeAList.presetDetail.sort_conditions\n\nexport const selectPresetList = (state: RootReducerType) => state.makeAList.presetList\nexport const selectPresetDefault = (state: RootReducerType) => state.makeAList.presetDefault\nexport const selectSystemPreset = (state: RootReducerType) => state.makeAList.systemPreset\nexport const selectFilterType = (state: RootReducerType) => state.makeAList.filterType\nexport const selectPermissions = (state: RootReducerType) => state.makeAList.permissions\nexport const selectEntity = (state: RootReducerType) => state.makeAList.entity\n\nexport const selectColumnsData = (state: RootReducerType) => state.makeAList.initData.columns\nexport const selectComparatorsData = (state: RootReducerType) => state.makeAList.initData.comparators\nexport const selectLogicalOperatorsData = (state: RootReducerType) => state.makeAList.initData.logicalOperators\nexport const selectSortOptionsData = (state: RootReducerType) => state.makeAList.initData.sortOptions\n\nexport const selectLoadingTable = (state: RootReducerType) => state.makeAList.loading.table\nexport const selectLoadingDialog = (state: RootReducerType) => state.makeAList.loading.dialog\nexport const selectSaveAsForm = (state: RootReducerType) => state.makeAList.saveAsForm\nexport const selectMalForm = (state: RootReducerType) => state.makeAList.malForm\n\nexport default makeAListReducer.reducer\n"]},"metadata":{},"sourceType":"module"}