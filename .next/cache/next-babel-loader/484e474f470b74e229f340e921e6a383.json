{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Drawing\\\\TabTags.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport useStyles from './styles';\nimport useGetData from '@/hooks/useGetData';\nimport { useDispatch, useSelector } from 'react-redux'; // import { useTranslation } from 'next-i18next'\n\nimport { Paper, Link } from '@material-ui/core';\nimport { DataTable, CreateIcon, DeleteIcon, AppButton, DialogTag } from '@/components';\nimport immer from 'immer'; // import _ from 'lodash'\n\nimport { commonStore, drawingStore } from '@/store/reducers';\nimport { defaultTagInitDataForCE, defaultTagDetail } from '@/utils/defaultValues';\nimport { defaultProperties } from '@/utils/columnProperties'; // import getMessageConfirm from '@/utils/getMessageConfirm'\n\nvar TabTags = function TabTags() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useGetData = useGetData('elements'),\n      getInitDataForCE = _useGetData.getInitDataForCE,\n      getGeneratedCode = _useGetData.getGeneratedCode,\n      getDetail = _useGetData.getDetail;\n\n  var _useGetData2 = useGetData('drawings'),\n      getDrawingDetail = _useGetData2.getDetail; // const { confirm } = useConfirm()\n  // const { t } = useTranslation('element')\n\n\n  var _useState = useState(false),\n      openDialog = _useState[0],\n      setOpenDialog = _useState[1];\n\n  var _useState2 = useState(defaultTagInitDataForCE),\n      initDataForCE = _useState2[0],\n      setInitDataForCE = _useState2[1];\n\n  var _useState3 = useState(defaultTagDetail),\n      tagDetail = _useState3[0],\n      setTagDetail = _useState3[1];\n\n  var _useState4 = useState([]),\n      selectedRows = _useState4[0],\n      setSelectedRows = _useState4[1];\n\n  var drawingForm = useFormContext();\n  var watchTagsList = drawingForm.watch('tag_list', []) || [];\n  var watchId = drawingForm.watch('id', null);\n  var watchDrawing_id = drawingForm.watch('drawing_id', '');\n  var dispatch = useDispatch();\n  var userJob = useSelector(commonStore.selectUserValueJob);\n  var userDrawing = useSelector(commonStore.selectUserValueDrawing);\n  useEffect(function () {\n    var schematicValue = userDrawing.value > 0 ? userDrawing : null;\n    setTagDetail(function (currentState) {\n      return immer(currentState, function (draft) {\n        draft.schematic_id = schematicValue;\n      });\n    });\n  }, [userDrawing]);\n  useEffect(function () {\n    setTagDetail(function (currentState) {\n      return immer(currentState, function (draft) {\n        draft.job_id = userJob.value;\n      });\n    });\n  }, [userJob]);\n\n  var handleSelectRows = function handleSelectRows(_ref) {\n    var selectionModel = _ref.selectionModel;\n    setSelectedRows(selectionModel);\n  };\n\n  var resetDetail = function resetDetail() {\n    setTagDetail(function (currentState) {\n      return immer(defaultTagDetail, function (draft) {\n        draft.schematic_id = currentState.schematic_id;\n        draft.job_id = currentState.job_id;\n      });\n    });\n  };\n\n  var handleCloseDialog = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$getDrawingDeta, tag_list;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setOpenDialog(false);\n              dispatch(drawingStore.actions.setDialogStateLoading(true));\n              _context.prev = 2;\n              _context.next = 5;\n              return getDrawingDetail(watchId);\n\n            case 5:\n              _yield$getDrawingDeta = _context.sent;\n              tag_list = _yield$getDrawingDeta.tag_list;\n              drawingForm.setValue('tag_list', tag_list);\n              resetDetail();\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n              console.error('error', '>>>', _context.t0);\n\n            case 14:\n              dispatch(drawingStore.actions.setDialogStateLoading(false));\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 11]]);\n    }));\n\n    return function handleCloseDialog() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var updateUserDrawing = function updateUserDrawing() {\n    dispatch(commonStore.actions.setUserValueDrawing({\n      entity_id: watchDrawing_id,\n      description: '',\n      value: watchId\n    }));\n  };\n\n  var handleOpenTagCreateDialog = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var resInitDataForCE, generatedCode;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              updateUserDrawing();\n              dispatch(commonStore.actions.setLoadingPage(true));\n              _context2.prev = 2;\n              _context2.next = 5;\n              return getInitDataForCE();\n\n            case 5:\n              resInitDataForCE = _context2.sent;\n              _context2.next = 8;\n              return getGeneratedCode({\n                drawing_id: watchId\n              });\n\n            case 8:\n              generatedCode = _context2.sent;\n              setInitDataForCE(resInitDataForCE);\n              setTagDetail(function (currentState) {\n                return immer(currentState, function (draft) {\n                  draft.element_id = generatedCode;\n                });\n              });\n              setOpenDialog(true);\n              _context2.next = 17;\n              break;\n\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.error('error', '>>>', _context2.t0);\n\n            case 17:\n              dispatch(commonStore.actions.setLoadingPage(false));\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 14]]);\n    }));\n\n    return function handleOpenTagCreateDialog() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleOpenTagUpdateDialog = function handleOpenTagUpdateDialog(id) {\n    return /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n        var resInitDataForCE, resDetail;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                event.preventDefault();\n                updateUserDrawing();\n                dispatch(commonStore.actions.setLoadingPage(true));\n                _context3.prev = 3;\n                _context3.next = 6;\n                return getInitDataForCE();\n\n              case 6:\n                resInitDataForCE = _context3.sent;\n                _context3.next = 9;\n                return getDetail(id);\n\n              case 9:\n                resDetail = _context3.sent;\n                setInitDataForCE(resInitDataForCE);\n                setTagDetail(immer(resDetail, function (draft) {\n                  draft.schematic_id = resDetail.related_schematic;\n                  draft.part_id = resDetail.related_part;\n                }));\n                setOpenDialog(true);\n                _context3.next = 18;\n                break;\n\n              case 15:\n                _context3.prev = 15;\n                _context3.t0 = _context3[\"catch\"](3);\n                console.error('error', '>>>', _context3.t0);\n\n              case 18:\n                dispatch(commonStore.actions.setLoadingPage(false));\n\n              case 19:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[3, 15]]);\n      }));\n\n      return function (_x) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n  }; // const handleRemoveTags = async () => {\n  //   const description = getMessageConfirm(t, 'element', selectedRows, 'delete')\n  //   const result = await confirm({ description })\n  //   if (result === 'OK') {\n  //     const tags: PayloadOperation[] = _.map(selectedRows, (partId) => {\n  //       const { element_id, id } = _.find(watchTagsList, { id: partId })\n  //       return { entity_id: element_id, id }\n  //     })\n  //     // dispatch(tagStore.sagaRemove(tags))\n  //   }\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttonGroupRoot,\n      children: [/*#__PURE__*/_jsxDEV(AppButton, {\n        startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 31\n        }, _this),\n        onClick: handleOpenTagCreateDialog,\n        children: \"New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(AppButton, {\n        startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 31\n        }, _this),\n        disabled: selectedRows.length === 0,\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 1,\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        rows: watchTagsList,\n        checkboxSelection: true,\n        selectionModel: selectedRows,\n        onSelectionModelChange: handleSelectRows,\n        onCellClick: function onCellClick(params, event) {\n          if (['element_id'].includes(params.field)) {\n            event.stopPropagation();\n          }\n        },\n        columns: [_objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'element_id',\n          headerName: 'Element #',\n          flex: 0.15,\n          renderCell: function renderCell(params) {\n            var value = params.value,\n                id = params.id;\n            return /*#__PURE__*/_jsxDEV(Link, {\n              href: \"#\",\n              onClick: handleOpenTagUpdateDialog(id),\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this);\n          }\n        }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'tag',\n          headerName: 'Tag #',\n          flex: 0.15\n        }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'related_part',\n          headerName: 'Part',\n          valueGetter: function valueGetter(params) {\n            return params.value.entity_id;\n          },\n          flex: 0.15\n        }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'description',\n          headerName: 'Description',\n          flex: 0.6\n        })],\n        hideFooter: true,\n        tableHeight: 385\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(DialogTag, {\n      open: openDialog,\n      initData: initDataForCE,\n      detail: tagDetail,\n      onClose: handleCloseDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(TabTags, \"WRY+CWZucD2dU43KX803By3VmQ4=\", false, function () {\n  return [useStyles, useGetData, useGetData, useFormContext, useDispatch, useSelector, useSelector];\n});\n\n_c = TabTags;\nexport default TabTags;\n\nvar _c;\n\n$RefreshReg$(_c, \"TabTags\");","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Drawing/TabTags.tsx"],"names":["useState","useEffect","useFormContext","useStyles","useGetData","useDispatch","useSelector","Paper","Link","DataTable","CreateIcon","DeleteIcon","AppButton","DialogTag","immer","commonStore","drawingStore","defaultTagInitDataForCE","defaultTagDetail","defaultProperties","TabTags","classes","getInitDataForCE","getGeneratedCode","getDetail","getDrawingDetail","openDialog","setOpenDialog","initDataForCE","setInitDataForCE","tagDetail","setTagDetail","selectedRows","setSelectedRows","drawingForm","watchTagsList","watch","watchId","watchDrawing_id","dispatch","userJob","selectUserValueJob","userDrawing","selectUserValueDrawing","schematicValue","value","currentState","draft","schematic_id","job_id","handleSelectRows","selectionModel","resetDetail","handleCloseDialog","actions","setDialogStateLoading","tag_list","setValue","console","error","updateUserDrawing","setUserValueDrawing","entity_id","description","handleOpenTagCreateDialog","setLoadingPage","resInitDataForCE","drawing_id","generatedCode","element_id","handleOpenTagUpdateDialog","id","event","preventDefault","resDetail","related_schematic","part_id","related_part","buttonGroupRoot","length","params","includes","field","stopPropagation","headerName","flex","renderCell","valueGetter"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport useStyles from './styles'\nimport useGetData from '@/hooks/useGetData'\nimport { useDispatch, useSelector } from 'react-redux'\n// import { useTranslation } from 'next-i18next'\n\nimport { Paper, Link } from '@material-ui/core'\nimport { DataTable, CreateIcon, DeleteIcon, AppButton, DialogTag } from '@/components'\n\nimport immer from 'immer'\n// import _ from 'lodash'\nimport { commonStore, drawingStore } from '@/store/reducers'\nimport { defaultTagInitDataForCE, defaultTagDetail } from '@/utils/defaultValues'\nimport { defaultProperties } from '@/utils/columnProperties'\n// import getMessageConfirm from '@/utils/getMessageConfirm'\n\nimport type { DrawingDetail } from '@/types/Drawing'\nimport type { DataForDropdown } from '@/types/Common'\n\nconst TabTags: React.FC = () => {\n  const classes = useStyles()\n  const { getInitDataForCE, getGeneratedCode, getDetail } = useGetData('elements')\n  const { getDetail: getDrawingDetail } = useGetData('drawings')\n  // const { confirm } = useConfirm()\n  // const { t } = useTranslation('element')\n\n  const [openDialog, setOpenDialog] = useState(false)\n  const [initDataForCE, setInitDataForCE] = useState(defaultTagInitDataForCE)\n  const [tagDetail, setTagDetail] = useState(defaultTagDetail)\n  const [selectedRows, setSelectedRows] = useState<number[]>([])\n\n  const drawingForm = useFormContext<DrawingDetail>()\n  const watchTagsList = drawingForm.watch('tag_list', []) || []\n  const watchId = drawingForm.watch('id', null)\n  const watchDrawing_id = drawingForm.watch('drawing_id', '')\n\n  const dispatch = useDispatch()\n  const userJob = useSelector(commonStore.selectUserValueJob)\n  const userDrawing = useSelector(commonStore.selectUserValueDrawing)\n\n  useEffect(() => {\n    const schematicValue = userDrawing.value > 0 ? userDrawing : null\n    setTagDetail((currentState) =>\n      immer(currentState, (draft) => {\n        draft.schematic_id = schematicValue\n      })\n    )\n  }, [userDrawing])\n\n  useEffect(() => {\n    setTagDetail((currentState) =>\n      immer(currentState, (draft) => {\n        draft.job_id = userJob.value\n      })\n    )\n  }, [userJob])\n\n  const handleSelectRows = ({ selectionModel }) => {\n    setSelectedRows(selectionModel)\n  }\n\n  const resetDetail = () => {\n    setTagDetail((currentState) =>\n      immer(defaultTagDetail, (draft) => {\n        draft.schematic_id = currentState.schematic_id\n        draft.job_id = currentState.job_id\n      })\n    )\n  }\n\n  const handleCloseDialog = async () => {\n    setOpenDialog(false)\n    dispatch(drawingStore.actions.setDialogStateLoading(true))\n    try {\n      const { tag_list } = await getDrawingDetail(watchId)\n      drawingForm.setValue('tag_list', tag_list)\n      resetDetail()\n    } catch (error) {\n      console.error('error', '>>>', error)\n    }\n    dispatch(drawingStore.actions.setDialogStateLoading(false))\n  }\n\n  const updateUserDrawing = () => {\n    dispatch(\n      commonStore.actions.setUserValueDrawing({\n        entity_id: watchDrawing_id,\n        description: '',\n        value: watchId\n      })\n    )\n  }\n\n  const handleOpenTagCreateDialog = async () => {\n    updateUserDrawing()\n    dispatch(commonStore.actions.setLoadingPage(true))\n    try {\n      const resInitDataForCE = await getInitDataForCE()\n      const generatedCode = await getGeneratedCode({ drawing_id: watchId })\n      setInitDataForCE(resInitDataForCE)\n      setTagDetail((currentState) =>\n        immer(currentState, (draft) => {\n          draft.element_id = generatedCode\n        })\n      )\n      setOpenDialog(true)\n    } catch (error) {\n      console.error('error', '>>>', error)\n    }\n    dispatch(commonStore.actions.setLoadingPage(false))\n  }\n\n  const handleOpenTagUpdateDialog = (id: number) => async (event) => {\n    event.preventDefault()\n    updateUserDrawing()\n    dispatch(commonStore.actions.setLoadingPage(true))\n    try {\n      const resInitDataForCE = await getInitDataForCE()\n      const resDetail = await getDetail(id)\n      setInitDataForCE(resInitDataForCE)\n      setTagDetail(\n        immer(resDetail, (draft) => {\n          draft.schematic_id = resDetail.related_schematic\n          draft.part_id = resDetail.related_part\n        }) as any\n      )\n      setOpenDialog(true)\n    } catch (error) {\n      console.error('error', '>>>', error)\n    }\n    dispatch(commonStore.actions.setLoadingPage(false))\n  }\n\n  // const handleRemoveTags = async () => {\n  //   const description = getMessageConfirm(t, 'element', selectedRows, 'delete')\n  //   const result = await confirm({ description })\n  //   if (result === 'OK') {\n  //     const tags: PayloadOperation[] = _.map(selectedRows, (partId) => {\n  //       const { element_id, id } = _.find(watchTagsList, { id: partId })\n  //       return { entity_id: element_id, id }\n  //     })\n  //     // dispatch(tagStore.sagaRemove(tags))\n  //   }\n  // }\n\n  return (\n    <>\n      <div className={classes.buttonGroupRoot}>\n        <AppButton startIcon={<CreateIcon />} onClick={handleOpenTagCreateDialog}>\n          New\n        </AppButton>\n        <AppButton startIcon={<DeleteIcon />} disabled={selectedRows.length === 0}>\n          Remove\n        </AppButton>\n      </div>\n      <Paper elevation={1}>\n        <DataTable\n          rows={watchTagsList}\n          checkboxSelection\n          selectionModel={selectedRows}\n          onSelectionModelChange={handleSelectRows}\n          onCellClick={(params, event) => {\n            if (['element_id'].includes(params.field)) {\n              event.stopPropagation()\n            }\n          }}\n          columns={[\n            {\n              ...defaultProperties,\n              field: 'element_id',\n              headerName: 'Element #',\n              flex: 0.15,\n              renderCell(params) {\n                const { value, id } = params\n                return (\n                  <Link href=\"#\" onClick={handleOpenTagUpdateDialog(id as number)}>\n                    {value}\n                  </Link>\n                )\n              }\n            },\n            {\n              ...defaultProperties,\n              field: 'tag',\n              headerName: 'Tag #',\n              flex: 0.15\n            },\n            {\n              ...defaultProperties,\n              field: 'related_part',\n              headerName: 'Part',\n              valueGetter: (params) => (params.value as DataForDropdown).entity_id,\n              flex: 0.15\n            },\n            {\n              ...defaultProperties,\n              field: 'description',\n              headerName: 'Description',\n              flex: 0.6\n            }\n          ]}\n          hideFooter\n          tableHeight={385}\n        />\n      </Paper>\n      <DialogTag open={openDialog} initData={initDataForCE} detail={tagDetail} onClose={handleCloseDialog} />\n    </>\n  )\n}\n\nexport default TabTags\n"]},"metadata":{},"sourceType":"module"}