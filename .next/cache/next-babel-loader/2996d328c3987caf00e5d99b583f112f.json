{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\MakeAList\\\\SectionGeneralInfo\\\\index.tsx\";\nimport React from 'react';\nimport { Grid, FormControlLabel, Checkbox, Typography } from '@material-ui/core';\nimport { FormControllerTextField } from '@/components/index';\nimport { Unless, When } from 'react-if';\nimport { useFormContext } from 'react-hook-form';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'next-i18next';\nimport useStyles from './styles';\nimport { makeAListActions } from '@/store/reducers';\nimport getValidationSchema from '../validationSchema';\n\nfunction SectionGeneralInfo({\n  isSharedMode\n}) {\n  const {\n    t\n  } = useTranslation('make_a_list');\n  const classes = useStyles();\n  const validationSchema = React.useMemo(() => getValidationSchema(t), []);\n  const presetDetail = useSelector(makeAListActions.selectPresetDetail);\n  const makeAListForm = useFormContext();\n  const watchValues = makeAListForm.watch();\n\n  const onToggleOption = (_, checked) => {\n    makeAListForm.setValue('is_user_default', checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 9,\n      className: classes.textField,\n      children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n        label: \"Name\",\n        name: \"name\",\n        required: true,\n        disabled: isSharedMode,\n        control: makeAListForm.control,\n        rules: validationSchema.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Unless, {\n      condition: watchValues.is_system_default,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          className: classes.textField,\n          disabled: false,\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            className: classes.chkSetAsDefault,\n            name: \"is_user_default\",\n            color: \"primary\",\n            onChange: onToggleOption,\n            checked: watchValues.is_user_default\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this),\n          label: /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            variant: \"body2\",\n            children: t('common:button.set_as_default')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n        control: makeAListForm.control,\n        rules: validationSchema.description,\n        label: \"Comment\",\n        disabled: isSharedMode,\n        name: \"description\",\n        multiline: true,\n        rows: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(When, {\n      condition: Boolean(presetDetail.created_at),\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"span\",\n          className: classes.timezoneTitle,\n          children: [\"Created by:\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"span\",\n          children: [watchValues.created_by, \" \", watchValues.created_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"span\",\n          className: classes.timezoneTitle,\n          children: [\"Last modified:\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"span\",\n          children: [watchValues.updated_by, \" \", watchValues.updated_at]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport default SectionGeneralInfo;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/MakeAList/SectionGeneralInfo/index.tsx"],"names":["React","Grid","FormControlLabel","Checkbox","Typography","FormControllerTextField","Unless","When","useFormContext","useSelector","useTranslation","useStyles","makeAListActions","getValidationSchema","SectionGeneralInfo","isSharedMode","t","classes","validationSchema","useMemo","presetDetail","selectPresetDetail","makeAListForm","watchValues","watch","onToggleOption","_","checked","setValue","textField","control","name","is_system_default","chkSetAsDefault","is_user_default","description","Boolean","created_at","timezoneTitle","created_by","updated_by","updated_at"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { Grid, FormControlLabel, Checkbox, Typography } from '@material-ui/core'\n\nimport { FormControllerTextField } from '@/components/index'\n\nimport { Unless, When } from 'react-if'\n\nimport { useFormContext } from 'react-hook-form'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'next-i18next'\nimport useStyles from './styles'\n\nimport { makeAListActions } from '@/store/reducers'\nimport getValidationSchema from '../validationSchema'\n\nfunction SectionGeneralInfo({ isSharedMode }) {\n  const { t } = useTranslation('make_a_list')\n  const classes = useStyles()\n  const validationSchema = React.useMemo(() => getValidationSchema(t), [])\n\n  const presetDetail = useSelector(makeAListActions.selectPresetDetail)\n\n  const makeAListForm = useFormContext()\n  const watchValues = makeAListForm.watch()\n\n  const onToggleOption = (_, checked: boolean) => {\n    makeAListForm.setValue('is_user_default', checked)\n  }\n\n  return (\n    <>\n      <Grid item xs={9} className={classes.textField}>\n        <FormControllerTextField\n          label=\"Name\"\n          name=\"name\"\n          required\n          disabled={isSharedMode}\n          control={makeAListForm.control}\n          rules={validationSchema.name}\n        />\n      </Grid>\n\n      <Unless condition={watchValues.is_system_default}>\n        <Grid item xs={3}>\n          <FormControlLabel\n            className={classes.textField}\n            disabled={false}\n            control={\n              <Checkbox\n                className={classes.chkSetAsDefault}\n                name=\"is_user_default\"\n                color=\"primary\"\n                onChange={onToggleOption}\n                checked={watchValues.is_user_default}\n              />\n            }\n            label={\n              <Typography component=\"span\" variant=\"body2\">\n                {t('common:button.set_as_default')}\n              </Typography>\n            }\n          />\n        </Grid>\n      </Unless>\n\n      <Grid item xs={12}>\n        <FormControllerTextField\n          control={makeAListForm.control}\n          rules={validationSchema.description}\n          label=\"Comment\"\n          disabled={isSharedMode}\n          name=\"description\"\n          multiline\n          rows={3}\n        />\n      </Grid>\n      <When condition={Boolean(presetDetail.created_at)}>\n        <Grid item xs={6}>\n          <Typography variant=\"body1\" component=\"span\" className={classes.timezoneTitle}>\n            Created by:{' '}\n          </Typography>\n          <Typography variant=\"body1\" component=\"span\">\n            {watchValues.created_by} {watchValues.created_at}\n          </Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Typography variant=\"body1\" component=\"span\" className={classes.timezoneTitle}>\n            Last modified:{' '}\n          </Typography>\n          <Typography variant=\"body1\" component=\"span\">\n            {watchValues.updated_by} {watchValues.updated_at}\n          </Typography>\n        </Grid>\n      </When>\n    </>\n  )\n}\n\nexport default SectionGeneralInfo\n"]},"metadata":{},"sourceType":"module"}