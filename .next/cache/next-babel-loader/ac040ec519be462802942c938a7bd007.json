{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { takeEvery, put, call, takeLatest } from 'redux-saga/effects';\nimport { select, all } from 'typed-redux-saga';\nimport { commonStore, advancedFilterActions, equivalenceStore } from '@/store/reducers';\nimport equivalenceApi from '@/apis/equivalence.api';\n\nfunction* fetchInitDataForList() {\n  const data = yield call(equivalenceApi.getInitDataForList);\n  yield put(equivalenceStore.actions.setInitDataForList(data));\n}\n\nfunction* fetchInitDataForCE() {\n  const equivalenceType = yield* select(equivalenceStore.selectEquivalenceType);\n  const data = yield call(equivalenceApi.getInitDataForCE, {\n    equivalence_type: equivalenceType\n  });\n  yield put(equivalenceStore.actions.setInitDataForCE(data));\n  yield put(equivalenceStore.actions.setDetail({\n    equiv_id: data.next_code\n  }));\n}\n\nfunction* fetchList() {\n  const equivalenceType = yield* select(equivalenceStore.selectEquivalenceType);\n  const {\n    tableState,\n    searchQuery,\n    filterData\n  } = yield* all({\n    tableState: select(commonStore.selectTableState),\n    searchQuery: select(commonStore.selectSearchQuery),\n    filterData: select(advancedFilterActions.selectFilterData)\n  });\n  const {\n    page,\n    per_page\n  } = tableState;\n  const {\n    equivalences\n  } = yield call(equivalenceApi.getList, equivalenceType, _objectSpread({\n    per_page,\n    page,\n    s: searchQuery\n  }, filterData));\n  yield put(commonStore.actions.setTableState({\n    total_items: equivalences.length\n  }));\n  yield put(equivalenceStore.actions.setDataList(equivalences));\n}\n\nfunction* getEquivalenceList() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchInitDataForList);\n    const permissions = yield* select(equivalenceStore.selectPermissions);\n\n    if (permissions === null || permissions === void 0 ? void 0 : permissions.view) {\n      yield call(fetchList);\n    }\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* fetchDetail(id) {\n  const {\n    equivalence\n  } = yield call(equivalenceApi.getDetail, id);\n  yield put(equivalenceStore.actions.setDetail(equivalence));\n}\n\nfunction* openEquivCreateDialog() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchInitDataForCE);\n    yield put(equivalenceStore.actions.setDialogStateOpen(true));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* createEquiv({\n  payload\n}) {\n  yield put(equivalenceStore.actions.setDialogStateLoading(true));\n\n  try {\n    const equivalenceType = yield* select(equivalenceStore.selectEquivalenceType);\n    const {\n      message\n    } = yield call(equivalenceApi.create, payload);\n    const {\n      generated_code\n    } = yield call(equivalenceApi.getNextCode, equivalenceType, null);\n    yield put(commonStore.actions.setSuccessMessage(message));\n    yield put(equivalenceStore.actions.setDetail(_objectSpread(_objectSpread({}, equivalenceStore.equivalenceDetail), {}, {\n      equiv_id: generated_code\n    })));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(equivalenceStore.actions.setDialogStateLoading(false));\n}\n\nfunction* closeEquivDialog() {\n  try {\n    yield put(equivalenceStore.actions.setDialogStateOpen(false));\n    yield call(getEquivalenceList);\n    yield put(equivalenceStore.actions.resetDetail());\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n}\n\nfunction* openEquivUpdateDialog({\n  payload: id\n}) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchInitDataForCE);\n    yield call(fetchDetail, id);\n    yield put(equivalenceStore.actions.setDialogState({\n      open: true,\n      editMode: true\n    }));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* updateEquiv({\n  payload\n}) {\n  yield put(equivalenceStore.actions.setDialogStateLoading(true));\n\n  try {\n    const {\n      id,\n      formData\n    } = payload;\n    const {\n      message\n    } = yield call(equivalenceApi.update, id, formData);\n    yield call(closeEquivDialog);\n    yield put(commonStore.actions.setSuccessMessage(message));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(equivalenceStore.actions.setDialogStateLoading(false));\n}\n\nfunction* getNextEquivCode({\n  payload\n}) {\n  yield put(equivalenceStore.actions.setDialogStateLoading(true));\n\n  try {\n    const equivalenceType = yield* select(equivalenceStore.selectEquivalenceType);\n    const {\n      generated_code\n    } = yield call(equivalenceApi.getNextCode, equivalenceType, payload.equiv_id);\n    payload.equiv_id = generated_code;\n    yield put(equivalenceStore.actions.setDetail(payload));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(equivalenceStore.actions.setDialogStateLoading(false));\n}\n\nfunction* equivalenceSaga() {\n  yield takeEvery(equivalenceStore.sagaGetList, getEquivalenceList);\n  yield takeEvery(equivalenceStore.sagaCreate, createEquiv);\n  yield takeEvery(equivalenceStore.sagaOpenCreateDialog, openEquivCreateDialog);\n  yield takeEvery(equivalenceStore.sagaCloseDialog, closeEquivDialog);\n  yield takeEvery(equivalenceStore.sagaOpenUpdateDialog, openEquivUpdateDialog);\n  yield takeEvery(equivalenceStore.sagaUpdate, updateEquiv);\n  yield takeLatest(equivalenceStore.sagaGetNextCode, getNextEquivCode);\n}\n\nexport default equivalenceSaga;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/store/saga/equivalence.saga.ts"],"names":["takeEvery","put","call","takeLatest","select","all","commonStore","advancedFilterActions","equivalenceStore","equivalenceApi","fetchInitDataForList","data","getInitDataForList","actions","setInitDataForList","fetchInitDataForCE","equivalenceType","selectEquivalenceType","getInitDataForCE","equivalence_type","setInitDataForCE","setDetail","equiv_id","next_code","fetchList","tableState","searchQuery","filterData","selectTableState","selectSearchQuery","selectFilterData","page","per_page","equivalences","getList","s","setTableState","total_items","length","setDataList","getEquivalenceList","setLoadingPage","permissions","selectPermissions","view","error","setError","fetchDetail","id","equivalence","getDetail","openEquivCreateDialog","setDialogStateOpen","createEquiv","payload","setDialogStateLoading","message","create","generated_code","getNextCode","setSuccessMessage","equivalenceDetail","closeEquivDialog","resetDetail","openEquivUpdateDialog","setDialogState","open","editMode","updateEquiv","formData","update","getNextEquivCode","equivalenceSaga","sagaGetList","sagaCreate","sagaOpenCreateDialog","sagaCloseDialog","sagaOpenUpdateDialog","sagaUpdate","sagaGetNextCode"],"mappings":"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","sourcesContent":["import { takeEvery, put, call, takeLatest } from 'redux-saga/effects'\nimport { select, all } from 'typed-redux-saga'\n\nimport { commonStore, advancedFilterActions, equivalenceStore } from '@/store/reducers'\n\nimport equivalenceApi from '@/apis/equivalence.api'\n\nfunction* fetchInitDataForList() {\n  const data = yield call(equivalenceApi.getInitDataForList)\n  yield put(equivalenceStore.actions.setInitDataForList(data))\n}\n\nfunction* fetchInitDataForCE() {\n  const equivalenceType = yield* select(equivalenceStore.selectEquivalenceType)\n  const data = yield call(equivalenceApi.getInitDataForCE, {\n    equivalence_type: equivalenceType\n  })\n  yield put(equivalenceStore.actions.setInitDataForCE(data))\n  yield put(equivalenceStore.actions.setDetail({ equiv_id: data.next_code }))\n}\n\nfunction* fetchList() {\n  const equivalenceType = yield* select(equivalenceStore.selectEquivalenceType)\n  const { tableState, searchQuery, filterData } = yield* all({\n    tableState: select(commonStore.selectTableState),\n    searchQuery: select(commonStore.selectSearchQuery),\n    filterData: select(advancedFilterActions.selectFilterData)\n  })\n  const { page, per_page } = tableState\n  const { equivalences } = yield call(equivalenceApi.getList, equivalenceType, {\n    per_page,\n    page,\n    s: searchQuery,\n    ...filterData\n  })\n  yield put(commonStore.actions.setTableState({ total_items: equivalences.length }))\n  yield put(equivalenceStore.actions.setDataList(equivalences))\n}\n\nfunction* getEquivalenceList() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchInitDataForList)\n    const permissions = yield* select(equivalenceStore.selectPermissions)\n    if (permissions?.view) {\n      yield call(fetchList)\n    }\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* fetchDetail(id: number) {\n  const { equivalence } = yield call(equivalenceApi.getDetail, id)\n  yield put(equivalenceStore.actions.setDetail(equivalence))\n}\n\nfunction* openEquivCreateDialog() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchInitDataForCE)\n    yield put(equivalenceStore.actions.setDialogStateOpen(true))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* createEquiv({ payload }: ReturnType<typeof equivalenceStore.sagaCreate>) {\n  yield put(equivalenceStore.actions.setDialogStateLoading(true))\n\n  try {\n    const equivalenceType = yield* select(equivalenceStore.selectEquivalenceType)\n    const { message } = yield call(equivalenceApi.create, payload)\n    const { generated_code } = yield call(equivalenceApi.getNextCode, equivalenceType, null)\n    yield put(commonStore.actions.setSuccessMessage(message))\n    yield put(\n      equivalenceStore.actions.setDetail({\n        ...equivalenceStore.equivalenceDetail,\n        equiv_id: generated_code\n      })\n    )\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(equivalenceStore.actions.setDialogStateLoading(false))\n}\n\nfunction* closeEquivDialog() {\n  try {\n    yield put(equivalenceStore.actions.setDialogStateOpen(false))\n    yield call(getEquivalenceList)\n    yield put(equivalenceStore.actions.resetDetail())\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n}\n\nfunction* openEquivUpdateDialog({ payload: id }: ReturnType<typeof equivalenceStore.sagaOpenUpdateDialog>) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchInitDataForCE)\n    yield call(fetchDetail, id)\n    yield put(equivalenceStore.actions.setDialogState({ open: true, editMode: true }))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* updateEquiv({ payload }: ReturnType<typeof equivalenceStore.sagaUpdate>) {\n  yield put(equivalenceStore.actions.setDialogStateLoading(true))\n  try {\n    const { id, formData } = payload\n    const { message } = yield call(equivalenceApi.update, id, formData)\n    yield call(closeEquivDialog)\n    yield put(commonStore.actions.setSuccessMessage(message))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(equivalenceStore.actions.setDialogStateLoading(false))\n}\n\nfunction* getNextEquivCode({ payload }: ReturnType<typeof equivalenceStore.sagaGetNextCode>) {\n  yield put(equivalenceStore.actions.setDialogStateLoading(true))\n  try {\n    const equivalenceType = yield* select(equivalenceStore.selectEquivalenceType)\n    const { generated_code } = yield call(equivalenceApi.getNextCode, equivalenceType, payload.equiv_id)\n    payload.equiv_id = generated_code\n    yield put(equivalenceStore.actions.setDetail(payload))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(equivalenceStore.actions.setDialogStateLoading(false))\n}\n\nfunction* equivalenceSaga() {\n  yield takeEvery(equivalenceStore.sagaGetList, getEquivalenceList)\n  yield takeEvery(equivalenceStore.sagaCreate, createEquiv)\n  yield takeEvery(equivalenceStore.sagaOpenCreateDialog, openEquivCreateDialog)\n  yield takeEvery(equivalenceStore.sagaCloseDialog, closeEquivDialog)\n  yield takeEvery(equivalenceStore.sagaOpenUpdateDialog, openEquivUpdateDialog)\n  yield takeEvery(equivalenceStore.sagaUpdate, updateEquiv)\n  yield takeLatest(equivalenceStore.sagaGetNextCode, getNextEquivCode)\n}\n\nexport default equivalenceSaga\n"]},"metadata":{},"sourceType":"module"}