{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { useTranslation } from 'next-i18next';\nimport { DialogParameterCreateEdit, useConfirm, confirmConstant, EditIcon, DeleteIcon, EnableIcon, DisableIcon, CreateIcon, AppLayout } from '@/components';\nimport * as columnProperties from '@/utils/columnProperties';\nimport { parameterStore, commonStore } from '@/store/reducers';\nimport getMessageConfirm from '@/utils/getMessageConfirm';\n\nfunction Parameters() {\n  var router = useRouter();\n  var paramTypeId = router.query.param_type_id;\n\n  var _useTranslation = useTranslation('parameter'),\n      t = _useTranslation.t;\n\n  var _useConfirm = useConfirm(),\n      confirm = _useConfirm.confirm;\n\n  var dispatch = useDispatch();\n  var permissions = useSelector(parameterStore.selectPermissions);\n  var selectedRows = useSelector(commonStore.selectSelectedRows);\n\n  var _useSelector = useSelector(parameterStore.selectInitDataForList),\n      column_tooltips = _useSelector.column_tooltips;\n\n  var breadcrumbData = useMemo(function () {\n    return [{\n      label: 'Home',\n      href: '/'\n    }, {\n      label: 'System Management',\n      href: '/users'\n    }, {\n      label: 'Parameters Management',\n      href: '/parameter_types'\n    }, {\n      label: 'Codes Management',\n      href: \"/parameter_types/\".concat(paramTypeId)\n    }];\n  }, [paramTypeId]);\n\n  var handleOpenCreateDialog = function handleOpenCreateDialog() {\n    dispatch(parameterStore.extraActions.openCreateDialog());\n  };\n\n  var handleOpenUpdateDialog = function handleOpenUpdateDialog(id) {\n    return function () {\n      dispatch(parameterStore.extraActions.openUpdateDialog(id));\n    };\n  };\n\n  var handleExecuteOperation = function handleExecuteOperation(operation) {\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var description, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              description = getMessageConfirm(t, 'parameter', selectedRows, operation);\n              _context.next = 3;\n              return confirm({\n                description: description\n              });\n\n            case 3:\n              result = _context.sent;\n\n              if (result === confirmConstant.actionTypes.OK) {\n                dispatch(parameterStore.extraActions.executeOperation({\n                  operation: operation,\n                  parameters: selectedRows\n                }));\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n  };\n\n  var columns = [_objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.iconColumn), {}, {\n    description: column_tooltips.edit,\n    field: 'id',\n    headerName: 'Edit',\n    renderCell: function renderCell(param) {\n      return /*#__PURE__*/_jsx(EditIcon, {\n        onClick: handleOpenUpdateDialog(param.id)\n      });\n    }\n  }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n    description: column_tooltips.parameter_id,\n    field: 'parameter_id',\n    headerName: 'Code',\n    width: 80\n  }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n    description: column_tooltips.description,\n    field: 'description',\n    headerName: 'Description',\n    flex: 0.4\n  }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n    description: column_tooltips.properties,\n    field: 'properties',\n    headerName: 'Properties',\n    flex: 0.7,\n    renderCell: function renderCell(param) {\n      var property_render = [];\n\n      for (var key in param.row.properties) {\n        if (Object.prototype.hasOwnProperty.call(param.value, key)) {\n          property_render.push( /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(\"b\", {\n              children: key\n            }), \": \", param.value[key], \" \\u2003 \", /*#__PURE__*/_jsx(\"br\", {})]\n          }));\n        }\n      }\n\n      return /*#__PURE__*/_jsx(_Fragment, {\n        children: property_render\n      });\n    }\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.iconColumn), {}, {\n    description: column_tooltips.is_default,\n    width: 100,\n    field: 'is_default',\n    headerName: 'Default',\n    renderCell: function renderCell(param) {\n      return /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          width: '100%',\n          paddingTop: '0.6rem'\n        },\n        children: param.value ? /*#__PURE__*/_jsx(EnableIcon, {\n          className: \"default-icon\"\n        }) : /*#__PURE__*/_jsx(DisableIcon, {\n          className: \"not-default-icon\"\n        })\n      });\n    }\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    description: column_tooltips.order,\n    field: 'order',\n    headerName: 'Order',\n    flex: 0.1\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.iconColumn), {}, {\n    description: column_tooltips.edit,\n    width: 60,\n    field: 'status',\n    headerName: 'Status',\n    renderCell: function renderCell(param) {\n      return /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          width: '100%',\n          paddingTop: '0.6rem'\n        },\n        children: param.value ? /*#__PURE__*/_jsx(EnableIcon, {\n          className: \"enable-icon\"\n        }) : /*#__PURE__*/_jsx(DisableIcon, {\n          className: \"disable-icon\"\n        })\n      });\n    }\n  })];\n  var buttons = [{\n    label: t('common:button.new'),\n    startIcon: /*#__PURE__*/_jsx(CreateIcon, {}),\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.create),\n    onClick: handleOpenCreateDialog\n  }, {\n    label: t('common:button.delete'),\n    startIcon: /*#__PURE__*/_jsx(DeleteIcon, {}),\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions[\"delete\"]) || selectedRows.length <= 0,\n    onClick: handleExecuteOperation('delete')\n  }, {\n    label: t('common:button.enable'),\n    startIcon: /*#__PURE__*/_jsx(EnableIcon, {}),\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.disable_enable) || selectedRows.length <= 0,\n    onClick: handleExecuteOperation('enable')\n  }, {\n    label: t('common:button.disable'),\n    startIcon: /*#__PURE__*/_jsx(DisableIcon, {}),\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.disable_enable) || selectedRows.length <= 0,\n    onClick: handleExecuteOperation('disable')\n  }];\n  return /*#__PURE__*/_jsx(AppLayout, {\n    entity: \"parameter\",\n    breadcrumbs: breadcrumbData,\n    buttons: buttons,\n    permissions: permissions,\n    Dialogs: /*#__PURE__*/_jsx(DialogParameterCreateEdit, {}),\n    tableProps: {\n      columns: columns\n    }\n  });\n}\n\nexport var __N_SSP = true;\nexport default Parameters;","map":null,"metadata":{},"sourceType":"module"}