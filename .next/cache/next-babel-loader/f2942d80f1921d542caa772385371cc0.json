{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { Grid, FormControlLabel, Checkbox, Typography } from '@material-ui/core';\nimport { FormControllerTextField } from '@/components/index';\nimport { Unless, When } from 'react-if';\nimport { useFormContext } from 'react-hook-form';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'next-i18next';\nimport useStyles from './styles';\nimport { makeAListActions } from '@/store/reducers';\nimport getValidationSchema from '../validationSchema';\n\nfunction SectionGeneralInfo({\n  isSharedMode\n}) {\n  const {\n    t\n  } = useTranslation('make_a_list');\n  const classes = useStyles();\n  const validationSchema = React.useMemo(() => getValidationSchema(t), []);\n  const presetDetail = useSelector(makeAListActions.selectPresetDetail);\n  const makeAListForm = useFormContext();\n  const watchValues = makeAListForm.watch();\n\n  const onToggleOption = (_, checked) => {\n    makeAListForm.setValue('is_user_default', checked);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 9,\n      className: classes.textField,\n      children: /*#__PURE__*/_jsx(FormControllerTextField, {\n        label: \"Name\",\n        name: \"name\",\n        required: true,\n        disabled: isSharedMode,\n        control: makeAListForm.control,\n        rules: validationSchema.name\n      })\n    }), /*#__PURE__*/_jsx(Unless, {\n      condition: watchValues.is_system_default,\n      children: /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsx(FormControlLabel, {\n          className: classes.textField,\n          disabled: false,\n          control: /*#__PURE__*/_jsx(Checkbox, {\n            className: classes.chkSetAsDefault,\n            name: \"is_user_default\",\n            color: \"primary\",\n            onChange: onToggleOption,\n            checked: watchValues.is_user_default\n          }),\n          label: /*#__PURE__*/_jsx(Typography, {\n            component: \"span\",\n            variant: \"body2\",\n            children: t('common:button.set_as_default')\n          })\n        })\n      })\n    }), /*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsx(FormControllerTextField, {\n        control: makeAListForm.control,\n        rules: validationSchema.description,\n        label: \"Comment\",\n        disabled: isSharedMode,\n        name: \"description\",\n        multiline: true,\n        rows: 3\n      })\n    }), /*#__PURE__*/_jsxs(When, {\n      condition: Boolean(presetDetail.created_at),\n      children: [/*#__PURE__*/_jsxs(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxs(Typography, {\n          variant: \"body1\",\n          component: \"span\",\n          className: classes.timezoneTitle,\n          children: [\"Created by:\", ' ']\n        }), /*#__PURE__*/_jsxs(Typography, {\n          variant: \"body1\",\n          component: \"span\",\n          children: [watchValues.created_by, \" \", watchValues.created_at]\n        })]\n      }), /*#__PURE__*/_jsxs(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxs(Typography, {\n          variant: \"body1\",\n          component: \"span\",\n          className: classes.timezoneTitle,\n          children: [\"Last modified:\", ' ']\n        }), /*#__PURE__*/_jsxs(Typography, {\n          variant: \"body1\",\n          component: \"span\",\n          children: [watchValues.updated_by, \" \", watchValues.updated_at]\n        })]\n      })]\n    })]\n  });\n}\n\nexport default SectionGeneralInfo;","map":null,"metadata":{},"sourceType":"module"}