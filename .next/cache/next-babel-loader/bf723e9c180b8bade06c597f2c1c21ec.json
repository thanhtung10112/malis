{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport jsCurrency from 'currency.js';\nimport _ from 'lodash';\n\nvar AppNumber = /*#__PURE__*/function () {\n  function AppNumber() {\n    _classCallCheck(this, AppNumber);\n  }\n\n  _createClass(AppNumber, null, [{\n    key: \"buildOptions\",\n    value: function buildOptions(options) {\n      return _objectSpread(_objectSpread({}, this._defaultOptions), options);\n    }\n  }, {\n    key: \"format\",\n    value: function format(value) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return jsCurrency(value, this.buildOptions(options)).format();\n    }\n  }, {\n    key: \"convertToInstance\",\n    value: function convertToInstance(value) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return jsCurrency(value, options);\n    }\n  }, {\n    key: \"convertToNumber\",\n    value: function convertToNumber(value) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.convertToInstance(value, options).value;\n    }\n  }, {\n    key: \"isNumber\",\n    value: function isNumber(value) {\n      if (_.size(value) === 0) {\n        return false;\n      }\n\n      var formatValue = _.toNumber(value);\n\n      return !_.isNaN(formatValue) && _.isNumber(formatValue);\n    }\n  }, {\n    key: \"isNumberFormat\",\n    value: function isNumberFormat(value) {\n      var originValue = this.convertToNumber(value);\n      return this.isNumber(originValue);\n    }\n  }, {\n    key: \"isPositiveNumber\",\n    value: function isPositiveNumber(value) {\n      var formatValue = this.convertToNumber(value);\n      return formatValue > -1;\n    }\n  }, {\n    key: \"isNegativeNumber\",\n    value: function isNegativeNumber(value) {\n      return !this.isPositiveNumber(value);\n    }\n  }]);\n\n  return AppNumber;\n}();\n\n_defineProperty(AppNumber, \"_defaultOptions\", {\n  separator: ' ',\n  decimal: '.',\n  symbol: ''\n});\n\nexport default AppNumber;","map":null,"metadata":{},"sourceType":"module"}