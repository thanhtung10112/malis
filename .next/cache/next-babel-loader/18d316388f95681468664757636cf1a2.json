{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Material\\\\TabGeneral.tsx\";\nimport { useFormContext } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Grid, Link, Box } from '@material-ui/core';\nimport { TableMultilingualDescription, AppAutocompleteAsync, FormControllerTextField, SectionTimezone, AppAutocomplete } from '@/components';\nimport { Unless } from 'react-if';\nimport { materialStore, commonStore } from '@/store/reducers';\n\nconst TabGeneral = () => {\n  var _specificationForm$er, _specificationForm$er2;\n\n  const specificationForm = useFormContext();\n  const dispatch = useDispatch();\n  const materialDetail = useSelector(materialStore.selectDetail);\n  const userJob = useSelector(commonStore.selectUserValueJob);\n\n  const handleChangeDrawingId = (event, drawing) => {\n    console.warn('optionValue', '>>>', optionValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          style: {\n            marginTop: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(AppAutocomplete, {\n            helperText: (_specificationForm$er = specificationForm.errors.job_id) === null || _specificationForm$er === void 0 ? void 0 : _specificationForm$er.message,\n            error: Boolean(specificationForm.errors.job_id),\n            value: userJob,\n            popupIcon: null,\n            disabled: true,\n            label: \"Job\",\n            required: true,\n            primaryKeyOption: \"value\",\n            options: [],\n            renderOption: option => option.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AppAutocompleteAsync, {\n            helperText: (_specificationForm$er2 = specificationForm.errors.drawing_id) === null || _specificationForm$er2 === void 0 ? void 0 : _specificationForm$er2.message,\n            error: Boolean(specificationForm.errors.drawing_id),\n            disabled: !isCreating,\n            value: materialDetail.drawing_id,\n            compName: \"drawing_list\",\n            additionalData: {\n              limit_to_job: userJob.value\n            },\n            required: true,\n            label: \"Drawing #\",\n            onChange: handleChangeDrawingId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Unless, {\n          condition: isCreating,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            component: Box,\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"#\",\n              onClick: handleOpenDrawing,\n              children: \"View Drawing Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n            disabled: !isCreating,\n            control: specificationForm.control,\n            label: \"Document #\",\n            required: true,\n            name: \"spec_id\",\n            onBlur: handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Unless, {\n          condition: isCreating,\n          children: /*#__PURE__*/_jsxDEV(SectionTimezone, {\n            value: materialDetail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(TableMultilingualDescription, {\n        languageList: parameters.PLLA,\n        editMode: !isCreating,\n        name: \"descriptions\",\n        tableHeight: 290,\n        control: specificationForm.control,\n        editor: \"rte\",\n        copyable: true,\n        copyDialogProps: {\n          compName: 'specification_list',\n          entity: 'specifications'\n        },\n        autocompleteProps: {\n          getOptionLabel: option => option.entity_id\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\nexport default TabGeneral;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Material/TabGeneral.tsx"],"names":["useFormContext","useSelector","useDispatch","Grid","Link","Box","TableMultilingualDescription","AppAutocompleteAsync","FormControllerTextField","SectionTimezone","AppAutocomplete","Unless","materialStore","commonStore","TabGeneral","specificationForm","dispatch","materialDetail","selectDetail","userJob","selectUserValueJob","handleChangeDrawingId","event","drawing","console","warn","optionValue","marginTop","errors","job_id","message","Boolean","option","description","drawing_id","isCreating","limit_to_job","value","handleOpenDrawing","control","handleBlur","parameters","PLLA","compName","entity","getOptionLabel","entity_id"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,iBAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,GAArB,QAAgC,mBAAhC;AACA,SACEC,4BADF,EAEEC,oBAFF,EAGEC,uBAHF,EAIEC,eAJF,EAKEC,eALF,QAMO,cANP;AAOA,SAASC,MAAT,QAAuB,UAAvB;AAIA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,kBAA3C;;AAKA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,iBAAiB,GAAGf,cAAc,EAAxC;AAEA,QAAMgB,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,cAAc,GAAGhB,WAAW,CAACW,aAAa,CAACM,YAAf,CAAlC;AACA,QAAMC,OAAO,GAAGlB,WAAW,CAACY,WAAW,CAACO,kBAAb,CAA3B;;AAEA,QAAMC,qBAAqB,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAqC;AACjEC,IAAAA,OAAO,CAACC,IAAR,CAAa,aAAb,EAA4B,KAA5B,EAAmCC,WAAnC;AACD,GAFD;;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAA1B;AAAA,iCACE,QAAC,eAAD;AACE,YAAA,UAAU,2BAAEZ,iBAAiB,CAACa,MAAlB,CAAyBC,MAA3B,0DAAE,sBAAiCC,OAD/C;AAEE,YAAA,KAAK,EAAEC,OAAO,CAAChB,iBAAiB,CAACa,MAAlB,CAAyBC,MAA1B,CAFhB;AAGE,YAAA,KAAK,EAAEV,OAHT;AAIE,YAAA,SAAS,EAAE,IAJb;AAKE,YAAA,QAAQ,MALV;AAME,YAAA,KAAK,EAAC,KANR;AAOE,YAAA,QAAQ,MAPV;AAQE,YAAA,gBAAgB,EAAC,OARnB;AASE,YAAA,OAAO,EAAE,EATX;AAUE,YAAA,YAAY,EAAGa,MAAD,IAAYA,MAAM,CAACC;AAVnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAeE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACE,QAAC,oBAAD;AACE,YAAA,UAAU,4BAAElB,iBAAiB,CAACa,MAAlB,CAAyBM,UAA3B,2DAAE,uBAAqCJ,OADnD;AAEE,YAAA,KAAK,EAAEC,OAAO,CAAChB,iBAAiB,CAACa,MAAlB,CAAyBM,UAA1B,CAFhB;AAGE,YAAA,QAAQ,EAAE,CAACC,UAHb;AAIE,YAAA,KAAK,EAAElB,cAAc,CAACiB,UAJxB;AAKE,YAAA,QAAQ,EAAC,cALX;AAME,YAAA,cAAc,EAAE;AAAEE,cAAAA,YAAY,EAAEjB,OAAO,CAACkB;AAAxB,aANlB;AAOE,YAAA,QAAQ,MAPV;AAQE,YAAA,KAAK,EAAC,WARR;AASE,YAAA,QAAQ,EAAEhB;AATZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAfF,eA4BE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAEc,UAAnB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,SAAS,EAAE9B,GAA9B;AAAmC,YAAA,OAAO,EAAC,MAA3C;AAAkD,YAAA,cAAc,EAAC,UAAjE;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,IAAI,EAAC,GAAX;AAAe,cAAA,OAAO,EAAEiC,iBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA5BF,eAmCE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACE,QAAC,uBAAD;AACE,YAAA,QAAQ,EAAE,CAACH,UADb;AAEE,YAAA,OAAO,EAAEpB,iBAAiB,CAACwB,OAF7B;AAGE,YAAA,KAAK,EAAC,YAHR;AAIE,YAAA,QAAQ,MAJV;AAKE,YAAA,IAAI,EAAC,SALP;AAME,YAAA,MAAM,EAAEC;AANV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAnCF,eA8CE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAEL,UAAnB;AAAA,iCACE,QAAC,eAAD;AAAiB,YAAA,KAAK,EAAElB;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA9CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAsDE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,6BACE,QAAC,4BAAD;AACE,QAAA,YAAY,EAAEwB,UAAU,CAACC,IAD3B;AAEE,QAAA,QAAQ,EAAE,CAACP,UAFb;AAGE,QAAA,IAAI,EAAC,cAHP;AAIE,QAAA,WAAW,EAAE,GAJf;AAKE,QAAA,OAAO,EAAEpB,iBAAiB,CAACwB,OAL7B;AAME,QAAA,MAAM,EAAC,KANT;AAOE,QAAA,QAAQ,MAPV;AAQE,QAAA,eAAe,EAAE;AACfI,UAAAA,QAAQ,EAAE,oBADK;AAEfC,UAAAA,MAAM,EAAE;AAFO,SARnB;AAYE,QAAA,iBAAiB,EAAE;AACjBC,UAAAA,cAAc,EAAGb,MAAD,IAAYA,MAAM,CAACc;AADlB;AAZrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAtDF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2ED,CAtFD;;AAwFA,eAAehC,UAAf","sourcesContent":["import { useFormContext } from 'react-hook-form'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { Grid, Link, Box } from '@material-ui/core'\nimport {\n  TableMultilingualDescription,\n  AppAutocompleteAsync,\n  FormControllerTextField,\n  SectionTimezone,\n  AppAutocomplete\n} from '@/components'\nimport { Unless } from 'react-if'\n\nimport _ from 'lodash'\nimport AppNumber from '@/helper/AppNumber'\nimport { materialStore, commonStore } from '@/store/reducers'\n\nimport type { SpecificationDetail } from '@/types/Specification'\nimport type { DataForDropdown } from '@/types/Common'\n\nconst TabGeneral = () => {\n  const specificationForm = useFormContext<SpecificationDetail>()\n\n  const dispatch = useDispatch()\n  const materialDetail = useSelector(materialStore.selectDetail)\n  const userJob = useSelector(commonStore.selectUserValueJob)\n\n  const handleChangeDrawingId = (event, drawing: DataForDropdown) => {\n    console.warn('optionValue', '>>>', optionValue)\n  }\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={6}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} style={{ marginTop: 8 }}>\n            <AppAutocomplete\n              helperText={specificationForm.errors.job_id?.message}\n              error={Boolean(specificationForm.errors.job_id)}\n              value={userJob}\n              popupIcon={null}\n              disabled\n              label=\"Job\"\n              required\n              primaryKeyOption=\"value\"\n              options={[]}\n              renderOption={(option) => option.description}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <AppAutocompleteAsync\n              helperText={specificationForm.errors.drawing_id?.message}\n              error={Boolean(specificationForm.errors.drawing_id)}\n              disabled={!isCreating}\n              value={materialDetail.drawing_id}\n              compName=\"drawing_list\"\n              additionalData={{ limit_to_job: userJob.value }}\n              required\n              label=\"Drawing #\"\n              onChange={handleChangeDrawingId}\n            />\n          </Grid>\n          <Unless condition={isCreating}>\n            <Grid item xs={12} component={Box} display=\"flex\" justifyContent=\"flex-end\">\n              <Link href=\"#\" onClick={handleOpenDrawing}>\n                View Drawing Info\n              </Link>\n            </Grid>\n          </Unless>\n          <Grid item xs={12}>\n            <FormControllerTextField\n              disabled={!isCreating}\n              control={specificationForm.control}\n              label=\"Document #\"\n              required\n              name=\"spec_id\"\n              onBlur={handleBlur}\n            />\n          </Grid>\n\n          <Unless condition={isCreating}>\n            <SectionTimezone value={materialDetail} />\n          </Unless>\n        </Grid>\n      </Grid>\n\n      <Grid item xs={6}>\n        <TableMultilingualDescription\n          languageList={parameters.PLLA}\n          editMode={!isCreating}\n          name=\"descriptions\"\n          tableHeight={290}\n          control={specificationForm.control}\n          editor=\"rte\"\n          copyable\n          copyDialogProps={{\n            compName: 'specification_list',\n            entity: 'specifications'\n          }}\n          autocompleteProps={{\n            getOptionLabel: (option) => option.entity_id\n          }}\n        />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default TabGeneral\n"]},"metadata":{},"sourceType":"module"}