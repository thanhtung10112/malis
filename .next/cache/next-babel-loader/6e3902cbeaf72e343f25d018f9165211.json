{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchInitDataForList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchList),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(fetchInitDataForCE),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(fetchDetail),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(getCurrencyList),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(changeUserCurrency),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(openCurrencyCreateDialog),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(createCurrency),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(openCurrencyUpdateDialog),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(updateCurrency),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(closeCurrencyDialog),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(currencySaga);\n\nimport { takeEvery, takeLatest, put } from 'redux-saga/effects';\nimport { call, select, all } from 'typed-redux-saga';\nimport { advancedFilterActions, commonStore, currencyStore } from '@/store/reducers';\nimport * as errorSaga from '@/store/saga/errorSaga';\nimport _ from 'lodash';\nimport currencyApi from '@/apis/currency.api';\nimport * as constant from '@/utils/constant';\nimport AppNumber from '@/helper/AppNumber';\n\nfunction fetchInitDataForList() {\n  var userBaseCurrency, data;\n  return _regeneratorRuntime.wrap(function fetchInitDataForList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.delegateYield(select(currencyStore.selectUserBaseCurrency), \"t0\", 1);\n\n        case 1:\n          userBaseCurrency = _context.t0;\n          _context.next = 4;\n          return call(currencyApi.getInitDataForList);\n\n        case 4:\n          data = _context.sent;\n\n          if (!_.isNull(userBaseCurrency.id)) {\n            data.user_base_currency = userBaseCurrency;\n          }\n\n          _context.next = 8;\n          return put(currencyStore.actions.setInitDataForList(data));\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction fetchList() {\n  var _yield$all, tableState, searchQuery, filterData, baseCurrency, page, per_page, data;\n\n  return _regeneratorRuntime.wrap(function fetchList$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.delegateYield(all({\n            tableState: select(commonStore.selectTableState),\n            searchQuery: select(commonStore.selectSearchQuery),\n            filterData: select(advancedFilterActions.selectFilterData),\n            baseCurrency: select(currencyStore.selectUserBaseCurrency)\n          }), \"t0\", 1);\n\n        case 1:\n          _yield$all = _context2.t0;\n          tableState = _yield$all.tableState;\n          searchQuery = _yield$all.searchQuery;\n          filterData = _yield$all.filterData;\n          baseCurrency = _yield$all.baseCurrency;\n          page = tableState.page, per_page = tableState.per_page;\n          _context2.next = 9;\n          return call(currencyApi.getList, _objectSpread({\n            base_currency_id: baseCurrency.id,\n            page: page,\n            per_page: per_page,\n            s: searchQuery\n          }, filterData));\n\n        case 9:\n          data = _context2.sent;\n          _context2.next = 12;\n          return put(commonStore.actions.setTableState({\n            total_items: data.total_items\n          }));\n\n        case 12:\n          _context2.next = 14;\n          return put(currencyStore.actions.setDataList(data.currency_list));\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction fetchInitDataForCE() {\n  var _yield$select, base_currency_id, data;\n\n  return _regeneratorRuntime.wrap(function fetchInitDataForCE$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.delegateYield(select(currencyStore.selectUserBaseCurrency), \"t0\", 1);\n\n        case 1:\n          _yield$select = _context3.t0;\n          base_currency_id = _yield$select.id;\n          _context3.next = 5;\n          return call(currencyApi.getInitDataForCE, {\n            base_currency_id: base_currency_id\n          });\n\n        case 5:\n          data = _context3.sent;\n          _context3.next = 8;\n          return put(currencyStore.actions.setInitDataForCE(data));\n\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction fetchDetail(id) {\n  var _yield$call, currency;\n\n  return _regeneratorRuntime.wrap(function fetchDetail$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return call(currencyApi.getDetail, id);\n\n        case 2:\n          _yield$call = _context4.sent;\n          currency = _yield$call.currency;\n          currency.rate = AppNumber.format(currency.rate, constant.currencyRateFormat);\n          _context4.next = 7;\n          return put(currencyStore.actions.setDetail(currency));\n\n        case 7:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport function getCurrencyList() {\n  var permissions;\n  return _regeneratorRuntime.wrap(function getCurrencyList$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 2:\n          _context5.prev = 2;\n          _context5.next = 5;\n          return call(fetchInitDataForList);\n\n        case 5:\n          return _context5.delegateYield(select(currencyStore.selectPermissions), \"t0\", 6);\n\n        case 6:\n          permissions = _context5.t0;\n\n          if (!(permissions === null || permissions === void 0 ? void 0 : permissions.view)) {\n            _context5.next = 10;\n            break;\n          }\n\n          _context5.next = 10;\n          return call(fetchList);\n\n        case 10:\n          _context5.next = 16;\n          break;\n\n        case 12:\n          _context5.prev = 12;\n          _context5.t1 = _context5[\"catch\"](2);\n          _context5.next = 16;\n          return errorSaga.handleError(_context5.t1);\n\n        case 16:\n          _context5.next = 18;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 18:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[2, 12]]);\n}\nexport function changeUserCurrency(_ref) {\n  var payload;\n  return _regeneratorRuntime.wrap(function changeUserCurrency$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          payload = _ref.payload;\n          _context6.next = 3;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 3:\n          _context6.prev = 3;\n          _context6.next = 6;\n          return put(currencyStore.actions.setUserBaseCurrency(payload));\n\n        case 6:\n          _context6.next = 8;\n          return call(fetchList);\n\n        case 8:\n          _context6.next = 14;\n          break;\n\n        case 10:\n          _context6.prev = 10;\n          _context6.t0 = _context6[\"catch\"](3);\n          _context6.next = 14;\n          return errorSaga.handleError(_context6.t0);\n\n        case 14:\n          _context6.next = 16;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 16:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[3, 10]]);\n}\nexport function openCurrencyCreateDialog() {\n  return _regeneratorRuntime.wrap(function openCurrencyCreateDialog$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 2:\n          _context7.prev = 2;\n          _context7.next = 5;\n          return call(fetchInitDataForCE);\n\n        case 5:\n          _context7.next = 7;\n          return put(currencyStore.actions.setDialogStateOpen(true));\n\n        case 7:\n          _context7.next = 13;\n          break;\n\n        case 9:\n          _context7.prev = 9;\n          _context7.t0 = _context7[\"catch\"](2);\n          _context7.next = 13;\n          return errorSaga.handleError(_context7.t0);\n\n        case 13:\n          _context7.next = 15;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 15:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[2, 9]]);\n}\nexport function createCurrency(_ref2) {\n  var payload, _yield$call2, message;\n\n  return _regeneratorRuntime.wrap(function createCurrency$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          payload = _ref2.payload;\n          _context8.next = 3;\n          return put(currencyStore.actions.setDialogStateLoading(true));\n\n        case 3:\n          _context8.prev = 3;\n          _context8.next = 6;\n          return call(currencyApi.create, payload);\n\n        case 6:\n          _yield$call2 = _context8.sent;\n          message = _yield$call2.message;\n          _context8.next = 10;\n          return all([put(commonStore.actions.setSuccessMessage(message)), put(currencyStore.actions.resetDetail())]);\n\n        case 10:\n          _context8.next = 16;\n          break;\n\n        case 12:\n          _context8.prev = 12;\n          _context8.t0 = _context8[\"catch\"](3);\n          _context8.next = 16;\n          return errorSaga.handleError(_context8.t0);\n\n        case 16:\n          _context8.next = 18;\n          return put(currencyStore.actions.setDialogStateLoading(false));\n\n        case 18:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[3, 12]]);\n}\nexport function openCurrencyUpdateDialog(_ref3) {\n  var id;\n  return _regeneratorRuntime.wrap(function openCurrencyUpdateDialog$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          id = _ref3.payload;\n          _context9.next = 3;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 3:\n          _context9.prev = 3;\n          _context9.next = 6;\n          return call(fetchInitDataForCE);\n\n        case 6:\n          _context9.next = 8;\n          return call(fetchDetail, id);\n\n        case 8:\n          _context9.next = 10;\n          return put(currencyStore.actions.setDialogState({\n            open: true,\n            editMode: true\n          }));\n\n        case 10:\n          _context9.next = 16;\n          break;\n\n        case 12:\n          _context9.prev = 12;\n          _context9.t0 = _context9[\"catch\"](3);\n          _context9.next = 16;\n          return errorSaga.handleError(_context9.t0);\n\n        case 16:\n          _context9.next = 18;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 18:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[3, 12]]);\n}\nexport function updateCurrency(_ref4) {\n  var payload, id, formData, _yield$call3, message;\n\n  return _regeneratorRuntime.wrap(function updateCurrency$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          payload = _ref4.payload;\n          _context10.next = 3;\n          return put(currencyStore.actions.setDialogStateLoading(true));\n\n        case 3:\n          _context10.prev = 3;\n          id = payload.id, formData = payload.formData;\n          _context10.next = 7;\n          return call(currencyApi.update, id, formData);\n\n        case 7:\n          _yield$call3 = _context10.sent;\n          message = _yield$call3.message;\n          _context10.next = 11;\n          return call(closeCurrencyDialog);\n\n        case 11:\n          _context10.next = 13;\n          return put(commonStore.actions.setSuccessMessage(message));\n\n        case 13:\n          _context10.next = 19;\n          break;\n\n        case 15:\n          _context10.prev = 15;\n          _context10.t0 = _context10[\"catch\"](3);\n          _context10.next = 19;\n          return errorSaga.handleError(_context10.t0);\n\n        case 19:\n          _context10.next = 21;\n          return put(currencyStore.actions.setDialogStateLoading(false));\n\n        case 21:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10, null, [[3, 15]]);\n}\nexport function closeCurrencyDialog() {\n  return _regeneratorRuntime.wrap(function closeCurrencyDialog$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return put(currencyStore.actions.setDialogStateOpen(false));\n\n        case 3:\n          _context11.next = 5;\n          return call(getCurrencyList);\n\n        case 5:\n          _context11.next = 7;\n          return put(currencyStore.actions.resetDetail());\n\n        case 7:\n          _context11.next = 13;\n          break;\n\n        case 9:\n          _context11.prev = 9;\n          _context11.t0 = _context11[\"catch\"](0);\n          _context11.next = 13;\n          return errorSaga.handleError(_context11.t0);\n\n        case 13:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 9]]);\n}\n\nfunction currencySaga() {\n  return _regeneratorRuntime.wrap(function currencySaga$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeEvery(currencyStore.sagaGetList, getCurrencyList);\n\n        case 2:\n          _context12.next = 4;\n          return takeEvery(currencyStore.sagaCreate, createCurrency);\n\n        case 4:\n          _context12.next = 6;\n          return takeLatest(currencyStore.sagaOpenCreateDialog, openCurrencyCreateDialog);\n\n        case 6:\n          _context12.next = 8;\n          return takeEvery(currencyStore.sagaOpenUpdateDialog, openCurrencyUpdateDialog);\n\n        case 8:\n          _context12.next = 10;\n          return takeEvery(currencyStore.sagaUpdate, updateCurrency);\n\n        case 10:\n          _context12.next = 12;\n          return takeEvery(currencyStore.sagaCloseDialog, closeCurrencyDialog);\n\n        case 12:\n          _context12.next = 14;\n          return takeEvery(currencyStore.sagaChangeUserCurrency, changeUserCurrency);\n\n        case 14:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nexport default currencySaga;","map":null,"metadata":{},"sourceType":"module"}