{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport useStyles from './styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Paper, Link } from '@material-ui/core';\nimport { DataTable, CreateIcon, DeleteIcon, useConfirm, AppButton } from '@/components';\nimport { defaultProperties, rightColumn } from '@/utils/columnProperties';\nimport { drawingStore, itemStore, partStore } from '@/store/reducers';\nimport _ from 'lodash';\nimport { isAssemblyByDpn } from '@/utils/isAssembly';\n\nconst TabComponent = () => {\n  const classes = useStyles();\n  const {\n    confirm\n  } = useConfirm();\n  const {\n    0: selectedRows,\n    1: setSelectedRows\n  } = useState([]);\n  const dispatch = useDispatch();\n  const componentList = useSelector(drawingStore.selectComponentList);\n  useEffect(() => {\n    setSelectedRows([]);\n  }, [componentList]);\n\n  const handleOpenComponentDialog = partEntity => () => {\n    dispatch(drawingStore.sagaOpenCreatePartDialog(partEntity));\n  };\n\n  const handleSelectRows = ({\n    selectionModel\n  }) => {\n    setSelectedRows(selectionModel);\n  };\n\n  const buildDescription = () => {\n    if (selectedRows.length > 1) {\n      return `Are you sure you want to delete ${selectedRows.length} selected parts?`;\n    }\n\n    return `Are you sure you want to delete ${selectedRows.length} selected part?`;\n  };\n\n  const handleDeleteItems = async () => {\n    const description = buildDescription();\n    const result = await confirm({\n      description\n    });\n\n    if (result === 'OK') {\n      const parts = _.map(selectedRows, partId => {\n        const {\n          dpn,\n          id\n        } = _.find(componentList, {\n          id: partId\n        });\n\n        return {\n          entity_id: dpn,\n          id\n        };\n      });\n\n      dispatch(itemStore.sagaRemove(parts));\n    }\n  };\n\n  const handleOpenPartDialog = (id, dpn) => event => {\n    event.preventDefault();\n    const entity = isAssemblyByDpn(dpn) ? 'assembly' : 'item';\n    dispatch(partStore.sagaOpenUpdateDialog({\n      id,\n      entity\n    }));\n  };\n\n  const newButtonDropdown = [{\n    label: 'Item',\n    onClick: handleOpenComponentDialog('item')\n  }, {\n    label: 'Assembly',\n    onClick: handleOpenComponentDialog('assembly')\n  }];\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: classes.buttonGroupRoot,\n      children: [/*#__PURE__*/_jsx(AppButton, {\n        startIcon: /*#__PURE__*/_jsx(CreateIcon, {}),\n        item: newButtonDropdown,\n        children: \"New\"\n      }), /*#__PURE__*/_jsx(AppButton, {\n        startIcon: /*#__PURE__*/_jsx(DeleteIcon, {}),\n        onClick: handleDeleteItems,\n        disabled: selectedRows.length === 0,\n        children: \"Remove\"\n      })]\n    }), /*#__PURE__*/_jsx(Paper, {\n      elevation: 1,\n      children: /*#__PURE__*/_jsx(DataTable, {\n        rows: componentList,\n        checkboxSelection: true,\n        selectionModel: selectedRows,\n        onSelectionModelChange: handleSelectRows,\n        onCellClick: (params, event) => {\n          if (['dpn', 'reference_to'].includes(params.field)) {\n            event.stopPropagation();\n          }\n        },\n        columns: [_objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'dpn',\n          headerName: 'Item',\n          flex: 0.2,\n\n          renderCell(params) {\n            const {\n              value,\n              id\n            } = params;\n            return /*#__PURE__*/_jsx(Link, {\n              href: \"#\",\n              onClick: handleOpenPartDialog(id, value),\n              children: value\n            });\n          }\n\n        }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'reference_to',\n          headerName: 'Referenced Part Number',\n          flex: 0.2,\n\n          renderCell(params) {\n            const {\n              value,\n              row\n            } = params;\n            return /*#__PURE__*/_jsx(Link, {\n              href: \"#\",\n              onClick: handleOpenPartDialog(row.id_ref, value),\n              children: value\n            });\n          }\n\n        }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'description',\n          headerName: 'Description',\n          flex: 0.2\n        }), _objectSpread(_objectSpread(_objectSpread({}, defaultProperties), rightColumn), {}, {\n          field: 'mass',\n          headerName: 'Mass (kg)',\n          flex: 0.1\n        }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'raw_unit',\n          headerName: 'Unit',\n          flex: 0.1\n        }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'material',\n          headerName: 'Material',\n          flex: 0.1\n        })],\n        hideFooter: true,\n        tableHeight: 385\n      })\n    })]\n  });\n};\n\nexport default TabComponent;","map":null,"metadata":{},"sourceType":"module"}