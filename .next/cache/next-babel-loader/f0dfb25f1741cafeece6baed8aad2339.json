{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport isEmpty from 'lodash/isEmpty';\nimport cookies from 'js-cookie';\nvar domain = process.env.NEXT_PUBLIC_BACKEND_URL || 'http://localhost:5000/';\n\nvar Http = /*#__PURE__*/function () {\n  function Http() {\n    _classCallCheck(this, Http);\n  }\n\n  _createClass(Http, [{\n    key: \"get\",\n    value: function get(path, query) {\n      var options = {};\n      var requestUrl = domain + path;\n\n      if (isEmpty(query) === false) {\n        options.params = query;\n      }\n\n      var token = cookies.get('token');\n\n      if (isEmpty(token) === false) {\n        options.headers = {\n          Authorization: \"Bearer \".concat(token)\n        };\n      }\n\n      return axios.get(requestUrl, options);\n    }\n  }, {\n    key: \"post\",\n    value: function post(path, data) {\n      var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var requestUrl = domain + path;\n      var token = cookies.get('token');\n      var options = {};\n\n      if (isEmpty(token) === false) {\n        options = {\n          headers: _objectSpread({\n            Authorization: \"Bearer \".concat(token)\n          }, headers)\n        };\n      }\n\n      return axios.post(requestUrl, data, options);\n    }\n  }, {\n    key: \"put\",\n    value: function put(path, data, query) {\n      var headers = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var requestUrl = domain + path;\n\n      if (isEmpty(query) === false) {\n        requestUrl += this.queryStringBuilder(query);\n      }\n\n      var token = cookies.get('token');\n      var options = {};\n\n      if (isEmpty(token) === false) {\n        options = {\n          headers: _objectSpread({\n            Authorization: \"Bearer \".concat(token)\n          }, headers)\n        };\n      }\n\n      return axios.put(requestUrl, data, options);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(path, data, query) {\n      var requestUrl = domain + path;\n\n      if (isEmpty(query) === false) {\n        requestUrl += this.queryStringBuilder(query);\n      }\n\n      var token = cookies.get('token');\n      var options = {};\n\n      if (isEmpty(token) === false) {\n        options = {\n          headers: {\n            Authorization: \"Bearer \".concat(token)\n          }\n        };\n      }\n\n      options = _objectSpread(_objectSpread({}, options), {}, {\n        data: data\n      });\n      return axios[\"delete\"](requestUrl, options);\n    }\n  }, {\n    key: \"queryStringBuilder\",\n    value: function queryStringBuilder(query) {\n      var str = [];\n\n      for (var p in query) {\n        var value = p + '=' + query[p];\n        str.push(value);\n      }\n\n      return '?' + str.join('&');\n    }\n  }]);\n\n  return Http;\n}();\n\nexport default new Http();","map":null,"metadata":{},"sourceType":"module"}