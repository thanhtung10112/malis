{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { CircularProgress, Tooltip } from '@material-ui/core';\nimport { When, Unless, If, Then, Else } from 'react-if';\nimport { UploadIcon, DeleteIcon } from '@/components/index';\nimport Http from '@/utils/Http';\nimport clsx from 'clsx';\nimport { commonStore } from '@/store/reducers';\nimport immer from 'immer';\nimport { useDispatch } from 'react-redux';\nimport useStyles from './styles';\n\nvar UploadImage = function UploadImage(props) {\n  var imageProp = props.image,\n      fileTypes = props.fileTypes,\n      fileSize = props.fileSize,\n      httpRequest = props.httpRequest,\n      onChange = props.onChange,\n      width = props.width,\n      height = props.height,\n      errorProps = props.error;\n  var classes = useStyles({\n    width: width,\n    height: height\n  });\n\n  var _React$useState = React.useState({\n    file: null,\n    base64: ''\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      image = _React$useState2[0],\n      setImage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      loading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      error = _React$useState6[0],\n      setError = _React$useState6[1];\n\n  var dispatch = useDispatch();\n  var refInput = null;\n  React.useEffect(function () {\n    setImage(function (prevState) {\n      return immer(prevState, function (draft) {\n        if (imageProp instanceof File) {\n          draft.file = imageProp;\n        } else {\n          draft.base64 = imageProp;\n        }\n      });\n    });\n  }, [imageProp]);\n  React.useEffect(function () {\n    setError(errorProps);\n  }, [errorProps]);\n  var accepTypes = React.useMemo(function () {\n    return fileTypes.join(',');\n  }, [fileTypes]);\n  var isValidImage = React.useCallback(function (file) {\n    var size = file.size / 1024;\n    var type = file.type;\n    return size <= fileSize && fileTypes.includes(type);\n  }, [fileTypes, fileSize]);\n\n  var convertFilesToBase64 = function convertFilesToBase64(file) {\n    return new Promise(function (resolve, reject) {\n      var reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onloadend = function () {\n        resolve(reader.result);\n      };\n\n      reader.onerror = reject;\n    });\n  };\n\n  var setRefInput = function setRefInput(element) {\n    refInput = element;\n  };\n\n  var handleOpenWindowSelect = function handleOpenWindowSelect() {\n    refInput.value = '';\n    refInput.click();\n  };\n\n  var handleUploadImage = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var file, base64, formData, _yield$Http$httpReque, data, _error$response, _error$response$data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              file = _ref.file, base64 = _ref.base64;\n              setLoading(true);\n              _context.prev = 2;\n              formData = new FormData();\n              formData.append(httpRequest.key, file);\n              _context.next = 7;\n              return Http[httpRequest.method](httpRequest.endpoint, formData);\n\n            case 7:\n              _yield$Http$httpReque = _context.sent;\n              data = _yield$Http$httpReque.data;\n              onChange({\n                file: file,\n                base64: base64\n              });\n              dispatch(commonStore.actions.setSuccessMessage(data.message));\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](2);\n              setError(_context.t0 === null || _context.t0 === void 0 ? void 0 : (_error$response = _context.t0.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message);\n\n            case 16:\n              setLoading(false);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 13]]);\n    }));\n\n    return function handleUploadImage(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleChangeFile = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n      var file, base64, fileInstance;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              file = event.target.files[0];\n              _context2.next = 3;\n              return convertFilesToBase64(file);\n\n            case 3:\n              base64 = _context2.sent;\n              fileInstance = {\n                file: file,\n                base64: base64\n              };\n              setImage(fileInstance);\n\n              if (!(!isValidImage(file) && httpRequest)) {\n                _context2.next = 9;\n                break;\n              }\n\n              setError('The file must be image or file size must be less than 500KB!');\n              return _context2.abrupt(\"return\");\n\n            case 9:\n              setError('');\n\n              if (!httpRequest) {\n                _context2.next = 15;\n                break;\n              }\n\n              _context2.next = 13;\n              return handleUploadImage(fileInstance);\n\n            case 13:\n              _context2.next = 16;\n              break;\n\n            case 15:\n              onChange(fileInstance);\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleChangeFile(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var removeImageRequest = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var formData, _yield$Http$httpReque2, data, _error$response2, _error$response2$data;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!error) {\n                _context3.next = 5;\n                break;\n              }\n\n              setImage(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, {\n                  base64: imageProp\n                });\n              });\n              setError('');\n              _context3.next = 23;\n              break;\n\n            case 5:\n              setLoading(true);\n              setError('');\n              _context3.prev = 7;\n              formData = new FormData();\n              formData.append(httpRequest.key, null);\n              _context3.next = 12;\n              return Http[httpRequest.method](httpRequest.endpoint, formData);\n\n            case 12:\n              _yield$Http$httpReque2 = _context3.sent;\n              data = _yield$Http$httpReque2.data;\n              dispatch(commonStore.actions.setSuccessMessage(data.message));\n              setImage({\n                file: null,\n                base64: ''\n              });\n              onChange({\n                file: null,\n                base64: null\n              });\n              _context3.next = 22;\n              break;\n\n            case 19:\n              _context3.prev = 19;\n              _context3.t0 = _context3[\"catch\"](7);\n              setError(_context3.t0 === null || _context3.t0 === void 0 ? void 0 : (_error$response2 = _context3.t0.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message);\n\n            case 22:\n              setLoading(false);\n\n            case 23:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[7, 19]]);\n    }));\n\n    return function removeImageRequest() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleRemoveImage = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setError('');\n\n              if (!httpRequest) {\n                _context4.next = 6;\n                break;\n              }\n\n              _context4.next = 4;\n              return removeImageRequest();\n\n            case 4:\n              _context4.next = 8;\n              break;\n\n            case 6:\n              onChange({\n                base64: '',\n                file: null\n              });\n              setImage({\n                base64: '',\n                file: null\n              });\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleRemoveImage() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsx(Tooltip, {\n    title: error || 'Only PNG, JPG, JPEG files are allowed!',\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: clsx(classes.upload, {\n        error: Boolean(error)\n      }),\n      children: /*#__PURE__*/_jsxs(\"span\", {\n        className: classes.uploadSelect,\n        children: [/*#__PURE__*/_jsx(\"input\", {\n          type: \"file\",\n          onChange: handleChangeFile,\n          ref: setRefInput,\n          style: {\n            display: 'none'\n          },\n          accept: accepTypes\n        }), /*#__PURE__*/_jsx(Unless, {\n          condition: image.base64,\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: classes.uploadSection,\n            onClick: handleOpenWindowSelect,\n            children: /*#__PURE__*/_jsx(UploadIcon, {\n              className: classes.uploadSelect__icon,\n              role: \"button\",\n              \"aria-label\": \"upload\"\n            })\n          })\n        }), /*#__PURE__*/_jsx(When, {\n          condition: image.base64,\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: classes.imageSection,\n            children: [/*#__PURE__*/_jsx(\"img\", {\n              src: image.base64,\n              alt: \"\",\n              className: classes.imageSection__image\n            }), /*#__PURE__*/_jsxs(If, {\n              condition: loading,\n              children: [/*#__PURE__*/_jsx(Then, {\n                children: /*#__PURE__*/_jsxs(\"div\", {\n                  className: classes.imageSection__loadingOverlay,\n                  children: [/*#__PURE__*/_jsx(CircularProgress, {\n                    size: 20,\n                    color: \"inherit\"\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    style: {\n                      marginTop: 8\n                    },\n                    children: \"Uploading...\"\n                  })]\n                })\n              }), /*#__PURE__*/_jsx(Else, {\n                children: /*#__PURE__*/_jsxs(\"div\", {\n                  className: classes.imageSection__actions,\n                  children: [/*#__PURE__*/_jsx(UploadIcon, {\n                    className: classes.imageSection__actions__item,\n                    onClick: handleOpenWindowSelect\n                  }), /*#__PURE__*/_jsx(DeleteIcon, {\n                    className: classes.imageSection__actions__item,\n                    onClick: handleRemoveImage\n                  })]\n                })\n              })]\n            })]\n          })\n        })]\n      })\n    })\n  });\n};\n\nUploadImage.defaultProps = {\n  fileTypes: ['image/png', 'image/jpg', 'image/jpeg'],\n  fileSize: 500,\n  width: '100%',\n  height: '100%'\n};\nexport default UploadImage;","map":null,"metadata":{},"sourceType":"module"}