{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { takeEvery, put, putResolve } from 'redux-saga/effects';\nimport { select, call, all } from 'typed-redux-saga';\nimport groupApi from '@/apis/group.api';\nimport { advancedFilterActions, commonStore, groupStore } from '@/store/reducers';\n\nfunction* fetchInitDataForList() {\n  const data = yield call(groupApi.getInitDataForList);\n  yield put(groupStore.actions.setInitDataForList(data));\n}\n\nfunction* fetchList() {\n  const {\n    tableState,\n    searchQuery,\n    filterData\n  } = yield* all({\n    tableState: select(commonStore.selectTableState),\n    searchQuery: select(commonStore.selectSearchQuery),\n    filterData: select(advancedFilterActions.selectFilterData)\n  });\n  const {\n    page,\n    per_page\n  } = tableState;\n  const data = yield call(groupApi.getList, _objectSpread({\n    per_page,\n    page,\n    s: searchQuery\n  }, filterData));\n  yield put(commonStore.actions.setTableState({\n    total_items: data.total_items\n  }));\n  yield put(groupStore.actions.setDataList(data.group_list));\n}\n\nfunction* getGroupList() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchInitDataForList);\n    const permissions = yield* select(groupStore.selectPermissions);\n\n    if (permissions.view) {\n      yield call(fetchList);\n    }\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* createGroup({\n  payload\n}) {\n  yield put(groupStore.actions.setDialogStateLoading(true));\n\n  try {\n    yield call(fetchGroupInitDataForCE);\n    const {\n      message\n    } = yield call(groupApi.create, payload);\n    yield all([put(commonStore.actions.setSuccessMessage(message)), put(groupStore.actions.resetDetail())]);\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(groupStore.actions.setDialogStateLoading(false));\n}\n\nfunction* fetchGroupInitDataForCE() {\n  const data = yield call(groupApi.getInitDataForCE);\n  yield put(groupStore.actions.setInitDataForCE(data));\n}\n\nfunction* openGroupCreateDialog() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchGroupInitDataForCE);\n    yield put(groupStore.actions.setDialogStateOpen(true));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* openUpdateDialog({\n  payload: id\n}) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchGroupInitDataForCE);\n    const {\n      group\n    } = yield call(groupApi.getDetail, id);\n    yield put(groupStore.actions.setDetail(group));\n    yield put(groupStore.actions.setDialogState({\n      open: true,\n      editMode: true\n    }));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* updateGroup({\n  payload\n}) {\n  yield put(groupStore.actions.setDialogStateLoading(true));\n\n  try {\n    const {\n      id,\n      formData\n    } = payload;\n    const {\n      message\n    } = yield call(groupApi.update, id, formData);\n    yield call(closeGroupDialog);\n    yield put(commonStore.actions.setSuccessMessage(message));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(groupStore.actions.setDialogStateLoading(false));\n}\n\nfunction* getGroupPermissions() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchInitDataForList);\n    const data = yield call(groupApi.getPermissionsList);\n    yield put(groupStore.actions.setGroupPermissions(data));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* updateGroupPermissions({\n  payload\n}) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    const {\n      message\n    } = yield call(groupApi.updatePermissionsList, payload);\n    yield put(commonStore.actions.setSuccessMessage(message));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* closeGroupDialog() {\n  try {\n    yield putResolve(groupStore.actions.setDialogStateOpen(false));\n    yield call(getGroupList);\n    yield put(groupStore.actions.resetDetail());\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n}\n\nfunction* groupSaga() {\n  yield takeEvery(groupStore.sagaGetList, getGroupList);\n  yield takeEvery(groupStore.sagaCreate, createGroup);\n  yield takeEvery(groupStore.sagaOpenUpdateDialog, openUpdateDialog);\n  yield takeEvery(groupStore.sagaUpdate, updateGroup);\n  yield takeEvery(groupStore.sagaCloseDialog, closeGroupDialog);\n  yield takeEvery(groupStore.sagaOpenCreateDialog, openGroupCreateDialog);\n  yield takeEvery(groupStore.sagaGetGroupPermissions, getGroupPermissions);\n  yield takeEvery(groupStore.sagaUpdateGroupPermissions, updateGroupPermissions);\n}\n\nexport default groupSaga;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/store/saga/group.saga.ts"],"names":["takeEvery","put","putResolve","select","call","all","groupApi","advancedFilterActions","commonStore","groupStore","fetchInitDataForList","data","getInitDataForList","actions","setInitDataForList","fetchList","tableState","searchQuery","filterData","selectTableState","selectSearchQuery","selectFilterData","page","per_page","getList","s","setTableState","total_items","setDataList","group_list","getGroupList","setLoadingPage","permissions","selectPermissions","view","error","setError","createGroup","payload","setDialogStateLoading","fetchGroupInitDataForCE","message","create","setSuccessMessage","resetDetail","getInitDataForCE","setInitDataForCE","openGroupCreateDialog","setDialogStateOpen","openUpdateDialog","id","group","getDetail","setDetail","setDialogState","open","editMode","updateGroup","formData","update","closeGroupDialog","getGroupPermissions","getPermissionsList","setGroupPermissions","updateGroupPermissions","updatePermissionsList","groupSaga","sagaGetList","sagaCreate","sagaOpenUpdateDialog","sagaUpdate","sagaCloseDialog","sagaOpenCreateDialog","sagaGetGroupPermissions","sagaUpdateGroupPermissions"],"mappings":"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","sourcesContent":["import { takeEvery, put, putResolve } from 'redux-saga/effects'\n\nimport { select, call, all } from 'typed-redux-saga'\n\nimport groupApi from '@/apis/group.api'\n\nimport { advancedFilterActions, commonStore, groupStore } from '@/store/reducers'\n\nfunction* fetchInitDataForList() {\n  const data = yield call(groupApi.getInitDataForList)\n  yield put(groupStore.actions.setInitDataForList(data))\n}\n\nfunction* fetchList() {\n  const { tableState, searchQuery, filterData } = yield* all({\n    tableState: select(commonStore.selectTableState),\n    searchQuery: select(commonStore.selectSearchQuery),\n    filterData: select(advancedFilterActions.selectFilterData)\n  })\n  const { page, per_page } = tableState\n  const data = yield call(groupApi.getList, {\n    per_page,\n    page,\n    s: searchQuery,\n    ...filterData\n  })\n  yield put(commonStore.actions.setTableState({ total_items: data.total_items }))\n  yield put(groupStore.actions.setDataList(data.group_list))\n}\n\nfunction* getGroupList() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchInitDataForList)\n    const permissions = yield* select(groupStore.selectPermissions)\n    if (permissions.view) {\n      yield call(fetchList)\n    }\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* createGroup({ payload }: ReturnType<typeof groupStore.sagaCreate>) {\n  yield put(groupStore.actions.setDialogStateLoading(true))\n\n  try {\n    yield call(fetchGroupInitDataForCE)\n    const { message } = yield call(groupApi.create, payload)\n    yield all([put(commonStore.actions.setSuccessMessage(message)), put(groupStore.actions.resetDetail())])\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(groupStore.actions.setDialogStateLoading(false))\n}\n\nfunction* fetchGroupInitDataForCE() {\n  const data = yield call(groupApi.getInitDataForCE)\n  yield put(groupStore.actions.setInitDataForCE(data))\n}\n\nfunction* openGroupCreateDialog() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchGroupInitDataForCE)\n    yield put(groupStore.actions.setDialogStateOpen(true))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* openUpdateDialog({ payload: id }: ReturnType<typeof groupStore.sagaOpenUpdateDialog>) {\n  yield put(commonStore.actions.setLoadingPage(true))\n\n  try {\n    yield call(fetchGroupInitDataForCE)\n    const { group } = yield call(groupApi.getDetail, id)\n    yield put(groupStore.actions.setDetail(group))\n    yield put(groupStore.actions.setDialogState({ open: true, editMode: true }))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* updateGroup({ payload }: ReturnType<typeof groupStore.sagaUpdate>) {\n  yield put(groupStore.actions.setDialogStateLoading(true))\n\n  try {\n    const { id, formData } = payload\n    const { message } = yield call(groupApi.update, id, formData)\n    yield call(closeGroupDialog)\n    yield put(commonStore.actions.setSuccessMessage(message))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n\n  yield put(groupStore.actions.setDialogStateLoading(false))\n}\n\nfunction* getGroupPermissions() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchInitDataForList)\n    const data = yield call(groupApi.getPermissionsList)\n    yield put(groupStore.actions.setGroupPermissions(data))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* updateGroupPermissions({ payload }) {\n  yield put(commonStore.actions.setLoadingPage(true))\n\n  try {\n    const { message } = yield call(groupApi.updatePermissionsList, payload)\n    yield put(commonStore.actions.setSuccessMessage(message))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* closeGroupDialog() {\n  try {\n    yield putResolve(groupStore.actions.setDialogStateOpen(false))\n    yield call(getGroupList)\n    yield put(groupStore.actions.resetDetail())\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n}\n\nfunction* groupSaga() {\n  yield takeEvery(groupStore.sagaGetList, getGroupList)\n  yield takeEvery(groupStore.sagaCreate, createGroup)\n  yield takeEvery(groupStore.sagaOpenUpdateDialog, openUpdateDialog)\n  yield takeEvery(groupStore.sagaUpdate, updateGroup)\n  yield takeEvery(groupStore.sagaCloseDialog, closeGroupDialog)\n  yield takeEvery(groupStore.sagaOpenCreateDialog, openGroupCreateDialog)\n\n  yield takeEvery(groupStore.sagaGetGroupPermissions, getGroupPermissions)\n  yield takeEvery(groupStore.sagaUpdateGroupPermissions, updateGroupPermissions)\n}\n\nexport default groupSaga\n"]},"metadata":{},"sourceType":"module"}