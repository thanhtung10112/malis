{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Fersher\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Part\\\\Item\\\\TabManufacturer.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { useTranslation } from 'next-i18next';\nimport { useDispatch } from 'react-redux';\nimport useDialogContext from '../Context/useDialogContext';\nimport { Grid, Button, Paper, makeStyles, Box } from '@material-ui/core';\nimport { DeleteIcon, CreateIcon, DataTable, ViewListIcon, DataTableTextField, AppAutocompleteAsync } from '@/components';\nimport DialogManufacturerAttr from './DialogManufacturerAttr';\nimport { partStore } from '@/store/reducers';\nimport _ from 'lodash';\nimport * as columnProperties from '@/utils/columnProperties';\nimport * as yup from 'yup';\nimport immer from 'immer';\nvar useStyles = makeStyles({\n  buttonGroup: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: '0 !important'\n  }\n});\n\nvar TabManufacturer = function TabManufacturer() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation('item'),\n      t = _useTranslation.t;\n\n  var _useDialogContext = useDialogContext(),\n      loading = _useDialogContext.loading;\n\n  var _useState = useState([]),\n      selectedManu = _useState[0],\n      setSelectedManu = _useState[1];\n\n  var _useState2 = useState([]),\n      selectedManuOptions = _useState2[0],\n      setSelectedManuOptions = _useState2[1];\n\n  var _useState3 = useState({\n    open: false,\n    attributes: {},\n    manufacturerId: null\n  }),\n      attrDialog = _useState3[0],\n      setAttrDialog = _useState3[1];\n\n  var dispatch = useDispatch();\n  var partForm = useFormContext();\n  var watchManufacturer = partForm.watch('manufacturers', []);\n  var watchReferenceTo = partForm.watch('reference_to', null);\n\n  var handleChangeOption = function handleChangeOption(event, valueOption) {\n    setSelectedManuOptions(valueOption);\n  };\n\n  var handleAddManu = function handleAddManu() {\n    var _partForm$getValues = partForm.getValues(),\n        manufacturers = _partForm$getValues.manufacturers;\n\n    var mapManufacturers = selectedManuOptions.map(function (manu) {\n      return {\n        manufacturer_id: manu.value,\n        reference: '',\n        description: manu.description\n      };\n    });\n    manufacturers.push.apply(manufacturers, _toConsumableArray(mapManufacturers));\n    partForm.setValue('manufacturers', manufacturers);\n    setSelectedManuOptions([]);\n  };\n\n  var handleRemoveManu = function handleRemoveManu() {\n    var _partForm$getValues2 = partForm.getValues(),\n        manufacturers = _partForm$getValues2.manufacturers;\n\n    var newManus = manufacturers.filter(function (manu) {\n      return !selectedManu.includes(manu.manufacturer_id);\n    });\n    setSelectedManu([]);\n    partForm.setValue('manufacturers', newManus);\n  };\n\n  var handleSelectManu = function handleSelectManu(_ref) {\n    var selectionModel = _ref.selectionModel;\n    setSelectedManu(selectionModel);\n  };\n  /**\n   * @param {number} id\n   * @param {string} value\n   */\n\n\n  var handleChangeReference = function handleChangeReference(id, value) {\n    var _partForm$getValues3 = partForm.getValues(),\n        manufacturers = _partForm$getValues3.manufacturers;\n\n    var newManufacturers = immer(manufacturers, function (draft) {\n      var index = _.findIndex(draft, {\n        manufacturer_id: id\n      });\n\n      draft[index].reference = value;\n    });\n    partForm.setValue('manufacturers', newManufacturers);\n  };\n\n  var handleOpenAttrDialog = function handleOpenAttrDialog(_ref2) {\n    var additional_attributes = _ref2.additional_attributes,\n        manufacturer_id = _ref2.manufacturer_id;\n    return function () {\n      setAttrDialog(function (prevState) {\n        return immer(prevState, function (draft) {\n          draft.open = true;\n          draft.attributes = additional_attributes || {};\n          draft.manufacturerId = manufacturer_id;\n        });\n      });\n    };\n  };\n\n  var handleChangeAttr = function handleChangeAttr(attributes) {\n    var _partForm$getValues4 = partForm.getValues(),\n        manufacturers = _partForm$getValues4.manufacturers;\n\n    var newManufacturers = immer(manufacturers, function (draft) {\n      var index = _.findIndex(manufacturers, {\n        manufacturer_id: attrDialog.manufacturerId\n      });\n\n      if (index !== -1) {\n        draft[index].additional_attributes = attributes;\n      }\n    });\n    partForm.setValue('manufacturers', newManufacturers);\n  };\n\n  var handleCloseAttrDialog = function handleCloseAttrDialog() {\n    setAttrDialog(function (prevState) {\n      return immer(prevState, function (draft) {\n        draft.open = false;\n      });\n    });\n  };\n\n  var handleCreateManu = function handleCreateManu() {\n    var formData = partForm.getValues();\n    dispatch(partStore.sagaOpenManuDialog(formData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(AppAutocompleteAsync, {\n          disabled: Boolean(watchReferenceTo),\n          label: \"Manufacturer\",\n          compName: \"manufacturer_list\",\n          value: selectedManuOptions,\n          multiple: true,\n          limitTags: 2,\n          disableCloseOnSelect: true,\n          onChange: handleChangeOption,\n          getOptionDisabled: function getOptionDisabled(option) {\n            return watchManufacturer.some(function (manu) {\n              return manu.manufacturer_id === option.value;\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        className: classes.buttonGroup,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 24\n          }, _this),\n          onClick: handleAddManu,\n          disabled: selectedManuOptions.length === 0 || Boolean(watchReferenceTo),\n          children: t('common:button.add')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 32\n            }, _this),\n            onClick: handleCreateManu,\n            disabled: loading,\n            children: t('common:button.new')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 26\n            }, _this),\n            onClick: handleRemoveManu,\n            disabled: selectedManu.length === 0 || Boolean(watchReferenceTo),\n            children: t('common:button.remove')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 2,\n          children: /*#__PURE__*/_jsxDEV(DataTable, {\n            checkboxSelection: !watchReferenceTo,\n            hideFooter: true,\n            tableHeight: 270,\n            selectionModel: selectedManu,\n            onSelectionModelChange: handleSelectManu,\n            getRowId: function getRowId(param) {\n              return param.manufacturer_id;\n            },\n            rows: watchManufacturer,\n            onCellClick: function onCellClick(params, event) {\n              if (params.field === 'manufacturer_id') {\n                event.stopPropagation();\n              }\n            },\n            columns: [_objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n              field: 'description',\n              headerName: 'Manufacturers',\n              flex: 0.3\n            }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.editCell('Reference', !watchReferenceTo)), {}, {\n              field: 'reference',\n              flex: 0.4,\n              renderEditCell: function renderEditCell(params) {\n                return /*#__PURE__*/_jsxDEV(DataTableTextField, {\n                  rules: yup.string().max(255, t('validation_message.manu_ref_max')),\n                  params: params,\n                  onChangeValue: handleChangeReference\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 23\n                }, this);\n              }\n            }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n              field: 'manufacturer_id',\n              headerName: 'Attributes',\n              flex: 0.3,\n              renderCell: function renderCell(params) {\n                return /*#__PURE__*/_jsxDEV(ViewListIcon, {\n                  onClick: handleOpenAttrDialog(params.row)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 28\n                }, this);\n              }\n            })]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(DialogManufacturerAttr, {\n      open: attrDialog.open,\n      attributes: attrDialog.attributes,\n      onChange: handleChangeAttr,\n      onClose: handleCloseAttrDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(TabManufacturer, \"IxkllR+64t1sb8Fg46me4HWpVjg=\", false, function () {\n  return [useStyles, useTranslation, useDialogContext, useDispatch, useFormContext];\n});\n\n_c = TabManufacturer;\nexport default TabManufacturer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TabManufacturer\");","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Part/Item/TabManufacturer.tsx"],"names":["useState","useFormContext","useTranslation","useDispatch","useDialogContext","Grid","Button","Paper","makeStyles","Box","DeleteIcon","CreateIcon","DataTable","ViewListIcon","DataTableTextField","AppAutocompleteAsync","DialogManufacturerAttr","partStore","_","columnProperties","yup","immer","useStyles","buttonGroup","display","alignItems","justifyContent","padding","TabManufacturer","classes","t","loading","selectedManu","setSelectedManu","selectedManuOptions","setSelectedManuOptions","open","attributes","manufacturerId","attrDialog","setAttrDialog","dispatch","partForm","watchManufacturer","watch","watchReferenceTo","handleChangeOption","event","valueOption","handleAddManu","getValues","manufacturers","mapManufacturers","map","manu","manufacturer_id","value","reference","description","push","setValue","handleRemoveManu","newManus","filter","includes","handleSelectManu","selectionModel","handleChangeReference","id","newManufacturers","draft","index","findIndex","handleOpenAttrDialog","additional_attributes","prevState","handleChangeAttr","handleCloseAttrDialog","handleCreateManu","formData","sagaOpenManuDialog","Boolean","option","some","length","param","params","field","stopPropagation","defaultProperties","headerName","flex","editCell","renderEditCell","string","max","centerColumn","renderCell","row"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport { useTranslation } from 'next-i18next'\nimport { useDispatch } from 'react-redux'\nimport useDialogContext from '../Context/useDialogContext'\n\nimport { Grid, Button, Paper, makeStyles, Box } from '@material-ui/core'\n\nimport { DeleteIcon, CreateIcon, DataTable, ViewListIcon, DataTableTextField, AppAutocompleteAsync } from '@/components'\nimport DialogManufacturerAttr from './DialogManufacturerAttr'\n\nimport { partStore } from '@/store/reducers'\nimport _ from 'lodash'\nimport * as columnProperties from '@/utils/columnProperties'\nimport * as yup from 'yup'\nimport immer from 'immer'\n\nimport type { DataForDropdown } from '@/types/Common'\nimport type { PartDetail } from '@/types/Part'\n\nconst useStyles = makeStyles({\n  buttonGroup: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: '0 !important'\n  }\n})\n\nconst TabManufacturer: React.FC = () => {\n  const classes = useStyles()\n  const { t } = useTranslation('item')\n  const { loading } = useDialogContext()\n\n  const [selectedManu, setSelectedManu] = useState([])\n  const [selectedManuOptions, setSelectedManuOptions] = useState<DataForDropdown[]>([])\n  const [attrDialog, setAttrDialog] = useState({\n    open: false,\n    attributes: {},\n    manufacturerId: null\n  })\n\n  const dispatch = useDispatch()\n\n  const partForm = useFormContext<PartDetail>()\n  const watchManufacturer = partForm.watch('manufacturers', [])\n  const watchReferenceTo = partForm.watch('reference_to', null)\n\n  const handleChangeOption = (event, valueOption: DataForDropdown[]) => {\n    setSelectedManuOptions(valueOption)\n  }\n\n  const handleAddManu = () => {\n    const { manufacturers } = partForm.getValues()\n    const mapManufacturers = selectedManuOptions.map((manu) => ({\n      manufacturer_id: manu.value,\n      reference: '',\n      description: manu.description\n    }))\n    manufacturers.push(...mapManufacturers)\n    partForm.setValue('manufacturers', manufacturers)\n    setSelectedManuOptions([])\n  }\n\n  const handleRemoveManu = () => {\n    const { manufacturers } = partForm.getValues()\n    const newManus = manufacturers.filter((manu) => !selectedManu.includes(manu.manufacturer_id))\n    setSelectedManu([])\n    partForm.setValue('manufacturers', newManus)\n  }\n\n  const handleSelectManu = ({ selectionModel }) => {\n    setSelectedManu(selectionModel)\n  }\n\n  /**\n   * @param {number} id\n   * @param {string} value\n   */\n  const handleChangeReference = (id, value) => {\n    const { manufacturers } = partForm.getValues()\n    const newManufacturers = immer(manufacturers, (draft) => {\n      const index = _.findIndex(draft, { manufacturer_id: id })\n      draft[index].reference = value\n    })\n    partForm.setValue('manufacturers', newManufacturers)\n  }\n\n  const handleOpenAttrDialog =\n    ({ additional_attributes, manufacturer_id }) =>\n    () => {\n      setAttrDialog((prevState) =>\n        immer(prevState, (draft) => {\n          draft.open = true\n          draft.attributes = additional_attributes || {}\n          draft.manufacturerId = manufacturer_id\n        })\n      )\n    }\n\n  const handleChangeAttr = (attributes) => {\n    const { manufacturers } = partForm.getValues()\n    const newManufacturers = immer(manufacturers, (draft) => {\n      const index = _.findIndex(manufacturers, {\n        manufacturer_id: attrDialog.manufacturerId\n      })\n      if (index !== -1) {\n        draft[index].additional_attributes = attributes\n      }\n    })\n    partForm.setValue('manufacturers', newManufacturers)\n  }\n\n  const handleCloseAttrDialog = () => {\n    setAttrDialog((prevState) =>\n      immer(prevState, (draft) => {\n        draft.open = false\n      })\n    )\n  }\n\n  const handleCreateManu = () => {\n    const formData = partForm.getValues()\n    dispatch(partStore.sagaOpenManuDialog(formData))\n  }\n\n  return (\n    <>\n      <Grid container spacing={2}>\n        <Grid item xs={8}>\n          <AppAutocompleteAsync\n            disabled={Boolean(watchReferenceTo)}\n            label=\"Manufacturer\"\n            compName=\"manufacturer_list\"\n            value={selectedManuOptions}\n            multiple\n            limitTags={2}\n            disableCloseOnSelect\n            onChange={handleChangeOption}\n            getOptionDisabled={(option) => watchManufacturer.some((manu) => manu.manufacturer_id === option.value)}\n          />\n        </Grid>\n        <Grid item xs={4} className={classes.buttonGroup}>\n          <Button\n            startIcon={<CreateIcon />}\n            onClick={handleAddManu}\n            disabled={selectedManuOptions.length === 0 || Boolean(watchReferenceTo)}\n          >\n            {t('common:button.add')}\n          </Button>\n          <Box>\n            <Button startIcon={<CreateIcon />} onClick={handleCreateManu} disabled={loading}>\n              {t('common:button.new')}\n            </Button>\n            <Button\n              startIcon={<DeleteIcon />}\n              onClick={handleRemoveManu}\n              disabled={selectedManu.length === 0 || Boolean(watchReferenceTo)}\n            >\n              {t('common:button.remove')}\n            </Button>\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper elevation={2}>\n            <DataTable\n              checkboxSelection={!watchReferenceTo}\n              hideFooter\n              tableHeight={270}\n              selectionModel={selectedManu}\n              onSelectionModelChange={handleSelectManu}\n              getRowId={(param) => param.manufacturer_id}\n              rows={watchManufacturer}\n              onCellClick={(params, event) => {\n                if (params.field === 'manufacturer_id') {\n                  event.stopPropagation()\n                }\n              }}\n              columns={[\n                {\n                  ...columnProperties.defaultProperties,\n                  field: 'description',\n                  headerName: 'Manufacturers',\n                  flex: 0.3\n                },\n                {\n                  ...columnProperties.defaultProperties,\n                  ...columnProperties.editCell('Reference', !watchReferenceTo),\n                  field: 'reference',\n                  flex: 0.4,\n                  renderEditCell(params) {\n                    return (\n                      <DataTableTextField\n                        rules={yup.string().max(255, t('validation_message.manu_ref_max'))}\n                        params={params}\n                        onChangeValue={handleChangeReference}\n                      />\n                    )\n                  }\n                },\n                {\n                  ...columnProperties.defaultProperties,\n                  ...columnProperties.centerColumn,\n                  field: 'manufacturer_id',\n                  headerName: 'Attributes',\n                  flex: 0.3,\n                  renderCell(params) {\n                    return <ViewListIcon onClick={handleOpenAttrDialog(params.row as any)} />\n                  }\n                }\n              ]}\n            />\n          </Paper>\n        </Grid>\n      </Grid>\n      <DialogManufacturerAttr\n        open={attrDialog.open}\n        attributes={attrDialog.attributes}\n        onChange={handleChangeAttr}\n        onClose={handleCloseAttrDialog}\n      />\n    </>\n  )\n}\n\nexport default TabManufacturer\n"]},"metadata":{},"sourceType":"module"}