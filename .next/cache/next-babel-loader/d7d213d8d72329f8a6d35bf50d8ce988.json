{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { Menu, MenuItem, TextField, Button, Typography } from '@material-ui/core';\nimport NumbericTextField from 'react-number-format';\nimport { usePopupState, bindTrigger, bindMenu } from 'material-ui-popup-state/hooks';\nimport { NavigateNext as NavigateNextIcon, NavigateBefore as NavigateBeforeIcon, ArrowDropDown as ArrowDropDownIcon } from '@material-ui/icons';\nimport { usePagination } from '@material-ui/lab';\nimport useStyles from './styles';\n\nfunction DataTablePagination(props) {\n  var countSelectedItems = props.countSelectedItems,\n      page = props.page,\n      perPage = props.perPage,\n      totalItems = props.totalItems,\n      onChangePage = props.onChangePage,\n      onChangePerPage = props.onChangePerPage;\n  var classes = useStyles();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      numberGoToPage = _React$useState2[0],\n      setNumberGoToPage = _React$useState2[1];\n\n  var popupState = usePopupState({\n    variant: 'popover',\n    popupId: 'demoMenu'\n  });\n  var count = Math.ceil(totalItems / perPage);\n  var pagination = usePagination({\n    count: count,\n    page: page\n  });\n  React.useEffect(function () {\n    setNumberGoToPage(page);\n  }, [page]);\n\n  var handleChangePage = function handleChangePage(pageNumber) {\n    return function () {\n      if (pageNumber !== 0 && pageNumber <= count) {\n        onChangePage(pageNumber);\n      }\n    };\n  };\n\n  var handleChangePerpage = function handleChangePerpage(perPage) {\n    return function () {\n      popupState.close();\n      onChangePerPage(perPage);\n    };\n  };\n\n  var onChangeGoToPage = function onChangeGoToPage(values) {\n    setNumberGoToPage(values.floatValue);\n  };\n\n  var onGoToPage = function onGoToPage(event) {\n    event.preventDefault();\n    handleChangePage(numberGoToPage)();\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: classes.wrapCountSelected,\n      children: [countSelectedItems, \" SELECTED ITEM(S)\"]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: classes.wrapControlPaginate,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.perPage,\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          children: \"Rows per page:\"\n        }), /*#__PURE__*/_jsxs(\"div\", _objectSpread(_objectSpread({\n          className: classes.choosePerpage\n        }, bindTrigger(popupState)), {}, {\n          role: \"button\",\n          \"aria-expanded\": \"false\",\n          children: [/*#__PURE__*/_jsx(\"span\", {\n            children: perPage\n          }), /*#__PURE__*/_jsx(ArrowDropDownIcon, {})]\n        }))]\n      }), /*#__PURE__*/_jsx(\"nav\", {\n        className: classes.rootPageNumber,\n        \"aria-label\": \"pagination\",\n        children: /*#__PURE__*/_jsx(\"ul\", {\n          className: classes.pageList,\n          children: pagination.items.map(function (_ref, index) {\n            var page = _ref.page,\n                type = _ref.type,\n                selected = _ref.selected,\n                item = _objectWithoutProperties(_ref, [\"page\", \"type\", \"selected\"]);\n\n            var itemProps = {\n              key: \"pagination - \".concat(index),\n              onClick: handleChangePage(page),\n              style: {\n                cursor: 'pointer',\n                fontWeight: 500\n              }\n            };\n\n            if (type === 'end-ellipsis' || type === 'start-ellipsis') {\n              return /*#__PURE__*/_jsx(Typography, _objectSpread(_objectSpread({}, itemProps), {}, {\n                variant: \"body2\",\n                className: classes.threeDots,\n                component: \"li\",\n                children: \"...\"\n              }));\n            } else if (type === 'page') {\n              return /*#__PURE__*/_jsx(Typography, _objectSpread(_objectSpread(_objectSpread({}, item), itemProps), {}, {\n                \"aria-label\": \"page\",\n                variant: \"body2\",\n                component: \"li\",\n                className: clsx(classes.pageNumber, selected && classes.pageNumberSelected),\n                children: page\n              }));\n            } else if (type === 'next' || type === 'previous') {\n              return /*#__PURE__*/_jsx(Typography, _objectSpread(_objectSpread(_objectSpread({}, item), itemProps), {}, {\n                \"aria-label\": \"icon\",\n                className: clsx(classes.pageNumber, classes.nextPrevIcon, classes.nextIcon, item.disabled && classes.disabled),\n                component: \"li\",\n                children: type === 'next' ? /*#__PURE__*/_jsx(NavigateNextIcon, {}) : /*#__PURE__*/_jsx(NavigateBeforeIcon, {})\n              }));\n            } else {\n              return /*#__PURE__*/_jsx(Typography, _objectSpread(_objectSpread(_objectSpread({}, item), itemProps), {}, {\n                component: \"li\",\n                children: type\n              }));\n            }\n          })\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"go-to-page\",\n        children: /*#__PURE__*/_jsx(\"form\", {\n          onSubmit: onGoToPage,\n          children: /*#__PURE__*/_jsx(NumbericTextField, {\n            inputProps: {\n              'data-testid': 'gotopage'\n            },\n            \"aria-placeholder\": \"gotopage\",\n            style: {\n              width: 70\n            },\n            decimalScale: 0,\n            allowNegative: false,\n            value: numberGoToPage,\n            onValueChange: onChangeGoToPage,\n            customInput: TextField,\n            InputProps: {\n              endAdornment: /*#__PURE__*/_jsx(Button, {\n                className: classes.pageNumberItem,\n                onClick: onGoToPage,\n                \"aria-label\": \"go-to-page\",\n                children: \"Go\"\n              })\n            }\n          })\n        })\n      })]\n    }), /*#__PURE__*/_jsxs(Menu, _objectSpread(_objectSpread({}, bindMenu(popupState)), {}, {\n      getContentAnchorEl: null,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'left'\n      },\n      children: [/*#__PURE__*/_jsx(MenuItem, {\n        onClick: handleChangePerpage(10),\n        children: /*#__PURE__*/_jsx(Typography, {\n          variant: \"body2\",\n          children: \"10\"\n        })\n      }), /*#__PURE__*/_jsx(MenuItem, {\n        onClick: handleChangePerpage(20),\n        children: /*#__PURE__*/_jsx(Typography, {\n          variant: \"body2\",\n          children: \"20\"\n        })\n      }), /*#__PURE__*/_jsx(MenuItem, {\n        onClick: handleChangePerpage(50),\n        children: /*#__PURE__*/_jsx(Typography, {\n          variant: \"body2\",\n          children: \"50\"\n        })\n      }), /*#__PURE__*/_jsx(MenuItem, {\n        onClick: handleChangePerpage(100),\n        children: /*#__PURE__*/_jsx(Typography, {\n          variant: \"body2\",\n          children: \"100\"\n        })\n      }), /*#__PURE__*/_jsx(MenuItem, {\n        onClick: handleChangePerpage(200),\n        children: /*#__PURE__*/_jsx(Typography, {\n          variant: \"body2\",\n          children: \"200\"\n        })\n      })]\n    }))]\n  });\n}\n\nexport default DataTablePagination;","map":null,"metadata":{},"sourceType":"module"}