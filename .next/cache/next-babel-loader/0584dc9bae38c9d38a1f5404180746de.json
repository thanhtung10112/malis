{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchInitDataForList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchInitDataForCE),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(fetchDetail),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(fetchList),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(getListSaga),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(openCreateDialogSaga),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(openUpdateDialogSaga),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(createSaga),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(updateSaga),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(executeOperationSaga),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(closeDialogSaga),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(parameterTypeSaga);\n\nimport { takeEvery, put, putResolve } from 'redux-saga/effects';\nimport { select, call, all } from 'typed-redux-saga';\nimport { advancedFilterActions, summaryReportActions, commonStore, parameterTypeStore } from '@/store/reducers';\nimport parameterTypeApi from '@/apis/parameterType.api';\nexport function fetchInitDataForList() {\n  var data;\n  return _regeneratorRuntime.wrap(function fetchInitDataForList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return call(parameterTypeApi.getInitDataForList);\n\n        case 2:\n          data = _context.sent;\n          _context.next = 5;\n          return put(parameterTypeStore.actions.setInitDataForList(data));\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function fetchInitDataForCE() {\n  var _yield$call, permissions, initData;\n\n  return _regeneratorRuntime.wrap(function fetchInitDataForCE$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return call(parameterTypeApi.getInitDataForCE);\n\n        case 2:\n          _yield$call = _context2.sent;\n          permissions = _yield$call.permissions;\n          initData = _objectWithoutProperties(_yield$call, [\"permissions\"]);\n          _context2.next = 7;\n          return all([put(parameterTypeStore.actions.setInitDataForCE(initData)), put(parameterTypeStore.actions.setPermissions(permissions))]);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function fetchDetail(id) {\n  var _yield$call2, parameter_type;\n\n  return _regeneratorRuntime.wrap(function fetchDetail$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return call(parameterTypeApi.getDetail, id);\n\n        case 2:\n          _yield$call2 = _context3.sent;\n          parameter_type = _yield$call2.parameter_type;\n          _context3.next = 6;\n          return put(parameterTypeStore.actions.setDetail(parameter_type));\n\n        case 6:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\nexport function fetchList() {\n  var _yield$all, tableState, searchQuery, filterData, page, per_page, data;\n\n  return _regeneratorRuntime.wrap(function fetchList$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          return _context4.delegateYield(all({\n            tableState: select(commonStore.selectTableState),\n            searchQuery: select(commonStore.selectSearchQuery),\n            filterData: select(advancedFilterActions.selectFilterData)\n          }), \"t0\", 1);\n\n        case 1:\n          _yield$all = _context4.t0;\n          tableState = _yield$all.tableState;\n          searchQuery = _yield$all.searchQuery;\n          filterData = _yield$all.filterData;\n          page = tableState.page, per_page = tableState.per_page;\n          _context4.next = 8;\n          return call(parameterTypeApi.getList, _objectSpread({\n            per_page: per_page,\n            page: page,\n            s: searchQuery\n          }, filterData));\n\n        case 8:\n          data = _context4.sent;\n          _context4.next = 11;\n          return put(commonStore.actions.setTableState({\n            total_items: data.total_items\n          }));\n\n        case 11:\n          _context4.next = 13;\n          return put(parameterTypeStore.actions.setDataList(data.parameter_types));\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\nexport function getListSaga() {\n  var permissions;\n  return _regeneratorRuntime.wrap(function getListSaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 2:\n          _context5.prev = 2;\n          _context5.next = 5;\n          return call(fetchInitDataForList);\n\n        case 5:\n          return _context5.delegateYield(select(parameterTypeStore.selectPermissions), \"t0\", 6);\n\n        case 6:\n          permissions = _context5.t0;\n\n          if (!(permissions === null || permissions === void 0 ? void 0 : permissions.view)) {\n            _context5.next = 10;\n            break;\n          }\n\n          _context5.next = 10;\n          return call(fetchList);\n\n        case 10:\n          _context5.next = 16;\n          break;\n\n        case 12:\n          _context5.prev = 12;\n          _context5.t1 = _context5[\"catch\"](2);\n          _context5.next = 16;\n          return put(commonStore.actions.setError(_context5.t1));\n\n        case 16:\n          _context5.next = 18;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 18:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[2, 12]]);\n}\nexport function openCreateDialogSaga() {\n  return _regeneratorRuntime.wrap(function openCreateDialogSaga$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 2:\n          _context6.prev = 2;\n          _context6.next = 5;\n          return call(fetchInitDataForCE);\n\n        case 5:\n          _context6.next = 7;\n          return put(parameterTypeStore.actions.setDialogState({\n            open: true\n          }));\n\n        case 7:\n          _context6.next = 13;\n          break;\n\n        case 9:\n          _context6.prev = 9;\n          _context6.t0 = _context6[\"catch\"](2);\n          _context6.next = 13;\n          return put(commonStore.actions.setError(_context6.t0));\n\n        case 13:\n          _context6.next = 15;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 15:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[2, 9]]);\n}\nexport function openUpdateDialogSaga(_ref) {\n  var id;\n  return _regeneratorRuntime.wrap(function openUpdateDialogSaga$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          id = _ref.payload;\n          _context7.next = 3;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 3:\n          _context7.prev = 3;\n          _context7.next = 6;\n          return call(fetchInitDataForCE);\n\n        case 6:\n          _context7.next = 8;\n          return call(fetchDetail, id);\n\n        case 8:\n          _context7.next = 10;\n          return put(parameterTypeStore.actions.setDialogState({\n            open: true,\n            editMode: true\n          }));\n\n        case 10:\n          _context7.next = 16;\n          break;\n\n        case 12:\n          _context7.prev = 12;\n          _context7.t0 = _context7[\"catch\"](3);\n          _context7.next = 16;\n          return put(commonStore.actions.setError(_context7.t0));\n\n        case 16:\n          _context7.next = 18;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 18:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[3, 12]]);\n}\nexport function createSaga(_ref2) {\n  var payload, _yield$call3, message;\n\n  return _regeneratorRuntime.wrap(function createSaga$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          payload = _ref2.payload;\n          _context8.next = 3;\n          return put(parameterTypeStore.actions.setDialogStateLoading(true));\n\n        case 3:\n          _context8.prev = 3;\n          _context8.next = 6;\n          return call(parameterTypeApi.create, payload);\n\n        case 6:\n          _yield$call3 = _context8.sent;\n          message = _yield$call3.message;\n          _context8.next = 10;\n          return all([put(commonStore.actions.setSuccessMessage(message)), put(parameterTypeStore.actions.resetDetail())]);\n\n        case 10:\n          _context8.next = 16;\n          break;\n\n        case 12:\n          _context8.prev = 12;\n          _context8.t0 = _context8[\"catch\"](3);\n          _context8.next = 16;\n          return put(commonStore.actions.setError(_context8.t0));\n\n        case 16:\n          _context8.next = 18;\n          return put(parameterTypeStore.actions.setDialogStateLoading(false));\n\n        case 18:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[3, 12]]);\n}\nexport function updateSaga(_ref3) {\n  var payload, id, parameterType, _yield$call4, message;\n\n  return _regeneratorRuntime.wrap(function updateSaga$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          payload = _ref3.payload;\n          _context9.next = 3;\n          return put(parameterTypeStore.actions.setDialogStateLoading(true));\n\n        case 3:\n          _context9.prev = 3;\n          id = payload.id, parameterType = payload.parameterType;\n          _context9.next = 7;\n          return call(parameterTypeApi.update, id, parameterType);\n\n        case 7:\n          _yield$call4 = _context9.sent;\n          message = _yield$call4.message;\n          _context9.next = 11;\n          return call(closeDialogSaga);\n\n        case 11:\n          _context9.next = 13;\n          return put(commonStore.actions.setSuccessMessage(message));\n\n        case 13:\n          _context9.next = 19;\n          break;\n\n        case 15:\n          _context9.prev = 15;\n          _context9.t0 = _context9[\"catch\"](3);\n          _context9.next = 19;\n          return put(commonStore.actions.setError(_context9.t0));\n\n        case 19:\n          _context9.next = 21;\n          return put(parameterTypeStore.actions.setDialogStateLoading(false));\n\n        case 21:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[3, 15]]);\n}\nexport function executeOperationSaga(_ref4) {\n  var payload, operation, parameter_types, data;\n  return _regeneratorRuntime.wrap(function executeOperationSaga$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          payload = _ref4.payload;\n          _context10.next = 3;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 3:\n          _context10.prev = 3;\n          operation = payload.operation, parameter_types = payload.parameter_types;\n          _context10.next = 7;\n          return call(parameterTypeApi.executeOperation, operation, parameter_types);\n\n        case 7:\n          data = _context10.sent;\n\n          if (!(data.failed_count > 0)) {\n            _context10.next = 15;\n            break;\n          }\n\n          _context10.next = 11;\n          return put(summaryReportActions.setReportData(data));\n\n        case 11:\n          _context10.next = 13;\n          return put(summaryReportActions.setOpen(true));\n\n        case 13:\n          _context10.next = 17;\n          break;\n\n        case 15:\n          _context10.next = 17;\n          return put(commonStore.actions.setSuccessMessage(data.message));\n\n        case 17:\n          _context10.next = 19;\n          return call(fetchList);\n\n        case 19:\n          _context10.next = 25;\n          break;\n\n        case 21:\n          _context10.prev = 21;\n          _context10.t0 = _context10[\"catch\"](3);\n          _context10.next = 25;\n          return put(commonStore.actions.setError(_context10.t0));\n\n        case 25:\n          _context10.next = 27;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 27:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10, null, [[3, 21]]);\n}\nexport function closeDialogSaga() {\n  return _regeneratorRuntime.wrap(function closeDialogSaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 2:\n          _context11.prev = 2;\n          _context11.next = 5;\n          return putResolve(parameterTypeStore.actions.setDialogStateOpen(false));\n\n        case 5:\n          _context11.next = 7;\n          return call(fetchList);\n\n        case 7:\n          _context11.next = 9;\n          return all([put(parameterTypeStore.actions.resetDetail()), put(parameterTypeStore.actions.setDialogStateEditMode(false))]);\n\n        case 9:\n          _context11.next = 15;\n          break;\n\n        case 11:\n          _context11.prev = 11;\n          _context11.t0 = _context11[\"catch\"](2);\n          _context11.next = 15;\n          return put(commonStore.actions.setError(_context11.t0));\n\n        case 15:\n          _context11.next = 17;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 17:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[2, 11]]);\n}\n\nfunction parameterTypeSaga() {\n  return _regeneratorRuntime.wrap(function parameterTypeSaga$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeEvery(parameterTypeStore.extraActions.getList, getListSaga);\n\n        case 2:\n          _context12.next = 4;\n          return takeEvery(parameterTypeStore.extraActions.openCreateDialog, openCreateDialogSaga);\n\n        case 4:\n          _context12.next = 6;\n          return takeEvery(parameterTypeStore.extraActions.openUpdateDialog, openUpdateDialogSaga);\n\n        case 6:\n          _context12.next = 8;\n          return takeEvery(parameterTypeStore.extraActions.create, createSaga);\n\n        case 8:\n          _context12.next = 10;\n          return takeEvery(parameterTypeStore.extraActions.update, updateSaga);\n\n        case 10:\n          _context12.next = 12;\n          return takeEvery(parameterTypeStore.extraActions.executeOperation, executeOperationSaga);\n\n        case 12:\n          _context12.next = 14;\n          return takeEvery(parameterTypeStore.extraActions.closeDialog, closeDialogSaga);\n\n        case 14:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nexport default parameterTypeSaga;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/store/saga/parameterType.saga.ts"],"names":["fetchInitDataForList","fetchInitDataForCE","fetchDetail","fetchList","getListSaga","openCreateDialogSaga","openUpdateDialogSaga","createSaga","updateSaga","executeOperationSaga","closeDialogSaga","parameterTypeSaga","takeEvery","put","putResolve","select","call","all","advancedFilterActions","summaryReportActions","commonStore","parameterTypeStore","parameterTypeApi","getInitDataForList","data","actions","setInitDataForList","getInitDataForCE","permissions","initData","setInitDataForCE","setPermissions","id","getDetail","parameter_type","setDetail","tableState","selectTableState","searchQuery","selectSearchQuery","filterData","selectFilterData","page","per_page","getList","s","setTableState","total_items","setDataList","parameter_types","setLoadingPage","selectPermissions","view","setError","setDialogState","open","payload","editMode","setDialogStateLoading","create","message","setSuccessMessage","resetDetail","parameterType","update","operation","executeOperation","failed_count","setReportData","setOpen","setDialogStateOpen","setDialogStateEditMode","extraActions","openCreateDialog","openUpdateDialog","closeDialog"],"mappings":"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","sourcesContent":["import { takeEvery, put, putResolve } from 'redux-saga/effects'\n\nimport { select, call, all } from 'typed-redux-saga'\n\nimport { advancedFilterActions, summaryReportActions, commonStore, parameterTypeStore } from '@/store/reducers'\n\nimport parameterTypeApi from '@/apis/parameterType.api'\n\nexport function* fetchInitDataForList() {\n  const data = yield call(parameterTypeApi.getInitDataForList)\n  yield put(parameterTypeStore.actions.setInitDataForList(data))\n}\n\nexport function* fetchInitDataForCE() {\n  const { permissions, ...initData } = yield call(parameterTypeApi.getInitDataForCE)\n  yield all([\n    put(parameterTypeStore.actions.setInitDataForCE(initData)),\n    put(parameterTypeStore.actions.setPermissions(permissions))\n  ])\n}\n\nexport function* fetchDetail(id: number) {\n  const { parameter_type } = yield call(parameterTypeApi.getDetail, id)\n  yield put(parameterTypeStore.actions.setDetail(parameter_type))\n}\n\nexport function* fetchList() {\n  const { tableState, searchQuery, filterData } = yield* all({\n    tableState: select(commonStore.selectTableState),\n    searchQuery: select(commonStore.selectSearchQuery),\n    filterData: select(advancedFilterActions.selectFilterData)\n  })\n  const { page, per_page } = tableState\n  const data = yield call(parameterTypeApi.getList, {\n    per_page,\n    page,\n    s: searchQuery,\n    ...filterData\n  })\n  yield put(commonStore.actions.setTableState({ total_items: data.total_items }))\n  yield put(parameterTypeStore.actions.setDataList(data.parameter_types))\n}\n\nexport function* getListSaga() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchInitDataForList)\n    const permissions = yield* select(parameterTypeStore.selectPermissions)\n    if (permissions?.view) {\n      yield call(fetchList)\n    }\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nexport function* openCreateDialogSaga() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchInitDataForCE)\n    yield put(parameterTypeStore.actions.setDialogState({ open: true }))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nexport function* openUpdateDialogSaga({ payload: id }) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchInitDataForCE)\n    yield call(fetchDetail, id)\n    yield put(parameterTypeStore.actions.setDialogState({ open: true, editMode: true }))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nexport function* createSaga({ payload }) {\n  yield put(parameterTypeStore.actions.setDialogStateLoading(true))\n  try {\n    const { message } = yield call(parameterTypeApi.create, payload)\n    yield all([put(commonStore.actions.setSuccessMessage(message)), put(parameterTypeStore.actions.resetDetail())])\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(parameterTypeStore.actions.setDialogStateLoading(false))\n}\n\nexport function* updateSaga({ payload }) {\n  yield put(parameterTypeStore.actions.setDialogStateLoading(true))\n\n  try {\n    const { id, parameterType } = payload\n    const { message } = yield call(parameterTypeApi.update, id, parameterType)\n    yield call(closeDialogSaga)\n    yield put(commonStore.actions.setSuccessMessage(message))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n\n  yield put(parameterTypeStore.actions.setDialogStateLoading(false))\n}\n\nexport function* executeOperationSaga({ payload }) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    const { operation, parameter_types } = payload\n    const data = yield call(parameterTypeApi.executeOperation, operation, parameter_types)\n    if (data.failed_count > 0) {\n      yield put(summaryReportActions.setReportData(data))\n      yield put(summaryReportActions.setOpen(true))\n    } else {\n      yield put(commonStore.actions.setSuccessMessage(data.message))\n    }\n    yield call(fetchList)\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nexport function* closeDialogSaga() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield putResolve(parameterTypeStore.actions.setDialogStateOpen(false))\n    yield call(fetchList)\n    yield all([\n      put(parameterTypeStore.actions.resetDetail()),\n      put(parameterTypeStore.actions.setDialogStateEditMode(false))\n    ])\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* parameterTypeSaga() {\n  yield takeEvery(parameterTypeStore.extraActions.getList, getListSaga)\n  yield takeEvery(parameterTypeStore.extraActions.openCreateDialog, openCreateDialogSaga)\n  yield takeEvery(parameterTypeStore.extraActions.openUpdateDialog, openUpdateDialogSaga)\n  yield takeEvery(parameterTypeStore.extraActions.create, createSaga)\n  yield takeEvery(parameterTypeStore.extraActions.update, updateSaga)\n  yield takeEvery(parameterTypeStore.extraActions.executeOperation, executeOperationSaga)\n  yield takeEvery(parameterTypeStore.extraActions.closeDialog, closeDialogSaga)\n}\n\nexport default parameterTypeSaga\n"]},"metadata":{},"sourceType":"module"}