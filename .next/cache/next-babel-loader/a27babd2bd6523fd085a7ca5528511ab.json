{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice, createAction, createSelector } from '@reduxjs/toolkit';\nimport { setCookie, destroyCookie } from 'nookies';\nimport Router from 'next/router';\nimport { actionTypes } from '@/utils/constant';\nexport var name = 'auth';\nexport var resetState = createAction(\"\".concat(name, \"/RESET_STATE\"));\nexport var initialState = {\n  access_token: '',\n  loading: false,\n  unauthorized: false,\n  loadingAuth: false,\n  profile: {\n    user_id: '',\n    first_name: '',\n    last_name: '',\n    email: '',\n    valid_until: '',\n    user_name: '',\n    updated_at: '',\n    group_membership: [],\n    default_language_id: null\n  },\n  pwdDialogState: {\n    loading: false,\n    open: false\n  },\n  settings: {\n    initData: {\n      parameters: {\n        PAGES: [],\n        PLLA: []\n      },\n      timezones: []\n    },\n    detail: {\n      default_language: null,\n      home_page: null,\n      time_zone: ''\n    }\n  }\n};\nvar authSlice = createSlice({\n  name: name,\n  initialState: initialState,\n  reducers: {\n    saveTokenLogin: function saveTokenLogin(state, _ref) {\n      var payload = _ref.payload;\n      state.access_token = payload.access_token;\n\n      if (payload.remember) {\n        setCookie(null, 'token', payload.access_token, {\n          maxAge: 60 * 60 * 24 // 1 day\n\n        });\n      } else {\n        setCookie(null, 'token', payload.access_token);\n      }\n\n      setCookie(null, 'redirect_to', payload.redirect_to, {\n        maxAge: 60 * 60 * 24 * 365\n      });\n      Router.push(payload.redirect_to);\n    },\n    setLoading: function setLoading(state, _ref2) {\n      var payload = _ref2.payload;\n      state.loading = payload;\n    },\n    setUnauthorized: function setUnauthorized(state, _ref3) {\n      var payload = _ref3.payload;\n      state.unauthorized = payload;\n    },\n    setProfile: function setProfile(state, _ref4) {\n      var payload = _ref4.payload;\n      state.profile = payload;\n    },\n    logout: function logout(state) {\n      destroyCookie(null, 'token');\n      destroyCookie(null, 'redirect_to');\n      destroyCookie(null, 'current_job_id');\n      state.unauthorized = false;\n      state.access_token = '';\n      Router.push('/login');\n    },\n    setPwDialogState: function setPwDialogState(state, _ref5) {\n      var payload = _ref5.payload;\n      state.pwdDialogState = _objectSpread(_objectSpread({}, state.pwdDialogState), payload);\n    },\n    setProfileAvatar: function setProfileAvatar(state, _ref6) {\n      var payload = _ref6.payload;\n      state.profile.avatar = payload;\n    },\n    setSettingInitData: function setSettingInitData(state, _ref7) {\n      var payload = _ref7.payload;\n      state.settings.initData = payload;\n    },\n    setLoadingAuth: function setLoadingAuth(state, _ref8) {\n      var payload = _ref8.payload;\n      state.loadingAuth = payload;\n    },\n    setSettingDetail: function setSettingDetail(state, _ref9) {\n      var payload = _ref9.payload;\n      state.settings.detail = _objectSpread(_objectSpread({}, state.settings.detail), payload);\n    },\n    setDefaultLanguage: function setDefaultLanguage(state, _ref10) {\n      var payload = _ref10.payload;\n      state.profile.default_language_id = payload;\n    }\n  },\n  extraReducers: _defineProperty({}, resetState.type, function () {\n    return initialState;\n  })\n}); // Actions\n\nvar actions = authSlice.actions; // Saga actions\n\nexport { actions };\nexport var sagaLogin = createAction(\"\".concat(name, \"/\").concat(actionTypes.LOGIN));\nexport var sagaGetProfile = createAction(\"\".concat(name, \"/\").concat(actionTypes.GET_PROFILE));\nexport var sagaChangePassword = createAction(\"\".concat(name, \"/\").concat(actionTypes.CHANGE_PASSWORD));\nexport var sagaGetSettings = createAction(\"\".concat(name, \"/GET_SETTINGS\"));\nexport var sagaSaveSettings = createAction(\"\".concat(name, \"/SAVE_SETTINGS\"));\nexport var sagaLogout = createAction(\"\".concat(name, \"/\").concat(actionTypes.LOGOUT));\nexport var selectState = function selectState(state) {\n  return state.auth;\n};\nexport var selectUnauthorized = createSelector(selectState, function (state) {\n  return state.unauthorized;\n});\nexport var selectProfile = createSelector(selectState, function (state) {\n  return state.profile;\n});\nexport var selectPwdDialogState = createSelector(selectState, function (state) {\n  return state.pwdDialogState;\n});\nexport var selectSettings = createSelector(selectState, function (state) {\n  return state.settings;\n});\nexport var selectSettingsParameters = createSelector(selectState, function (state) {\n  return state.settings.initData.parameters;\n});\nexport var selectLoadingAuth = createSelector(selectState, function (state) {\n  return state.loadingAuth;\n});\nexport default authSlice;","map":null,"metadata":{},"sourceType":"module"}