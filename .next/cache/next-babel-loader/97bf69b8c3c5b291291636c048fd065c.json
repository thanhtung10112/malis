{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { If, Else, Then } from 'react-if';\nimport { DialogManufacturerCreateEdit } from '@/components';\nimport DialogItem from './Item';\nimport DialogAssembly from './Assembly';\nimport isAssembly from '@/utils/isAssembly';\nimport { partStore } from '@/store/reducers';\n\nvar PartDialog = function PartDialog() {\n  var dispatch = useDispatch();\n  var partList = useSelector(partStore.selectPartList);\n  var manu = useSelector(partStore.selectPartManu);\n\n  var handleSubmit = function handleSubmit(entity) {\n    return function (id, formData) {\n      if (id) {\n        dispatch(partStore.sagaUpdate({\n          entity: entity,\n          id: id,\n          formData: formData\n        }));\n      } else {\n        dispatch(partStore.sagaCreate({\n          entity: entity,\n          formData: formData\n        }));\n      }\n    };\n  };\n\n  var handleClosePartDialog = function handleClosePartDialog(entity) {\n    return function () {\n      dispatch(partStore.sagaCloseDialog(entity));\n    };\n  };\n\n  var handleChangeTab = function handleChangeTab(event, nextTab) {\n    dispatch(partStore.actions.setPartTab(nextTab));\n  };\n\n  var renderPartDialog = useCallback(function () {\n    return partList.map(function (_ref) {\n      var detail = _ref.detail,\n          partProps = _objectWithoutProperties(_ref, [\"detail\"]);\n\n      return /*#__PURE__*/_jsxs(If, {\n        condition: isAssembly(detail),\n        children: [/*#__PURE__*/_jsx(Then, {\n          children: /*#__PURE__*/_jsx(DialogAssembly, _objectSpread(_objectSpread({}, partProps), {}, {\n            detail: detail,\n            onSubmit: handleSubmit('assembly'),\n            onClose: handleClosePartDialog('assembly'),\n            onChangeTab: handleChangeTab\n          }))\n        }), /*#__PURE__*/_jsx(Else, {\n          children: /*#__PURE__*/_jsx(DialogItem, _objectSpread(_objectSpread({}, partProps), {}, {\n            detail: detail,\n            onSubmit: handleSubmit('item'),\n            onClose: handleClosePartDialog('item'),\n            onChangeTab: handleChangeTab\n          }))\n        })]\n      }, detail.id);\n    });\n  }, [partList]);\n\n  var handleSubmitManu = function handleSubmitManu(id, formData) {\n    dispatch(partStore.sagaCreateManu(formData));\n  };\n\n  var handleCloseManuDialog = function handleCloseManuDialog() {\n    dispatch(partStore.sagaCloseManuDialog());\n  };\n\n  var handleGetCodeManu = function handleGetCodeManu(currentData) {\n    dispatch(partStore.sagaGetManuId(currentData));\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [renderPartDialog(), /*#__PURE__*/_jsx(DialogManufacturerCreateEdit, _objectSpread(_objectSpread({}, manu.dialogState), {}, {\n      onSubmit: handleSubmitManu,\n      onClose: handleCloseManuDialog,\n      onGetNextCode: handleGetCodeManu,\n      permissions: manu.initData.permissions,\n      wikiPage: manu.initData.wiki_page,\n      detail: manu.detail\n    }))]\n  });\n};\n\nexport default PartDialog;","map":null,"metadata":{},"sourceType":"module"}