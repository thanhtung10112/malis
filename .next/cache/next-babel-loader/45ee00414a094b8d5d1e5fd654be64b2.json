{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState, useEffect, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'next-i18next';\nimport { useForm } from 'react-hook-form';\nimport { Grid } from '@material-ui/core';\nimport { TableExtendedProperties, DialogMain, AppTabHistoryLog, FormControllerTabs, BtnHelp } from '@/components/index';\nimport TabGeneral from './TabGeneral';\nimport TabSpecialties from './TabSpecialties';\nimport _ from 'lodash';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport getValidationSchema from './validationSchema';\nimport { locationStore } from '@/store/reducers';\nimport { removalProperties } from '@/utils/constant';\n\nfunction LocationDialog() {\n  var _useTranslation = useTranslation('location'),\n      t = _useTranslation.t;\n\n  var validationSchema = useMemo(function () {\n    return getValidationSchema(t);\n  }, []);\n  var locationForm = useForm({\n    shouldUnregister: false,\n    resolver: yupResolver(validationSchema)\n  });\n\n  var _useState = useState(0),\n      tab = _useState[0],\n      setTab = _useState[1];\n\n  var dispatch = useDispatch();\n  var dialogState = useSelector(locationStore.selectDialogState);\n  var locationDetail = useSelector(locationStore.selectDetail);\n\n  var _useSelector = useSelector(locationStore.selectInitDataForCE),\n      parameters = _useSelector.parameters,\n      wiki_page = _useSelector.wiki_page;\n\n  var permissions = useSelector(locationStore.selectPermissions);\n  var titleDialog = dialogState.editMode ? t('form.title.update_location') : t('form.title.create_location');\n  useEffect(function () {\n    locationForm.reset(locationDetail);\n    setTab(0);\n  }, [locationDetail]);\n\n  var onChangeTab = function onChangeTab(_, newValue) {\n    setTab(newValue);\n  };\n\n  var onHandleSubmit = locationForm.handleSubmit(function (data) {\n    var payload = _.omit(data, [].concat(_toConsumableArray(removalProperties), ['use_in_job']));\n\n    if (dialogState.editMode) {\n      dispatch(locationStore.sagaUpdate({\n        location: payload,\n        id: data.id\n      }));\n    } else {\n      dispatch(locationStore.sagaCreate(payload));\n    }\n  });\n\n  var onClose = function onClose() {\n    locationForm.clearErrors();\n    dispatch(locationStore.sagaCloseDialog());\n  };\n\n  var handleChangeHistoryLogs = function handleChangeHistoryLogs(data) {\n    dispatch(locationStore.actions.setHistoryLogs(data));\n  };\n\n  var generalTab = {\n    label: t('common:tab.general'),\n    errorKey: ['location_id', 'language', 'location_type', 'name', 'office_email', 'office_zip', 'comment', 'office_email', 'office_zip', 'workshop_email'],\n    panel: /*#__PURE__*/_jsx(TabGeneral, {})\n  };\n  var specialtiesTab = {\n    label: t('form.tab.specialties'),\n    panel: /*#__PURE__*/_jsx(TabSpecialties, {})\n  };\n  var extendedPropertiesTab = {\n    label: t('common:tab.extended_properties'),\n    panel: /*#__PURE__*/_jsx(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsx(TableExtendedProperties, {\n          control: locationForm.control,\n          name: \"additional_attributes\",\n          tableHeight: 505,\n          propertiesList: parameters.LOAT,\n          editMode: dialogState.editMode,\n          parameterName: \"LOAT\"\n        })\n      })\n    })\n  };\n  var historyTab = {\n    label: t('common:tab.history'),\n    panel: /*#__PURE__*/_jsx(AppTabHistoryLog, {\n      isOpenDialog: dialogState.open,\n      data: dialogState.historyLogs,\n      onChange: handleChangeHistoryLogs,\n      entityId: locationDetail.id,\n      entity: \"location\"\n    }),\n    disabled: !dialogState.editMode\n  };\n  var tabs = [generalTab, specialtiesTab, extendedPropertiesTab, historyTab];\n  return /*#__PURE__*/_jsx(DialogMain, {\n    open: dialogState.open,\n    title: /*#__PURE__*/_jsx(BtnHelp, {\n      title: titleDialog,\n      href: wiki_page\n    }),\n    loading: dialogState.loading,\n    onOk: onHandleSubmit,\n    onClose: onClose,\n    height: dialogState.editMode ? 627 : 580,\n    okButtonProps: {\n      disabled: dialogState.loading || !(permissions === null || permissions === void 0 ? void 0 : permissions.edit) && dialogState.editMode\n    },\n    okText: dialogState.editMode ? t('common:button.update') : t('common:button.create'),\n    children: /*#__PURE__*/_jsx(FormControllerTabs, {\n      value: tab,\n      onChange: onChangeTab,\n      form: locationForm,\n      tabs: tabs\n    })\n  });\n}\n\nexport default LocationDialog;","map":null,"metadata":{},"sourceType":"module"}