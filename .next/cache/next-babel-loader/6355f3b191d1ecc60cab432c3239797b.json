{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { createWrapper } from 'next-redux-wrapper';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '@/store/saga/rootSaga';\nimport rootReducer from '@/store/reducers/rootReducer';\nexport var makeStore = function makeStore() {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware];\n  var store = configureStore({\n    reducer: rootReducer,\n    middleware: [].concat(_toConsumableArray(getDefaultMiddleware({\n      thunk: false,\n      immutableCheck: false\n    })), middlewares),\n    devTools: process.env.NEXT_PUBLIC_MODE === 'develop'\n  });\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\nexport var wrapper = createWrapper(makeStore, {\n  debug: process.env.NEXT_PUBLIC_MODE === 'develop'\n});","map":null,"metadata":{},"sourceType":"module"}