{"ast":null,"code":"import React from 'react';\nimport _ from 'lodash';\n\nfunction useSSE(operationId) {\n  const domain = process.env.NEXT_PUBLIC_BACKEND_URL || 'http://localhost:5000/';\n  const sseConnection = React.useRef(null);\n  const [dataSSE, setDataSSE] = React.useState({\n    message: 'Initializing...',\n    status: null,\n    operation_result: null\n  });\n\n  const backgroundJobListener = event => {\n    const response = JSON.parse(event.data);\n    setDataSSE(response);\n\n    if (response.status === 'SUCCESS' || response.status === 'ERROR') {\n      sseConnection.current.removeEventListener(operationId, backgroundJobListener);\n      sseConnection.current.close();\n      sseConnection.current = null;\n    }\n  };\n\n  React.useEffect(() => {\n    if (_.isEmpty(operationId)) {\n      return null;\n    }\n\n    if (!sseConnection.current) {\n      sseConnection.current = new EventSource(`${domain}background_stream`);\n    }\n\n    sseConnection.current.addEventListener(operationId, backgroundJobListener);\n  }, [operationId]);\n  return {\n    dataSSE,\n    setDataSSE\n  };\n}\n\nexport default useSSE;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/hooks/useSSE.ts"],"names":["React","_","useSSE","operationId","domain","process","env","NEXT_PUBLIC_BACKEND_URL","sseConnection","useRef","dataSSE","setDataSSE","useState","message","status","operation_result","backgroundJobListener","event","response","JSON","parse","data","current","removeEventListener","close","useEffect","isEmpty","EventSource","addEventListener"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,CAAP,MAAc,QAAd;;AAIA,SAASC,MAAT,CAAgBC,WAAhB,EAAqC;AACnC,QAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,uBAAZ,IAAuC,wBAAtD;AACA,QAAMC,aAAa,GAAGR,KAAK,CAACS,MAAN,CAA0B,IAA1B,CAAtB;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,KAAK,CAACY,QAAN,CAAoC;AAChEC,IAAAA,OAAO,EAAE,iBADuD;AAEhEC,IAAAA,MAAM,EAAE,IAFwD;AAGhEC,IAAAA,gBAAgB,EAAE;AAH8C,GAApC,CAA9B;;AAMA,QAAMC,qBAAqB,GAAIC,KAAD,IAAW;AACvC,UAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACI,IAAjB,CAAjB;AACAV,IAAAA,UAAU,CAACO,QAAD,CAAV;;AACA,QAAIA,QAAQ,CAACJ,MAAT,KAAoB,SAApB,IAAiCI,QAAQ,CAACJ,MAAT,KAAoB,OAAzD,EAAkE;AAChEN,MAAAA,aAAa,CAACc,OAAd,CAAsBC,mBAAtB,CAA0CpB,WAA1C,EAAuDa,qBAAvD;AACAR,MAAAA,aAAa,CAACc,OAAd,CAAsBE,KAAtB;AACAhB,MAAAA,aAAa,CAACc,OAAd,GAAwB,IAAxB;AACD;AACF,GARD;;AAUAtB,EAAAA,KAAK,CAACyB,SAAN,CAAgB,MAAM;AACpB,QAAIxB,CAAC,CAACyB,OAAF,CAAUvB,WAAV,CAAJ,EAA4B;AAC1B,aAAO,IAAP;AACD;;AACD,QAAI,CAACK,aAAa,CAACc,OAAnB,EAA4B;AAC1Bd,MAAAA,aAAa,CAACc,OAAd,GAAwB,IAAIK,WAAJ,CAAiB,GAAEvB,MAAO,mBAA1B,CAAxB;AACD;;AACDI,IAAAA,aAAa,CAACc,OAAd,CAAsBM,gBAAtB,CAAuCzB,WAAvC,EAAoDa,qBAApD;AACD,GARD,EAQG,CAACb,WAAD,CARH;AAUA,SAAO;AAAEO,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAP;AACD;;AAED,eAAeT,MAAf","sourcesContent":["import React from 'react'\n\nimport _ from 'lodash'\n\nimport type { BackgroundJobResult } from '@/types/BackgroundJob'\n\nfunction useSSE(operationId: string) {\n  const domain = process.env.NEXT_PUBLIC_BACKEND_URL || 'http://localhost:5000/'\n  const sseConnection = React.useRef<EventSource>(null)\n\n  const [dataSSE, setDataSSE] = React.useState<BackgroundJobResult>({\n    message: 'Initializing...',\n    status: null,\n    operation_result: null\n  })\n\n  const backgroundJobListener = (event) => {\n    const response = JSON.parse(event.data) as BackgroundJobResult\n    setDataSSE(response)\n    if (response.status === 'SUCCESS' || response.status === 'ERROR') {\n      sseConnection.current.removeEventListener(operationId, backgroundJobListener)\n      sseConnection.current.close()\n      sseConnection.current = null\n    }\n  }\n\n  React.useEffect(() => {\n    if (_.isEmpty(operationId)) {\n      return null\n    }\n    if (!sseConnection.current) {\n      sseConnection.current = new EventSource(`${domain}background_stream`)\n    }\n    sseConnection.current.addEventListener(operationId, backgroundJobListener)\n  }, [operationId])\n\n  return { dataSSE, setDataSSE }\n}\n\nexport default useSSE\n"]},"metadata":{},"sourceType":"module"}