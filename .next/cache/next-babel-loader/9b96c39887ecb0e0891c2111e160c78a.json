{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice, createAction, createSelector } from '@reduxjs/toolkit';\nimport { actionTypes } from '@/utils/constant';\nexport var name = 'currency';\nexport var resetState = createAction(\"\".concat(name, \"/\").concat(actionTypes.RESET_STATE));\nexport var currencyDetail = {\n  currency_id: '',\n  description: '',\n  multiplier: null,\n  rate: '',\n  round_to: null,\n  base_currency: null,\n  is_base_rate_mode: false\n};\nvar initialState = {\n  dataList: [],\n  initDataForList: {\n    permissions: {\n      currency: null\n    },\n    base_currency_list: [],\n    user_base_currency: {\n      id: null,\n      description: '',\n      currency_id: ''\n    },\n    wiki_page: '',\n    column_tooltips: {}\n  },\n  initDataForCE: {\n    multiplier_options: [],\n    round_to_options: [],\n    base_currency: {\n      currency_id: '',\n      id: null\n    },\n    wiki_page: ''\n  },\n  detail: currencyDetail,\n  dialogState: {\n    open: false,\n    loading: false,\n    historyLogs: []\n  }\n};\nvar currencySlice = createSlice({\n  name: name,\n  initialState: initialState,\n  reducers: {\n    setDialogState: function setDialogState(state, _ref) {\n      var payload = _ref.payload;\n      state.dialogState = _objectSpread(_objectSpread({}, state.dialogState), payload);\n    },\n    setDialogStateOpen: function setDialogStateOpen(state, _ref2) {\n      var payload = _ref2.payload;\n      state.dialogState.open = payload;\n    },\n    setDialogStateLoading: function setDialogStateLoading(state, _ref3) {\n      var payload = _ref3.payload;\n      state.dialogState.loading = payload;\n    },\n    setHistoryLogs: function setHistoryLogs(state, _ref4) {\n      var payload = _ref4.payload;\n      state.dialogState.historyLogs = payload;\n    },\n    setDataList: function setDataList(state, _ref5) {\n      var payload = _ref5.payload;\n      state.dataList = payload;\n    },\n    setInitDataForList: function setInitDataForList(state, _ref6) {\n      var payload = _ref6.payload;\n      state.initDataForList = payload;\n    },\n    setInitDataForCE: function setInitDataForCE(state, _ref7) {\n      var payload = _ref7.payload;\n      state.initDataForCE = payload;\n    },\n    setDetail: function setDetail(state, _ref8) {\n      var payload = _ref8.payload;\n      state.detail = _objectSpread(_objectSpread({}, state.detail), payload);\n    },\n    setPermissions: function setPermissions(state, _ref9) {\n      var payload = _ref9.payload;\n      state.initDataForList.permissions.currency = payload;\n    },\n    setUserBaseCurrency: function setUserBaseCurrency(state, _ref10) {\n      var payload = _ref10.payload;\n      state.initDataForList.user_base_currency = payload;\n    },\n    resetDetail: function resetDetail(state) {\n      state.detail = _objectSpread({}, currencyDetail);\n    }\n  },\n  extraReducers: _defineProperty({}, resetState.type, function () {\n    return initialState;\n  })\n});\nvar actions = currencySlice.actions; // Saga actions\n\nexport { actions };\nexport var sagaGetList = createAction(\"\".concat(name, \"/\").concat(actionTypes.GET_LIST));\nexport var sagaOpenCreateDialog = createAction(\"\".concat(name, \"/\").concat(actionTypes.OPEN_CREATE_DIALOG));\nexport var sagaOpenUpdateDialog = createAction(\"\".concat(name, \"/\").concat(actionTypes.OPEN_UPDATE_DIALOG));\nexport var sagaCloseDialog = createAction(\"\".concat(name, \"/\").concat(actionTypes.CLOSE_DIALOG));\nexport var sagaCreate = createAction(\"\".concat(name, \"/\").concat(actionTypes.CREATE));\nexport var sagaUpdate = createAction(\"\".concat(name, \"/\").concat(actionTypes.UPDATE));\nexport var sagaChangeUserCurrency = createAction(\"\".concat(name, \"/CHANGE_USER_CURRENCY\"));\nexport var selectState = function selectState(state) {\n  return state[name];\n};\nexport var selectDataList = createSelector(selectState, function (state) {\n  return state.dataList;\n});\nexport var selectInitDataForList = createSelector(selectState, function (state) {\n  return state.initDataForList;\n});\nexport var selectDialogState = createSelector(selectState, function (state) {\n  return state.dialogState;\n});\nexport var selectInitDataForCE = createSelector(selectState, function (state) {\n  return state.initDataForCE;\n});\nexport var selectDetail = createSelector(selectState, function (state) {\n  return state.detail;\n});\nexport var selectPermissions = createSelector(selectState, function (state) {\n  return state.initDataForList.permissions.currency;\n});\nexport var selectUserBaseCurrency = createSelector(selectState, function (state) {\n  return state.initDataForList.user_base_currency;\n});\nexport default currencySlice;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/store/reducers/currency.reducer.ts"],"names":["createSlice","createAction","createSelector","actionTypes","name","resetState","RESET_STATE","currencyDetail","currency_id","description","multiplier","rate","round_to","base_currency","is_base_rate_mode","initialState","dataList","initDataForList","permissions","currency","base_currency_list","user_base_currency","id","wiki_page","column_tooltips","initDataForCE","multiplier_options","round_to_options","detail","dialogState","open","loading","historyLogs","currencySlice","reducers","setDialogState","state","payload","setDialogStateOpen","setDialogStateLoading","setHistoryLogs","setDataList","setInitDataForList","setInitDataForCE","setDetail","setPermissions","setUserBaseCurrency","resetDetail","extraReducers","type","actions","sagaGetList","GET_LIST","sagaOpenCreateDialog","OPEN_CREATE_DIALOG","sagaOpenUpdateDialog","OPEN_UPDATE_DIALOG","sagaCloseDialog","CLOSE_DIALOG","sagaCreate","CREATE","sagaUpdate","UPDATE","sagaChangeUserCurrency","selectState","selectDataList","selectInitDataForList","selectDialogState","selectInitDataForCE","selectDetail","selectPermissions","selectUserBaseCurrency"],"mappings":"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","sourcesContent":["import { createSlice, createAction, PayloadAction, createSelector } from '@reduxjs/toolkit'\nimport { actionTypes } from '@/utils/constant'\n\nimport type { RootReducerType } from './rootReducer'\nimport type {\n  CurrencyInitDataForCE,\n  CurrencyDetail,\n  CurrencyPermissions,\n  CurrencyInitDataForList,\n  BaseCurrency\n} from '@/types/Currency'\nimport type { Entity, HistoryLog } from '@/types/Common'\n\nexport const name: Entity = 'currency'\nexport const resetState = createAction(`${name}/${actionTypes.RESET_STATE}`)\n\nexport const currencyDetail = {\n  currency_id: '',\n  description: '',\n  multiplier: null,\n  rate: '',\n  round_to: null,\n  base_currency: null,\n  is_base_rate_mode: false\n} as CurrencyDetail\n\nconst initialState = {\n  dataList: [] as CurrencyDetail[],\n  initDataForList: {\n    permissions: {\n      currency: null\n    },\n    base_currency_list: [],\n    user_base_currency: {\n      id: null,\n      description: '',\n      currency_id: ''\n    },\n    wiki_page: '',\n    column_tooltips: {}\n  } as CurrencyInitDataForList,\n  initDataForCE: {\n    multiplier_options: [],\n    round_to_options: [],\n    base_currency: {\n      currency_id: '',\n      id: null\n    },\n    wiki_page: ''\n  } as CurrencyInitDataForCE,\n  detail: currencyDetail,\n  dialogState: {\n    open: false,\n    loading: false,\n    historyLogs: [] as HistoryLog[]\n  }\n}\n\nconst currencySlice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setDialogState(state, { payload }: PayloadAction<Partial<typeof initialState.dialogState>>) {\n      state.dialogState = {\n        ...state.dialogState,\n        ...payload\n      }\n    },\n    setDialogStateOpen(state, { payload }: PayloadAction<boolean>) {\n      state.dialogState.open = payload\n    },\n    setDialogStateLoading(state, { payload }: PayloadAction<boolean>) {\n      state.dialogState.loading = payload\n    },\n    setHistoryLogs(state, { payload }: PayloadAction<HistoryLog[]>) {\n      state.dialogState.historyLogs = payload\n    },\n    setDataList(state, { payload }: PayloadAction<CurrencyDetail[]>) {\n      state.dataList = payload\n    },\n    setInitDataForList(state, { payload }: PayloadAction<CurrencyInitDataForList>) {\n      state.initDataForList = payload\n    },\n    setInitDataForCE(state, { payload }: PayloadAction<CurrencyInitDataForCE>) {\n      state.initDataForCE = payload\n    },\n    setDetail(state, { payload }: PayloadAction<Partial<CurrencyDetail>>) {\n      state.detail = {\n        ...state.detail,\n        ...payload\n      }\n    },\n    setPermissions(state, { payload }: PayloadAction<CurrencyPermissions>) {\n      state.initDataForList.permissions.currency = payload\n    },\n    setUserBaseCurrency(state, { payload }: PayloadAction<BaseCurrency>) {\n      state.initDataForList.user_base_currency = payload\n    },\n    resetDetail(state) {\n      state.detail = {\n        ...currencyDetail\n      }\n    }\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState\n    }\n  }\n})\n\nexport const { actions } = currencySlice\n\n// Saga actions\n\nexport const sagaGetList = createAction(`${name}/${actionTypes.GET_LIST}`)\nexport const sagaOpenCreateDialog = createAction(`${name}/${actionTypes.OPEN_CREATE_DIALOG}`)\nexport const sagaOpenUpdateDialog = createAction<number>(`${name}/${actionTypes.OPEN_UPDATE_DIALOG}`)\nexport const sagaCloseDialog = createAction(`${name}/${actionTypes.CLOSE_DIALOG}`)\nexport const sagaCreate = createAction<CurrencyDetail>(`${name}/${actionTypes.CREATE}`)\nexport const sagaUpdate = createAction<{ id: number; formData: CurrencyDetail }>(`${name}/${actionTypes.UPDATE}`)\nexport const sagaChangeUserCurrency = createAction<BaseCurrency>(`${name}/CHANGE_USER_CURRENCY`)\n\nexport const selectState = (state: RootReducerType) => state[name]\nexport const selectDataList = createSelector(selectState, (state) => state.dataList)\nexport const selectInitDataForList = createSelector(selectState, (state) => state.initDataForList)\nexport const selectDialogState = createSelector(selectState, (state) => state.dialogState)\nexport const selectInitDataForCE = createSelector(selectState, (state) => state.initDataForCE)\nexport const selectDetail = createSelector(selectState, (state) => state.detail)\nexport const selectPermissions = createSelector(selectState, (state) => state.initDataForList.permissions.currency)\nexport const selectUserBaseCurrency = createSelector(selectState, (state) => state.initDataForList.user_base_currency)\n\nexport default currencySlice\n"]},"metadata":{},"sourceType":"module"}