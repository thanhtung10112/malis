{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Job\\\\TransferList\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Card, CardHeader, Checkbox, List, ListItem, ListItemText, Grid, Button, ListItemIcon } from '@material-ui/core';\nimport { DragIndicator as DragIndicatorIcon } from '@material-ui/icons';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { DialogMain } from '@/components';\nimport _ from 'lodash';\nimport immer from 'immer';\nimport useDraggableInPortal from '@/hooks/useDraggableInPortal';\nimport useStyles from './styles';\n\nfunction not(a, b) {\n  return a.filter(function (value) {\n    return b.findIndex(function (item) {\n      return value.id === item.id;\n    }) === -1;\n  });\n}\n\nfunction reorder(list, startIndex, endIndex) {\n  var result = Array.from(list);\n\n  var _result$splice = result.splice(startIndex, 1),\n      _result$splice2 = _slicedToArray(_result$splice, 1),\n      removed = _result$splice2[0];\n\n  result.splice(endIndex, 0, removed);\n  return result;\n}\n\nfunction DialogTransferList(props) {\n  _s();\n\n  var _this = this;\n\n  var titleLeft = props.titleLeft,\n      titleRight = props.titleRight,\n      leftSideList = props.leftSideList,\n      rightSideList = props.rightSideList,\n      onSave = props.onSave,\n      onClose = props.onClose,\n      onChangeRightSideList = props.onChangeRightSideList,\n      onChangeLeftSideList = props.onChangeLeftSideList,\n      rest = _objectWithoutProperties(props, [\"titleLeft\", \"titleRight\", \"leftSideList\", \"rightSideList\", \"onSave\", \"onClose\", \"onChangeRightSideList\", \"onChangeLeftSideList\"]);\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checked = _React$useState2[0],\n      setChecked = _React$useState2[1];\n\n  var renderDraggable = useDraggableInPortal();\n\n  var leftChecked = _.intersectionWith(leftSideList, checked, _.isEqual);\n\n  var rightChecked = _.intersectionWith(rightSideList, checked, _.isEqual);\n\n  var handleToggle = function handleToggle(value) {\n    return function () {\n      setChecked(function (prevState) {\n        return immer(prevState, function (draftState) {\n          if (draftState.length <= 0) {\n            draftState.push(value);\n            return;\n          }\n\n          var currentIndex = checked.findIndex(function (item) {\n            return item.id === value.id;\n          });\n\n          if (currentIndex === -1) {\n            draftState.push(value);\n          } else {\n            draftState.splice(currentIndex, 1);\n          }\n        });\n      });\n    };\n  };\n\n  var isChecked = function isChecked(value) {\n    return checked.findIndex(function (item) {\n      return item.id === value.id;\n    }) !== -1;\n  };\n\n  var numberOfChecked = function numberOfChecked(items) {\n    if (checked.length === 0) {\n      return 0;\n    }\n\n    var intersectArray = _.intersectionWith(items, checked, _.isEqual);\n\n    return intersectArray.length;\n  };\n\n  var handleToggleAll = function handleToggleAll(items) {\n    return function () {\n      if (numberOfChecked(items) === items.length) {\n        setChecked([]);\n      } else {\n        setChecked(items);\n      }\n    };\n  };\n\n  var handleCheckedRight = function handleCheckedRight() {\n    var newRightList = rightSideList.concat(leftChecked);\n    var newLeftList = not(leftSideList, leftChecked);\n    onChangeRightSideList(newRightList);\n    onChangeLeftSideList(newLeftList);\n    setChecked(not(checked, leftChecked));\n  };\n\n  var handleCheckedLeft = function handleCheckedLeft() {\n    var newLeftList = leftSideList.concat(rightChecked);\n    var newRightList = not(rightSideList, rightChecked);\n    onChangeRightSideList(newRightList);\n    onChangeLeftSideList(newLeftList);\n    setChecked(not(checked, rightChecked));\n  };\n\n  var onSaveList = function onSaveList() {\n    onSave();\n  };\n\n  var onDragEndItem = function onDragEndItem(result) {\n    if (result.source && result.destination) {\n      var items = reorder(rightSideList, result.source.index, result.destination.index);\n      onChangeRightSideList(items);\n    }\n  };\n\n  var handleClose = function handleClose() {\n    setChecked([]);\n    onClose();\n  };\n\n  var customList = function customList(title, items) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: classes.cardHeader,\n        classes: {\n          title: classes.cardHeaderTitle,\n          subheader: classes.cardHeaderSubtitle\n        },\n        avatar: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"primary\",\n          onClick: handleToggleAll(items),\n          checked: numberOfChecked(items) === items.length && items.length !== 0,\n          indeterminate: numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0,\n          disabled: items.length === 0,\n          inputProps: {\n            'aria-label': 'all items selected'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, _this),\n        title: title,\n        subheader: \"\".concat(numberOfChecked(items), \"/\").concat(items.length, \" selected\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        className: classes.list,\n        dense: true,\n        component: \"div\",\n        role: \"list\",\n        children: [items.map(function (value) {\n          var labelId = \"transfer-list-all-item-\".concat(value.id, \"-label\");\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            role: \"listitem\",\n            button: true,\n            onClick: handleToggle(value),\n            className: classes.itemList,\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                color: \"primary\",\n                checked: isChecked(value),\n                tabIndex: -1,\n                disableRipple: true,\n                inputProps: {\n                  'aria-labelledby': labelId\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              id: labelId,\n              primary: \"\".concat(value.user_id, \" (\").concat(value.first_name, \" \").concat(value.last_name, \")\"),\n              classes: {\n                primary: classes.itemText\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, _this)]\n          }, value.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, _this);\n        }), /*#__PURE__*/_jsxDEV(ListItem, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(DialogMain, _objectSpread(_objectSpread({}, rest), {}, {\n    onClose: handleClose,\n    onOk: onSaveList,\n    okText: \"Save\",\n    enterToOk: false,\n    classes: {\n      paper: classes.root\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      justify: \"center\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 5,\n        children: customList(titleLeft, leftSideList)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            size: \"small\",\n            className: classes.button,\n            onClick: handleCheckedRight,\n            disabled: leftChecked.length === 0,\n            \"aria-label\": \"move selected right\",\n            children: \">\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            size: \"small\",\n            className: classes.button,\n            onClick: handleCheckedLeft,\n            disabled: rightChecked.length === 0,\n            \"aria-label\": \"move selected left\",\n            children: \"<\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 5,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            className: classes.cardHeader,\n            classes: {\n              title: classes.cardHeaderTitle,\n              subheader: classes.cardHeaderSubtitle\n            },\n            avatar: /*#__PURE__*/_jsxDEV(Checkbox, {\n              color: \"primary\",\n              onClick: handleToggleAll(rightSideList),\n              checked: numberOfChecked(rightSideList) === rightSideList.length && rightSideList.length !== 0,\n              indeterminate: numberOfChecked(rightSideList) !== rightSideList.length && numberOfChecked(rightSideList) !== 0,\n              disabled: rightSideList.length === 0,\n              inputProps: {\n                'aria-label': 'all items selected'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this),\n            title: titleRight,\n            subheader: \"\".concat(numberOfChecked(rightSideList), \"/\").concat(rightSideList.length, \" selected\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n            onDragEnd: onDragEndItem,\n            children: /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: \"droppable\",\n              children: function children(provided) {\n                return /*#__PURE__*/_jsxDEV(List, _objectSpread(_objectSpread({\n                  className: classes.list\n                }, provided.droppableProps), {}, {\n                  ref: provided.innerRef,\n                  dense: true,\n                  component: \"div\",\n                  role: \"list\",\n                  children: [rightSideList.map(function (value, index) {\n                    var labelId = \"transfer-list-all-item-\".concat(value.id, \"-label\");\n                    return /*#__PURE__*/_jsxDEV(Draggable, {\n                      draggableId: value.id + '',\n                      index: index,\n                      children: renderDraggable(function (provided) {\n                        return /*#__PURE__*/_jsxDEV(ListItem, _objectSpread(_objectSpread({\n                          role: \"listitem\",\n                          button: true,\n                          onClick: handleToggle(value),\n                          className: classes.itemList,\n                          ref: provided.innerRef\n                        }, provided.draggableProps), {}, {\n                          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                              color: \"primary\",\n                              checked: isChecked(value),\n                              tabIndex: -1,\n                              disableRipple: true,\n                              inputProps: {\n                                'aria-labelledby': labelId\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 268,\n                              columnNumber: 33\n                            }, _this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 267,\n                            columnNumber: 31\n                          }, _this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                            id: labelId,\n                            primary: \"\".concat(value.user_id, \" (\").concat(value.first_name, \" \").concat(value.last_name, \")\"),\n                            classes: {\n                              primary: classes.itemText\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 276,\n                            columnNumber: 31\n                          }, _this), /*#__PURE__*/_jsxDEV(\"span\", _objectSpread(_objectSpread({}, provided.dragHandleProps), {}, {\n                            children: /*#__PURE__*/_jsxDEV(DragIndicatorIcon, {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 282,\n                              columnNumber: 33\n                            }, _this)\n                          }), void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 281,\n                            columnNumber: 31\n                          }, _this)]\n                        }), value.id, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 258,\n                          columnNumber: 29\n                        }, _this);\n                      })\n                    }, value.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 25\n                    }, _this);\n                  }), provided.placeholder]\n                }), void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, _this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DialogTransferList, \"3eIm5AfYI/FseY4KS7H1YfK9+Xo=\", false, function () {\n  return [useStyles, useDraggableInPortal];\n});\n\n_c = DialogTransferList;\nexport default DialogTransferList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogTransferList\");","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Job/TransferList/index.tsx"],"names":["React","Card","CardHeader","Checkbox","List","ListItem","ListItemText","Grid","Button","ListItemIcon","DragIndicator","DragIndicatorIcon","DragDropContext","Droppable","Draggable","DialogMain","_","immer","useDraggableInPortal","useStyles","not","a","b","filter","value","findIndex","item","id","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","DialogTransferList","props","titleLeft","titleRight","leftSideList","rightSideList","onSave","onClose","onChangeRightSideList","onChangeLeftSideList","rest","classes","useState","checked","setChecked","renderDraggable","leftChecked","intersectionWith","isEqual","rightChecked","handleToggle","prevState","draftState","length","push","currentIndex","isChecked","numberOfChecked","items","intersectArray","handleToggleAll","handleCheckedRight","newRightList","concat","newLeftList","handleCheckedLeft","onSaveList","onDragEndItem","source","destination","index","handleClose","customList","title","cardHeader","cardHeaderTitle","subheader","cardHeaderSubtitle","map","labelId","itemList","user_id","first_name","last_name","primary","itemText","paper","root","button","provided","droppableProps","innerRef","draggableProps","dragHandleProps","placeholder"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { Card, CardHeader, Checkbox, List, ListItem, ListItemText, Grid, Button, ListItemIcon } from '@material-ui/core'\n\nimport { DragIndicator as DragIndicatorIcon } from '@material-ui/icons'\n\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\n\nimport { DialogMain } from '@/components'\n\nimport _ from 'lodash'\nimport immer from 'immer'\n\nimport useDraggableInPortal from '@/hooks/useDraggableInPortal'\nimport useStyles from './styles'\n\nfunction not(a: any[], b: any[]) {\n  return a.filter((value) => b.findIndex((item) => value.id === item.id) === -1)\n}\n\nfunction reorder<T>(list: T[], startIndex: number, endIndex: number) {\n  const result = Array.from(list)\n  const [removed] = result.splice(startIndex, 1)\n  result.splice(endIndex, 0, removed)\n\n  return result\n}\n\nexport interface Props {\n  leftSideList: any\n  rightSideList: any\n  titleLeft: string\n  titleRight: string\n  title: string\n  open: boolean\n  onSave(): void\n  onClose(): void\n  onChangeRightSideList(list): void\n  onChangeLeftSideList(list): void\n}\n\nfunction DialogTransferList(props: Props) {\n  const {\n    titleLeft,\n    titleRight,\n    leftSideList,\n    rightSideList,\n    onSave,\n    onClose,\n    onChangeRightSideList,\n    onChangeLeftSideList,\n    ...rest\n  } = props\n\n  const classes = useStyles()\n  const [checked, setChecked] = React.useState([])\n\n  const renderDraggable = useDraggableInPortal()\n\n  const leftChecked = _.intersectionWith(leftSideList, checked, _.isEqual)\n  const rightChecked = _.intersectionWith(rightSideList, checked, _.isEqual)\n\n  const handleToggle = (value) => () => {\n    setChecked((prevState) =>\n      immer(prevState, (draftState) => {\n        if (draftState.length <= 0) {\n          draftState.push(value)\n          return\n        }\n        const currentIndex = checked.findIndex((item) => item.id === value.id)\n        if (currentIndex === -1) {\n          draftState.push(value)\n        } else {\n          draftState.splice(currentIndex, 1)\n        }\n      })\n    )\n  }\n\n  const isChecked = (value) => checked.findIndex((item) => item.id === value.id) !== -1\n\n  const numberOfChecked = (items) => {\n    if (checked.length === 0) {\n      return 0\n    }\n    const intersectArray = _.intersectionWith(items, checked, _.isEqual)\n    return intersectArray.length\n  }\n\n  const handleToggleAll = (items) => () => {\n    if (numberOfChecked(items) === items.length) {\n      setChecked([])\n    } else {\n      setChecked(items)\n    }\n  }\n\n  const handleCheckedRight = () => {\n    const newRightList = rightSideList.concat(leftChecked)\n    const newLeftList = not(leftSideList, leftChecked)\n    onChangeRightSideList(newRightList)\n    onChangeLeftSideList(newLeftList)\n    setChecked(not(checked, leftChecked))\n  }\n\n  const handleCheckedLeft = () => {\n    const newLeftList = leftSideList.concat(rightChecked)\n    const newRightList = not(rightSideList, rightChecked)\n    onChangeRightSideList(newRightList)\n    onChangeLeftSideList(newLeftList)\n    setChecked(not(checked, rightChecked))\n  }\n\n  const onSaveList = () => {\n    onSave()\n  }\n\n  const onDragEndItem = (result) => {\n    if (result.source && result.destination) {\n      const items = reorder(rightSideList, result.source.index, result.destination.index)\n      onChangeRightSideList(items)\n    }\n  }\n\n  const handleClose = () => {\n    setChecked([])\n    onClose()\n  }\n\n  const customList = (title: string, items) => (\n    <Card>\n      <CardHeader\n        className={classes.cardHeader}\n        classes={{\n          title: classes.cardHeaderTitle,\n          subheader: classes.cardHeaderSubtitle\n        }}\n        avatar={\n          <Checkbox\n            color=\"primary\"\n            onClick={handleToggleAll(items)}\n            checked={numberOfChecked(items) === items.length && items.length !== 0}\n            indeterminate={numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0}\n            disabled={items.length === 0}\n            inputProps={{ 'aria-label': 'all items selected' }}\n          />\n        }\n        title={title}\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\n      />\n      <List className={classes.list} dense component=\"div\" role=\"list\">\n        {items.map((value) => {\n          const labelId = `transfer-list-all-item-${value.id}-label`\n\n          return (\n            <ListItem key={value.id} role=\"listitem\" button onClick={handleToggle(value)} className={classes.itemList}>\n              <ListItemIcon>\n                <Checkbox\n                  color=\"primary\"\n                  checked={isChecked(value)}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n              </ListItemIcon>\n              <ListItemText\n                id={labelId}\n                primary={`${value.user_id} (${value.first_name} ${value.last_name})`}\n                classes={{ primary: classes.itemText }}\n              />\n            </ListItem>\n          )\n        })}\n        <ListItem />\n      </List>\n    </Card>\n  )\n\n  return (\n    <DialogMain\n      {...rest}\n      onClose={handleClose}\n      onOk={onSaveList}\n      okText=\"Save\"\n      enterToOk={false}\n      classes={{ paper: classes.root }}\n    >\n      <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\n        <Grid item xs={5}>\n          {customList(titleLeft, leftSideList)}\n        </Grid>\n        <Grid item xs={2}>\n          <Grid container direction=\"column\" alignItems=\"center\">\n            <Button\n              variant=\"outlined\"\n              size=\"small\"\n              className={classes.button}\n              onClick={handleCheckedRight}\n              disabled={leftChecked.length === 0}\n              aria-label=\"move selected right\"\n            >\n              &gt;\n            </Button>\n            <Button\n              variant=\"outlined\"\n              size=\"small\"\n              className={classes.button}\n              onClick={handleCheckedLeft}\n              disabled={rightChecked.length === 0}\n              aria-label=\"move selected left\"\n            >\n              &lt;\n            </Button>\n          </Grid>\n        </Grid>\n        <Grid item xs={5}>\n          {/* {customList(titleRight, rightSideList)} */}\n          <Card>\n            <CardHeader\n              className={classes.cardHeader}\n              classes={{\n                title: classes.cardHeaderTitle,\n                subheader: classes.cardHeaderSubtitle\n              }}\n              avatar={\n                <Checkbox\n                  color=\"primary\"\n                  onClick={handleToggleAll(rightSideList)}\n                  checked={numberOfChecked(rightSideList) === rightSideList.length && rightSideList.length !== 0}\n                  indeterminate={\n                    numberOfChecked(rightSideList) !== rightSideList.length && numberOfChecked(rightSideList) !== 0\n                  }\n                  disabled={rightSideList.length === 0}\n                  inputProps={{ 'aria-label': 'all items selected' }}\n                />\n              }\n              title={titleRight}\n              subheader={`${numberOfChecked(rightSideList)}/${rightSideList.length} selected`}\n            />\n\n            <DragDropContext onDragEnd={onDragEndItem}>\n              <Droppable droppableId=\"droppable\">\n                {(provided) => (\n                  <List\n                    className={classes.list}\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                    dense\n                    component=\"div\"\n                    role=\"list\"\n                  >\n                    {rightSideList.map((value, index) => {\n                      const labelId = `transfer-list-all-item-${value.id}-label`\n\n                      return (\n                        <Draggable key={value.id} draggableId={value.id + ''} index={index}>\n                          {renderDraggable((provided) => (\n                            <ListItem\n                              key={value.id}\n                              role=\"listitem\"\n                              button\n                              onClick={handleToggle(value)}\n                              className={classes.itemList}\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                            >\n                              <ListItemIcon>\n                                <Checkbox\n                                  color=\"primary\"\n                                  checked={isChecked(value)}\n                                  tabIndex={-1}\n                                  disableRipple\n                                  inputProps={{ 'aria-labelledby': labelId }}\n                                />\n                              </ListItemIcon>\n                              <ListItemText\n                                id={labelId}\n                                primary={`${value.user_id} (${value.first_name} ${value.last_name})`}\n                                classes={{ primary: classes.itemText }}\n                              />\n                              <span {...provided.dragHandleProps}>\n                                <DragIndicatorIcon />\n                              </span>\n                            </ListItem>\n                          ))}\n                        </Draggable>\n                      )\n                    })}\n                    {provided.placeholder}\n                  </List>\n                )}\n              </Droppable>\n            </DragDropContext>\n          </Card>\n        </Grid>\n      </Grid>\n    </DialogMain>\n  )\n}\n\nexport default DialogTransferList\n"]},"metadata":{},"sourceType":"module"}