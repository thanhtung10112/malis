{"ast":null,"code":"import * as yup from 'yup';\nexport const regexSpecCharacters = '[!\"#$%&()*+,-./:;<=>?@[\\\\]^_`{|}~]';\nexport const regexes = ['[A-Z]', '[a-z]', '[0-9]', regexSpecCharacters];\n\nconst getPasswordYup = (key = 'Password') => yup.string().required(`${key} is required!`).min(8, `${key} valid length is from 8 to 30!`).max(30, `${key} valid length is from 8 to 30!`).test('strength', `${key} must follow the format: Must be min 8 chars, at least 3 properties out of: capital letters, lower case letters, special characters, numbers.`, value => {\n  let passed = 0;\n  regexes.forEach(regex => {\n    const isMatch = new RegExp(regex).test(value);\n    isMatch && passed++;\n  });\n  return passed === regexes.length;\n});\n\nexport default getPasswordYup;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/utils/getPasswordYup.ts"],"names":["yup","regexSpecCharacters","regexes","getPasswordYup","key","string","required","min","max","test","value","passed","forEach","regex","isMatch","RegExp","length"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAEA,OAAO,MAAMC,mBAAmB,GAAG,oCAA5B;AACP,OAAO,MAAMC,OAAO,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4BD,mBAA5B,CAAhB;;AAEP,MAAME,cAAc,GAAG,CAACC,GAAG,GAAG,UAAP,KACrBJ,GAAG,CACAK,MADH,GAEGC,QAFH,CAEa,GAAEF,GAAI,eAFnB,EAGGG,GAHH,CAGO,CAHP,EAGW,GAAEH,GAAI,gCAHjB,EAIGI,GAJH,CAIO,EAJP,EAIY,GAAEJ,GAAI,gCAJlB,EAKGK,IALH,CAMI,UANJ,EAOK,GAAEL,GAAI,+IAPX,EAQKM,KAAD,IAAW;AACT,MAAIC,MAAM,GAAG,CAAb;AACAT,EAAAA,OAAO,CAACU,OAAR,CAAiBC,KAAD,IAAW;AACzB,UAAMC,OAAO,GAAG,IAAIC,MAAJ,CAAWF,KAAX,EAAkBJ,IAAlB,CAAuBC,KAAvB,CAAhB;AACAI,IAAAA,OAAO,IAAIH,MAAM,EAAjB;AACD,GAHD;AAIA,SAAOA,MAAM,KAAKT,OAAO,CAACc,MAA1B;AACD,CAfL,CADF;;AAmBA,eAAeb,cAAf","sourcesContent":["import * as yup from 'yup'\n\nexport const regexSpecCharacters = '[!\"#$%&()*+,-./:;<=>?@[\\\\]^_`{|}~]'\nexport const regexes = ['[A-Z]', '[a-z]', '[0-9]', regexSpecCharacters]\n\nconst getPasswordYup = (key = 'Password') =>\n  yup\n    .string()\n    .required(`${key} is required!`)\n    .min(8, `${key} valid length is from 8 to 30!`)\n    .max(30, `${key} valid length is from 8 to 30!`)\n    .test(\n      'strength',\n      `${key} must follow the format: Must be min 8 chars, at least 3 properties out of: capital letters, lower case letters, special characters, numbers.`,\n      (value) => {\n        let passed = 0\n        regexes.forEach((regex) => {\n          const isMatch = new RegExp(regex).test(value)\n          isMatch && passed++\n        })\n        return passed === regexes.length\n      }\n    )\n\nexport default getPasswordYup\n"]},"metadata":{},"sourceType":"module"}