{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { forwardRef } from 'react';\nimport NumberFormat from 'react-number-format';\nimport { AppTextField } from '@/components';\nvar AppNumberField = /*#__PURE__*/forwardRef(function (props, ref) {\n  var onChange = props.onChange,\n      numberFieldProps = _objectWithoutProperties(props, [\"onChange\"]);\n\n  return /*#__PURE__*/_jsx(NumberFormat, _objectSpread(_objectSpread({}, numberFieldProps), {}, {\n    customInput: AppTextField,\n    onValueChange: onChange,\n    ref: ref\n  }));\n});\nAppNumberField.defaultProps = {\n  thousandSeparator: ' ',\n  allowNegative: false,\n  decimalScale: 2,\n  fixedDecimalScale: 2\n};\nexport default AppNumberField;","map":null,"metadata":{},"sourceType":"module"}