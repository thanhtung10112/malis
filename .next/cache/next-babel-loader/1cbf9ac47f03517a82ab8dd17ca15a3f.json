{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice, createSelector, createAction } from '@reduxjs/toolkit';\nimport { actionTypes } from '@/utils/constant';\nimport _ from 'lodash';\nimport { getDefaultValues } from '@/utils/getDefaultValues';\nimport isAssembly from '@/utils/isAssembly';\nimport { manufacturerStore } from '@/store/reducers';\nexport var name = 'part';\nexport var itemDetail = {\n  job_id: null,\n  drawing_id: null,\n  dpn: '',\n  reference_to: null,\n  mass: 0,\n  unit: null,\n  manufacturer_equiv: null,\n  manufacturers: [],\n  material_equiv: null,\n  descriptions: [],\n  manufacturer_equiv_standards: [],\n  material_equiv_standards: [],\n  additional_attributes: {}\n};\nexport var assemblyDetail = {\n  job_id: null,\n  drawing_id: null,\n  dpn: '',\n  unit: null,\n  descriptions: [],\n  items: [],\n  manufacturers: [],\n  is_assembly: true,\n  additional_attributes: {},\n  drawing_items: []\n};\nexport var initialState = {\n  partList: [],\n  initData: {\n    parameters: {\n      MAAT: [],\n      PLLA: [],\n      UNIT: [],\n      PAAT: []\n    }\n  },\n  confirmRef: {\n    open: false,\n    message: ''\n  },\n  manufacturer: {\n    detail: manufacturerStore.initialState.detail,\n    dialogState: manufacturerStore.initialState.dialogState,\n    initData: _objectSpread(_objectSpread({}, manufacturerStore.initialState.initDataForCE), {}, {\n      permissions: null\n    })\n  }\n};\nvar partSlice = createSlice({\n  name: name,\n  initialState: initialState,\n  reducers: {\n    addPart: function addPart(state, _ref) {\n      var payload = _ref.payload;\n\n      var part = _objectSpread(_objectSpread({}, payload), {}, {\n        loading: false,\n        tab: 0,\n        historyLogs: []\n      });\n\n      state.partList.push(part);\n    },\n    setInitData: function setInitData(state, _ref2) {\n      var payload = _ref2.payload;\n      state.initData = payload;\n    },\n    setHistoryLogs: function setHistoryLogs(state, _ref3) {\n      var payload = _ref3.payload;\n      var length = state.partList.length;\n\n      if (length > 0) {\n        state.partList[length - 1].historyLogs = payload;\n      }\n    },\n    setPartLoading: function setPartLoading(state, _ref4) {\n      var payload = _ref4.payload;\n\n      var currentPart = _.last(state.partList);\n\n      var length = state.partList.length;\n\n      if (length <= 0) {\n        return;\n      }\n\n      if (currentPart.loading !== payload) {\n        state.partList[length - 1].loading = payload;\n      }\n    },\n    updateCurrentPart: function updateCurrentPart(state, _ref5) {\n      var payload = _ref5.payload;\n      var length = state.partList.length;\n      state.partList[length - 1].detail = _objectSpread(_objectSpread({}, state.partList[length - 1].detail), payload);\n    },\n    setConfirmRef: function setConfirmRef(state, _ref6) {\n      var payload = _ref6.payload;\n      state.confirmRef.open = payload.open;\n      state.confirmRef.message = payload.message;\n    },\n    setConfirmRefOpen: function setConfirmRefOpen(state, _ref7) {\n      var payload = _ref7.payload;\n      state.confirmRef.open = payload;\n    },\n    resetCurrentPart: function resetCurrentPart(state, _ref8) {\n      var payload = _ref8.payload;\n      var length = state.partList.length;\n      var userJob = payload.userJob,\n          userDrawing = payload.userDrawing,\n          generateCode = payload.generateCode;\n      var currentPart = state.partList[length - 1].detail;\n      var initDetail = isAssembly(currentPart) ? assemblyDetail : itemDetail;\n      var defaultValues = getDefaultValues(state.initData.parameters, {\n        unit: 'UNIT'\n      }, initDetail);\n      defaultValues.job_id = userJob.value;\n      defaultValues.drawing_id = userDrawing.value === -1 ? null : userDrawing;\n\n      if (generateCode) {\n        defaultValues.dpn = generateCode;\n      }\n\n      state.partList[length - 1].detail = defaultValues;\n    },\n    removePart: function removePart(state) {\n      state.partList.pop();\n    },\n    setPartTab: function setPartTab(state, _ref9) {\n      var payload = _ref9.payload;\n\n      var currentPart = _.last(state.partList);\n\n      var length = state.partList.length;\n\n      if (length <= 0) {\n        return;\n      }\n\n      if (currentPart.tab !== payload) {\n        state.partList[length - 1].tab = payload;\n      }\n    },\n    // Manufacturer\n    setManuDetail: function setManuDetail(state, _ref10) {\n      var payload = _ref10.payload;\n      state.manufacturer.detail = _objectSpread(_objectSpread({}, state.manufacturer.detail), payload);\n    },\n    setManuDialogOpen: function setManuDialogOpen(state, _ref11) {\n      var payload = _ref11.payload;\n      state.manufacturer.dialogState.open = payload;\n    },\n    setManuDialogLoading: function setManuDialogLoading(state, _ref12) {\n      var payload = _ref12.payload;\n      state.manufacturer.dialogState.loading = payload;\n    },\n    setManuInitData: function setManuInitData(state, _ref13) {\n      var payload = _ref13.payload;\n      state.manufacturer.initData = payload;\n    },\n    addManufacturer: function addManufacturer(state, _ref14) {\n      var payload = _ref14.payload;\n      var length = state.partList.length;\n      state.partList[length - 1].detail.manufacturers.push(payload);\n    },\n    setDrawingItems: function setDrawingItems(state, _ref15) {\n      var payload = _ref15.payload;\n      var length = state.partList.length;\n\n      if (length <= 0) {\n        return;\n      }\n\n      ;\n      state.partList[length - 1].detail.drawing_items = payload;\n    }\n  }\n});\nvar actions = partSlice.actions; // saga actions\n\nexport { actions };\nexport var sagaCreate = createAction(\"\".concat(name, \"/\").concat(actionTypes.CREATE));\nexport var sagaCloseDialog = createAction(\"\".concat(name, \"/\").concat(actionTypes.CLOSE_DIALOG));\nexport var sagaOpenCreateDialog = createAction(\"\".concat(name, \"/\").concat(actionTypes.OPEN_CREATE_DIALOG));\nexport var sagaGetItemCopy = createAction(\"\".concat(name, \"/GET_ITEM_COPY\"));\nexport var sagaOpenUpdateDialog = createAction(\"\".concat(name, \"/\").concat(actionTypes.OPEN_UPDATE_DIALOG));\nexport var sagaGetDrawingItems = createAction(\"\".concat(name, \"/GET_DRAWING_ITEMS\")); // saga actions Manufacturer\n\nexport var sagaOpenManuDialog = createAction(\"\".concat(name, \"/OPEN_UPDATE_MANU_DIALOG\"));\nexport var sagaCreateManu = createAction(\"\".concat(name, \"/CREATE_MANU\"));\nexport var sagaCloseManuDialog = createAction(\"\".concat(name, \"/CLOSE_MANU_DIALOG\"));\nexport var sagaGetManuId = createAction(\"\".concat(name, \"/GET_MANU_ID\")); // selectors\n\nexport var selectState = function selectState(state) {\n  return state[name];\n};\nexport var selectPartList = createSelector(selectState, function (state) {\n  return state.partList;\n});\nexport var selectParameters = createSelector(selectState, function (state) {\n  return state.initData.parameters;\n});\nexport var selectCurrentPart = createSelector(selectState, function (state) {\n  return _.last(state.partList);\n});\nexport var selectConfirmRef = createSelector(selectState, function (state) {\n  return state.confirmRef;\n});\nexport var selectPartManu = createSelector(selectState, function (state) {\n  return state.manufacturer;\n});\nexport var selectDrawingItems = createSelector(selectState, function (state) {\n  var partList = state.partList;\n\n  if (partList.length <= 0) {\n    return [];\n  }\n\n  var _$last = _.last(partList),\n      detail = _$last.detail;\n\n  return detail.drawing_items || [];\n});\nexport default partSlice;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/reducers/part.reducer.ts"],"names":["createSlice","createSelector","createAction","actionTypes","_","getDefaultValues","isAssembly","manufacturerStore","name","itemDetail","job_id","drawing_id","dpn","reference_to","mass","unit","manufacturer_equiv","manufacturers","material_equiv","descriptions","manufacturer_equiv_standards","material_equiv_standards","additional_attributes","assemblyDetail","items","is_assembly","drawing_items","initialState","partList","initData","parameters","MAAT","PLLA","UNIT","PAAT","confirmRef","open","message","manufacturer","detail","dialogState","initDataForCE","permissions","partSlice","reducers","addPart","state","payload","part","loading","tab","historyLogs","push","setInitData","setHistoryLogs","length","setPartLoading","currentPart","last","updateCurrentPart","setConfirmRef","setConfirmRefOpen","resetCurrentPart","userJob","userDrawing","generateCode","initDetail","defaultValues","value","removePart","pop","setPartTab","setManuDetail","setManuDialogOpen","setManuDialogLoading","setManuInitData","addManufacturer","setDrawingItems","actions","sagaCreate","CREATE","sagaCloseDialog","CLOSE_DIALOG","sagaOpenCreateDialog","OPEN_CREATE_DIALOG","sagaGetItemCopy","sagaOpenUpdateDialog","OPEN_UPDATE_DIALOG","sagaGetDrawingItems","sagaOpenManuDialog","sagaCreateManu","sagaCloseManuDialog","sagaGetManuId","selectState","selectPartList","selectParameters","selectCurrentPart","selectConfirmRef","selectPartManu","selectDrawingItems"],"mappings":"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","sourcesContent":["import { createSlice, createSelector, PayloadAction, createAction } from '@reduxjs/toolkit'\nimport { actionTypes } from '@/utils/constant'\nimport _ from 'lodash'\nimport { getDefaultValues } from '@/utils/getDefaultValues'\nimport isAssembly from '@/utils/isAssembly'\nimport { manufacturerStore } from '@/store/reducers'\n\nimport type { RootReducerType } from './rootReducer'\nimport type { ItemDetail, ItemManufacturer } from '@/types/Item'\nimport type { AssemblyDetail } from '@/types/Assembly'\nimport type { DataForDropdown, HistoryLog, ParameterOption } from '@/types/Common'\nimport type { PartDetail, PartEntity } from '@/types/Part'\nimport type { ManufacturerInitDataForCE, ManufacturerPermissions, ManufacturerItem } from '@/types/Manufacturer'\n\nexport const name = 'part'\n\nexport type Part = {\n  detail: ItemDetail | AssemblyDetail\n  permissions: any\n  wiki_page: string\n  loading: boolean\n  tab: number\n  historyLogs: HistoryLog[]\n}\n\nexport const itemDetail = {\n  job_id: null,\n  drawing_id: null,\n  dpn: '',\n  reference_to: null,\n  mass: 0,\n  unit: null,\n  manufacturer_equiv: null,\n  manufacturers: [],\n  material_equiv: null,\n  descriptions: [],\n  manufacturer_equiv_standards: [],\n  material_equiv_standards: [],\n  additional_attributes: {}\n} as ItemDetail\n\nexport const assemblyDetail = {\n  job_id: null,\n  drawing_id: null,\n  dpn: '',\n  unit: null,\n  descriptions: [],\n  items: [],\n  manufacturers: [],\n  is_assembly: true,\n  additional_attributes: {},\n  drawing_items: []\n} as AssemblyDetail\n\nexport const initialState = {\n  partList: [] as Part[],\n  initData: {\n    parameters: {\n      MAAT: [],\n      PLLA: [],\n      UNIT: [],\n      PAAT: []\n    }\n  },\n  confirmRef: {\n    open: false,\n    message: ''\n  },\n  manufacturer: {\n    detail: manufacturerStore.initialState.detail,\n    dialogState: manufacturerStore.initialState.dialogState,\n    initData: {\n      ...manufacturerStore.initialState.initDataForCE,\n      permissions: null as ManufacturerPermissions\n    }\n  }\n}\n\nconst partSlice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    addPart(state, { payload }: PayloadAction<Pick<Part, 'detail' | 'permissions' | 'wiki_page'>>) {\n      const part = {\n        ...payload,\n        loading: false,\n        tab: 0,\n        historyLogs: []\n      } as Part\n      state.partList.push(part)\n    },\n    setInitData(state, { payload }) {\n      state.initData = payload\n    },\n    setHistoryLogs(state, { payload }: PayloadAction<HistoryLog[]>) {\n      const { length } = state.partList\n      if (length > 0) {\n        state.partList[length - 1].historyLogs = payload\n      }\n    },\n    setPartLoading(state, { payload }: PayloadAction<boolean>) {\n      const currentPart = _.last(state.partList)\n      const { length } = state.partList\n      if (length <= 0) {\n        return\n      }\n      if (currentPart.loading !== payload) {\n        state.partList[length - 1].loading = payload\n      }\n    },\n    updateCurrentPart(state, { payload }) {\n      const { length } = state.partList\n      state.partList[length - 1].detail = {\n        ...state.partList[length - 1].detail,\n        ...payload\n      }\n    },\n    setConfirmRef(state, { payload }) {\n      state.confirmRef.open = payload.open\n      state.confirmRef.message = payload.message\n    },\n    setConfirmRefOpen(state, { payload }: PayloadAction<boolean>) {\n      state.confirmRef.open = payload\n    },\n    resetCurrentPart(\n      state,\n      { payload }: PayloadAction<{ userJob: ParameterOption; userDrawing: DataForDropdown; generateCode?: string }>\n    ) {\n      const { length } = state.partList\n      const { userJob, userDrawing, generateCode } = payload\n      const currentPart = state.partList[length - 1].detail\n      const initDetail = isAssembly(currentPart) ? assemblyDetail : itemDetail\n      const defaultValues = getDefaultValues(\n        state.initData.parameters,\n        {\n          unit: 'UNIT'\n        },\n        initDetail\n      )\n      defaultValues.job_id = userJob.value\n      defaultValues.drawing_id = userDrawing.value === -1 ? null : userDrawing\n      if (generateCode) {\n        defaultValues.dpn = generateCode\n      }\n      state.partList[length - 1].detail = defaultValues\n    },\n    removePart(state) {\n      state.partList.pop()\n    },\n    setPartTab(state, { payload }: PayloadAction<number>) {\n      const currentPart = _.last(state.partList)\n      const { length } = state.partList\n      if (length <= 0) {\n        return\n      }\n      if (currentPart.tab !== payload) {\n        state.partList[length - 1].tab = payload\n      }\n    },\n    // Manufacturer\n    setManuDetail(state, { payload }) {\n      state.manufacturer.detail = {\n        ...state.manufacturer.detail,\n        ...payload\n      }\n    },\n    setManuDialogOpen(state, { payload }: PayloadAction<boolean>) {\n      state.manufacturer.dialogState.open = payload\n    },\n    setManuDialogLoading(state, { payload }: PayloadAction<boolean>) {\n      state.manufacturer.dialogState.loading = payload\n    },\n    setManuInitData(\n      state,\n      { payload }: PayloadAction<ManufacturerInitDataForCE & { permissions: ManufacturerPermissions }>\n    ) {\n      state.manufacturer.initData = payload\n    },\n    addManufacturer(state, { payload }: PayloadAction<ItemManufacturer>) {\n      const { length } = state.partList\n      state.partList[length - 1].detail.manufacturers.push(payload)\n    },\n    setDrawingItems(state, { payload }: PayloadAction<any[]>) {\n      const { length } = state.partList\n      if (length <= 0) {\n        return\n      }\n      ;(state.partList[length - 1].detail as AssemblyDetail).drawing_items = payload\n    }\n  }\n})\n\nexport const { actions } = partSlice\n\n// saga actions\nexport const sagaCreate = createAction<{ entity: PartEntity; formData: ItemDetail | AssemblyDetail }>(\n  `${name}/${actionTypes.CREATE}`\n)\n\nexport const sagaCloseDialog = createAction<PartEntity>(`${name}/${actionTypes.CLOSE_DIALOG}`)\nexport const sagaOpenCreateDialog = createAction<PartEntity>(`${name}/${actionTypes.OPEN_CREATE_DIALOG}`)\nexport const sagaGetItemCopy = createAction<DataForDropdown>(`${name}/GET_ITEM_COPY`)\nexport const sagaOpenUpdateDialog = createAction<{ id: number; entity: PartEntity }>(\n  `${name}/${actionTypes.OPEN_UPDATE_DIALOG}`\n)\nexport const sagaGetDrawingItems = createAction<number>(`${name}/GET_DRAWING_ITEMS`)\n\n// saga actions Manufacturer\nexport const sagaOpenManuDialog = createAction<PartDetail>(`${name}/OPEN_UPDATE_MANU_DIALOG`)\nexport const sagaCreateManu = createAction<ManufacturerItem>(`${name}/CREATE_MANU`)\nexport const sagaCloseManuDialog = createAction(`${name}/CLOSE_MANU_DIALOG`)\nexport const sagaGetManuId = createAction<ManufacturerItem>(`${name}/GET_MANU_ID`)\n\n// selectors\nexport const selectState = (state: RootReducerType) => state[name]\nexport const selectPartList = createSelector(selectState, (state) => state.partList)\nexport const selectParameters = createSelector(selectState, (state) => state.initData.parameters)\nexport const selectCurrentPart = createSelector(selectState, (state) => _.last(state.partList))\nexport const selectConfirmRef = createSelector(selectState, (state) => state.confirmRef)\nexport const selectPartManu = createSelector(selectState, (state) => state.manufacturer)\nexport const selectDrawingItems = createSelector(selectState, (state) => {\n  const { partList } = state\n  if (partList.length <= 0) {\n    return []\n  }\n  const { detail } = _.last(partList)\n  return (detail as AssemblyDetail).drawing_items || []\n})\n\nexport default partSlice\n"]},"metadata":{},"sourceType":"module"}