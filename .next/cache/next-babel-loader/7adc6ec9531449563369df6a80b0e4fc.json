{"ast":null,"code":"import * as yup from 'yup';\nimport { isValid, parseISO } from 'date-fns';\nimport getPasswordYup from '@/utils/getPasswordYup';\n\nfunction getValidationSchema(t, editMode) {\n  var validationSchema = yup.object().shape({\n    user_id: yup.string().trim().required(t('validation_message.user_id_required')).min(2, t('validation_message.user_id_length')).max(12, t('validation_message.user_id_length')),\n    user_abb: yup.string().max(12, t('validation_message.user_abb_max')),\n    first_name: yup.string().trim().required(t('validation_message.first_name_required')).max(20, t('validation_message.first_name_max')),\n    last_name: yup.string().trim().required(t('validation_message.last_name_required')).max(20, t('validation_message.last_name_max')),\n    email: yup.string().nullable().email(t('validation_message.email_format')),\n    password: yup.lazy(function () {\n      if (editMode) {\n        return yup.string().nullable();\n      }\n\n      return getPasswordYup('Password');\n    }),\n    confirm_password: yup.lazy(function () {\n      if (editMode) {\n        return yup.string().nullable();\n      }\n\n      return yup.string().oneOf([yup.ref('password'), null], t('validation_message.confirm_password_match'));\n    }),\n    time_zone: yup.string().nullable().required(t('validation_message.timezone_required')),\n    puco: yup.number().nullable().required(t('validation_message.puco_required')),\n    default_language: yup.number().nullable().required(t('validation_message.default_language_required')),\n    valid_from: yup.mixed().test('date_format', t('validation_message.valid_from_invalid'), function (value) {\n      // if (value === '' || value === null || value === undefined) {\n      //   return true\n      // }\n      return /^\\d{4}-\\d{2}-\\d{2}$/.test(value) || value === '' || value === null || value === undefined;\n    }).test('date_valid', t('validation_message.valid_from_invalid'), function (value) {\n      return isValid(parseISO(value)) || value === '' || value === null || value === undefined;\n    }),\n    valid_until: yup.mixed().test('date_format', t('validation_message.valid_until_invalid'), function (value) {\n      // if (value === '' || value === null || value === undefined) {\n      //   return true\n      // }\n      return /^\\d{4}-\\d{2}-\\d{2}$/.test(value) || value === '' || value === null || value === undefined;\n    }).test('date_valid', t('validation_message.valid_until_invalid'), function (value) {\n      return isValid(parseISO(value)) || value === '' || value === null || value === undefined;\n    })\n  });\n  return validationSchema;\n}\n\nexport default getValidationSchema;","map":null,"metadata":{},"sourceType":"module"}