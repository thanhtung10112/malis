{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchDrawingInitDataForList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchDrawingInitDataForCE),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(fetchDrawingList),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(fetchDrawingPartList),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(getDrawingPartList),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(getDrawingList),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(openDrawingCreateDialog),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(changeUserJob),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(createDrawing),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(closeDrawingDialog),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(openDrawingUpdateDialog),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(updateDrawing),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(openRevisionDialog),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(saveNewRev),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(openCreatePartDialog),\n    _marked16 = /*#__PURE__*/_regeneratorRuntime.mark(drawingSaga);\n\nimport { takeEvery, put, putResolve } from 'redux-saga/effects';\nimport { select, call, all } from 'typed-redux-saga';\nimport * as errorSaga from '@/store/saga/errorSaga';\nimport { drawingStore, commonStore, advancedFilterActions, specificationStore, partStore, tagStore } from '@/store/reducers';\nimport _ from 'lodash';\nimport { getDefaultValues } from '@/utils/getDefaultValues';\nimport { fetchSpecificationDetail } from '@/store/saga/specification.saga';\nimport drawingApi from '@/apis/drawing.api';\nexport function fetchDrawingInitDataForList() {\n  var userJob, data;\n  return _regeneratorRuntime.wrap(function fetchDrawingInitDataForList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.delegateYield(select(commonStore.selectUserValueJob), \"t0\", 1);\n\n        case 1:\n          userJob = _context.t0;\n          _context.next = 4;\n          return call(drawingApi.getInitDataForList, {\n            job_id_pk: userJob.value\n          });\n\n        case 4:\n          data = _context.sent;\n\n          if (_.isNull(data.selected_job)) {\n            data.selected_job = {};\n          }\n\n          if (userJob.value === -1 || userJob.value === -2) {\n            data.selected_job = userJob;\n          }\n\n          _context.next = 9;\n          return put(commonStore.actions.setUserValueJob(data.selected_job));\n\n        case 9:\n          _context.next = 11;\n          return put(drawingStore.actions.setInitDataForList(data));\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function fetchDrawingInitDataForCE() {\n  var jobId,\n      userJob,\n      _yield$call,\n      permissions,\n      user_job,\n      dataInit,\n      detailDefaultValue,\n      drawingPurpose,\n      _drawingPurpose$prope,\n      exclude_from,\n      excludeList,\n      excludeFrom,\n      _args2 = arguments;\n\n  return _regeneratorRuntime.wrap(function fetchDrawingInitDataForCE$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          jobId = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : null;\n          return _context2.delegateYield(select(commonStore.selectUserValueJob), \"t0\", 2);\n\n        case 2:\n          userJob = _context2.t0;\n          _context2.next = 5;\n          return call(drawingApi.getInitDataForCE, {\n            job_id_pk: jobId || userJob.value\n          });\n\n        case 5:\n          _yield$call = _context2.sent;\n          permissions = _yield$call.permissions;\n          user_job = _yield$call.user_job;\n          dataInit = _objectWithoutProperties(_yield$call, [\"permissions\", \"user_job\"]);\n          detailDefaultValue = getDefaultValues(dataInit.parameters, {\n            drawing_purpose: 'DWPU',\n            file_prefix: 'FPRE',\n            file_type: 'FTYP',\n            drawing_format: 'PLFO'\n          }); // if you are in create mode, then set jobId for the assembly form\n\n          if (_.isNull(jobId)) {\n            detailDefaultValue.job_id = userJob.value;\n          }\n\n          if (!_.isNull(detailDefaultValue.drawing_purpose) && _.isNull(jobId)) {\n            drawingPurpose = _.find(dataInit.parameters.DWPU, {\n              id: detailDefaultValue.drawing_purpose\n            });\n            _drawingPurpose$prope = drawingPurpose === null || drawingPurpose === void 0 ? void 0 : drawingPurpose.properties, exclude_from = _drawingPurpose$prope.exclude_from;\n\n            if (_.isString(exclude_from) && _.size(exclude_from) > 0) {\n              excludeList = {\n                C: 'exclude_from_customer',\n                O: 'exclude_from_other',\n                S: 'exclude_from_supplier'\n              };\n              excludeFrom = exclude_from.split(';'); // C;O;S => [C, O, S]\n\n              _.forIn(excludeList, function (value, key) {\n                if (excludeFrom.includes(key)) {\n                  detailDefaultValue[value] = true;\n                }\n              });\n            }\n          }\n\n          _context2.next = 14;\n          return put(drawingStore.actions.setInitDataForCE(dataInit));\n\n        case 14:\n          _context2.next = 16;\n          return put(drawingStore.actions.setDetail(detailDefaultValue));\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function fetchDrawingList() {\n  var _yield$all, tableState, searchQuery, filterData, userJob, drawingGroup, page, per_page, data;\n\n  return _regeneratorRuntime.wrap(function fetchDrawingList$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.delegateYield(all({\n            tableState: select(commonStore.selectTableState),\n            searchQuery: select(commonStore.selectSearchQuery),\n            filterData: select(advancedFilterActions.selectFilterData),\n            userJob: select(commonStore.selectUserValueJob),\n            drawingGroup: select(drawingStore.selectDrawingGroupId)\n          }), \"t0\", 1);\n\n        case 1:\n          _yield$all = _context3.t0;\n          tableState = _yield$all.tableState;\n          searchQuery = _yield$all.searchQuery;\n          filterData = _yield$all.filterData;\n          userJob = _yield$all.userJob;\n          drawingGroup = _yield$all.drawingGroup;\n\n          if (userJob.value) {\n            _context3.next = 9;\n            break;\n          }\n\n          return _context3.abrupt(\"return\");\n\n        case 9:\n          page = tableState.page, per_page = tableState.per_page;\n          _context3.next = 12;\n          return call(drawingApi.getList, _objectSpread({\n            per_page: per_page,\n            page: page,\n            s: searchQuery,\n            job_id: userJob.value,\n            drawing_group_id: drawingGroup\n          }, filterData));\n\n        case 12:\n          data = _context3.sent;\n          _context3.next = 15;\n          return put(commonStore.actions.setTableState({\n            total_items: data.total_items\n          }));\n\n        case 15:\n          _context3.next = 17;\n          return put(drawingStore.actions.setDataList(data.drawings));\n\n        case 17:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\nexport function fetchDrawingPartList(drawingId) {\n  var _yield$call2, drawing;\n\n  return _regeneratorRuntime.wrap(function fetchDrawingPartList$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return call(drawingApi.getDetail, drawingId);\n\n        case 2:\n          _yield$call2 = _context4.sent;\n          drawing = _yield$call2.drawing;\n          _context4.next = 6;\n          return put(drawingStore.actions.setComponentList(drawing.item_list));\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\nexport function getDrawingPartList() {\n  var drawingDetail;\n  return _regeneratorRuntime.wrap(function getDrawingPartList$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return put(drawingStore.actions.setDialogStateLoading(true));\n\n        case 2:\n          _context5.prev = 2;\n          return _context5.delegateYield(select(drawingStore.selectDetail), \"t0\", 4);\n\n        case 4:\n          drawingDetail = _context5.t0;\n          _context5.next = 7;\n          return call(fetchDrawingPartList, drawingDetail.id);\n\n        case 7:\n          _context5.next = 13;\n          break;\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t1 = _context5[\"catch\"](2);\n          _context5.next = 13;\n          return errorSaga.handleError(_context5.t1);\n\n        case 13:\n          _context5.next = 15;\n          return put(drawingStore.actions.setDialogStateLoading(false));\n\n        case 15:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[2, 9]]);\n}\nexport function getDrawingList() {\n  var permissions;\n  return _regeneratorRuntime.wrap(function getDrawingList$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 2:\n          _context6.prev = 2;\n          _context6.next = 5;\n          return call(fetchDrawingInitDataForList);\n\n        case 5:\n          return _context6.delegateYield(select(drawingStore.selectPermissions), \"t0\", 6);\n\n        case 6:\n          permissions = _context6.t0;\n\n          if (!(permissions === null || permissions === void 0 ? void 0 : permissions.view)) {\n            _context6.next = 10;\n            break;\n          }\n\n          _context6.next = 10;\n          return call(fetchDrawingList);\n\n        case 10:\n          _context6.next = 16;\n          break;\n\n        case 12:\n          _context6.prev = 12;\n          _context6.t1 = _context6[\"catch\"](2);\n          _context6.next = 16;\n          return errorSaga.handleError(_context6.t1);\n\n        case 16:\n          _context6.next = 18;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 18:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[2, 12]]);\n}\nexport function openDrawingCreateDialog() {\n  return _regeneratorRuntime.wrap(function openDrawingCreateDialog$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 2:\n          _context7.prev = 2;\n          _context7.next = 5;\n          return call(fetchDrawingInitDataForCE);\n\n        case 5:\n          _context7.next = 7;\n          return put(drawingStore.actions.setDialogStateOpen(true));\n\n        case 7:\n          _context7.next = 13;\n          break;\n\n        case 9:\n          _context7.prev = 9;\n          _context7.t0 = _context7[\"catch\"](2);\n          _context7.next = 13;\n          return errorSaga.handleError(_context7.t0);\n\n        case 13:\n          _context7.next = 15;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 15:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[2, 9]]);\n}\nexport function changeUserJob(_ref) {\n  var payload;\n  return _regeneratorRuntime.wrap(function changeUserJob$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          payload = _ref.payload;\n          _context8.next = 3;\n          return putResolve(commonStore.actions.setUserValueJob(payload));\n\n        case 3:\n          _context8.next = 5;\n          return call(getDrawingList);\n\n        case 5:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\nexport function createDrawing(_ref2) {\n  var payload, _yield$call3, message, userJob;\n\n  return _regeneratorRuntime.wrap(function createDrawing$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          payload = _ref2.payload;\n          _context9.next = 3;\n          return put(drawingStore.actions.setDialogStateLoading(true));\n\n        case 3:\n          _context9.prev = 3;\n          _context9.next = 6;\n          return call(drawingApi.create, payload);\n\n        case 6:\n          _yield$call3 = _context9.sent;\n          message = _yield$call3.message;\n          return _context9.delegateYield(select(commonStore.selectUserValueJob), \"t0\", 9);\n\n        case 9:\n          userJob = _context9.t0;\n          _context9.next = 12;\n          return putResolve(drawingStore.actions.resetDetail({\n            userJob: userJob\n          }));\n\n        case 12:\n          _context9.next = 14;\n          return all([put(commonStore.actions.setSuccessMessage(message)), put(drawingStore.actions.setDialogStateTab(0))]);\n\n        case 14:\n          _context9.next = 20;\n          break;\n\n        case 16:\n          _context9.prev = 16;\n          _context9.t1 = _context9[\"catch\"](3);\n          _context9.next = 20;\n          return errorSaga.handleError(_context9.t1);\n\n        case 20:\n          _context9.next = 22;\n          return put(drawingStore.actions.setDialogStateLoading(false));\n\n        case 22:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[3, 16]]);\n}\nexport function closeDrawingDialog() {\n  var userJob, entity, specDetail, _yield$call4, drawing_id;\n\n  return _regeneratorRuntime.wrap(function closeDrawingDialog$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.prev = 0;\n          return _context10.delegateYield(select(commonStore.selectUserValueJob), \"t0\", 2);\n\n        case 2:\n          userJob = _context10.t0;\n          return _context10.delegateYield(select(commonStore.selectEntity), \"t1\", 4);\n\n        case 4:\n          entity = _context10.t1;\n          return _context10.delegateYield(select(specificationStore.selectDetail), \"t2\", 6);\n\n        case 6:\n          specDetail = _context10.t2;\n          _context10.next = 9;\n          return putResolve(drawingStore.actions.setDialogStateOpen(false));\n\n        case 9:\n          if (!(entity === 'specification')) {\n            _context10.next = 22;\n            break;\n          }\n\n          _context10.next = 12;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 12:\n          _context10.next = 14;\n          return call(fetchSpecificationDetail, specDetail.id);\n\n        case 14:\n          _yield$call4 = _context10.sent;\n          drawing_id = _yield$call4.drawing_id;\n          _context10.next = 18;\n          return put(specificationStore.actions.setDetail({\n            drawing_id: drawing_id\n          }));\n\n        case 18:\n          _context10.next = 20;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 20:\n          _context10.next = 29;\n          break;\n\n        case 22:\n          if (!(entity === 'element')) {\n            _context10.next = 27;\n            break;\n          }\n\n          _context10.next = 25;\n          return put(tagStore.sagaGetList());\n\n        case 25:\n          _context10.next = 29;\n          break;\n\n        case 27:\n          _context10.next = 29;\n          return call(getDrawingList);\n\n        case 29:\n          _context10.next = 31;\n          return put(drawingStore.actions.resetDetail({\n            userJob: userJob\n          }));\n\n        case 31:\n          _context10.next = 37;\n          break;\n\n        case 33:\n          _context10.prev = 33;\n          _context10.t3 = _context10[\"catch\"](0);\n          _context10.next = 37;\n          return errorSaga.handleError(_context10.t3);\n\n        case 37:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10, null, [[0, 33]]);\n}\nexport function openDrawingUpdateDialog(_ref3) {\n  var id, _yield$call5, drawing;\n\n  return _regeneratorRuntime.wrap(function openDrawingUpdateDialog$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          id = _ref3.payload;\n          _context11.next = 3;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 3:\n          _context11.prev = 3;\n          _context11.next = 6;\n          return call(drawingApi.getDetail, id);\n\n        case 6:\n          _yield$call5 = _context11.sent;\n          drawing = _yield$call5.drawing;\n          drawing.drawing_id = drawing.drawing_id.split(' ')[1];\n          _context11.next = 11;\n          return call(fetchDrawingInitDataForCE, drawing.job_id);\n\n        case 11:\n          _context11.next = 13;\n          return putResolve(drawingStore.actions.setDetail(drawing));\n\n        case 13:\n          _context11.next = 15;\n          return put(drawingStore.actions.setComponentList(drawing.item_list));\n\n        case 15:\n          _context11.next = 17;\n          return put(drawingStore.actions.setDialogStateOpen(true));\n\n        case 17:\n          _context11.next = 23;\n          break;\n\n        case 19:\n          _context11.prev = 19;\n          _context11.t0 = _context11[\"catch\"](3);\n          _context11.next = 23;\n          return errorSaga.handleError(_context11.t0);\n\n        case 23:\n          _context11.next = 25;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 25:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[3, 19]]);\n}\nexport function updateDrawing(_ref4) {\n  var payload, id, drawing, _yield$call6, message;\n\n  return _regeneratorRuntime.wrap(function updateDrawing$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          payload = _ref4.payload;\n          _context12.next = 3;\n          return put(drawingStore.actions.setDialogStateLoading(true));\n\n        case 3:\n          _context12.prev = 3;\n          id = payload.id, drawing = payload.drawing;\n          _context12.next = 7;\n          return call(drawingApi.update, id, drawing);\n\n        case 7:\n          _yield$call6 = _context12.sent;\n          message = _yield$call6.message;\n          _context12.next = 11;\n          return call(closeDrawingDialog);\n\n        case 11:\n          _context12.next = 13;\n          return put(commonStore.actions.setSuccessMessage(message));\n\n        case 13:\n          _context12.next = 19;\n          break;\n\n        case 15:\n          _context12.prev = 15;\n          _context12.t0 = _context12[\"catch\"](3);\n          _context12.next = 19;\n          return errorSaga.handleError(_context12.t0);\n\n        case 19:\n          _context12.next = 21;\n          return put(drawingStore.actions.setDialogStateLoading(false));\n\n        case 21:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12, null, [[3, 15]]);\n}\nexport function openRevisionDialog(_ref5) {\n  var payload, _yield$call7, next_revision;\n\n  return _regeneratorRuntime.wrap(function openRevisionDialog$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          payload = _ref5.payload;\n          _context13.next = 3;\n          return put(drawingStore.actions.setDialogStateLoading(true));\n\n        case 3:\n          _context13.prev = 3;\n          _context13.next = 6;\n          return call(drawingApi.getInitDataForRevise, payload);\n\n        case 6:\n          _yield$call7 = _context13.sent;\n          next_revision = _yield$call7.next_revision;\n          _context13.next = 10;\n          return putResolve(drawingStore.actions.setRevisionDialogDetail({\n            new_revision: next_revision\n          }));\n\n        case 10:\n          _context13.next = 12;\n          return put(drawingStore.actions.setRevisionDialogOpen(true));\n\n        case 12:\n          _context13.next = 18;\n          break;\n\n        case 14:\n          _context13.prev = 14;\n          _context13.t0 = _context13[\"catch\"](3);\n          _context13.next = 18;\n          return errorSaga.handleError(_context13.t0);\n\n        case 18:\n          _context13.next = 20;\n          return put(drawingStore.actions.setDialogStateLoading(false));\n\n        case 20:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13, null, [[3, 14]]);\n}\nexport function saveNewRev(_ref6) {\n  var payload, drawingId, revision, _yield$call8, message;\n\n  return _regeneratorRuntime.wrap(function saveNewRev$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          payload = _ref6.payload;\n          _context14.next = 3;\n          return put(drawingStore.actions.setRevisionDialogLoading(true));\n\n        case 3:\n          _context14.prev = 3;\n          drawingId = payload.drawingId, revision = payload.revision;\n          _context14.next = 7;\n          return call(drawingApi.saveRevision, drawingId, revision);\n\n        case 7:\n          _yield$call8 = _context14.sent;\n          message = _yield$call8.message;\n          _context14.next = 11;\n          return put(drawingStore.actions.setRevisionDialogOpen(false));\n\n        case 11:\n          _context14.next = 13;\n          return call(closeDrawingDialog);\n\n        case 13:\n          _context14.next = 15;\n          return put(commonStore.actions.setSuccessMessage(message));\n\n        case 15:\n          _context14.next = 21;\n          break;\n\n        case 17:\n          _context14.prev = 17;\n          _context14.t0 = _context14[\"catch\"](3);\n          _context14.next = 21;\n          return errorSaga.handleError(_context14.t0);\n\n        case 21:\n          _context14.next = 23;\n          return put(drawingStore.actions.setRevisionDialogLoading(false));\n\n        case 23:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14, null, [[3, 17]]);\n}\nexport function openCreatePartDialog(_ref7) {\n  var payload, drawingDetail;\n  return _regeneratorRuntime.wrap(function openCreatePartDialog$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          payload = _ref7.payload;\n          _context15.next = 3;\n          return put(drawingStore.actions.setDialogStateLoading(true));\n\n        case 3:\n          _context15.prev = 3;\n          return _context15.delegateYield(select(drawingStore.selectDetail), \"t0\", 5);\n\n        case 5:\n          drawingDetail = _context15.t0;\n          _context15.next = 8;\n          return putResolve(commonStore.actions.setUserValueDrawing({\n            description: '',\n            entity_id: drawingDetail.drawing_id,\n            value: drawingDetail.id\n          }));\n\n        case 8:\n          _context15.next = 10;\n          return put(partStore.sagaOpenCreateDialog(payload));\n\n        case 10:\n          _context15.next = 16;\n          break;\n\n        case 12:\n          _context15.prev = 12;\n          _context15.t1 = _context15[\"catch\"](3);\n          _context15.next = 16;\n          return errorSaga.handleError(_context15.t1);\n\n        case 16:\n          _context15.next = 18;\n          return put(drawingStore.actions.setDialogStateLoading(false));\n\n        case 18:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15, null, [[3, 12]]);\n}\n\nfunction drawingSaga() {\n  return _regeneratorRuntime.wrap(function drawingSaga$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeEvery(drawingStore.sagaGetList, getDrawingList);\n\n        case 2:\n          _context16.next = 4;\n          return takeEvery(drawingStore.sagaOpenCreateDialog, openDrawingCreateDialog);\n\n        case 4:\n          _context16.next = 6;\n          return takeEvery(drawingStore.sagaChangeUserJob, changeUserJob);\n\n        case 6:\n          _context16.next = 8;\n          return takeEvery(drawingStore.sagaCreate, createDrawing);\n\n        case 8:\n          _context16.next = 10;\n          return takeEvery(drawingStore.sagaCloseDialog, closeDrawingDialog);\n\n        case 10:\n          _context16.next = 12;\n          return takeEvery(drawingStore.sagaOpenUpdateDialog, openDrawingUpdateDialog);\n\n        case 12:\n          _context16.next = 14;\n          return takeEvery(drawingStore.sagaUpdate, updateDrawing);\n\n        case 14:\n          _context16.next = 16;\n          return takeEvery(drawingStore.sagaOpenRevDialog, openRevisionDialog);\n\n        case 16:\n          _context16.next = 18;\n          return takeEvery(drawingStore.sagaSaveNewRev, saveNewRev);\n\n        case 18:\n          _context16.next = 20;\n          return takeEvery(drawingStore.sagaOpenCreatePartDialog, openCreatePartDialog);\n\n        case 20:\n          _context16.next = 22;\n          return takeEvery(drawingStore.sagaGetDrawingPartList, getDrawingPartList);\n\n        case 22:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nexport default drawingSaga;","map":null,"metadata":{},"sourceType":"module"}