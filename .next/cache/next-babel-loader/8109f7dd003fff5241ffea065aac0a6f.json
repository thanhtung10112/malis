{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useMemo } from 'react';\nimport HttpService from '@/helper/HttpService';\nimport { singular } from 'pluralize';\n\nfunction useGetData(entity) {\n  _s();\n\n  var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var http = useMemo(function () {\n    return new HttpService(entity);\n  }, [entity]);\n\n  var getInitDataForCE = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var params,\n          response,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              params = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              _context.prev = 1;\n              _context.next = 4;\n              return http.getInitDataForCE(_objectSpread(_objectSpread({}, query), params));\n\n            case 4:\n              response = _context.sent;\n              return _context.abrupt(\"return\", response);\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('error', '>>>', _context.t0);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n\n    return function getInitDataForCE() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getGeneratedCode = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(query) {\n      var _yield$http$getGenera, generated_code;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return http.getGeneratedCode(query);\n\n            case 3:\n              _yield$http$getGenera = _context2.sent;\n              generated_code = _yield$http$getGenera.generated_code;\n              return _context2.abrupt(\"return\", generated_code);\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('error', '>>>', _context2.t0);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 8]]);\n    }));\n\n    return function getGeneratedCode(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var getDetail = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n      var response, singularEntity;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return http.getDetail(id);\n\n            case 3:\n              response = _context3.sent;\n              singularEntity = singular(entity);\n              return _context3.abrupt(\"return\", response[singularEntity]);\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('error', '>>>', _context3.t0);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 8]]);\n    }));\n\n    return function getDetail(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var postCreate = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(data) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return http.create(data);\n\n            case 3:\n              response = _context4.sent;\n              return _context4.abrupt(\"return\", response);\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error('error', '>>>', _context4.t0);\n              return _context4.abrupt(\"return\", _context4.t0);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 7]]);\n    }));\n\n    return function postCreate(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var putUpdate = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(id, data) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return http.update(id, data);\n\n            case 3:\n              response = _context5.sent;\n              return _context5.abrupt(\"return\", response);\n\n            case 7:\n              _context5.prev = 7;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.error('error', '>>>', _context5.t0);\n              return _context5.abrupt(\"return\", _context5.t0);\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 7]]);\n    }));\n\n    return function putUpdate(_x4, _x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  return {\n    getInitDataForCE: getInitDataForCE,\n    getDetail: getDetail,\n    getGeneratedCode: getGeneratedCode,\n    postCreate: postCreate,\n    putUpdate: putUpdate\n  };\n}\n\n_s(useGetData, \"rSo78kb6qCEqnF0kdfwbWHKjbY4=\");\n\nexport default useGetData;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/hooks/useGetData.ts"],"names":["useMemo","HttpService","singular","useGetData","entity","query","http","getInitDataForCE","params","response","console","error","getGeneratedCode","generated_code","getDetail","id","singularEntity","postCreate","data","create","putUpdate","update"],"mappings":"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","sourcesContent":["import { useMemo } from 'react'\n\nimport HttpService from '@/helper/HttpService'\nimport { singular } from 'pluralize'\n\nfunction useGetData(entity: string, query = {}) {\n  const http = useMemo(() => new HttpService(entity), [entity])\n\n  const getInitDataForCE = async (params = {}) => {\n    try {\n      const response = await http.getInitDataForCE({ ...query, ...params })\n      return response\n    } catch (error) {\n      console.error('error', '>>>', error)\n      return error\n    }\n  }\n\n  const getGeneratedCode = async (query) => {\n    try {\n      const { generated_code } = await http.getGeneratedCode(query)\n      return generated_code\n    } catch (error) {\n      console.error('error', '>>>', error)\n      return error\n    }\n  }\n\n  const getDetail = async (id: number) => {\n    try {\n      const response = await http.getDetail(id)\n      const singularEntity = singular(entity)\n      return response[singularEntity]\n    } catch (error) {\n      console.error('error', '>>>', error)\n      return error\n    }\n  }\n\n  const postCreate = async (data) => {\n    try {\n      const response = await http.create(data)\n      return response\n    } catch (error) {\n      console.error('error', '>>>', error)\n      return error\n    }\n  }\n\n  const putUpdate = async (id: number, data) => {\n    try {\n      const response = await http.update(id, data)\n      return response\n    } catch (error) {\n      console.error('error', '>>>', error)\n      return error\n    }\n  }\n\n  return { getInitDataForCE, getDetail, getGeneratedCode, postCreate, putUpdate }\n}\n\nexport default useGetData\n"]},"metadata":{},"sourceType":"module"}