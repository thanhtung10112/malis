{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Fersher\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\pages\\\\locations.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'next-i18next';\nimport { Grid, Typography } from '@material-ui/core';\nimport { DialogLocationCreateEdit, useConfirm, confirmConstant, AppLayout, MakeAListIcon, StatisticIcon, EnableIcon, DisableIcon, EditIcon, DeleteIcon, CreateIcon } from '@/components';\nimport { makeAListActions, commonStore, locationStore } from '@/store/reducers';\nimport getMessageConfirm from '@/utils/getMessageConfirm';\nimport * as columnProperties from '@/utils/columnProperties';\n\nfunction Locations() {\n  _s();\n\n  var _this = this;\n\n  var _useTranslation = useTranslation('location'),\n      t = _useTranslation.t;\n\n  var _useConfirm = useConfirm(),\n      confirm = _useConfirm.confirm;\n\n  var breadcrumbData = useMemo(function () {\n    return [{\n      label: 'Home',\n      href: '/'\n    }, {\n      label: 'Basic Options',\n      href: '/jobs'\n    }, {\n      label: 'Locations Management',\n      href: '/locations'\n    }];\n  }, []);\n  var dispatch = useDispatch();\n  var selectedRows = useSelector(commonStore.selectSelectedRows);\n  var permissions = useSelector(locationStore.selectPermissions);\n\n  var _useSelector = useSelector(locationStore.selectInitDataForList),\n      wiki_page = _useSelector.wiki_page,\n      column_tooltips = _useSelector.column_tooltips;\n\n  var isEmptySelectedRows = selectedRows.length <= 0;\n\n  var handleOpenUpdateDialog = function handleOpenUpdateDialog(id) {\n    return function () {\n      dispatch(locationStore.sagaOpenUpdateDialog(id));\n    };\n  };\n\n  var handleOpenCreateDialog = function handleOpenCreateDialog() {\n    dispatch(locationStore.sagaOpenCreateDialog());\n  };\n\n  var onOpenMakeAList = function onOpenMakeAList() {\n    dispatch(makeAListActions.open());\n  };\n\n  var handleExecuteOperation = function handleExecuteOperation(operation) {\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var description, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              description = getMessageConfirm(t, 'location', selectedRows, operation);\n              _context.next = 3;\n              return confirm({\n                description: description\n              });\n\n            case 3:\n              result = _context.sent;\n\n              if (result === confirmConstant.actionTypes.OK) {\n                dispatch(commonStore.sagaExecuteOperation({\n                  entity: 'location',\n                  operation: operation,\n                  operationList: selectedRows\n                }));\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n  };\n\n  var columns = useMemo(function () {\n    return [_objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.iconColumn), {}, {\n      field: 'id',\n      headerName: 'Edit',\n      description: column_tooltips.edit,\n      renderCell: function renderCell(param) {\n        return /*#__PURE__*/_jsxDEV(EditIcon, {\n          onClick: handleOpenUpdateDialog(param.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 18\n        }, _this);\n      }\n    }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n      description: column_tooltips.location_id,\n      field: 'location_id',\n      headerName: 'Code',\n      renderCell: function renderCell(param) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: param.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 32\n        }, _this);\n      }\n    }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n      description: column_tooltips.name,\n      field: 'name',\n      headerName: 'Name',\n      flex: 0.2\n    }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n      description: column_tooltips.location_type_raw,\n      field: 'location_type_raw',\n      headerName: 'Type'\n    }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n      description: column_tooltips.office,\n      field: 'office',\n      headerName: 'Office',\n      flex: 0.2,\n      renderCell: function renderCell(param) {\n        var row = param.row;\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              noWrap: true,\n              display: \"block\",\n              children: [\"Address 1: \", row.office_address1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              noWrap: true,\n              display: \"block\",\n              children: [\"Address 2: \", row.office_address2]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              noWrap: true,\n              display: \"block\",\n              children: [\"Email: \", row.office_email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              noWrap: true,\n              display: \"block\",\n              children: [\"City: \", row.office_city]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              noWrap: true,\n              display: \"block\",\n              children: [\"Zip: \", row.office_zip]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              noWrap: true,\n              display: \"block\",\n              children: [\"Phone: \", row.office_phone]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, _this);\n      }\n    }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n      description: column_tooltips.specialties,\n      field: 'specialties',\n      headerName: 'Specialties',\n      flex: 0.08\n    }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n      description: column_tooltips.orders,\n      field: 'orders',\n      headerName: 'Orders'\n    }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n      description: column_tooltips.status,\n      field: 'status',\n      headerName: 'Status',\n      renderCell: function renderCell(param) {\n        return param.value ? /*#__PURE__*/_jsxDEV(EnableIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 47\n        }, _this) : /*#__PURE__*/_jsxDEV(DisableIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 64\n        }, _this);\n      }\n    })];\n  }, [permissions]);\n  var buttons = [{\n    label: t('common:button.new'),\n    startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 18\n    }, this),\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.create),\n    onClick: handleOpenCreateDialog\n  }, {\n    label: t('common:button.delete'),\n    startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 18\n    }, this),\n    disabled: isEmptySelectedRows || !(permissions === null || permissions === void 0 ? void 0 : permissions[\"delete\"]),\n    onClick: handleExecuteOperation('delete')\n  }, {\n    label: t('common:button.enable'),\n    startIcon: /*#__PURE__*/_jsxDEV(EnableIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 18\n    }, this),\n    disabled: isEmptySelectedRows || !(permissions === null || permissions === void 0 ? void 0 : permissions.disable_enable),\n    onClick: handleExecuteOperation('enable')\n  }, {\n    label: t('common:button.disable'),\n    startIcon: /*#__PURE__*/_jsxDEV(DisableIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 18\n    }, this),\n    disabled: isEmptySelectedRows || !(permissions === null || permissions === void 0 ? void 0 : permissions.disable_enable),\n    onClick: handleExecuteOperation('disable')\n  }, {\n    label: t('common:button.make_a_list'),\n    startIcon: /*#__PURE__*/_jsxDEV(MakeAListIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 18\n    }, this),\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.make_a_list),\n    onClick: onOpenMakeAList\n  }, {\n    label: t('common:button.statistic'),\n    startIcon: /*#__PURE__*/_jsxDEV(StatisticIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 18\n    }, this),\n    disabled: true\n  }];\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    entity: \"location\",\n    breadcrumbs: breadcrumbData,\n    wikiPage: wiki_page,\n    buttons: buttons,\n    permissions: permissions,\n    Dialogs: /*#__PURE__*/_jsxDEV(DialogLocationCreateEdit, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 16\n    }, this),\n    tableProps: {\n      columns: columns,\n      rowHeight: 65\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Locations, \"IOc/y8MqlcsnJu0Ff4jw7Au7mfo=\", false, function () {\n  return [useTranslation, useConfirm, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Locations;\nexport var __N_SSP = true;\nexport default Locations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Locations\");","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/pages/locations.tsx"],"names":["useMemo","useDispatch","useSelector","useTranslation","Grid","Typography","DialogLocationCreateEdit","useConfirm","confirmConstant","AppLayout","MakeAListIcon","StatisticIcon","EnableIcon","DisableIcon","EditIcon","DeleteIcon","CreateIcon","makeAListActions","commonStore","locationStore","getMessageConfirm","columnProperties","Locations","t","confirm","breadcrumbData","label","href","dispatch","selectedRows","selectSelectedRows","permissions","selectPermissions","selectInitDataForList","wiki_page","column_tooltips","isEmptySelectedRows","length","handleOpenUpdateDialog","id","sagaOpenUpdateDialog","handleOpenCreateDialog","sagaOpenCreateDialog","onOpenMakeAList","open","handleExecuteOperation","operation","description","result","actionTypes","OK","sagaExecuteOperation","entity","operationList","columns","defaultProperties","iconColumn","field","headerName","edit","renderCell","param","value","centerColumn","location_id","name","flex","location_type_raw","office","row","office_address1","office_address2","office_email","office_city","office_zip","office_phone","specialties","orders","status","buttons","startIcon","disabled","create","onClick","disable_enable","make_a_list","rowHeight"],"mappings":"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","sourcesContent":["import { useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useTranslation } from 'next-i18next'\nimport useAuthMiddleware from '@/hooks/useAuthMiddleware'\n\nimport { Grid, Typography } from '@material-ui/core'\n\nimport {\n  DialogLocationCreateEdit,\n  useConfirm,\n  confirmConstant,\n  AppLayout,\n  MakeAListIcon,\n  StatisticIcon,\n  EnableIcon,\n  DisableIcon,\n  EditIcon,\n  DeleteIcon,\n  CreateIcon\n} from '@/components'\n\nimport { makeAListActions, commonStore, locationStore } from '@/store/reducers'\n\nimport getMessageConfirm from '@/utils/getMessageConfirm'\nimport * as columnProperties from '@/utils/columnProperties'\n\nimport type { Action } from '@/types/Common'\nimport type { GridColumns } from '@material-ui/data-grid'\n\nfunction Locations() {\n  const { t } = useTranslation('location')\n\n  const { confirm } = useConfirm()\n\n  const breadcrumbData = useMemo(\n    () => [\n      { label: 'Home', href: '/' },\n      { label: 'Basic Options', href: '/jobs' },\n      { label: 'Locations Management', href: '/locations' }\n    ],\n    []\n  )\n\n  const dispatch = useDispatch()\n  const selectedRows = useSelector(commonStore.selectSelectedRows)\n  const permissions = useSelector(locationStore.selectPermissions)\n  const { wiki_page, column_tooltips } = useSelector(locationStore.selectInitDataForList)\n\n  const isEmptySelectedRows = selectedRows.length <= 0\n\n  const handleOpenUpdateDialog = (id: number) => () => {\n    dispatch(locationStore.sagaOpenUpdateDialog(id))\n  }\n\n  const handleOpenCreateDialog = () => {\n    dispatch(locationStore.sagaOpenCreateDialog())\n  }\n\n  const onOpenMakeAList = () => {\n    dispatch(makeAListActions.open())\n  }\n\n  const handleExecuteOperation = (operation: Action) => async () => {\n    const description = getMessageConfirm(t, 'location', selectedRows, operation)\n    const result = await confirm({ description })\n    if (result === confirmConstant.actionTypes.OK) {\n      dispatch(commonStore.sagaExecuteOperation({ entity: 'location', operation, operationList: selectedRows }))\n    }\n  }\n\n  const columns = useMemo<GridColumns>(\n    () => [\n      {\n        ...columnProperties.defaultProperties,\n        ...columnProperties.iconColumn,\n        field: 'id',\n        headerName: 'Edit',\n        description: column_tooltips.edit,\n        renderCell: (param) => {\n          return <EditIcon onClick={handleOpenUpdateDialog(param.value as number)} />\n        }\n      },\n      {\n        ...columnProperties.defaultProperties,\n        ...columnProperties.centerColumn,\n        description: column_tooltips.location_id,\n        field: 'location_id',\n        headerName: 'Code',\n        renderCell: (param) => <span>{param.value}</span>\n      },\n      {\n        ...columnProperties.defaultProperties,\n        description: column_tooltips.name,\n        field: 'name',\n        headerName: 'Name',\n        flex: 0.2\n      },\n      {\n        ...columnProperties.defaultProperties,\n        description: column_tooltips.location_type_raw,\n        field: 'location_type_raw',\n        headerName: 'Type'\n      },\n      {\n        ...columnProperties.defaultProperties,\n        description: column_tooltips.office,\n        field: 'office',\n        headerName: 'Office',\n        flex: 0.2,\n        renderCell: (param) => {\n          const { row } = param\n          return (\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <Typography variant=\"caption\" noWrap display=\"block\">\n                  Address 1: {row.office_address1}\n                </Typography>\n                <Typography variant=\"caption\" noWrap display=\"block\">\n                  Address 2: {row.office_address2}\n                </Typography>\n                <Typography variant=\"caption\" noWrap display=\"block\">\n                  Email: {row.office_email}\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography variant=\"caption\" noWrap display=\"block\">\n                  City: {row.office_city}\n                </Typography>\n                <Typography variant=\"caption\" noWrap display=\"block\">\n                  Zip: {row.office_zip}\n                </Typography>\n                <Typography variant=\"caption\" noWrap display=\"block\">\n                  Phone: {row.office_phone}\n                </Typography>\n              </Grid>\n            </Grid>\n          )\n        }\n      },\n      {\n        ...columnProperties.defaultProperties,\n        description: column_tooltips.specialties,\n        field: 'specialties',\n        headerName: 'Specialties',\n        flex: 0.08\n      },\n      {\n        ...columnProperties.defaultProperties,\n        description: column_tooltips.orders,\n        field: 'orders',\n        headerName: 'Orders'\n      },\n      {\n        ...columnProperties.defaultProperties,\n        ...columnProperties.centerColumn,\n        description: column_tooltips.status,\n        field: 'status',\n        headerName: 'Status',\n        renderCell: (param) => (param.value ? <EnableIcon /> : <DisableIcon />)\n      }\n    ],\n    [permissions]\n  )\n\n  const buttons = [\n    {\n      label: t('common:button.new'),\n      startIcon: <CreateIcon />,\n      disabled: !permissions?.create,\n      onClick: handleOpenCreateDialog\n    },\n    {\n      label: t('common:button.delete'),\n      startIcon: <DeleteIcon />,\n      disabled: isEmptySelectedRows || !permissions?.delete,\n      onClick: handleExecuteOperation('delete')\n    },\n    {\n      label: t('common:button.enable'),\n      startIcon: <EnableIcon />,\n      disabled: isEmptySelectedRows || !permissions?.disable_enable,\n      onClick: handleExecuteOperation('enable')\n    },\n    {\n      label: t('common:button.disable'),\n      startIcon: <DisableIcon />,\n      disabled: isEmptySelectedRows || !permissions?.disable_enable,\n      onClick: handleExecuteOperation('disable')\n    },\n    {\n      label: t('common:button.make_a_list'),\n      startIcon: <MakeAListIcon />,\n      disabled: !permissions?.make_a_list,\n      onClick: onOpenMakeAList\n    },\n    {\n      label: t('common:button.statistic'),\n      startIcon: <StatisticIcon />,\n      disabled: true\n    }\n  ]\n\n  return (\n    <AppLayout\n      entity=\"location\"\n      breadcrumbs={breadcrumbData}\n      wikiPage={wiki_page}\n      buttons={buttons}\n      permissions={permissions}\n      Dialogs={<DialogLocationCreateEdit />}\n      tableProps={{\n        columns: columns,\n        rowHeight: 65\n      }}\n    />\n  )\n}\n\nexport const getServerSideProps = useAuthMiddleware(['common', 'location', 'make_a_list', 'advanced_filter'])\n\nexport default Locations\n"]},"metadata":{},"sourceType":"module"}