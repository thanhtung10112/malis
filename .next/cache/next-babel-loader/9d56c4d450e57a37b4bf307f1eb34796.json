{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Materials\\\\TabGeneral.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useFormContext } from 'react-hook-form';\nimport { useSelector } from 'react-redux';\nimport { Grid, Paper } from '@material-ui/core';\nimport { DataTable, AppAutocompleteAsync, FormControllerTextField, SectionTimezone, AppAutocomplete } from '@/components';\nimport { When } from 'react-if';\nimport { materialStore, specificationStore, commonStore } from '@/store/reducers';\nimport { defaultProperties } from '@/utils/columnProperties';\n\nconst TabGeneral = () => {\n  var _materialsForm$errors, _materialsForm$errors2;\n\n  const materialsForm = useFormContext();\n  const materialDetail = useSelector(specificationStore.selectDetail);\n  const userJob = useSelector(commonStore.selectUserValueJob);\n  const materialQuantity = useSelector(materialStore.selectMaterialQuantity);\n\n  const handleChangeDrawingId = (event, optionValue) => {\n    console.warn('optionValue', '>>>', optionValue);\n  }; // const columns = [\n  // { field: 'id', headerName: 'DT_RowId(ID)', width: 150 },\n  //   { field: 'quantity', headerName: 'Quantity' },\n  //   { field: 'usage', headerName: 'Usage', width: 130 }\n  // ]\n  // const rows = [\n  //   {\n  //     id: 1,\n  //     quantity: 0,\n  //     usage: 'Installed Parts'\n  //   },\n  //   {\n  //     id: 2,\n  //     quantity: 0,\n  //     usage: 'Spare Parts'\n  //   },\n  //   {\n  //     id: 3,\n  //     quantity: 0,\n  //     usage: 'Commissioning Parts'\n  //   },\n  //   {\n  //     id: 4,\n  //     quantity: 0,\n  //     usage: 'Replace Parts'\n  //   },\n  //   {\n  //     id: 5,\n  //     quantity: 0,\n  //     usage: 'Erection Commissioning and Supervision'\n  //   }\n  // ]\n\n\n  const columns = [{\n    // ...editCell('Quantity'),\n    // ...rightColumn,\n    headerName: 'Quantity',\n    field: 'quantity',\n    flex: 0.1,\n    sortable: false\n  }, _objectSpread(_objectSpread({}, defaultProperties), {}, {\n    field: 'usage',\n    headerName: 'Usage',\n    flex: 0.3\n  })];\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          style: {\n            marginTop: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(AppAutocomplete, {\n            helperText: (_materialsForm$errors = materialsForm.errors.job_id) === null || _materialsForm$errors === void 0 ? void 0 : _materialsForm$errors.message,\n            error: Boolean(materialsForm.errors.job_id),\n            value: userJob,\n            popupIcon: null,\n            disabled: true,\n            label: \"Job\",\n            required: true,\n            primaryKeyOption: \"value\",\n            options: [],\n            renderOption: option => option.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AppAutocompleteAsync, {\n            helperText: (_materialsForm$errors2 = materialsForm.errors.drawing_id) === null || _materialsForm$errors2 === void 0 ? void 0 : _materialsForm$errors2.message,\n            error: Boolean(materialsForm.errors.drawing_id),\n            compName: \"part_list\",\n            additionalData: {\n              limit_to_job: userJob.value\n            },\n            required: true,\n            label: \"Part #\",\n            onChange: handleChangeDrawingId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n            disabled: false,\n            control: materialsForm.control,\n            label: \"Description #\",\n            required: true,\n            name: \"spec_id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n            disabled: false,\n            control: materialsForm.control,\n            label: \"Mass kg\",\n            required: true,\n            name: \"Mass\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n            disabled: false,\n            control: materialsForm.control,\n            label: \"Unit #\",\n            name: \"spec_id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(When, {\n          condition: false,\n          children: /*#__PURE__*/_jsxDEV(SectionTimezone, {\n            value: materialDetail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 1,\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          hideFooter: true,\n          disableSelectionOnClick: true,\n          disableColumnMenu: true,\n          tableHeight: 250,\n          getRowId: r => r.id,\n          columns: {\n            columns\n          } // rows={[materialQuantity]}\n          // columns={[\n          //   {\n          // ...editCell('Quantity'),\n          // ...rightColumn,\n          //     headerName: 'Quantity',\n          //     field: 'quantity',\n          //     flex: 0.1,\n          //     sortable: false\n          //   },\n          //   {\n          //     ...defaultProperties,\n          //     field: 'usage',\n          //     headerName: 'Usage',\n          //     flex: 0.3\n          //   }\n          // ]}\n          // rows={rows}\n          // columns={columns}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\nexport default TabGeneral;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Materials/TabGeneral.tsx"],"names":["useFormContext","useSelector","Grid","Paper","DataTable","AppAutocompleteAsync","FormControllerTextField","SectionTimezone","AppAutocomplete","When","materialStore","specificationStore","commonStore","defaultProperties","TabGeneral","materialsForm","materialDetail","selectDetail","userJob","selectUserValueJob","materialQuantity","selectMaterialQuantity","handleChangeDrawingId","event","optionValue","console","warn","columns","headerName","field","flex","sortable","marginTop","errors","job_id","message","Boolean","option","description","drawing_id","limit_to_job","value","control","r","id"],"mappings":"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","sourcesContent":["import { useFormContext } from 'react-hook-form'\nimport { useSelector } from 'react-redux'\n\nimport { Grid, Paper } from '@material-ui/core'\nimport {\n  DataTable,\n  AppAutocompleteAsync,\n  FormControllerTextField,\n  SectionTimezone,\n  AppAutocomplete\n} from '@/components'\nimport { When } from 'react-if'\n\nimport type { GridColumns } from '@material-ui/data-grid'\n\nimport { materialStore, specificationStore, commonStore } from '@/store/reducers'\nimport { defaultProperties, editCell } from '@/utils/columnProperties'\n\nimport type { SpecificationDetail } from '@/types/Specification'\nimport type { DataForDropdown } from '@/types/Common'\n\nconst TabGeneral = () => {\n  const materialsForm = useFormContext<SpecificationDetail>()\n\n  const materialDetail = useSelector(specificationStore.selectDetail)\n  const userJob = useSelector(commonStore.selectUserValueJob)\n  const materialQuantity = useSelector(materialStore.selectMaterialQuantity)\n\n  const handleChangeDrawingId = (event, optionValue: DataForDropdown) => {\n    console.warn('optionValue', '>>>', optionValue)\n  }\n\n  // const columns = [\n  // { field: 'id', headerName: 'DT_RowId(ID)', width: 150 },\n  //   { field: 'quantity', headerName: 'Quantity' },\n  //   { field: 'usage', headerName: 'Usage', width: 130 }\n  // ]\n\n  // const rows = [\n  //   {\n  //     id: 1,\n  //     quantity: 0,\n  //     usage: 'Installed Parts'\n  //   },\n  //   {\n  //     id: 2,\n  //     quantity: 0,\n  //     usage: 'Spare Parts'\n  //   },\n  //   {\n  //     id: 3,\n  //     quantity: 0,\n  //     usage: 'Commissioning Parts'\n  //   },\n  //   {\n  //     id: 4,\n  //     quantity: 0,\n  //     usage: 'Replace Parts'\n  //   },\n  //   {\n  //     id: 5,\n  //     quantity: 0,\n  //     usage: 'Erection Commissioning and Supervision'\n  //   }\n  // ]\n\n  const columns: GridColumns = [\n    {\n      // ...editCell('Quantity'),\n      // ...rightColumn,\n      headerName: 'Quantity',\n      field: 'quantity',\n      flex: 0.1,\n      sortable: false\n    },\n    {\n      ...defaultProperties,\n      field: 'usage',\n      headerName: 'Usage',\n      flex: 0.3\n    }\n  ]\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={6}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} style={{ marginTop: 8 }}>\n            <AppAutocomplete\n              helperText={materialsForm.errors.job_id?.message}\n              error={Boolean(materialsForm.errors.job_id)}\n              value={userJob}\n              popupIcon={null}\n              disabled\n              label=\"Job\"\n              required\n              primaryKeyOption=\"value\"\n              options={[]}\n              renderOption={(option) => option.description}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <AppAutocompleteAsync\n              helperText={materialsForm.errors.drawing_id?.message}\n              error={Boolean(materialsForm.errors.drawing_id)}\n              compName=\"part_list\"\n              additionalData={{ limit_to_job: userJob.value }}\n              required\n              label=\"Part #\"\n              onChange={handleChangeDrawingId}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <FormControllerTextField\n              disabled={false}\n              control={materialsForm.control}\n              label=\"Description #\"\n              required\n              name=\"spec_id\"\n            />\n          </Grid>\n\n          <Grid item xs={6}>\n            <FormControllerTextField\n              disabled={false}\n              control={materialsForm.control}\n              label=\"Mass kg\"\n              required\n              name=\"Mass\"\n            />\n          </Grid>\n\n          <Grid item xs={6}>\n            <FormControllerTextField disabled={false} control={materialsForm.control} label=\"Unit #\" name=\"spec_id\" />\n          </Grid>\n\n          <When condition={false}>\n            <SectionTimezone value={materialDetail} />\n          </When>\n        </Grid>\n      </Grid>\n\n      <Grid item xs={6}>\n        <Paper elevation={1}>\n          <DataTable\n            hideFooter\n            disableSelectionOnClick\n            disableColumnMenu\n            tableHeight={250}\n            getRowId={(r) => r.id}\n            columns={{\n              columns\n            }}\n            // rows={[materialQuantity]}\n            // columns={[\n            //   {\n            // ...editCell('Quantity'),\n            // ...rightColumn,\n            //     headerName: 'Quantity',\n            //     field: 'quantity',\n            //     flex: 0.1,\n            //     sortable: false\n            //   },\n            //   {\n            //     ...defaultProperties,\n            //     field: 'usage',\n            //     headerName: 'Usage',\n            //     flex: 0.3\n            //   }\n            // ]}\n\n            // rows={rows}\n            // columns={columns}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default TabGeneral\n"]},"metadata":{},"sourceType":"module"}