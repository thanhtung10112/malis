{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport _ from 'lodash';\n\nfunction useSSE(operationId) {\n  var domain = process.env.NEXT_PUBLIC_BACKEND_URL || 'http://localhost:5000/';\n  var sseConnection = React.useRef(null);\n\n  var _React$useState = React.useState({\n    message: 'Initializing...',\n    status: null,\n    operation_result: null\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dataSSE = _React$useState2[0],\n      setDataSSE = _React$useState2[1];\n\n  var backgroundJobListener = function backgroundJobListener(event) {\n    var response = JSON.parse(event.data);\n    setDataSSE(response);\n\n    if (response.status === 'SUCCESS' || response.status === 'ERROR') {\n      sseConnection.current.removeEventListener(operationId, backgroundJobListener);\n      sseConnection.current.close();\n      sseConnection.current = null;\n    }\n  };\n\n  React.useEffect(function () {\n    if (_.isEmpty(operationId)) {\n      return null;\n    }\n\n    if (!sseConnection.current) {\n      sseConnection.current = new EventSource(\"\".concat(domain, \"background_stream\"));\n    }\n\n    sseConnection.current.addEventListener(operationId, backgroundJobListener);\n  }, [operationId]);\n  return {\n    dataSSE: dataSSE,\n    setDataSSE: setDataSSE\n  };\n}\n\nexport default useSSE;","map":null,"metadata":{},"sourceType":"module"}