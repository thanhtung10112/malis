{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Tag\\\\TabGeneral.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useStyles from './styles';\nimport { Grid } from '@material-ui/core';\nimport { TableMultilingualDescription, AppAutocompleteAsync, FormControllerTextField, SectionTimezone, AppAutocomplete, FormControllerNumberField } from '@/components';\nimport { Unless } from 'react-if';\nimport _ from 'lodash';\nimport { tagStore, commonStore } from '@/store/reducers';\n\nvar TabGeneral = function TabGeneral() {\n  _s();\n\n  var _tagForm$errors$job_i, _tagForm$errors$schem;\n\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      defaultPartList = _useState[0],\n      setDefaultPartList = _useState[1];\n\n  var tagForm = useFormContext();\n  var watchSchematic = tagForm.watch('schematic_id', null);\n  var watchPartId = tagForm.watch('part_id', null);\n  var watchId = tagForm.watch('id', null);\n  var dispatch = useDispatch();\n  var tagDetail = useSelector(tagStore.selectDetail);\n  var parameters = useSelector(tagStore.selectParameters);\n  var userJob = useSelector(commonStore.selectUserValueJob);\n\n  var isCreating = _.isNil(tagDetail.id);\n\n  var handleChangeSchematicId = function handleChangeSchematicId(event, optionValue) {\n    var formData = tagForm.getValues();\n    setDefaultPartList([]);\n    dispatch(tagStore.sagaGetGenerateCode({\n      formData: formData,\n      schematic: optionValue\n    }));\n  };\n\n  var handleFormatElementId = function handleFormatElementId(event) {\n    var value = event.target.value;\n    var formatValue = value.padStart(4, '0');\n    tagForm.setValue('element_id', formatValue);\n  };\n\n  var getAdditionalDataPart = function getAdditionalDataPart() {\n    var data = {};\n    data.limit_to_job = userJob.value;\n\n    if (!_.isNil(watchSchematic)) {\n      data.excluded_drawings = [watchSchematic.value];\n    }\n\n    return data;\n  };\n\n  var additionalDataPart = getAdditionalDataPart();\n\n  var handleSelectPart = function handleSelectPart(event, optionValue) {\n    var _formData$schematic_i;\n\n    var formData = tagForm.getValues();\n    var payload = {\n      selected_part: (optionValue === null || optionValue === void 0 ? void 0 : optionValue.value) || null,\n      selected_drawing: (_formData$schematic_i = formData.schematic_id) === null || _formData$schematic_i === void 0 ? void 0 : _formData$schematic_i.value,\n      current_item: isCreating ? null : formData.id,\n      formData: formData\n    };\n    dispatch(tagStore.sagaGetPart(payload));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          style: {\n            marginTop: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(AppAutocomplete, {\n            helperText: (_tagForm$errors$job_i = tagForm.errors.job_id) === null || _tagForm$errors$job_i === void 0 ? void 0 : _tagForm$errors$job_i.message,\n            error: Boolean(tagForm.errors.job_id),\n            value: userJob,\n            popupIcon: null,\n            disabled: true,\n            label: \"Job\",\n            required: true,\n            primaryKeyOption: \"value\",\n            options: [],\n            renderOption: function renderOption(option) {\n              return option.description;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AppAutocompleteAsync, {\n            disabled: !isCreating,\n            helperText: (_tagForm$errors$schem = tagForm.errors.schematic_id) === null || _tagForm$errors$schem === void 0 ? void 0 : _tagForm$errors$schem.message,\n            error: Boolean(tagForm.errors.schematic_id),\n            value: watchSchematic,\n            compName: \"drawing_list\",\n            additionalData: {\n              limit_to_job: userJob.value\n            },\n            required: true,\n            label: \"Schematic #\",\n            onChange: handleChangeSchematicId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControllerNumberField, {\n            disabled: !isCreating,\n            fixedDecimalScale: false,\n            decimalScale: null,\n            thousandSeparator: \"\",\n            isNumericString: true,\n            control: tagForm.control,\n            label: \"Element #\",\n            required: true,\n            name: \"element_id\",\n            onBlur: handleFormatElementId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n            control: tagForm.control,\n            label: \"Tag #\",\n            name: \"tag\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AppAutocompleteAsync, {\n            disabled: !watchSchematic,\n            disableClearable: false,\n            value: watchPartId,\n            compName: \"part_list\",\n            additionalData: additionalDataPart,\n            label: \"Part #\",\n            onChange: handleSelectPart,\n            defaultOptions: defaultPartList,\n            filterOptions: function filterOptions(options) {\n              if (_.isNil(options)) {\n                return [];\n              }\n\n              if (isCreating) {\n                return options;\n              }\n\n              return _.filter(options, function (option) {\n                return option.value !== watchId;\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(TableMultilingualDescription, {\n        languageList: parameters.PLLA,\n        editMode: !isCreating,\n        name: \"descriptions\",\n        tableHeight: 160,\n        control: tagForm.control,\n        copyable: true,\n        copyDialogProps: {\n          compName: 'element_list',\n          entity: 'elements'\n        },\n        disabled: Boolean(watchPartId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.tabGeneral__divider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n            control: tagForm.control,\n            label: \"Fluid\",\n            name: \"fluid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n            control: tagForm.control,\n            label: \"Tech. data\",\n            name: \"tech_data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Unless, {\n        condition: isCreating,\n        children: /*#__PURE__*/_jsxDEV(SectionTimezone, {\n          value: tagDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(TableMultilingualDescription, {\n        languageList: parameters.PLLA,\n        editMode: !isCreating,\n        name: \"functions\",\n        tableHeight: 160,\n        control: tagForm.control,\n        copyable: true,\n        copyDialogProps: {\n          compName: 'element_list',\n          entity: 'elements'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TabGeneral, \"ynGY9uiqZ6xMl75pmLwPycTLJ/c=\", false, function () {\n  return [useStyles, useFormContext, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = TabGeneral;\nexport default TabGeneral;\n\nvar _c;\n\n$RefreshReg$(_c, \"TabGeneral\");","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Tag/TabGeneral.tsx"],"names":["useState","useFormContext","useSelector","useDispatch","useStyles","Grid","TableMultilingualDescription","AppAutocompleteAsync","FormControllerTextField","SectionTimezone","AppAutocomplete","FormControllerNumberField","Unless","_","tagStore","commonStore","TabGeneral","classes","defaultPartList","setDefaultPartList","tagForm","watchSchematic","watch","watchPartId","watchId","dispatch","tagDetail","selectDetail","parameters","selectParameters","userJob","selectUserValueJob","isCreating","isNil","id","handleChangeSchematicId","event","optionValue","formData","getValues","sagaGetGenerateCode","schematic","handleFormatElementId","value","target","formatValue","padStart","setValue","getAdditionalDataPart","data","limit_to_job","excluded_drawings","additionalDataPart","handleSelectPart","payload","selected_part","selected_drawing","schematic_id","current_item","sagaGetPart","marginTop","errors","job_id","message","Boolean","option","description","control","options","filter","PLLA","compName","entity","tabGeneral__divider"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,UAAtB;AAEA,SAASC,IAAT,QAAqB,mBAArB;AACA,SACEC,4BADF,EAEEC,oBAFF,EAGEC,uBAHF,EAIEC,eAJF,EAKEC,eALF,EAMEC,yBANF,QAOO,cAPP;AAQA,SAASC,MAAT,QAAuB,UAAvB;AAEA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,kBAAtC;;AAKA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AAAA;;AACvB,MAAMC,OAAO,GAAGb,SAAS,EAAzB;;AADuB,kBAGuBJ,QAAQ,CAAC,EAAD,CAH/B;AAAA,MAGhBkB,eAHgB;AAAA,MAGCC,kBAHD;;AAKvB,MAAMC,OAAO,GAAGnB,cAAc,EAA9B;AACA,MAAMoB,cAAc,GAAGD,OAAO,CAACE,KAAR,CAAc,cAAd,EAA8B,IAA9B,CAAvB;AACA,MAAMC,WAAW,GAAGH,OAAO,CAACE,KAAR,CAAc,SAAd,EAAyB,IAAzB,CAApB;AACA,MAAME,OAAO,GAAGJ,OAAO,CAACE,KAAR,CAAc,IAAd,EAAoB,IAApB,CAAhB;AAEA,MAAMG,QAAQ,GAAGtB,WAAW,EAA5B;AACA,MAAMuB,SAAS,GAAGxB,WAAW,CAACY,QAAQ,CAACa,YAAV,CAA7B;AACA,MAAMC,UAAU,GAAG1B,WAAW,CAACY,QAAQ,CAACe,gBAAV,CAA9B;AACA,MAAMC,OAAO,GAAG5B,WAAW,CAACa,WAAW,CAACgB,kBAAb,CAA3B;;AAEA,MAAMC,UAAU,GAAGnB,CAAC,CAACoB,KAAF,CAAQP,SAAS,CAACQ,EAAlB,CAAnB;;AAEA,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,KAAD,EAAQC,WAAR,EAAyC;AACvE,QAAMC,QAAQ,GAAGlB,OAAO,CAACmB,SAAR,EAAjB;AACApB,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAM,IAAAA,QAAQ,CAACX,QAAQ,CAAC0B,mBAAT,CAA6B;AAAEF,MAAAA,QAAQ,EAARA,QAAF;AAAYG,MAAAA,SAAS,EAAEJ;AAAvB,KAA7B,CAAD,CAAR;AACD,GAJD;;AAMA,MAAMK,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACN,KAAD,EAAW;AAAA,QAC/BO,KAD+B,GACrBP,KAAK,CAACQ,MADe,CAC/BD,KAD+B;AAEvC,QAAME,WAAW,GAAGF,KAAK,CAACG,QAAN,CAAe,CAAf,EAAkB,GAAlB,CAApB;AACA1B,IAAAA,OAAO,CAAC2B,QAAR,CAAiB,YAAjB,EAA+BF,WAA/B;AACD,GAJD;;AAMA,MAAMG,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAClC,QAAMC,IAAI,GAAG,EAAb;AACAA,IAAAA,IAAI,CAACC,YAAL,GAAoBpB,OAAO,CAACa,KAA5B;;AACA,QAAI,CAAC9B,CAAC,CAACoB,KAAF,CAAQZ,cAAR,CAAL,EAA8B;AAC5B4B,MAAAA,IAAI,CAACE,iBAAL,GAAyB,CAAE9B,cAAD,CAAoCsB,KAArC,CAAzB;AACD;;AACD,WAAOM,IAAP;AACD,GAPD;;AASA,MAAMG,kBAAkB,GAAGJ,qBAAqB,EAAhD;;AAEA,MAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACjB,KAAD,EAAQC,WAAR,EAAyC;AAAA;;AAChE,QAAMC,QAAQ,GAAGlB,OAAO,CAACmB,SAAR,EAAjB;AACA,QAAMe,OAAO,GAAG;AACdC,MAAAA,aAAa,EAAE,CAAAlB,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEM,KAAb,KAAsB,IADvB;AAEda,MAAAA,gBAAgB,2BAAGlB,QAAQ,CAACmB,YAAZ,0DAAE,sBAA4Cd,KAFhD;AAGde,MAAAA,YAAY,EAAE1B,UAAU,GAAG,IAAH,GAAUM,QAAQ,CAACJ,EAH7B;AAIdI,MAAAA,QAAQ,EAARA;AAJc,KAAhB;AAMAb,IAAAA,QAAQ,CAACX,QAAQ,CAAC6C,WAAT,CAAqBL,OAArB,CAAD,CAAR;AACD,GATD;;AAWA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,KAAK,EAAE;AAAEM,YAAAA,SAAS,EAAE;AAAb,WAA1B;AAAA,iCACE,QAAC,eAAD;AACE,YAAA,UAAU,2BAAExC,OAAO,CAACyC,MAAR,CAAeC,MAAjB,0DAAE,sBAAuBC,OADrC;AAEE,YAAA,KAAK,EAAEC,OAAO,CAAC5C,OAAO,CAACyC,MAAR,CAAeC,MAAhB,CAFhB;AAGE,YAAA,KAAK,EAAEhC,OAHT;AAIE,YAAA,SAAS,EAAE,IAJb;AAKE,YAAA,QAAQ,MALV;AAME,YAAA,KAAK,EAAC,KANR;AAOE,YAAA,QAAQ,MAPV;AAQE,YAAA,gBAAgB,EAAC,OARnB;AASE,YAAA,OAAO,EAAE,EATX;AAUE,YAAA,YAAY,EAAE,sBAACmC,MAAD;AAAA,qBAAYA,MAAM,CAACC,WAAnB;AAAA;AAVhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBADF,eAeE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACE,QAAC,oBAAD;AACE,YAAA,QAAQ,EAAE,CAAClC,UADb;AAEE,YAAA,UAAU,2BAAEZ,OAAO,CAACyC,MAAR,CAAeJ,YAAjB,0DAAE,sBAA6BM,OAF3C;AAGE,YAAA,KAAK,EAAEC,OAAO,CAAC5C,OAAO,CAACyC,MAAR,CAAeJ,YAAhB,CAHhB;AAIE,YAAA,KAAK,EAAEpC,cAJT;AAKE,YAAA,QAAQ,EAAC,cALX;AAME,YAAA,cAAc,EAAE;AAAE6B,cAAAA,YAAY,EAAEpB,OAAO,CAACa;AAAxB,aANlB;AAOE,YAAA,QAAQ,MAPV;AAQE,YAAA,KAAK,EAAC,aARR;AASE,YAAA,QAAQ,EAAER;AATZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBAfF,eA6BE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACE,QAAC,yBAAD;AACE,YAAA,QAAQ,EAAE,CAACH,UADb;AAEE,YAAA,iBAAiB,EAAE,KAFrB;AAGE,YAAA,YAAY,EAAE,IAHhB;AAIE,YAAA,iBAAiB,EAAC,EAJpB;AAKE,YAAA,eAAe,MALjB;AAME,YAAA,OAAO,EAAEZ,OAAO,CAAC+C,OANnB;AAOE,YAAA,KAAK,EAAC,WAPR;AAQE,YAAA,QAAQ,MARV;AASE,YAAA,IAAI,EAAC,YATP;AAUE,YAAA,MAAM,EAAEzB;AAVV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBA7BF,eA4CE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACE,QAAC,uBAAD;AAAyB,YAAA,OAAO,EAAEtB,OAAO,CAAC+C,OAA1C;AAAmD,YAAA,KAAK,EAAC,OAAzD;AAAiE,YAAA,IAAI,EAAC;AAAtE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBA5CF,eAgDE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACE,QAAC,oBAAD;AACE,YAAA,QAAQ,EAAE,CAAC9C,cADb;AAEE,YAAA,gBAAgB,EAAE,KAFpB;AAGE,YAAA,KAAK,EAAEE,WAHT;AAIE,YAAA,QAAQ,EAAC,WAJX;AAKE,YAAA,cAAc,EAAE6B,kBALlB;AAME,YAAA,KAAK,EAAC,QANR;AAOE,YAAA,QAAQ,EAAEC,gBAPZ;AAQE,YAAA,cAAc,EAAEnC,eARlB;AASE,YAAA,aAAa,EAAE,uBAACkD,OAAD,EAAa;AAC1B,kBAAIvD,CAAC,CAACoB,KAAF,CAAQmC,OAAR,CAAJ,EAAsB;AACpB,uBAAO,EAAP;AACD;;AACD,kBAAIpC,UAAJ,EAAgB;AACd,uBAAOoC,OAAP;AACD;;AACD,qBAAOvD,CAAC,CAACwD,MAAF,CAASD,OAAT,EAAkB,UAACH,MAAD;AAAA,uBAAYA,MAAM,CAACtB,KAAP,KAAiBnB,OAA7B;AAAA,eAAlB,CAAP;AACD;AAjBH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBAhDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eA0EE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,6BACE,QAAC,4BAAD;AACE,QAAA,YAAY,EAAEI,UAAU,CAAC0C,IAD3B;AAEE,QAAA,QAAQ,EAAE,CAACtC,UAFb;AAGE,QAAA,IAAI,EAAC,cAHP;AAIE,QAAA,WAAW,EAAE,GAJf;AAKE,QAAA,OAAO,EAAEZ,OAAO,CAAC+C,OALnB;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,eAAe,EAAE;AACfI,UAAAA,QAAQ,EAAE,cADK;AAEfC,UAAAA,MAAM,EAAE;AAFO,SAPnB;AAWE,QAAA,QAAQ,EAAER,OAAO,CAACzC,WAAD;AAXnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aA1EF,eA0FE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAEN,OAAO,CAACwD;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aA1FF,eA8FE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACE,QAAC,uBAAD;AAAyB,YAAA,OAAO,EAAErD,OAAO,CAAC+C,OAA1C;AAAmD,YAAA,KAAK,EAAC,OAAzD;AAAiE,YAAA,IAAI,EAAC;AAAtE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBADF,eAIE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACE,QAAC,uBAAD;AAAyB,YAAA,OAAO,EAAE/C,OAAO,CAAC+C,OAA1C;AAAmD,YAAA,KAAK,EAAC,YAAzD;AAAsE,YAAA,IAAI,EAAC;AAA3E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAUE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAEnC,UAAnB;AAAA,+BACE,QAAC,eAAD;AAAiB,UAAA,KAAK,EAAEN;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eAVF;AAAA;AAAA;AAAA;AAAA;AAAA,aA9FF,eA6GE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,6BACE,QAAC,4BAAD;AACE,QAAA,YAAY,EAAEE,UAAU,CAAC0C,IAD3B;AAEE,QAAA,QAAQ,EAAE,CAACtC,UAFb;AAGE,QAAA,IAAI,EAAC,WAHP;AAIE,QAAA,WAAW,EAAE,GAJf;AAKE,QAAA,OAAO,EAAEZ,OAAO,CAAC+C,OALnB;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,eAAe,EAAE;AACfI,UAAAA,QAAQ,EAAE,cADK;AAEfC,UAAAA,MAAM,EAAE;AAFO;AAPnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aA7GF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA8HD,CAjLD;;GAAMxD,U;UACYZ,S,EAIAH,c,EAKCE,W,EACCD,W,EACCA,W,EACHA,W;;;KAbZc,U;AAmLN,eAAeA,UAAf","sourcesContent":["import { useState } from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useStyles from './styles'\n\nimport { Grid } from '@material-ui/core'\nimport {\n  TableMultilingualDescription,\n  AppAutocompleteAsync,\n  FormControllerTextField,\n  SectionTimezone,\n  AppAutocomplete,\n  FormControllerNumberField\n} from '@/components'\nimport { Unless } from 'react-if'\n\nimport _ from 'lodash'\nimport { tagStore, commonStore } from '@/store/reducers'\n\nimport type { TagDetail } from '@/types/Tag'\nimport type { DataForDropdown } from '@/types/Common'\n\nconst TabGeneral = () => {\n  const classes = useStyles()\n\n  const [defaultPartList, setDefaultPartList] = useState([])\n\n  const tagForm = useFormContext<TagDetail>()\n  const watchSchematic = tagForm.watch('schematic_id', null) as DataForDropdown\n  const watchPartId = tagForm.watch('part_id', null) as DataForDropdown\n  const watchId = tagForm.watch('id', null)\n\n  const dispatch = useDispatch()\n  const tagDetail = useSelector(tagStore.selectDetail)\n  const parameters = useSelector(tagStore.selectParameters)\n  const userJob = useSelector(commonStore.selectUserValueJob)\n\n  const isCreating = _.isNil(tagDetail.id)\n\n  const handleChangeSchematicId = (event, optionValue: DataForDropdown) => {\n    const formData = tagForm.getValues()\n    setDefaultPartList([])\n    dispatch(tagStore.sagaGetGenerateCode({ formData, schematic: optionValue }))\n  }\n\n  const handleFormatElementId = (event) => {\n    const { value } = event.target\n    const formatValue = value.padStart(4, '0')\n    tagForm.setValue('element_id', formatValue)\n  }\n\n  const getAdditionalDataPart = () => {\n    const data = {} as any\n    data.limit_to_job = userJob.value\n    if (!_.isNil(watchSchematic)) {\n      data.excluded_drawings = [(watchSchematic as DataForDropdown).value]\n    }\n    return data\n  }\n\n  const additionalDataPart = getAdditionalDataPart()\n\n  const handleSelectPart = (event, optionValue: DataForDropdown) => {\n    const formData = tagForm.getValues()\n    const payload = {\n      selected_part: optionValue?.value || null,\n      selected_drawing: (formData.schematic_id as DataForDropdown)?.value,\n      current_item: isCreating ? null : formData.id,\n      formData\n    }\n    dispatch(tagStore.sagaGetPart(payload))\n  }\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={6}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} style={{ marginTop: 8 }}>\n            <AppAutocomplete\n              helperText={tagForm.errors.job_id?.message}\n              error={Boolean(tagForm.errors.job_id)}\n              value={userJob}\n              popupIcon={null}\n              disabled\n              label=\"Job\"\n              required\n              primaryKeyOption=\"value\"\n              options={[]}\n              renderOption={(option) => option.description}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <AppAutocompleteAsync\n              disabled={!isCreating}\n              helperText={tagForm.errors.schematic_id?.message}\n              error={Boolean(tagForm.errors.schematic_id)}\n              value={watchSchematic}\n              compName=\"drawing_list\"\n              additionalData={{ limit_to_job: userJob.value }}\n              required\n              label=\"Schematic #\"\n              onChange={handleChangeSchematicId}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <FormControllerNumberField\n              disabled={!isCreating}\n              fixedDecimalScale={false}\n              decimalScale={null}\n              thousandSeparator=\"\"\n              isNumericString\n              control={tagForm.control}\n              label=\"Element #\"\n              required\n              name=\"element_id\"\n              onBlur={handleFormatElementId}\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <FormControllerTextField control={tagForm.control} label=\"Tag #\" name=\"tag\" />\n          </Grid>\n\n          <Grid item xs={12}>\n            <AppAutocompleteAsync\n              disabled={!watchSchematic}\n              disableClearable={false}\n              value={watchPartId}\n              compName=\"part_list\"\n              additionalData={additionalDataPart}\n              label=\"Part #\"\n              onChange={handleSelectPart}\n              defaultOptions={defaultPartList}\n              filterOptions={(options) => {\n                if (_.isNil(options)) {\n                  return []\n                }\n                if (isCreating) {\n                  return options\n                }\n                return _.filter(options, (option) => option.value !== watchId)\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Grid item xs={6}>\n        <TableMultilingualDescription\n          languageList={parameters.PLLA}\n          editMode={!isCreating}\n          name=\"descriptions\"\n          tableHeight={160}\n          control={tagForm.control}\n          copyable\n          copyDialogProps={{\n            compName: 'element_list',\n            entity: 'elements'\n          }}\n          disabled={Boolean(watchPartId)}\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        <div className={classes.tabGeneral__divider} />\n      </Grid>\n\n      <Grid item xs={6}>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <FormControllerTextField control={tagForm.control} label=\"Fluid\" name=\"fluid\" />\n          </Grid>\n          <Grid item xs={12}>\n            <FormControllerTextField control={tagForm.control} label=\"Tech. data\" name=\"tech_data\" />\n          </Grid>\n        </Grid>\n\n        <Unless condition={isCreating}>\n          <SectionTimezone value={tagDetail} />\n        </Unless>\n      </Grid>\n\n      <Grid item xs={6}>\n        <TableMultilingualDescription\n          languageList={parameters.PLLA}\n          editMode={!isCreating}\n          name=\"functions\"\n          tableHeight={160}\n          control={tagForm.control}\n          copyable\n          copyDialogProps={{\n            compName: 'element_list',\n            entity: 'elements'\n          }}\n        />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default TabGeneral\n"]},"metadata":{},"sourceType":"module"}