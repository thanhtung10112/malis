{"ast":null,"code":"import { actionTypes } from '@/utils/constant';\nimport { createAction, createSlice, createSelector } from '@reduxjs/toolkit';\nexport const name = 'element';\nexport const resetState = createAction(`${name}/${actionTypes.RESET_STATE}`);\nexport const initialState = {\n  initDataForList: {\n    jobs: [],\n    permissions: {\n      element: null\n    },\n    wiki_page: '',\n    column_tooltips: {}\n  },\n  dataList: []\n};\nconst tagSlice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setInitDataForList(state, {\n      payload\n    }) {\n      state.initDataForList = payload;\n    },\n\n    setDataList(state, {\n      payload\n    }) {\n      state.dataList = payload;\n    }\n\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState;\n    }\n\n  }\n});\nexport const {\n  actions\n} = tagSlice; // Saga actions\n\nexport const sagaGetList = createAction(`${name}/${actionTypes.GET_LIST}`);\nexport const sagaOpenCreateDialog = createAction(`${name}/${actionTypes.OPEN_CREATE_DIALOG}`);\nexport const sagaOpenUpdateDialog = createAction(`${name}/${actionTypes.OPEN_UPDATE_DIALOG}`);\nexport const sagaChangeUserJob = createAction(`${name}/${actionTypes.CHANGE_USER_JOB}`);\nexport const sagaChangeUserSchematic = createAction(`${name}/CHANGE_USER_SCHEMATIC`);\nexport const sagaRemove = createAction(`${name}/${actionTypes.REMOVE}`);\nexport const sagaChangeUserDrawing = createAction(`${name}/${actionTypes.CHANGE_USER_DRAWING}`); // Selectors\n\nexport const selectState = state => state[name];\nexport const selectInitDataForList = createSelector(selectState, state => state.initDataForList);\nexport const selectPermissions = createSelector(selectState, state => state.initDataForList.permissions.element);\nexport const selectSpecification = createSelector(selectState, state => state.initDataForList.permissions.element);\nexport const selectDataList = createSelector(selectState, state => state.dataList);\nexport default tagSlice;","map":null,"metadata":{},"sourceType":"module"}