{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Fersher\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\AdvancedFilter\\\\SortConditionList\\\\SortOptions.tsx\";\nimport { useState } from 'react';\nimport { Select, MenuItem, FormControl } from '@material-ui/core';\nimport useStyles from '../styles';\n\nfunction SortOptions({\n  sortOptions,\n  condition: currentCondition,\n  disabled\n}) {\n  // trick for forcing rerender\n  const {\n    1: setValue\n  } = useState(0);\n\n  const forceRerender = () => {\n    setValue(value => value + 1);\n  };\n\n  const classes = useStyles();\n  const menuItems = [];\n\n  for (const sortOp of sortOptions) {\n    menuItems.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n      value: sortOp.value,\n      children: sortOp.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 20\n    }, this));\n  }\n\n  const handleSortOptionsChange = event => {\n    currentCondition.direction = event.target.value;\n    forceRerender();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      disabled: disabled,\n      variant: \"outlined\",\n      size: \"small\",\n      style: {\n        width: '10rem'\n      },\n      className: classes.wrapSelect,\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        value: currentCondition.direction,\n        onChange: handleSortOptionsChange,\n        children: menuItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\nexport default SortOptions;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/components/AdvancedFilter/SortConditionList/SortOptions.tsx"],"names":["useState","Select","MenuItem","FormControl","useStyles","SortOptions","sortOptions","condition","currentCondition","disabled","setValue","forceRerender","value","classes","menuItems","sortOp","push","description","handleSortOptionsChange","event","direction","target","width","wrapSelect"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,WAA3B,QAA8C,mBAA9C;AAEA,OAAOC,SAAP,MAAsB,WAAtB;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,SAAS,EAAEC,gBAA1B;AAA4CC,EAAAA;AAA5C,CAArB,EAA6E;AAC3E;AACA,QAAM;AAAA,OAAGC;AAAH,MAAeV,QAAQ,CAAC,CAAD,CAA7B;;AACA,QAAMW,aAAa,GAAG,MAAM;AAC1BD,IAAAA,QAAQ,CAAEE,KAAD,IAAWA,KAAK,GAAG,CAApB,CAAR;AACD,GAFD;;AAIA,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AAEA,QAAMU,SAAS,GAAG,EAAlB;;AACA,OAAK,MAAMC,MAAX,IAAqBT,WAArB,EAAkC;AAChCQ,IAAAA,SAAS,CAACE,IAAV,eAAe,QAAC,QAAD;AAAU,MAAA,KAAK,EAAED,MAAM,CAACH,KAAxB;AAAA,gBAAgCG,MAAM,CAACE;AAAvC;AAAA;AAAA;AAAA;AAAA,YAAf;AACD;;AAED,QAAMC,uBAAuB,GAAIC,KAAD,IAAW;AACzCX,IAAAA,gBAAgB,CAACY,SAAjB,GAA6BD,KAAK,CAACE,MAAN,CAAaT,KAA1C;AACAD,IAAAA,aAAa;AACd,GAHD;;AAKA,sBACE;AAAA,2BACE,QAAC,WAAD;AACE,MAAA,QAAQ,EAAEF,QADZ;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,KAAK,EAAE;AAAEa,QAAAA,KAAK,EAAE;AAAT,OAJT;AAKE,MAAA,SAAS,EAAET,OAAO,CAACU,UALrB;AAAA,6BAOE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEf,gBAAgB,CAACY,SAAhC;AAA2C,QAAA,QAAQ,EAAEF,uBAArD;AAAA,kBACGJ;AADH;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAeD;;AAED,eAAeT,WAAf","sourcesContent":["import { useState } from 'react'\nimport { Select, MenuItem, FormControl } from '@material-ui/core'\n\nimport useStyles from '../styles'\n\nfunction SortOptions({ sortOptions, condition: currentCondition, disabled }) {\n  // trick for forcing rerender\n  const [, setValue] = useState(0)\n  const forceRerender = () => {\n    setValue((value) => value + 1)\n  }\n\n  const classes = useStyles()\n\n  const menuItems = []\n  for (const sortOp of sortOptions) {\n    menuItems.push(<MenuItem value={sortOp.value}>{sortOp.description}</MenuItem>)\n  }\n\n  const handleSortOptionsChange = (event) => {\n    currentCondition.direction = event.target.value\n    forceRerender()\n  }\n\n  return (\n    <>\n      <FormControl\n        disabled={disabled}\n        variant=\"outlined\"\n        size=\"small\"\n        style={{ width: '10rem' }}\n        className={classes.wrapSelect}\n      >\n        <Select value={currentCondition.direction} onChange={handleSortOptionsChange}>\n          {menuItems}\n        </Select>\n      </FormControl>\n    </>\n  )\n}\n\nexport default SortOptions\n"]},"metadata":{},"sourceType":"module"}