{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice, createAction, createSelector } from '@reduxjs/toolkit';\nimport _ from 'lodash';\nimport { actionTypes } from '@/utils/constant';\nimport createExtraActions from '@/utils/createExtraActions';\nexport var name = 'parameter_type';\nexport var resetState = createAction(\"\".concat(name, \"/\").concat(actionTypes.RESET_STATE));\nexport var initialState = {\n  dataList: [],\n  detail: {\n    type_id: '',\n    category: 1,\n    is_multilingual: false,\n    description: '',\n    attributes: '',\n    nbr_default: 0\n  },\n  dialogState: {\n    open: false,\n    editMode: false,\n    loading: false,\n    historyLogs: []\n  },\n  initDataForList: {\n    permissions: {\n      application_parameter_type: null,\n      developer_parameter_type: null,\n      simple_parameter_type: null\n    },\n    wiki_page: '',\n    column_tooltips: {}\n  },\n  initDataForCE: {\n    categories: [],\n    wiki_page: ''\n  }\n};\nvar parameterTypeSlice = createSlice({\n  name: name,\n  initialState: initialState,\n  reducers: {\n    setDataList: function setDataList(state, _ref) {\n      var payload = _ref.payload;\n      state.dataList = payload;\n    },\n    setDetail: function setDetail(state, _ref2) {\n      var payload = _ref2.payload;\n      state.detail = _objectSpread(_objectSpread({}, state.detail), payload);\n    },\n    setDialogState: function setDialogState(state, _ref3) {\n      var payload = _ref3.payload;\n      state.dialogState = _objectSpread(_objectSpread({}, state.dialogState), payload);\n    },\n    setHistoryLogs: function setHistoryLogs(state, _ref4) {\n      var payload = _ref4.payload;\n      state.dialogState.historyLogs = payload;\n    },\n    setDialogStateOpen: function setDialogStateOpen(state, _ref5) {\n      var payload = _ref5.payload;\n      state.dialogState.open = payload;\n    },\n    setDialogStateEditMode: function setDialogStateEditMode(state, _ref6) {\n      var payload = _ref6.payload;\n      state.dialogState.editMode = payload;\n    },\n    setDialogStateLoading: function setDialogStateLoading(state, _ref7) {\n      var payload = _ref7.payload;\n      state.dialogState.loading = payload;\n    },\n    setInitDataForList: function setInitDataForList(state, _ref8) {\n      var payload = _ref8.payload;\n      state.initDataForList = payload;\n    },\n    setInitDataForCE: function setInitDataForCE(state, _ref9) {\n      var payload = _ref9.payload;\n      state.initDataForCE = payload;\n    },\n    setPermissions: function setPermissions(state, _ref10) {\n      var payload = _ref10.payload;\n      state.initDataForList.permissions = payload;\n    },\n    resetDetail: function resetDetail(state) {\n      state.detail = _objectSpread({}, initialState.detail);\n    }\n  },\n  extraReducers: _defineProperty({}, resetState.type, function () {\n    return initialState;\n  })\n});\nvar actions = parameterTypeSlice.actions;\nexport { actions };\nexport var extraActions = createExtraActions(name, {\n  getList: actionTypes.GET_LIST,\n  create: actionTypes.CREATE,\n  update: actionTypes.UPDATE,\n  openUpdateDialog: actionTypes.OPEN_UPDATE_DIALOG,\n  openCreateDialog: actionTypes.OPEN_CREATE_DIALOG,\n  executeOperation: actionTypes.EXECUTE_OPERATION,\n  closeDialog: actionTypes.CLOSE_DIALOG\n});\n\nvar selectState = function selectState(state) {\n  return state[name];\n};\n\nexport var selectDialogState = createSelector(selectState, function (_ref11) {\n  var dialogState = _ref11.dialogState;\n  return dialogState;\n});\nexport var selectDataList = createSelector(selectState, function (_ref12) {\n  var dataList = _ref12.dataList;\n  return dataList;\n});\nexport var selectDetail = createSelector(selectState, function (_ref13) {\n  var detail = _ref13.detail;\n  return detail;\n});\nexport var selectInitDataForList = createSelector(selectState, function (_ref14) {\n  var initDataForList = _ref14.initDataForList;\n  return initDataForList;\n});\nexport var selectInitDataForCE = createSelector(selectState, function (_ref15) {\n  var initDataForCE = _ref15.initDataForCE;\n  return initDataForCE;\n});\nexport var selectPermissions = createSelector(selectState, function (_ref16) {\n  var initDataForList = _ref16.initDataForList;\n  var permissions = initDataForList.permissions;\n\n  if (_.isNull(permissions.application_parameter_type)) {\n    return null;\n  }\n\n  var getPermissionBaseOnName = function getPermissionBaseOnName(name) {\n    return permissions.application_parameter_type[name] || permissions.developer_parameter_type[name] || permissions.simple_parameter_type[name];\n  };\n\n  return {\n    view: getPermissionBaseOnName('view'),\n    create: getPermissionBaseOnName('create'),\n    disable_enable: getPermissionBaseOnName('disable_enable'),\n    \"delete\": getPermissionBaseOnName('delete')\n  };\n});\nexport var selectEditPermission = createSelector(selectState, function (_ref17) {\n  var initDataForList = _ref17.initDataForList,\n      detail = _ref17.detail;\n  var permissions = initDataForList.permissions;\n  var category = detail.category;\n\n  if (_.isNull(permissions.application_parameter_type)) {\n    return false;\n  }\n\n  return category === 1 && permissions.simple_parameter_type.edit || category === 2 && permissions.application_parameter_type.edit || category === 3 && permissions.developer_parameter_type.edit;\n});\nexport default parameterTypeSlice;","map":null,"metadata":{},"sourceType":"module"}