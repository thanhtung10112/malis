{"ast":null,"code":"import * as yup from 'yup';\n\nfunction getValidationSchema(t) {\n  var schema = yup.object().shape({\n    drawing_id: yup.string().required(t('validation_message.drawing_id_required')).matches(/^\\d{6}$/, t('validation_message.drawing_id_matches')),\n    customer_id: yup.string().max(128, t('validation_message.customer_id_max')),\n    revision: yup.string().required(t('validation_message.revision_required')).matches(/^[0-9A-Z]{1,8}$/, t('validation_message.revision_matches')),\n    drawing_format: yup.number().nullable().required(t('validation_message.drawing_format_required')),\n    drawing_purpose: yup.number().nullable().required(t('validation_message.drawing_purpose'))\n  });\n  return schema;\n}\n\nexport default getValidationSchema;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Drawing/validationSchema.ts"],"names":["yup","getValidationSchema","t","schema","object","shape","drawing_id","string","required","matches","customer_id","max","revision","drawing_format","number","nullable","drawing_purpose"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;;AAIA,SAASC,mBAAT,CAA6BC,CAA7B,EAA2C;AACzC,MAAMC,MAAM,GAAGH,GAAG,CAACI,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,IAAAA,UAAU,EAAEN,GAAG,CACZO,MADS,GAETC,QAFS,CAEAN,CAAC,CAAC,wCAAD,CAFD,EAGTO,OAHS,CAGD,SAHC,EAGUP,CAAC,CAAC,uCAAD,CAHX,CADoB;AAKhCQ,IAAAA,WAAW,EAAEV,GAAG,CAACO,MAAJ,GAAaI,GAAb,CAAiB,GAAjB,EAAsBT,CAAC,CAAC,oCAAD,CAAvB,CALmB;AAMhCU,IAAAA,QAAQ,EAAEZ,GAAG,CACVO,MADO,GAEPC,QAFO,CAEEN,CAAC,CAAC,sCAAD,CAFH,EAGPO,OAHO,CAGC,iBAHD,EAGoBP,CAAC,CAAC,qCAAD,CAHrB,CANsB;AAUhCW,IAAAA,cAAc,EAAEb,GAAG,CAACc,MAAJ,GAAaC,QAAb,GAAwBP,QAAxB,CAAiCN,CAAC,CAAC,4CAAD,CAAlC,CAVgB;AAWhCc,IAAAA,eAAe,EAAEhB,GAAG,CAACc,MAAJ,GAAaC,QAAb,GAAwBP,QAAxB,CAAiCN,CAAC,CAAC,oCAAD,CAAlC;AAXe,GAAnB,CAAf;AAaA,SAAOC,MAAP;AACD;;AAED,eAAeF,mBAAf","sourcesContent":["import * as yup from 'yup'\n\nimport type { TFunction } from 'next-i18next'\n\nfunction getValidationSchema(t: TFunction) {\n  const schema = yup.object().shape({\n    drawing_id: yup\n      .string()\n      .required(t('validation_message.drawing_id_required'))\n      .matches(/^\\d{6}$/, t('validation_message.drawing_id_matches')),\n    customer_id: yup.string().max(128, t('validation_message.customer_id_max')),\n    revision: yup\n      .string()\n      .required(t('validation_message.revision_required'))\n      .matches(/^[0-9A-Z]{1,8}$/, t('validation_message.revision_matches')),\n    drawing_format: yup.number().nullable().required(t('validation_message.drawing_format_required')),\n    drawing_purpose: yup.number().nullable().required(t('validation_message.drawing_purpose'))\n  })\n  return schema\n}\n\nexport default getValidationSchema\n"]},"metadata":{},"sourceType":"module"}