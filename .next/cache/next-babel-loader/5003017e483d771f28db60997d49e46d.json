{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport jsCurrency from 'currency.js';\nconst DEFAULT_OPTIONS = {\n  separator: ' ',\n  decimal: '.',\n  symbol: ''\n};\n\nconst buildOption = options => {\n  return _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n};\n\nexport const format = (value, options = {}) => jsCurrency(value, buildOption(options)).format();\nexport const convert = (value, options = {}) => jsCurrency(value, options);","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/utils/currency.ts"],"names":["jsCurrency","DEFAULT_OPTIONS","separator","decimal","symbol","buildOption","options","format","value","convert"],"mappings":";;;;;;AAAA,OAAOA,UAAP,MAAuB,aAAvB;AAEA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,SAAS,EAAE,GADW;AAEtBC,EAAAA,OAAO,EAAE,GAFa;AAGtBC,EAAAA,MAAM,EAAE;AAHc,CAAxB;;AAMA,MAAMC,WAAW,GAAIC,OAAD,IAAiC;AACnD,yCACKL,eADL,GAEKK,OAFL;AAID,CALD;;AAOA,OAAO,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQF,OAAO,GAAG,EAAlB,KAA+CN,UAAU,CAACQ,KAAD,EAAQH,WAAW,CAACC,OAAD,CAAnB,CAAV,CAAwCC,MAAxC,EAA9D;AAEP,OAAO,MAAME,OAAO,GAAG,CAACD,KAAD,EAAQF,OAAO,GAAG,EAAlB,KAA+CN,UAAU,CAACQ,KAAD,EAAQF,OAAR,CAAzE","sourcesContent":["import jsCurrency from 'currency.js'\n\nconst DEFAULT_OPTIONS = {\n  separator: ' ',\n  decimal: '.',\n  symbol: ''\n}\n\nconst buildOption = (options: jsCurrency.Options) => {\n  return {\n    ...DEFAULT_OPTIONS,\n    ...options\n  }\n}\n\nexport const format = (value, options = {} as jsCurrency.Options) => jsCurrency(value, buildOption(options)).format()\n\nexport const convert = (value, options = {} as jsCurrency.Options) => jsCurrency(value, options)\n"]},"metadata":{},"sourceType":"module"}