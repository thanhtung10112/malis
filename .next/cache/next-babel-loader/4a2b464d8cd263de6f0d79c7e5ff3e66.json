{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchInitDataForList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchInitDataForCE),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(fetchList),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(fetchDetail),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(getList),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(openCreateDialog),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(executeOperation),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(closeDialog),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(create),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(openUpdateDialog),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(update),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(parameterSaga);\n\nimport { takeEvery, put, takeLatest, putResolve } from 'redux-saga/effects';\nimport { call, select, all } from 'typed-redux-saga';\nimport immer from 'immer';\nimport Router from 'next/router';\nimport parameterApi from '@/apis/parameter.api';\nimport * as errorSaga from '@/store/saga/errorSaga';\nimport { parameterStore, advancedFilterActions, commonStore, summaryReportActions } from '@/store/reducers';\n\nfunction fetchInitDataForList() {\n  var data;\n  return _regeneratorRuntime.wrap(function fetchInitDataForList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return call(parameterApi.getInitDataForList);\n\n        case 2:\n          data = _context.sent;\n          _context.next = 5;\n          return put(parameterStore.actions.setInitDataForList(data));\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction fetchInitDataForCE() {\n  var param_type_id, _yield$call, permissions, response;\n\n  return _regeneratorRuntime.wrap(function fetchInitDataForCE$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          param_type_id = Router.query.param_type_id;\n          _context2.next = 3;\n          return call(parameterApi.getInitDataForCE, {\n            param_type_id: param_type_id\n          });\n\n        case 3:\n          _yield$call = _context2.sent;\n          permissions = _yield$call.permissions;\n          response = _objectWithoutProperties(_yield$call, [\"permissions\"]);\n          _context2.next = 8;\n          return all([put(parameterStore.actions.setPermissions(permissions)), put(parameterStore.actions.setInitDataForCE(response)), put(parameterStore.actions.setDetail({\n            parameter_type_id: param_type_id\n          }))]);\n\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction fetchList() {\n  var param_type_id, _yield$all, tableState, searchQuery, filterData, page, per_page, data;\n\n  return _regeneratorRuntime.wrap(function fetchList$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          param_type_id = Router.query.param_type_id;\n          return _context3.delegateYield(all({\n            tableState: select(commonStore.selectTableState),\n            searchQuery: select(commonStore.selectSearchQuery),\n            filterData: select(advancedFilterActions.selectFilterData)\n          }), \"t0\", 2);\n\n        case 2:\n          _yield$all = _context3.t0;\n          tableState = _yield$all.tableState;\n          searchQuery = _yield$all.searchQuery;\n          filterData = _yield$all.filterData;\n          page = tableState.page, per_page = tableState.per_page;\n          _context3.next = 9;\n          return call(parameterApi.getList, param_type_id, _objectSpread({\n            per_page: per_page,\n            page: page,\n            s: searchQuery\n          }, filterData));\n\n        case 9:\n          data = _context3.sent;\n          _context3.next = 12;\n          return all([put(commonStore.actions.setTableState({\n            total_items: data.total_items\n          })), put(parameterStore.actions.setData(data.parameters)), put(parameterStore.actions.setParameterType(data.parameter_type))]);\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction fetchDetail(id) {\n  var _yield$call2, parameter, _yield$select, is_multilingual, formatParameter;\n\n  return _regeneratorRuntime.wrap(function fetchDetail$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return call(parameterApi.getDetail, id);\n\n        case 2:\n          _yield$call2 = _context4.sent;\n          parameter = _yield$call2.parameter;\n          return _context4.delegateYield(select(parameterStore.selectInitDataForCE), \"t0\", 5);\n\n        case 5:\n          _yield$select = _context4.t0;\n          is_multilingual = _yield$select.is_multilingual;\n          formatParameter = immer(parameter, function (draft) {\n            if (is_multilingual) {\n              draft.descriptions = draft.multilingual_descriptions;\n              delete draft.multilingual_descriptions;\n            }\n          });\n          _context4.next = 10;\n          return put(parameterStore.actions.setDetail(formatParameter));\n\n        case 10:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction getList() {\n  var viewPermission;\n  return _regeneratorRuntime.wrap(function getList$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 2:\n          _context5.prev = 2;\n          _context5.next = 5;\n          return call(fetchInitDataForList);\n\n        case 5:\n          return _context5.delegateYield(select(parameterStore.selectViewPermission), \"t0\", 6);\n\n        case 6:\n          viewPermission = _context5.t0;\n\n          if (!viewPermission) {\n            _context5.next = 10;\n            break;\n          }\n\n          _context5.next = 10;\n          return call(fetchList);\n\n        case 10:\n          _context5.next = 16;\n          break;\n\n        case 12:\n          _context5.prev = 12;\n          _context5.t1 = _context5[\"catch\"](2);\n          _context5.next = 16;\n          return errorSaga.handleError(_context5.t1);\n\n        case 16:\n          _context5.next = 18;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 18:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[2, 12]]);\n}\n\nfunction openCreateDialog() {\n  return _regeneratorRuntime.wrap(function openCreateDialog$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 2:\n          _context6.prev = 2;\n          _context6.next = 5;\n          return call(fetchInitDataForCE);\n\n        case 5:\n          _context6.next = 7;\n          return put(parameterStore.actions.setDialogState({\n            open: true,\n            editMode: false\n          }));\n\n        case 7:\n          _context6.next = 13;\n          break;\n\n        case 9:\n          _context6.prev = 9;\n          _context6.t0 = _context6[\"catch\"](2);\n          _context6.next = 13;\n          return errorSaga.handleError(_context6.t0);\n\n        case 13:\n          _context6.next = 15;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 15:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[2, 9]]);\n}\n\nfunction executeOperation(_ref) {\n  var payload, operation, parameters, data;\n  return _regeneratorRuntime.wrap(function executeOperation$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          payload = _ref.payload;\n          _context7.next = 3;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 3:\n          _context7.prev = 3;\n          operation = payload.operation, parameters = payload.parameters;\n          _context7.next = 7;\n          return call(parameterApi.executeOperation, operation, parameters);\n\n        case 7:\n          data = _context7.sent;\n          _context7.next = 10;\n          return call(fetchList);\n\n        case 10:\n          if (!(data.failed_count > 0)) {\n            _context7.next = 17;\n            break;\n          }\n\n          _context7.next = 13;\n          return put(summaryReportActions.setReportData(data));\n\n        case 13:\n          _context7.next = 15;\n          return put(summaryReportActions.setOpen(true));\n\n        case 15:\n          _context7.next = 19;\n          break;\n\n        case 17:\n          _context7.next = 19;\n          return put(commonStore.actions.setSuccessMessage(data.message));\n\n        case 19:\n          _context7.next = 25;\n          break;\n\n        case 21:\n          _context7.prev = 21;\n          _context7.t0 = _context7[\"catch\"](3);\n          _context7.next = 25;\n          return errorSaga.handleError(_context7.t0);\n\n        case 25:\n          _context7.next = 27;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 27:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[3, 21]]);\n}\n\nfunction closeDialog() {\n  return _regeneratorRuntime.wrap(function closeDialog$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return putResolve(parameterStore.actions.setDialogStateOpen(false));\n\n        case 3:\n          _context8.next = 5;\n          return call(getList);\n\n        case 5:\n          _context8.next = 7;\n          return all([put(parameterStore.actions.setDialogStateEditMode(false)), put(parameterStore.actions.resetLocationDetail())]);\n\n        case 7:\n          _context8.next = 13;\n          break;\n\n        case 9:\n          _context8.prev = 9;\n          _context8.t0 = _context8[\"catch\"](0);\n          _context8.next = 13;\n          return errorSaga.handleError(_context8.t0);\n\n        case 13:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 9]]);\n}\n\nfunction create(_ref2) {\n  var payload, _yield$call3, message;\n\n  return _regeneratorRuntime.wrap(function create$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          payload = _ref2.payload;\n          _context9.next = 3;\n          return put(parameterStore.actions.setDialogStateLoading(true));\n\n        case 3:\n          _context9.prev = 3;\n          _context9.next = 6;\n          return call(parameterApi.create, payload);\n\n        case 6:\n          _yield$call3 = _context9.sent;\n          message = _yield$call3.message;\n          _context9.next = 10;\n          return put(commonStore.actions.setSuccessMessage(message));\n\n        case 10:\n          _context9.next = 12;\n          return put(parameterStore.actions.resetLocationDetail());\n\n        case 12:\n          _context9.next = 18;\n          break;\n\n        case 14:\n          _context9.prev = 14;\n          _context9.t0 = _context9[\"catch\"](3);\n          _context9.next = 18;\n          return errorSaga.handleError(_context9.t0);\n\n        case 18:\n          _context9.next = 20;\n          return put(parameterStore.actions.setDialogStateLoading(false));\n\n        case 20:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[3, 14]]);\n}\n\nfunction openUpdateDialog(_ref3) {\n  var id;\n  return _regeneratorRuntime.wrap(function openUpdateDialog$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          id = _ref3.payload;\n          _context10.next = 3;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 3:\n          _context10.prev = 3;\n          _context10.next = 6;\n          return call(fetchInitDataForCE);\n\n        case 6:\n          _context10.next = 8;\n          return call(fetchDetail, id);\n\n        case 8:\n          _context10.next = 10;\n          return put(parameterStore.actions.setDialogState({\n            editMode: true,\n            open: true\n          }));\n\n        case 10:\n          _context10.next = 16;\n          break;\n\n        case 12:\n          _context10.prev = 12;\n          _context10.t0 = _context10[\"catch\"](3);\n          _context10.next = 16;\n          return errorSaga.handleError(_context10.t0);\n\n        case 16:\n          _context10.next = 18;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 18:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10, null, [[3, 12]]);\n}\n\nfunction update(_ref4) {\n  var payload, _yield$call4, message;\n\n  return _regeneratorRuntime.wrap(function update$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          payload = _ref4.payload;\n          _context11.next = 3;\n          return put(parameterStore.actions.setDialogStateLoading(true));\n\n        case 3:\n          _context11.prev = 3;\n          _context11.next = 6;\n          return call(parameterApi.update, payload.id, payload.formData);\n\n        case 6:\n          _yield$call4 = _context11.sent;\n          message = _yield$call4.message;\n          _context11.next = 10;\n          return call(closeDialog);\n\n        case 10:\n          _context11.next = 12;\n          return put(commonStore.actions.setSuccessMessage(message));\n\n        case 12:\n          _context11.next = 18;\n          break;\n\n        case 14:\n          _context11.prev = 14;\n          _context11.t0 = _context11[\"catch\"](3);\n          _context11.next = 18;\n          return errorSaga.handleError(_context11.t0);\n\n        case 18:\n          _context11.next = 20;\n          return put(parameterStore.actions.setDialogStateLoading(false));\n\n        case 20:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[3, 14]]);\n}\n\nfunction parameterSaga() {\n  return _regeneratorRuntime.wrap(function parameterSaga$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeEvery(parameterStore.extraActions.getList, getList);\n\n        case 2:\n          _context12.next = 4;\n          return takeLatest(parameterStore.extraActions.executeOperation, executeOperation);\n\n        case 4:\n          _context12.next = 6;\n          return takeEvery(parameterStore.extraActions.openCreateDialog, openCreateDialog);\n\n        case 6:\n          _context12.next = 8;\n          return takeEvery(parameterStore.extraActions.closeDialog, closeDialog);\n\n        case 8:\n          _context12.next = 10;\n          return takeLatest(parameterStore.extraActions.create, create);\n\n        case 10:\n          _context12.next = 12;\n          return takeLatest(parameterStore.extraActions.openUpdateDialog, openUpdateDialog);\n\n        case 12:\n          _context12.next = 14;\n          return takeLatest(parameterStore.extraActions.update, update);\n\n        case 14:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nexport default parameterSaga;","map":null,"metadata":{},"sourceType":"module"}