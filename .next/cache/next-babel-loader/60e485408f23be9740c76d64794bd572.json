{"ast":null,"code":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { takeEvery, put, putResolve, call } from 'redux-saga/effects';\nimport { select, all } from 'typed-redux-saga';\nimport { manufacturerStore, commonStore, advancedFilterActions } from '@/store/reducers';\nimport * as errorSaga from '@/store/saga/errorSaga';\nimport manufacturerApi from '@/apis/manufacturer.api';\nexport function* fetchList() {\n  const {\n    tableState,\n    searchQuery,\n    filterData\n  } = yield all({\n    tableState: select(commonStore.selectTableState),\n    searchQuery: select(commonStore.selectSearchQuery),\n    filterData: select(advancedFilterActions.selectFilterData)\n  });\n  const {\n    page,\n    per_page\n  } = tableState;\n  const data = yield call(manufacturerApi.getList, _objectSpread({\n    per_page,\n    page,\n    s: searchQuery\n  }, filterData));\n  yield put(commonStore.actions.setTableState({\n    total_items: data.total_items\n  }));\n  yield put(manufacturerStore.actions.setDataList(data.manufacturers));\n}\nexport function* fetchInitDataForList() {\n  const data = yield call(manufacturerApi.getInitDataForList);\n  yield put(manufacturerStore.actions.setInitDataForList(data));\n}\nexport function* fetchInitDataForCE() {\n  const _yield$call = yield call(manufacturerApi.getInitDataForCE),\n        {\n    permissions\n  } = _yield$call,\n        response = _objectWithoutProperties(_yield$call, [\"permissions\"]);\n\n  yield all([put(manufacturerStore.actions.setPermissions(permissions)), put(manufacturerStore.actions.setInitDataForCE(response)), put(manufacturerStore.actions.setDetail({\n    manufacturer_id: response.next_code\n  }))]);\n}\nexport function* fetchDetail(id) {\n  const {\n    manufacturer\n  } = yield call(manufacturerApi.getDetail, id);\n  yield put(manufacturerStore.actions.setDetail(manufacturer));\n}\nexport function* getManufacturerList() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchInitDataForList);\n    const permissions = yield* select(manufacturerStore.selectPermissions);\n\n    if (permissions === null || permissions === void 0 ? void 0 : permissions.view) {\n      yield call(fetchList);\n    }\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\nexport function* openManuCreateDialog() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchInitDataForCE);\n    yield put(manufacturerStore.actions.setDialogStateOpen(true));\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\nexport function* openManuUpdateDialog({\n  payload: id\n}) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchInitDataForCE);\n    yield call(fetchDetail, id);\n    yield put(manufacturerStore.actions.setDialogStateOpen(true));\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\nexport function* createManu({\n  payload\n}) {\n  yield put(manufacturerStore.actions.setDialogStateLoading(true));\n\n  try {\n    const {\n      message\n    } = yield call(manufacturerApi.create, payload);\n    yield call(fetchInitDataForCE);\n    yield put(commonStore.actions.setSuccessMessage(message));\n    yield put(manufacturerStore.actions.resetDetail());\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(manufacturerStore.actions.setDialogStateLoading(false));\n}\nexport function* updateManu({\n  payload\n}) {\n  yield put(manufacturerStore.actions.setDialogStateLoading(true));\n\n  try {\n    const {\n      id,\n      formData\n    } = payload;\n    const {\n      message\n    } = yield call(manufacturerApi.update, id, formData);\n    yield call(closeManuDialog);\n    yield put(commonStore.actions.setSuccessMessage(message));\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(manufacturerStore.actions.setDialogStateLoading(false));\n}\nexport function* generateManuId({\n  payload: formData\n}) {\n  yield put(manufacturerStore.actions.setDialogStateLoading(true));\n\n  try {\n    const data = yield call(manufacturerApi.getNextCode, formData.manufacturer_id);\n    yield put(manufacturerStore.actions.setDetail(_objectSpread(_objectSpread({}, formData), {}, {\n      manufacturer_id: data.generated_code\n    })));\n    yield put(commonStore.actions.setSuccessMessage(data.message));\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(manufacturerStore.actions.setDialogStateLoading(false));\n}\nexport function* closeManuDialog() {\n  yield putResolve(manufacturerStore.actions.setDialogStateOpen(false));\n  yield call(getManufacturerList);\n  yield put(manufacturerStore.actions.resetDetail());\n}\n\nfunction* manufacturerSaga() {\n  yield takeEvery(manufacturerStore.sagaGetList, getManufacturerList);\n  yield takeEvery(manufacturerStore.sagaOpenCreateDialog, openManuCreateDialog);\n  yield takeEvery(manufacturerStore.sagaOpenUpdateDialog, openManuUpdateDialog);\n  yield takeEvery(manufacturerStore.sagaCreate, createManu);\n  yield takeEvery(manufacturerStore.sagaUpdate, updateManu);\n  yield takeEvery(manufacturerStore.sagaGenerateCode, generateManuId);\n  yield takeEvery(manufacturerStore.sagaCloseDialog, closeManuDialog);\n}\n\nexport default manufacturerSaga;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/saga/manufacturer.saga.ts"],"names":["takeEvery","put","putResolve","call","select","all","manufacturerStore","commonStore","advancedFilterActions","errorSaga","manufacturerApi","fetchList","tableState","searchQuery","filterData","selectTableState","selectSearchQuery","selectFilterData","page","per_page","data","getList","s","actions","setTableState","total_items","setDataList","manufacturers","fetchInitDataForList","getInitDataForList","setInitDataForList","fetchInitDataForCE","getInitDataForCE","permissions","response","setPermissions","setInitDataForCE","setDetail","manufacturer_id","next_code","fetchDetail","id","manufacturer","getDetail","getManufacturerList","setLoadingPage","selectPermissions","view","error","handleError","openManuCreateDialog","setDialogStateOpen","openManuUpdateDialog","payload","createManu","setDialogStateLoading","message","create","setSuccessMessage","resetDetail","updateManu","formData","update","closeManuDialog","generateManuId","getNextCode","generated_code","manufacturerSaga","sagaGetList","sagaOpenCreateDialog","sagaOpenUpdateDialog","sagaCreate","sagaUpdate","sagaGenerateCode","sagaCloseDialog"],"mappings":"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","sourcesContent":["import { takeEvery, put, putResolve, call } from 'redux-saga/effects'\nimport { select, all } from 'typed-redux-saga'\n\nimport { manufacturerStore, commonStore, advancedFilterActions } from '@/store/reducers'\nimport * as errorSaga from '@/store/saga/errorSaga'\n\nimport manufacturerApi from '@/apis/manufacturer.api'\n\nexport function* fetchList() {\n  const { tableState, searchQuery, filterData } = yield all({\n    tableState: select(commonStore.selectTableState),\n    searchQuery: select(commonStore.selectSearchQuery),\n    filterData: select(advancedFilterActions.selectFilterData)\n  })\n  const { page, per_page } = tableState\n  const data = yield call(manufacturerApi.getList, {\n    per_page,\n    page,\n    s: searchQuery,\n    ...filterData\n  })\n  yield put(commonStore.actions.setTableState({ total_items: data.total_items }))\n  yield put(manufacturerStore.actions.setDataList(data.manufacturers))\n}\n\nexport function* fetchInitDataForList() {\n  const data = yield call(manufacturerApi.getInitDataForList)\n  yield put(manufacturerStore.actions.setInitDataForList(data))\n}\n\nexport function* fetchInitDataForCE() {\n  const { permissions, ...response } = yield call(manufacturerApi.getInitDataForCE)\n  yield all([\n    put(manufacturerStore.actions.setPermissions(permissions)),\n    put(manufacturerStore.actions.setInitDataForCE(response)),\n    put(\n      manufacturerStore.actions.setDetail({\n        manufacturer_id: response.next_code\n      })\n    )\n  ])\n}\n\nexport function* fetchDetail(id: number) {\n  const { manufacturer } = yield call(manufacturerApi.getDetail, id)\n  yield put(manufacturerStore.actions.setDetail(manufacturer))\n}\n\nexport function* getManufacturerList() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchInitDataForList)\n    const permissions = yield* select(manufacturerStore.selectPermissions)\n    if (permissions?.view) {\n      yield call(fetchList)\n    }\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nexport function* openManuCreateDialog() {\n  yield put(commonStore.actions.setLoadingPage(true))\n\n  try {\n    yield call(fetchInitDataForCE)\n    yield put(manufacturerStore.actions.setDialogStateOpen(true))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nexport function* openManuUpdateDialog({ payload: id }: ReturnType<typeof manufacturerStore.sagaOpenUpdateDialog>) {\n  yield put(commonStore.actions.setLoadingPage(true))\n\n  try {\n    yield call(fetchInitDataForCE)\n    yield call(fetchDetail, id)\n    yield put(manufacturerStore.actions.setDialogStateOpen(true))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nexport function* createManu({ payload }: ReturnType<typeof manufacturerStore.sagaCreate>) {\n  yield put(manufacturerStore.actions.setDialogStateLoading(true))\n  try {\n    const { message } = yield call(manufacturerApi.create, payload)\n    yield call(fetchInitDataForCE)\n    yield put(commonStore.actions.setSuccessMessage(message))\n    yield put(manufacturerStore.actions.resetDetail())\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(manufacturerStore.actions.setDialogStateLoading(false))\n}\n\nexport function* updateManu({ payload }: ReturnType<typeof manufacturerStore.sagaUpdate>) {\n  yield put(manufacturerStore.actions.setDialogStateLoading(true))\n  try {\n    const { id, formData } = payload\n    const { message } = yield call(manufacturerApi.update, id, formData)\n    yield call(closeManuDialog)\n    yield put(commonStore.actions.setSuccessMessage(message))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(manufacturerStore.actions.setDialogStateLoading(false))\n}\n\nexport function* generateManuId({ payload: formData }: ReturnType<typeof manufacturerStore.sagaGenerateCode>) {\n  yield put(manufacturerStore.actions.setDialogStateLoading(true))\n  try {\n    const data = yield call(manufacturerApi.getNextCode, formData.manufacturer_id)\n    yield put(\n      manufacturerStore.actions.setDetail({\n        ...formData,\n        manufacturer_id: data.generated_code\n      })\n    )\n    yield put(commonStore.actions.setSuccessMessage(data.message))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(manufacturerStore.actions.setDialogStateLoading(false))\n}\n\nexport function* closeManuDialog() {\n  yield putResolve(manufacturerStore.actions.setDialogStateOpen(false))\n  yield call(getManufacturerList)\n  yield put(manufacturerStore.actions.resetDetail())\n}\n\nfunction* manufacturerSaga() {\n  yield takeEvery(manufacturerStore.sagaGetList, getManufacturerList)\n  yield takeEvery(manufacturerStore.sagaOpenCreateDialog, openManuCreateDialog)\n  yield takeEvery(manufacturerStore.sagaOpenUpdateDialog, openManuUpdateDialog)\n  yield takeEvery(manufacturerStore.sagaCreate, createManu)\n  yield takeEvery(manufacturerStore.sagaUpdate, updateManu)\n  yield takeEvery(manufacturerStore.sagaGenerateCode, generateManuId)\n  yield takeEvery(manufacturerStore.sagaCloseDialog, closeManuDialog)\n}\n\nexport default manufacturerSaga\n"]},"metadata":{},"sourceType":"module"}