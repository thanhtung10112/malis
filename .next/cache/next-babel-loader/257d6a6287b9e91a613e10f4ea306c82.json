{"ast":null,"code":"import { put } from 'redux-saga/effects';\nimport { StatusCode } from '@/utils/StatusCode';\nimport { commonStore, authStore } from '@/store/reducers';\nexport function* handleError(error) {\n  yield put(commonStore.actions.setLoadingPage(false));\n  const {\n    response\n  } = error;\n\n  if (!response) {\n    yield put(commonStore.actions.setErrorMessage('Error happend, please contact administrator'));\n\n    if (process.env.NEXT_PUBLIC_MODE === 'develop') {\n      console.error('error', '---->', error);\n    }\n\n    return;\n  }\n\n  const {\n    data\n  } = response;\n  let message = 'Error happend';\n\n  if (data && data.message) {\n    message = data.message;\n  }\n\n  if (response.status === StatusCode.UNAUTHORIZED) {\n    yield put(authStore.actions.setUnauthorized(true));\n  } else {\n    yield put(commonStore.actions.setErrorMessage(message));\n  }\n}\nexport function* setMessageHaveNotPermission() {\n  yield put(commonStore.actions.setErrorMessage('You do not have permission'));\n}","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/saga/errorSaga.ts"],"names":["put","StatusCode","commonStore","authStore","handleError","error","actions","setLoadingPage","response","setErrorMessage","process","env","NEXT_PUBLIC_MODE","console","data","message","status","UNAUTHORIZED","setUnauthorized","setMessageHaveNotPermission"],"mappings":"AAAA,SAASA,GAAT,QAAoB,oBAApB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AAEA,OAAO,UAAUC,WAAV,CAAsBC,KAAtB,EAA6B;AAClC,QAAML,GAAG,CAACE,WAAW,CAACI,OAAZ,CAAoBC,cAApB,CAAmC,KAAnC,CAAD,CAAT;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeH,KAArB;;AACA,MAAI,CAACG,QAAL,EAAe;AACb,UAAMR,GAAG,CAACE,WAAW,CAACI,OAAZ,CAAoBG,eAApB,CAAoC,6CAApC,CAAD,CAAT;;AAEA,QAAIC,OAAO,CAACC,GAAR,CAAYC,gBAAZ,KAAiC,SAArC,EAAgD;AAC9CC,MAAAA,OAAO,CAACR,KAAR,CAAc,OAAd,EAAuB,OAAvB,EAAgCA,KAAhC;AACD;;AAED;AACD;;AACD,QAAM;AAAES,IAAAA;AAAF,MAAWN,QAAjB;AACA,MAAIO,OAAO,GAAG,eAAd;;AACA,MAAID,IAAI,IAAIA,IAAI,CAACC,OAAjB,EAA0B;AACxBA,IAAAA,OAAO,GAAGD,IAAI,CAACC,OAAf;AACD;;AACD,MAAIP,QAAQ,CAACQ,MAAT,KAAoBf,UAAU,CAACgB,YAAnC,EAAiD;AAC/C,UAAMjB,GAAG,CAACG,SAAS,CAACG,OAAV,CAAkBY,eAAlB,CAAkC,IAAlC,CAAD,CAAT;AACD,GAFD,MAEO;AACL,UAAMlB,GAAG,CAACE,WAAW,CAACI,OAAZ,CAAoBG,eAApB,CAAoCM,OAApC,CAAD,CAAT;AACD;AACF;AAED,OAAO,UAAUI,2BAAV,GAAwC;AAC7C,QAAMnB,GAAG,CAACE,WAAW,CAACI,OAAZ,CAAoBG,eAApB,CAAoC,4BAApC,CAAD,CAAT;AACD","sourcesContent":["import { put } from 'redux-saga/effects'\nimport { StatusCode } from '@/utils/StatusCode'\n\nimport { commonStore, authStore } from '@/store/reducers'\n\nexport function* handleError(error) {\n  yield put(commonStore.actions.setLoadingPage(false))\n  const { response } = error\n  if (!response) {\n    yield put(commonStore.actions.setErrorMessage('Error happend, please contact administrator'))\n\n    if (process.env.NEXT_PUBLIC_MODE === 'develop') {\n      console.error('error', '---->', error)\n    }\n\n    return\n  }\n  const { data } = response\n  let message = 'Error happend'\n  if (data && data.message) {\n    message = data.message\n  }\n  if (response.status === StatusCode.UNAUTHORIZED) {\n    yield put(authStore.actions.setUnauthorized(true))\n  } else {\n    yield put(commonStore.actions.setErrorMessage(message))\n  }\n}\n\nexport function* setMessageHaveNotPermission() {\n  yield put(commonStore.actions.setErrorMessage('You do not have permission'))\n}\n"]},"metadata":{},"sourceType":"module"}