{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\User\\\\TabGeneral.tsx\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFormContext } from 'react-hook-form';\nimport { useTranslation } from 'next-i18next';\nimport { userStore } from '@/store/reducers';\nimport { Grid, Typography, makeStyles } from '@material-ui/core';\nimport { Unless, When } from 'react-if';\nimport { FormControllerAutocomplete, FormControllerTextField, FormControllerPasswordField, FormControllerDatePicker, SectionTimezone } from '@/components';\nimport _ from 'lodash';\nconst useStyles = makeStyles(theme => ({\n  resetPassword: {\n    cursor: 'pointer',\n    opacity: 0.6,\n    textDecoration: 'underline',\n    transition: theme.transitions.create('all', {\n      duration: theme.transitions.duration.standard,\n      easing: 'easing-out'\n    }),\n    '&:hover': {\n      opacity: 1\n    }\n  }\n}));\n\nconst TabGeneral = () => {\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslation('user');\n  const userForm = useFormContext();\n  const watchValidFrom = userForm.watch('valid_from', null);\n  const watchValidUntil = userForm.watch('valid_until', null);\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(userStore.selectInitDataForCE),\n        {\n    parameters\n  } = _useSelector,\n        initDataForCE = _objectWithoutProperties(_useSelector, [\"parameters\"]);\n\n  const userDetail = useSelector(userStore.selectDetail);\n\n  const isCreating = _.isNil(userDetail.id);\n\n  const handleOpenResetPwdDialog = () => {\n    dispatch(userStore.actions.setResetPwdDialogOpen(true));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n        control: userForm.control,\n        required: true,\n        name: \"user_id\",\n        label: \"Username\",\n        autoFocus: isCreating,\n        disabled: !isCreating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n        control: userForm.control,\n        name: \"user_abb\",\n        label: \"User Abbr.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(When, {\n      condition: isCreating,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormControllerPasswordField, {\n          control: userForm.control,\n          required: true,\n          type: \"password\",\n          name: \"password\",\n          label: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n          control: userForm.control,\n          required: true,\n          type: \"password\",\n          name: \"confirm_password\",\n          label: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n        control: userForm.control,\n        required: true,\n        name: \"first_name\",\n        label: \"First name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n        control: userForm.control,\n        required: true,\n        name: \"last_name\",\n        label: \"Last name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n        control: userForm.control,\n        name: \"email\",\n        label: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(FormControllerAutocomplete, {\n        getOptionSelected: (option, value) => option.id === value,\n        closeIcon: null,\n        control: userForm.control,\n        name: \"puco\",\n        options: parameters.PUCO,\n        renderOption: ({\n          parameter_id,\n          description\n        }) => `${parameter_id} - ${description}`,\n        label: \"Purchasing company\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(FormControllerAutocomplete, {\n        getOptionSelected: (option, value) => option.id === value,\n        closeIcon: null,\n        control: userForm.control,\n        name: \"default_language\",\n        options: parameters.PLLA,\n        renderOption: ({\n          parameter_id,\n          description\n        }) => `${parameter_id} - ${description}`,\n        label: \"Default language\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(FormControllerDatePicker, {\n        name: \"valid_from\",\n        label: \"Valid from\",\n        control: userForm.control,\n        maxDate: watchValidUntil\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(FormControllerDatePicker, {\n        name: \"valid_until\",\n        label: \"Valid until\",\n        control: userForm.control,\n        minDate: watchValidFrom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(FormControllerAutocomplete, {\n        getOptionSelected: (option, value) => option.id === value,\n        closeIcon: null,\n        control: userForm.control,\n        name: \"time_zone\",\n        options: initDataForCE.timezones,\n        renderOption: option => option.description,\n        label: \"Timezone\",\n        required: true,\n        getOptionLabel: option => {\n          if (_.isString(option)) {\n            const findOption = _.find(initDataForCE.timezones, {\n              id: option\n            });\n\n            return findOption === null || findOption === void 0 ? void 0 : findOption.description;\n          }\n\n          return option.description;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Unless, {\n      condition: isCreating,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"inherit\",\n          display: \"block\",\n          onClick: handleOpenResetPwdDialog,\n          className: classes.resetPassword,\n          children: t('form.label.reset_password')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SectionTimezone, {\n        value: userDetail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\nexport default TabGeneral;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/User/TabGeneral.tsx"],"names":["useSelector","useDispatch","useFormContext","useTranslation","userStore","Grid","Typography","makeStyles","Unless","When","FormControllerAutocomplete","FormControllerTextField","FormControllerPasswordField","FormControllerDatePicker","SectionTimezone","_","useStyles","theme","resetPassword","cursor","opacity","textDecoration","transition","transitions","create","duration","standard","easing","TabGeneral","classes","t","userForm","watchValidFrom","watch","watchValidUntil","dispatch","selectInitDataForCE","parameters","initDataForCE","userDetail","selectDetail","isCreating","isNil","id","handleOpenResetPwdDialog","actions","setResetPwdDialogOpen","control","option","value","PUCO","parameter_id","description","PLLA","timezones","isString","findOption","find"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from 'react-redux'\nimport { useFormContext } from 'react-hook-form'\nimport { useTranslation } from 'next-i18next'\nimport { userStore } from '@/store/reducers'\n\nimport { Grid, Typography, makeStyles } from '@material-ui/core'\nimport { Unless, When } from 'react-if'\nimport {\n  FormControllerAutocomplete,\n  FormControllerTextField,\n  FormControllerPasswordField,\n  FormControllerDatePicker,\n  SectionTimezone\n} from '@/components'\n\nimport _ from 'lodash'\n\nimport type { UserDetail } from '@/types/User'\n\nconst useStyles = makeStyles((theme) => ({\n  resetPassword: {\n    cursor: 'pointer',\n    opacity: 0.6,\n    textDecoration: 'underline',\n    transition: theme.transitions.create('all', {\n      duration: theme.transitions.duration.standard,\n      easing: 'easing-out'\n    }),\n    '&:hover': {\n      opacity: 1\n    }\n  }\n}))\n\nconst TabGeneral = () => {\n  const classes = useStyles()\n  const { t } = useTranslation('user')\n\n  const userForm = useFormContext<UserDetail>()\n  const watchValidFrom = userForm.watch('valid_from', null)\n  const watchValidUntil = userForm.watch('valid_until', null)\n\n  const dispatch = useDispatch()\n  const { parameters, ...initDataForCE } = useSelector(userStore.selectInitDataForCE)\n  const userDetail = useSelector(userStore.selectDetail)\n\n  const isCreating = _.isNil(userDetail.id)\n\n  const handleOpenResetPwdDialog = () => {\n    dispatch(userStore.actions.setResetPwdDialogOpen(true))\n  }\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={6}>\n        <FormControllerTextField\n          control={userForm.control}\n          required\n          name=\"user_id\"\n          label=\"Username\"\n          autoFocus={isCreating}\n          disabled={!isCreating}\n        />\n      </Grid>\n\n      <Grid item xs={6}>\n        <FormControllerTextField control={userForm.control} name=\"user_abb\" label=\"User Abbr.\" />\n      </Grid>\n\n      <When condition={isCreating}>\n        <Grid item xs={12}>\n          <FormControllerPasswordField\n            control={userForm.control}\n            required\n            type=\"password\"\n            name=\"password\"\n            label=\"Password\"\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <FormControllerTextField\n            control={userForm.control}\n            required\n            type=\"password\"\n            name=\"confirm_password\"\n            label=\"Confirm Password\"\n          />\n        </Grid>\n      </When>\n\n      <Grid item xs={12}>\n        <FormControllerTextField control={userForm.control} required name=\"first_name\" label=\"First name\" />\n      </Grid>\n\n      <Grid item xs={12}>\n        <FormControllerTextField control={userForm.control} required name=\"last_name\" label=\"Last name\" />\n      </Grid>\n\n      <Grid item xs={12}>\n        <FormControllerTextField control={userForm.control} name=\"email\" label=\"Email\" />\n      </Grid>\n\n      <Grid item xs={12}>\n        <FormControllerAutocomplete\n          getOptionSelected={(option, value) => option.id === value}\n          closeIcon={null}\n          control={userForm.control}\n          name=\"puco\"\n          options={parameters.PUCO}\n          renderOption={({ parameter_id, description }) => `${parameter_id} - ${description}`}\n          label=\"Purchasing company\"\n          required\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        <FormControllerAutocomplete\n          getOptionSelected={(option, value) => option.id === value}\n          closeIcon={null}\n          control={userForm.control}\n          name=\"default_language\"\n          options={parameters.PLLA}\n          renderOption={({ parameter_id, description }) => `${parameter_id} - ${description}`}\n          label=\"Default language\"\n          required\n        />\n      </Grid>\n\n      <Grid item xs={6}>\n        <FormControllerDatePicker\n          name=\"valid_from\"\n          label=\"Valid from\"\n          control={userForm.control}\n          maxDate={watchValidUntil}\n        />\n      </Grid>\n\n      <Grid item xs={6}>\n        <FormControllerDatePicker\n          name=\"valid_until\"\n          label=\"Valid until\"\n          control={userForm.control}\n          minDate={watchValidFrom}\n        />\n      </Grid>\n\n      <Grid item xs={12}>\n        <FormControllerAutocomplete\n          getOptionSelected={(option, value) => option.id === value}\n          closeIcon={null}\n          control={userForm.control}\n          name=\"time_zone\"\n          options={initDataForCE.timezones}\n          renderOption={(option) => option.description}\n          label=\"Timezone\"\n          required\n          getOptionLabel={(option) => {\n            if (_.isString(option)) {\n              const findOption = _.find(initDataForCE.timezones, {\n                id: option\n              })\n              return (findOption as any)?.description\n            }\n            return option.description\n          }}\n        />\n      </Grid>\n\n      <Unless condition={isCreating}>\n        <Grid item xs={12}>\n          <Typography\n            variant=\"inherit\"\n            display=\"block\"\n            onClick={handleOpenResetPwdDialog}\n            className={classes.resetPassword}\n          >\n            {t('form.label.reset_password')}\n          </Typography>\n        </Grid>\n        <SectionTimezone value={userDetail} />\n      </Unless>\n\n      <Grid item xs={12}>\n        <div />\n      </Grid>\n\n      <Grid item xs={12}>\n        <div />\n      </Grid>\n\n      <Grid item xs={12}>\n        <div />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default TabGeneral\n"]},"metadata":{},"sourceType":"module"}