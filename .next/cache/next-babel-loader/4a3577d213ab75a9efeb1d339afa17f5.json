{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Common\\\\SaveAsPreset\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { DialogMain, FormControllerTextField } from '@/components/index';\nimport { useTranslation } from 'next-i18next';\n\nfunction DialogSaveAsPreset(props) {\n  _s();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var onSubmit = props.onSubmit,\n      name = props.name,\n      control = props.control,\n      defaultValue = props.defaultValue,\n      rules = props.rules,\n      dialogProps = _objectWithoutProperties(props, [\"onSubmit\", \"name\", \"control\", \"defaultValue\", \"rules\"]);\n\n  return /*#__PURE__*/_jsxDEV(DialogMain, _objectSpread(_objectSpread({}, dialogProps), {}, {\n    title: \"Save this preset\",\n    maxWidth: \"sm\",\n    onOk: onSubmit,\n    onClose: dialogProps.onClose,\n    okText: t('common:button.save'),\n    closeText: t('common:button.cancel'),\n    children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n      style: {\n        marginTop: 8\n      },\n      name: name,\n      label: \"Name\",\n      autoFocus: true,\n      required: true,\n      control: control,\n      defaultValue: defaultValue,\n      rules: rules\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DialogSaveAsPreset, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = DialogSaveAsPreset;\nDialogSaveAsPreset.defaultProps = {\n  name: 'save_as_name',\n  defaultValue: {},\n  rules: {}\n};\nexport default DialogSaveAsPreset;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogSaveAsPreset\");","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Common/SaveAsPreset/index.tsx"],"names":["DialogMain","FormControllerTextField","useTranslation","DialogSaveAsPreset","props","t","onSubmit","name","control","defaultValue","rules","dialogProps","onClose","marginTop","defaultProps"],"mappings":";;;;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,uBAArB,QAAoD,oBAApD;AAEA,SAASC,cAAT,QAA+B,cAA/B;;AAIA,SAASC,kBAAT,CAA4BC,KAA5B,EAA4D;AAAA;;AAAA,wBAC5CF,cAAc,EAD8B;AAAA,MAClDG,CADkD,mBAClDA,CADkD;;AAAA,MAElDC,QAFkD,GAEeF,KAFf,CAElDE,QAFkD;AAAA,MAExCC,IAFwC,GAEeH,KAFf,CAExCG,IAFwC;AAAA,MAElCC,OAFkC,GAEeJ,KAFf,CAElCI,OAFkC;AAAA,MAEzBC,YAFyB,GAEeL,KAFf,CAEzBK,YAFyB;AAAA,MAEXC,KAFW,GAEeN,KAFf,CAEXM,KAFW;AAAA,MAEDC,WAFC,4BAEeP,KAFf;;AAG1D,sBACE,QAAC,UAAD,kCACMO,WADN;AAEE,IAAA,KAAK,EAAC,kBAFR;AAGE,IAAA,QAAQ,EAAC,IAHX;AAIE,IAAA,IAAI,EAAEL,QAJR;AAKE,IAAA,OAAO,EAAEK,WAAW,CAACC,OALvB;AAME,IAAA,MAAM,EAAEP,CAAC,CAAC,oBAAD,CANX;AAOE,IAAA,SAAS,EAAEA,CAAC,CAAC,sBAAD,CAPd;AAAA,2BASE,QAAC,uBAAD;AACE,MAAA,KAAK,EAAE;AAAEQ,QAAAA,SAAS,EAAE;AAAb,OADT;AAEE,MAAA,IAAI,EAAEN,IAFR;AAGE,MAAA,KAAK,EAAC,MAHR;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,QAAQ,MALV;AAME,MAAA,OAAO,EAAEC,OANX;AAOE,MAAA,YAAY,EAAEC,YAPhB;AAQE,MAAA,KAAK,EAAEC;AART;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAzBQP,kB;UACOD,c;;;KADPC,kB;AA2BTA,kBAAkB,CAACW,YAAnB,GAAkC;AAChCP,EAAAA,IAAI,EAAE,cAD0B;AAEhCE,EAAAA,YAAY,EAAE,EAFkB;AAGhCC,EAAAA,KAAK,EAAE;AAHyB,CAAlC;AAMA,eAAeP,kBAAf","sourcesContent":["import { DialogMain, FormControllerTextField } from '@/components/index'\n\nimport { useTranslation } from 'next-i18next'\n\nimport type { DialogSaveAsPresetProps } from './type'\n\nfunction DialogSaveAsPreset(props: DialogSaveAsPresetProps) {\n  const { t } = useTranslation()\n  const { onSubmit, name, control, defaultValue, rules, ...dialogProps } = props\n  return (\n    <DialogMain\n      {...dialogProps}\n      title=\"Save this preset\"\n      maxWidth=\"sm\"\n      onOk={onSubmit}\n      onClose={dialogProps.onClose}\n      okText={t('common:button.save')}\n      closeText={t('common:button.cancel')}\n    >\n      <FormControllerTextField\n        style={{ marginTop: 8 }}\n        name={name}\n        label=\"Name\"\n        autoFocus\n        required\n        control={control}\n        defaultValue={defaultValue}\n        rules={rules}\n      />\n    </DialogMain>\n  )\n}\n\nDialogSaveAsPreset.defaultProps = {\n  name: 'save_as_name',\n  defaultValue: {},\n  rules: {}\n}\n\nexport default DialogSaveAsPreset\n"]},"metadata":{},"sourceType":"module"}