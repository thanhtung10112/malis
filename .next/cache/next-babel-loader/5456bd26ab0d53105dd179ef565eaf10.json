{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\App\\\\TabHistoryLog\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useMemo, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Paper, TextField, Grid } from '@material-ui/core';\nimport { DataTable } from '@/components';\nimport _ from 'lodash';\nimport * as columnProperties from '@/utils/columnProperties';\nimport HttpService from '@/helper/HttpService';\nimport { commonStore } from '@/store/reducers';\n\nvar AppTabHistoryLog = function AppTabHistoryLog(props) {\n  _s();\n\n  var entityId = props.entityId,\n      tableHeight = props.tableHeight,\n      mode = props.mode,\n      descriptionRows = props.descriptionRows,\n      extraColumns = props.extraColumns,\n      entity = props.entity,\n      onChange = props.onChange,\n      data = props.data,\n      isOpenDialog = props.isOpenDialog;\n  var httpService = new HttpService('');\n\n  var _useState = useState(''),\n      operationDetail = _useState[0],\n      setOperationDetail = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var dispatch = useDispatch();\n  var defaultColumns = useMemo(function () {\n    return [_objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n      field: 'operation_code',\n      headerName: 'Tr.',\n      width: 80\n    }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n      field: 'created_at',\n      headerName: 'Date Time',\n      flex: 0.6\n    }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n      field: 'created_by',\n      headerName: 'User',\n      width: 80\n    }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n      field: 'operation_description',\n      headerName: 'Description',\n      flex: 0.6\n    })];\n  }, []);\n  var columns = [].concat(_toConsumableArray(defaultColumns), _toConsumableArray(extraColumns));\n  useEffect(function () {\n    if (data.length === 0 && (_.isNil(isOpenDialog) || isOpenDialog)) {\n      getHistoryData();\n    }\n  }, [entityId, entity, data, isOpenDialog]); // reset history log if close the dialog\n\n  useEffect(function () {\n    if (_.isNil(isOpenDialog)) {\n      return;\n    }\n\n    if (!isOpenDialog && data.length > 0) {\n      onChange([]);\n    }\n  }, [data, isOpenDialog, onChange]);\n\n  var getHistoryData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$httpService$ge, history_logs;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return httpService.get('history', {\n                entity: entity,\n                pk: entityId\n              });\n\n            case 4:\n              _yield$httpService$ge = _context.sent;\n              history_logs = _yield$httpService$ge.history_logs;\n              onChange(history_logs);\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch(commonStore.actions.setError(_context.t0));\n\n            case 12:\n              setLoading(false);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }));\n\n    return function getHistoryData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleSelectOperation = function handleSelectOperation(params) {\n    var id = params.id;\n\n    var operation = _.find(data, {\n      id: id\n    });\n\n    setOperationDetail((operation === null || operation === void 0 ? void 0 : operation.changelogs) || '');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"history\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: mode === 'vertical' ? 12 : 7,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(DataTable, {\n            rows: data,\n            columns: columns,\n            tableHeight: tableHeight,\n            loading: loading,\n            onRowClick: handleSelectOperation,\n            hideFooter: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: mode === 'vertical' ? 12 : 5,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          multiline: true,\n          rows: descriptionRows,\n          value: operationDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AppTabHistoryLog, \"NPNCKnn8QJ8/BInFQIjtwo1miNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AppTabHistoryLog;\nAppTabHistoryLog.defaultProps = {\n  tableHeight: 350,\n  mode: 'vertical',\n  descriptionRows: 7,\n  extraColumns: []\n};\nexport default AppTabHistoryLog;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppTabHistoryLog\");","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/App/TabHistoryLog/index.tsx"],"names":["useState","useMemo","useEffect","useDispatch","Paper","TextField","Grid","DataTable","_","columnProperties","HttpService","commonStore","AppTabHistoryLog","props","entityId","tableHeight","mode","descriptionRows","extraColumns","entity","onChange","data","isOpenDialog","httpService","operationDetail","setOperationDetail","loading","setLoading","dispatch","defaultColumns","defaultProperties","field","headerName","width","flex","columns","length","isNil","getHistoryData","get","pk","history_logs","actions","setError","handleSelectOperation","params","id","operation","find","changelogs","defaultProps"],"mappings":"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","sourcesContent":["import { useState, useMemo, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { Paper, TextField, Grid } from '@material-ui/core'\nimport { DataTable } from '@/components'\n\nimport _ from 'lodash'\nimport * as columnProperties from '@/utils/columnProperties'\nimport HttpService from '@/helper/HttpService'\nimport { commonStore } from '@/store/reducers'\n\nimport type { TabHistoryProps } from './type'\nimport type { GridColumns, GridRowParams } from '@material-ui/data-grid'\nimport type { HistoryLog } from '@/types/Common'\n\nconst AppTabHistoryLog: React.FC<TabHistoryProps> = (props) => {\n  const { entityId, tableHeight, mode, descriptionRows, extraColumns, entity, onChange, data, isOpenDialog } = props\n\n  const httpService = new HttpService('')\n\n  const [operationDetail, setOperationDetail] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const defaultColumns = useMemo<GridColumns>(\n    () => [\n      {\n        ...columnProperties.defaultProperties,\n        field: 'operation_code',\n        headerName: 'Tr.',\n        width: 80\n      },\n      {\n        ...columnProperties.defaultProperties,\n        field: 'created_at',\n        headerName: 'Date Time',\n        flex: 0.6\n      },\n      {\n        ...columnProperties.defaultProperties,\n        field: 'created_by',\n        headerName: 'User',\n        width: 80\n      },\n      {\n        ...columnProperties.defaultProperties,\n        field: 'operation_description',\n        headerName: 'Description',\n        flex: 0.6\n      }\n    ],\n    []\n  )\n\n  const columns = [...defaultColumns, ...extraColumns]\n\n  useEffect(() => {\n    if (data.length === 0 && (_.isNil(isOpenDialog) || isOpenDialog)) {\n      getHistoryData()\n    }\n  }, [entityId, entity, data, isOpenDialog])\n\n  // reset history log if close the dialog\n  useEffect(() => {\n    if (_.isNil(isOpenDialog)) {\n      return\n    }\n    if (!isOpenDialog && data.length > 0) {\n      onChange([])\n    }\n  }, [data, isOpenDialog, onChange])\n\n  const getHistoryData = async () => {\n    setLoading(true)\n    try {\n      const { history_logs }: any = await httpService.get('history', { entity, pk: entityId })\n      onChange(history_logs as HistoryLog[])\n    } catch (error) {\n      dispatch(commonStore.actions.setError(error))\n    }\n    setLoading(false)\n  }\n\n  const handleSelectOperation = (params: GridRowParams) => {\n    const id = params.id as number\n    const operation = _.find(data, { id })\n    setOperationDetail(operation?.changelogs || '')\n  }\n\n  return (\n    <div className=\"history\">\n      <Grid container spacing={2}>\n        <Grid item xs={mode === 'vertical' ? 12 : 7}>\n          <Paper>\n            <DataTable\n              rows={data}\n              columns={columns}\n              tableHeight={tableHeight}\n              loading={loading}\n              onRowClick={handleSelectOperation}\n              hideFooter\n            />\n          </Paper>\n        </Grid>\n        <Grid item xs={mode === 'vertical' ? 12 : 5}>\n          <TextField multiline rows={descriptionRows} value={operationDetail} />\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nAppTabHistoryLog.defaultProps = {\n  tableHeight: 350,\n  mode: 'vertical',\n  descriptionRows: 7,\n  extraColumns: []\n}\n\nexport default AppTabHistoryLog\n"]},"metadata":{},"sourceType":"module"}