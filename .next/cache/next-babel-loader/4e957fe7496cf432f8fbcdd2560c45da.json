{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFormContext } from 'react-hook-form';\nimport { useTranslation } from 'next-i18next';\nimport { userStore } from '@/store/reducers';\nimport { Grid, Typography, makeStyles } from '@material-ui/core';\nimport { Unless, When } from 'react-if';\nimport { FormControllerAutocomplete, FormControllerTextField, FormControllerPasswordField, FormControllerDatePicker, SectionTimezone } from '@/components';\nimport _ from 'lodash';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    resetPassword: {\n      cursor: 'pointer',\n      opacity: 0.6,\n      textDecoration: 'underline',\n      transition: theme.transitions.create('all', {\n        duration: theme.transitions.duration.standard,\n        easing: 'easing-out'\n      }),\n      '&:hover': {\n        opacity: 1\n      }\n    }\n  };\n});\n\nvar TabGeneral = function TabGeneral() {\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation('user'),\n      t = _useTranslation.t;\n\n  var userForm = useFormContext();\n  var watchValidFrom = userForm.watch('valid_from', null);\n  var watchValidUntil = userForm.watch('valid_until', null);\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(userStore.selectInitDataForCE),\n      parameters = _useSelector.parameters,\n      initDataForCE = _objectWithoutProperties(_useSelector, [\"parameters\"]);\n\n  var userDetail = useSelector(userStore.selectDetail);\n\n  var isCreating = _.isNil(userDetail.id);\n\n  var handleOpenResetPwdDialog = function handleOpenResetPwdDialog() {\n    dispatch(userStore.actions.setResetPwdDialogOpen(true));\n  };\n\n  return /*#__PURE__*/_jsxs(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsx(FormControllerTextField, {\n        control: userForm.control,\n        required: true,\n        name: \"user_id\",\n        label: \"Username\",\n        autoFocus: isCreating,\n        disabled: !isCreating\n      })\n    }), /*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsx(FormControllerTextField, {\n        control: userForm.control,\n        name: \"user_abb\",\n        label: \"User Abbr.\"\n      })\n    }), /*#__PURE__*/_jsxs(When, {\n      condition: isCreating,\n      children: [/*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsx(FormControllerPasswordField, {\n          control: userForm.control,\n          required: true,\n          type: \"password\",\n          name: \"password\",\n          label: \"Password\"\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsx(FormControllerTextField, {\n          control: userForm.control,\n          required: true,\n          type: \"password\",\n          name: \"confirm_password\",\n          label: \"Confirm Password\"\n        })\n      })]\n    }), /*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsx(FormControllerTextField, {\n        control: userForm.control,\n        required: true,\n        name: \"first_name\",\n        label: \"First name\"\n      })\n    }), /*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsx(FormControllerTextField, {\n        control: userForm.control,\n        required: true,\n        name: \"last_name\",\n        label: \"Last name\"\n      })\n    }), /*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsx(FormControllerTextField, {\n        control: userForm.control,\n        name: \"email\",\n        label: \"Email\"\n      })\n    }), /*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsx(FormControllerAutocomplete, {\n        getOptionSelected: function getOptionSelected(option, value) {\n          return option.id === value;\n        },\n        closeIcon: null,\n        control: userForm.control,\n        name: \"puco\",\n        options: parameters.PUCO,\n        renderOption: function renderOption(_ref) {\n          var parameter_id = _ref.parameter_id,\n              description = _ref.description;\n          return \"\".concat(parameter_id, \" - \").concat(description);\n        },\n        label: \"Purchasing company\",\n        required: true\n      })\n    }), /*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsx(FormControllerAutocomplete, {\n        getOptionSelected: function getOptionSelected(option, value) {\n          return option.id === value;\n        },\n        closeIcon: null,\n        control: userForm.control,\n        name: \"default_language\",\n        options: parameters.PLLA,\n        renderOption: function renderOption(_ref2) {\n          var parameter_id = _ref2.parameter_id,\n              description = _ref2.description;\n          return \"\".concat(parameter_id, \" - \").concat(description);\n        },\n        label: \"Default language\",\n        required: true\n      })\n    }), /*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsx(FormControllerDatePicker, {\n        name: \"valid_from\",\n        label: \"Valid from\",\n        control: userForm.control,\n        maxDate: watchValidUntil\n      })\n    }), /*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsx(FormControllerDatePicker, {\n        name: \"valid_until\",\n        label: \"Valid until\",\n        control: userForm.control,\n        minDate: watchValidFrom\n      })\n    }), /*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsx(FormControllerAutocomplete, {\n        getOptionSelected: function getOptionSelected(option, value) {\n          return option.id === value;\n        },\n        closeIcon: null,\n        control: userForm.control,\n        name: \"time_zone\",\n        options: initDataForCE.timezones,\n        renderOption: function renderOption(option) {\n          return option.description;\n        },\n        label: \"Timezone\",\n        required: true,\n        getOptionLabel: function getOptionLabel(option) {\n          if (_.isString(option)) {\n            var findOption = _.find(initDataForCE.timezones, {\n              id: option\n            });\n\n            return findOption === null || findOption === void 0 ? void 0 : findOption.description;\n          }\n\n          return option.description;\n        }\n      })\n    }), /*#__PURE__*/_jsxs(Unless, {\n      condition: isCreating,\n      children: [/*#__PURE__*/_jsx(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsx(Typography, {\n          variant: \"inherit\",\n          display: \"block\",\n          onClick: handleOpenResetPwdDialog,\n          className: classes.resetPassword,\n          children: t('form.label.reset_password')\n        })\n      }), /*#__PURE__*/_jsx(SectionTimezone, {\n        value: userDetail\n      })]\n    }), /*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsx(\"div\", {})\n    }), /*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsx(\"div\", {})\n    }), /*#__PURE__*/_jsx(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsx(\"div\", {})\n    })]\n  });\n};\n\nexport default TabGeneral;","map":null,"metadata":{},"sourceType":"module"}