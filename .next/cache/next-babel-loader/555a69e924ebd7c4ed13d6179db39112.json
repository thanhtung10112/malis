{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useMemo, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useGetData from '@/hooks/useGetData';\nimport { DialogMain, FormControllerTabs, BtnHelp, AppTabHistoryLog } from '@/components';\nimport TabGeneral from './TabGeneral';\nimport Context from './Context';\nimport _ from 'lodash';\nimport { commonStore } from '@/store/reducers';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport getValidationSchema from './validationSchema';\nimport { defaultTagDetail } from '@/utils/defaultValues';\n\nvar DialogTag = function DialogTag(props) {\n  var _permissions$element;\n\n  var open = props.open,\n      onClose = props.onClose,\n      detail = props.detail,\n      initData = props.initData;\n\n  var _useState = useState(0),\n      tab = _useState[0],\n      setTab = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      historyLogs = _useState3[0],\n      setHistoryLogs = _useState3[1];\n\n  var _useTranslation = useTranslation('element'),\n      t = _useTranslation.t;\n\n  var _useGetData = useGetData('elements'),\n      postCreate = _useGetData.postCreate,\n      getGeneratedCode = _useGetData.getGeneratedCode,\n      putUpdate = _useGetData.putUpdate;\n\n  var dispatch = useDispatch();\n  var wiki_page = initData.wiki_page,\n      permissions = initData.permissions;\n  var userDrawing = useSelector(commonStore.selectUserValueDrawing);\n\n  var isCreating = _.isNil(detail === null || detail === void 0 ? void 0 : detail.id);\n\n  var vaidationSchema = useMemo(function () {\n    return getValidationSchema(t);\n  }, []);\n  var tagForm = useForm({\n    shouldUnregister: false,\n    resolver: yupResolver(vaidationSchema),\n    defaultValues: defaultTagDetail\n  });\n  useEffect(function () {\n    if (_.isPlainObject(detail)) {\n      _.forIn(detail, function (value, key) {\n        tagForm.setValue(key, value);\n      });\n    }\n  }, [detail]);\n\n  var onChangeLoading = function onChangeLoading(newLoading) {\n    setLoading(newLoading);\n  };\n\n  var handleCreateTag = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData) {\n      var _yield$postCreate, message, elementId;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return postCreate(formData);\n\n            case 4:\n              _yield$postCreate = _context.sent;\n              message = _yield$postCreate.message;\n\n              if (!(userDrawing.value > 0)) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 9;\n              return getGeneratedCode({\n                drawing_id: userDrawing.value\n              });\n\n            case 9:\n              elementId = _context.sent;\n              tagForm.reset(_objectSpread(_objectSpread({}, detail), {}, {\n                element_id: elementId\n              }));\n              _context.next = 14;\n              break;\n\n            case 13:\n              tagForm.reset();\n\n            case 14:\n              dispatch(commonStore.actions.setSuccessMessage(message));\n              _context.next = 20;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('error', '>>>', _context.t0);\n\n            case 20:\n              setLoading(false);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 17]]);\n    }));\n\n    return function handleCreateTag(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleUpdateTag = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id, formData) {\n      var _yield$putUpdate, message;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setLoading(true);\n              _context2.prev = 1;\n              _context2.next = 4;\n              return putUpdate(id, formData);\n\n            case 4:\n              _yield$putUpdate = _context2.sent;\n              message = _yield$putUpdate.message;\n              dispatch(commonStore.actions.setSuccessMessage(message));\n              handleClose();\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error('error', '>>>', _context2.t0);\n\n            case 13:\n              setLoading(false);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 10]]);\n    }));\n\n    return function handleUpdateTag(_x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleSubmitForm = tagForm.handleSubmit(function (formData) {\n    var _formData$part_id;\n\n    formData.schematic_id = formData.schematic_id.value;\n    formData.part_id = ((_formData$part_id = formData.part_id) === null || _formData$part_id === void 0 ? void 0 : _formData$part_id.value) || null;\n\n    var data = _.pick(formData, ['job_id', 'schematic_id', 'element_id', 'part_id', 'tag', 'fluid', 'tech_data', 'descriptions', 'functions', 'additional_attributes']);\n\n    if (isCreating) {\n      handleCreateTag(data);\n    } else {\n      var tagEdit = _(formData).assign({\n        element_id_pk: formData.id\n      }).pick(['fluid', 'tech_data', 'descriptions', 'functions', 'tag', 'element_id', 'part_id', 'additional_attributes']).value();\n\n      handleUpdateTag(formData.id, tagEdit);\n    }\n  });\n\n  var handleClose = function handleClose() {\n    setTab(0);\n    tagForm.reset(_objectSpread({}, detail));\n    onClose();\n  };\n\n  var handleChangeTab = function handleChangeTab(event, nextTab) {\n    setTab(nextTab);\n  };\n\n  var handleChangeHistoryLogs = function handleChangeHistoryLogs(data) {\n    setHistoryLogs(data);\n  };\n\n  var generalTab = {\n    label: t('common:tab.general'),\n    panel: /*#__PURE__*/_jsx(TabGeneral, {}),\n    errorKey: ['schematic_id', 'element_id ', 'job_id', 'part_id', 'tag', 'fluid', 'tech_data', 'functions']\n  };\n  var historyTab = {\n    label: t('common:tab.history'),\n    panel: /*#__PURE__*/_jsx(AppTabHistoryLog, {\n      isOpenDialog: open,\n      data: historyLogs,\n      onChange: handleChangeHistoryLogs,\n      entityId: detail === null || detail === void 0 ? void 0 : detail.id,\n      mode: \"horizonatal\",\n      tableHeight: 430,\n      descriptionRows: 26,\n      entity: \"element\"\n    }),\n    disabled: isCreating\n  };\n  var tabs = [generalTab, historyTab];\n  return /*#__PURE__*/_jsx(DialogMain, {\n    fullWidth: true,\n    maxWidth: \"md\",\n    open: open,\n    loading: loading,\n    title: /*#__PURE__*/_jsx(BtnHelp, {\n      title: isCreating ? t('form.title.create_tag') : t('form.title.update_tag'),\n      href: wiki_page\n    }),\n    onOk: handleSubmitForm,\n    onClose: handleClose,\n    okText: isCreating ? t('common:button.create') : t('common:button.update'),\n    okButtonProps: {\n      disabled: loading || !((_permissions$element = permissions.element) === null || _permissions$element === void 0 ? void 0 : _permissions$element.edit) && !isCreating\n    },\n    children: /*#__PURE__*/_jsx(Context.Provider, {\n      value: _objectSpread(_objectSpread({}, props), {}, {\n        onChangeLoading: onChangeLoading\n      }),\n      children: /*#__PURE__*/_jsx(FormControllerTabs, {\n        form: tagForm,\n        value: tab,\n        onChange: handleChangeTab,\n        tabs: tabs\n      })\n    })\n  });\n};\n\nexport default DialogTag;","map":null,"metadata":{},"sourceType":"module"}