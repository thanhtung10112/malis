{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice, createAction } from '@reduxjs/toolkit';\nexport var name = 'advancedFilter';\nexport var resetState = createAction(name + '/RESET_STATE');\nexport var initialState = {\n  isOpen: false,\n  isEditMode: false,\n  isOpenFilterDetail: false,\n  isExpanedSection: false,\n  permissions: {\n    update_system_default_presets: false\n  },\n  systemPreset: {\n    id: null,\n    name: ''\n  },\n  defaultFilter: {\n    id: null,\n    name: '',\n    entity: '',\n    is_system_default: false,\n    where_conditions: null,\n    sort_conditions: null\n  },\n  filterPresetList: [],\n  filterType: 'own',\n  initData: {\n    columns: [],\n    comparators: [],\n    sortOptions: [],\n    logicalOperators: []\n  },\n  filterDetail: {\n    name: '',\n    entity: '',\n    is_shared: false,\n    is_system_default: false,\n    is_user_default: false,\n    sort_conditions: null,\n    where_conditions: null\n  },\n  saveAsForm: {\n    open: false,\n    clearError: false,\n    error: ''\n  },\n  afForm: {\n    clearError: false,\n    error: ''\n  },\n  loading: {\n    table: false,\n    dialog: false,\n    section: false\n  }\n};\nvar advancedFilter = createSlice({\n  name: name,\n  initialState: initialState,\n  reducers: {\n    setOpenAdvanceSearch: function setOpenAdvanceSearch(state, action) {\n      state.isOpen = action.payload;\n    },\n    setDefaultFilter: function setDefaultFilter(state, action) {\n      state.defaultFilter = _objectSpread(_objectSpread({}, state.defaultFilter), action.payload);\n    },\n    setFilterPresetList: function setFilterPresetList(state, action) {\n      state.filterPresetList = action.payload;\n    },\n    setFilterType: function setFilterType(state, action) {\n      state.filterType = action.payload;\n    },\n    setOpenFilterDetail: function setOpenFilterDetail(state, action) {\n      state.isOpenFilterDetail = action.payload;\n    },\n    setEditMode: function setEditMode(state, action) {\n      state.isEditMode = action.payload;\n    },\n    setInitData: function setInitData(state, action) {\n      state.initData = action.payload;\n    },\n    setFilterDetail: function setFilterDetail(state, action) {\n      state.filterDetail = _objectSpread(_objectSpread({}, state.filterDetail), action.payload);\n    },\n    setExpandedSection: function setExpandedSection(state, action) {\n      state.isExpanedSection = action.payload;\n    },\n    setPermissions: function setPermissions(state, action) {\n      state.permissions = action.payload;\n    },\n    setSystemPreset: function setSystemPreset(state, action) {\n      state.systemPreset = action.payload;\n    },\n    setSaveAsForm: function setSaveAsForm(state, action) {\n      state.saveAsForm = _objectSpread(_objectSpread({}, state.saveAsForm), action.payload);\n    },\n    setAfForm: function setAfForm(state, action) {\n      state.afForm = _objectSpread(_objectSpread({}, state.afForm), action.payload);\n    },\n    setLoadingTable: function setLoadingTable(state, action) {\n      state.loading.table = action.payload;\n    },\n    setLoadingDialog: function setLoadingDialog(state, action) {\n      state.loading.dialog = action.payload;\n    },\n    setLoadingSection: function setLoadingSection(state, _ref) {\n      var payload = _ref.payload;\n      state.loading.section = payload;\n    },\n    resetFilterDetail: function resetFilterDetail(state, _ref2) {\n      var payload = _ref2.payload;\n      state.filterDetail = {\n        name: '',\n        entity: payload,\n        is_shared: false,\n        is_system_default: false,\n        is_user_default: false,\n        sort_conditions: [],\n        where_conditions: {\n          conjunction: 'AND',\n          type: 'group',\n          conditions: []\n        }\n      };\n    }\n  },\n  extraReducers: _defineProperty({}, resetState.type, function () {\n    return initialState;\n  })\n});\nexport var create = createAction(name + '/CREATE');\nexport var getList = createAction(name + '/GET_LIST');\nexport var clearDefaultFilter = createAction(name + '/CLEAR_DEFAULT_FILTER');\nexport var getDefaultFilter = createAction(name + '/GET_DEFAULT_FILTER');\nexport var changeFilterType = createAction(name + '/CHANGE_FILTER_TYPE');\nexport var open = createAction(name + '/OPEN');\nexport var apply = createAction(name + '/APPLY');\nexport var close = createAction(name + '/CLOSE');\nexport var remove = createAction(name + '/REMOVE');\nexport var getDetail = createAction(name + '/GET_DETAIL');\nexport var update = createAction(name + '/UPDATE');\nexport var share = createAction(name + '/SHARE');\nexport var saveAs = createAction(name + '/SAVE_AS');\nvar _advancedFilter$actio = advancedFilter.actions,\n    setOpenAdvanceSearch = _advancedFilter$actio.setOpenAdvanceSearch,\n    setDefaultFilter = _advancedFilter$actio.setDefaultFilter,\n    setFilterPresetList = _advancedFilter$actio.setFilterPresetList,\n    setFilterType = _advancedFilter$actio.setFilterType,\n    setOpenFilterDetail = _advancedFilter$actio.setOpenFilterDetail,\n    setEditMode = _advancedFilter$actio.setEditMode,\n    setInitData = _advancedFilter$actio.setInitData,\n    setFilterDetail = _advancedFilter$actio.setFilterDetail,\n    setExpandedSection = _advancedFilter$actio.setExpandedSection,\n    resetFilterDetail = _advancedFilter$actio.resetFilterDetail,\n    setPermissions = _advancedFilter$actio.setPermissions,\n    setSystemPreset = _advancedFilter$actio.setSystemPreset,\n    setSaveAsForm = _advancedFilter$actio.setSaveAsForm,\n    setAfForm = _advancedFilter$actio.setAfForm,\n    setLoadingDialog = _advancedFilter$actio.setLoadingDialog,\n    setLoadingTable = _advancedFilter$actio.setLoadingTable,\n    setLoadingSection = _advancedFilter$actio.setLoadingSection; // Selector\n\nexport { setOpenAdvanceSearch, setDefaultFilter, setFilterPresetList, setFilterType, setOpenFilterDetail, setEditMode, setInitData, setFilterDetail, setExpandedSection, resetFilterDetail, setPermissions, setSystemPreset, setSaveAsForm, setAfForm, setLoadingDialog, setLoadingTable, setLoadingSection };\nexport var advanceSearchSelector = function advanceSearchSelector(state) {\n  return state.advancedFilter;\n};\nexport var selectEditMode = function selectEditMode(state) {\n  return state.advancedFilter.isEditMode;\n};\nexport var selectDefaultFilter = function selectDefaultFilter(state) {\n  return state.advancedFilter.defaultFilter;\n};\nexport var selectFilterType = function selectFilterType(state) {\n  return state.advancedFilter.filterType;\n};\nexport var selectIsExpanedSection = function selectIsExpanedSection(state) {\n  return state.advancedFilter.isExpanedSection;\n};\nexport var selectColumn = function selectColumn(state) {\n  return state.advancedFilter.initData.columns;\n};\nexport var selectComparator = function selectComparator(state) {\n  return state.advancedFilter.initData.comparators;\n};\nexport var selectSortOptions = function selectSortOptions(state) {\n  return state.advancedFilter.initData.sortOptions;\n};\nexport var selectFilterDetail = function selectFilterDetail(state) {\n  return state.advancedFilter.filterDetail;\n};\nexport var selectConditionTree = function selectConditionTree(state) {\n  return state.advancedFilter.filterDetail.where_conditions;\n};\nexport var selectSortConditions = function selectSortConditions(state) {\n  return state.advancedFilter.filterDetail.sort_conditions;\n};\nexport var selectUserDefault = function selectUserDefault(state) {\n  return state.advancedFilter.filterDetail.is_user_default;\n};\nexport var selectFilterDetailName = function selectFilterDetailName(state) {\n  return state.advancedFilter.filterDetail.name;\n};\nexport var selectListData = function selectListData(state) {\n  return state.advancedFilter.filterPresetList;\n};\nexport var selectPermissions = function selectPermissions(state) {\n  return state.advancedFilter.permissions;\n};\nexport var selectSystemPreset = function selectSystemPreset(state) {\n  return state.advancedFilter.systemPreset;\n};\nexport var selectOpenAdvanceSearch = function selectOpenAdvanceSearch(state) {\n  return state.advancedFilter.isOpen;\n};\nexport var selectAfForm = function selectAfForm(state) {\n  return state.advancedFilter.afForm;\n};\nexport var selectSaveAsForm = function selectSaveAsForm(state) {\n  return state.advancedFilter.saveAsForm;\n};\nexport var selectLoading = function selectLoading(state) {\n  return state.advancedFilter.loading;\n};\nexport var selectFilterData = function selectFilterData(state) {\n  var _state$advancedFilter = state.advancedFilter.defaultFilter,\n      whereConditions = _state$advancedFilter.where_conditions,\n      sortConditions = _state$advancedFilter.sort_conditions;\n  var where_conditions = whereConditions ? JSON.stringify(whereConditions) : null;\n  var sort_conditions = sortConditions ? JSON.stringify(sortConditions) : null;\n  return {\n    where_conditions: where_conditions,\n    sort_conditions: sort_conditions\n  };\n};\nexport default advancedFilter.reducer;","map":null,"metadata":{},"sourceType":"module"}