{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Fersher\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\App\\\\MessagePopup\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { commonStore } from '@/store/reducers';\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, _objectSpread({\n    elevation: 6,\n    variant: \"filled\"\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n}\n\nconst AppMessagePopup = () => {\n  const dispatch = useDispatch();\n  const messageState = useSelector(commonStore.selectMessageState);\n\n  const handleClose = () => {\n    dispatch(commonStore.actions.setDisplayMessage(false));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Snackbar, {\n    open: messageState.display,\n    message: messageState.message,\n    autoHideDuration: 3000,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    onClose: handleClose,\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      onClose: handleClose,\n      severity: messageState.status,\n      children: messageState.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\nexport default AppMessagePopup;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/components/App/MessagePopup/index.tsx"],"names":["useSelector","useDispatch","Snackbar","MuiAlert","commonStore","Alert","props","AppMessagePopup","dispatch","messageState","selectMessageState","handleClose","actions","setDisplayMessage","display","message","vertical","horizontal","status"],"mappings":";;;;;;;;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,OAAOC,QAAP,MAAqC,wBAArC;AAEA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAkC;AAChC,sBAAO,QAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC;AAAhC,KAA6CA,KAA7C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,MAAMC,eAAyB,GAAG,MAAM;AACtC,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAMQ,YAAY,GAAGT,WAAW,CAACI,WAAW,CAACM,kBAAb,CAAhC;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBH,IAAAA,QAAQ,CAACJ,WAAW,CAACQ,OAAZ,CAAoBC,iBAApB,CAAsC,KAAtC,CAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,QAAD;AACE,IAAA,IAAI,EAAEJ,YAAY,CAACK,OADrB;AAEE,IAAA,OAAO,EAAEL,YAAY,CAACM,OAFxB;AAGE,IAAA,gBAAgB,EAAE,IAHpB;AAIE,IAAA,YAAY,EAAE;AACZC,MAAAA,QAAQ,EAAE,KADE;AAEZC,MAAAA,UAAU,EAAE;AAFA,KAJhB;AAQE,IAAA,OAAO,EAAEN,WARX;AAAA,2BAUE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEA,WAAhB;AAA6B,MAAA,QAAQ,EAAEF,YAAY,CAACS,MAApD;AAAA,gBACGT,YAAY,CAACM;AADhB;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAzBD;;AA2BA,eAAeR,eAAf","sourcesContent":["import { useSelector, useDispatch } from 'react-redux'\n\nimport { Snackbar } from '@material-ui/core'\n\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert'\n\nimport { commonStore } from '@/store/reducers'\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />\n}\n\nconst AppMessagePopup: React.FC = () => {\n  const dispatch = useDispatch()\n\n  const messageState = useSelector(commonStore.selectMessageState)\n\n  const handleClose = () => {\n    dispatch(commonStore.actions.setDisplayMessage(false))\n  }\n\n  return (\n    <Snackbar\n      open={messageState.display}\n      message={messageState.message}\n      autoHideDuration={3000}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right'\n      }}\n      onClose={handleClose}\n    >\n      <Alert onClose={handleClose} severity={messageState.status}>\n        {messageState.message}\n      </Alert>\n    </Snackbar>\n  )\n}\n\nexport default AppMessagePopup\n"]},"metadata":{},"sourceType":"module"}