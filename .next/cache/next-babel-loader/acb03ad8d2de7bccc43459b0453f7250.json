{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { actionTypes } from '@/utils/constant';\nimport { createAction, createSlice, createSelector } from '@reduxjs/toolkit';\nexport const name = 'materials';\nexport const resetState = createAction(`${name}/${actionTypes.RESET_STATE}`);\nexport const materialDetail = {\n  job_id: null,\n  drawing_id: null,\n  dpn: '',\n  unit: null,\n  descriptions: [],\n  items: [],\n  manufacturers: []\n};\nconst initialState = {\n  initDataForList: {\n    permissions: {\n      materials: {\n        view: true\n      }\n    }\n  },\n  dataList: [{\n    id: '1',\n    part_id: '1111 000004 H001',\n    description: 'TEST',\n    MASS: '100',\n    INST: '1',\n    SPAR: '1',\n    COM: '1',\n    REP: '1',\n    EREC: '1'\n  }, {\n    id: '2',\n    part_id: '1111 000004 H002',\n    description: 'TEST_2',\n    MASS: '200',\n    INST: '2',\n    SPAR: '2',\n    COM: '2',\n    REP: '2',\n    EREC: '2'\n  }, {\n    id: '3',\n    part_id: '1111 000004 H003',\n    description: 'TEST_3',\n    MASS: '300',\n    INST: '3',\n    SPAR: '3',\n    COM: '3',\n    REP: '3',\n    EREC: '3'\n  }],\n  initDataForCE: {\n    parameters: {},\n    wiki_page: ''\n  },\n  dialogState: {\n    open: false,\n    loading: false,\n    tab: 0\n  },\n  detail: materialDetail,\n  materialSum: {\n    amount: 0,\n    currency_id: '',\n    description: 'Total Job Mass (Kg)',\n    left_in_order: 0,\n    left_in_rfq: 0,\n    parameter_id: '',\n    used_in_order: 0,\n    used_in_rfq: 0\n  }\n};\nconst materialSlice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setDataList(state, {\n      payload\n    }) {\n      state.dataList = payload;\n    },\n\n    setDialogState(state, {\n      payload\n    }) {\n      state.dialogState = _objectSpread(_objectSpread({}, state.dialogState), payload);\n    },\n\n    setDialogStateOpen(state, {\n      payload\n    }) {\n      state.dialogState.open = payload;\n    },\n\n    setDialogStateLoading(state, {\n      payload\n    }) {\n      state.dialogState.loading = payload;\n    },\n\n    setDetail(state, {\n      payload\n    }) {\n      state.detail = _objectSpread(_objectSpread({}, state.detail), payload);\n    },\n\n    setDialogStateTab(state, {\n      payload\n    }) {\n      state.dialogState.tab = payload;\n    }\n\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState;\n    }\n\n  }\n});\nexport const {\n  actions\n} = materialSlice;\nexport const selectState = state => state[name];\nexport const selectPermissions = createSelector(selectState, state => state.initDataForList.permissions.materials);\nexport const selectDialogState = createSelector(selectState, state => state.dialogState);\nexport const selectDetail = createSelector(selectState, state => state.detail);\nexport const selectDataList = createSelector(selectState, state => state.dataList);\nexport const selectMaterialSum = createSelector(selectState, state => state.materialSum);\nexport default materialSlice;","map":null,"metadata":{},"sourceType":"module"}