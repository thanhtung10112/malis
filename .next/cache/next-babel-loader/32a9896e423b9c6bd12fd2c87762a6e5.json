{"ast":null,"code":"import { actionTypes } from '@/utils/constant';\nimport { createAction, createSlice, createSelector } from '@reduxjs/toolkit';\nexport const name = 'element';\nexport const resetState = createAction(`${name}/${actionTypes.RESET_STATE}`);\nexport const initialState = {\n  initDataForList: {\n    jobs: [],\n    permissions: {\n      element: null\n    },\n    wiki_page: '',\n    column_tooltips: {}\n  },\n  dataList: []\n};\nconst tagSlice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setInitDataForList(state, {\n      payload\n    }) {\n      state.initDataForList = payload;\n    },\n\n    setDataList(state, {\n      payload\n    }) {\n      state.dataList = payload;\n    }\n\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState;\n    }\n\n  }\n});\nexport const {\n  actions\n} = tagSlice; // Saga actions\n\nexport const sagaGetList = createAction(`${name}/${actionTypes.GET_LIST}`);\nexport const sagaOpenCreateDialog = createAction(`${name}/${actionTypes.OPEN_CREATE_DIALOG}`);\nexport const sagaOpenUpdateDialog = createAction(`${name}/${actionTypes.OPEN_UPDATE_DIALOG}`);\nexport const sagaChangeUserJob = createAction(`${name}/${actionTypes.CHANGE_USER_JOB}`);\nexport const sagaChangeUserSchematic = createAction(`${name}/CHANGE_USER_SCHEMATIC`);\nexport const sagaRemove = createAction(`${name}/${actionTypes.REMOVE}`);\nexport const sagaChangeUserDrawing = createAction(`${name}/${actionTypes.CHANGE_USER_DRAWING}`); // Selectors\n\nexport const selectState = state => state[name];\nexport const selectInitDataForList = createSelector(selectState, state => state.initDataForList);\nexport const selectPermissions = createSelector(selectState, state => state.initDataForList.permissions.element);\nexport const selectSpecification = createSelector(selectState, state => state.initDataForList.permissions.element);\nexport const selectDataList = createSelector(selectState, state => state.dataList);\nexport default tagSlice;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/store/reducers/tag.reducer.ts"],"names":["actionTypes","createAction","createSlice","createSelector","name","resetState","RESET_STATE","initialState","initDataForList","jobs","permissions","element","wiki_page","column_tooltips","dataList","tagSlice","reducers","setInitDataForList","state","payload","setDataList","extraReducers","type","actions","sagaGetList","GET_LIST","sagaOpenCreateDialog","OPEN_CREATE_DIALOG","sagaOpenUpdateDialog","OPEN_UPDATE_DIALOG","sagaChangeUserJob","CHANGE_USER_JOB","sagaChangeUserSchematic","sagaRemove","REMOVE","sagaChangeUserDrawing","CHANGE_USER_DRAWING","selectState","selectInitDataForList","selectPermissions","selectSpecification","selectDataList"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,cAApC,QAAyE,kBAAzE;AAMA,OAAO,MAAMC,IAAY,GAAG,SAArB;AACP,OAAO,MAAMC,UAAU,GAAGJ,YAAY,CAAE,GAAEG,IAAK,IAAGJ,WAAW,CAACM,WAAY,EAApC,CAA/B;AAEP,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,eAAe,EAAE;AACfC,IAAAA,IAAI,EAAE,EADS;AAEfC,IAAAA,WAAW,EAAE;AACXC,MAAAA,OAAO,EAAE;AADE,KAFE;AAKfC,IAAAA,SAAS,EAAE,EALI;AAMfC,IAAAA,eAAe,EAAE;AANF,GADS;AAS1BC,EAAAA,QAAQ,EAAE;AATgB,CAArB;AAYP,MAAMC,QAAQ,GAAGb,WAAW,CAAC;AAC3BE,EAAAA,IAD2B;AAE3BG,EAAAA,YAF2B;AAG3BS,EAAAA,QAAQ,EAAE;AACRC,IAAAA,kBAAkB,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,EAAwD;AACxED,MAAAA,KAAK,CAACV,eAAN,GAAwBW,OAAxB;AACD,KAHO;;AAIRC,IAAAA,WAAW,CAACF,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,EAAqB;AAC9BD,MAAAA,KAAK,CAACJ,QAAN,GAAiBK,OAAjB;AACD;;AANO,GAHiB;AAW3BE,EAAAA,aAAa,EAAE;AACb,KAAChB,UAAU,CAACiB,IAAZ,IAAoB;AAClB,aAAOf,YAAP;AACD;;AAHY;AAXY,CAAD,CAA5B;AAkBA,OAAO,MAAM;AAAEgB,EAAAA;AAAF,IAAcR,QAApB,C,CAEP;;AACA,OAAO,MAAMS,WAAW,GAAGvB,YAAY,CAAE,GAAEG,IAAK,IAAGJ,WAAW,CAACyB,QAAS,EAAjC,CAAhC;AACP,OAAO,MAAMC,oBAAoB,GAAGzB,YAAY,CAAE,GAAEG,IAAK,IAAGJ,WAAW,CAAC2B,kBAAmB,EAA3C,CAAzC;AACP,OAAO,MAAMC,oBAAoB,GAAG3B,YAAY,CAAU,GAAEG,IAAK,IAAGJ,WAAW,CAAC6B,kBAAmB,EAAnD,CAAzC;AACP,OAAO,MAAMC,iBAAiB,GAAG7B,YAAY,CAAmB,GAAEG,IAAK,IAAGJ,WAAW,CAAC+B,eAAgB,EAAzD,CAAtC;AACP,OAAO,MAAMC,uBAAuB,GAAG/B,YAAY,CAAmB,GAAEG,IAAK,wBAA1B,CAA5C;AAEP,OAAO,MAAM6B,UAAU,GAAGhC,YAAY,CAAsB,GAAEG,IAAK,IAAGJ,WAAW,CAACkC,MAAO,EAAnD,CAA/B;AACP,OAAO,MAAMC,qBAAqB,GAAGlC,YAAY,CAAmB,GAAEG,IAAK,IAAGJ,WAAW,CAACoC,mBAAoB,EAA7D,CAA1C,C,CAEP;;AACA,OAAO,MAAMC,WAAW,GAAInB,KAAD,IAA4BA,KAAK,CAACd,IAAD,CAArD;AAEP,OAAO,MAAMkC,qBAAqB,GAAGnC,cAAc,CAACkC,WAAD,EAAenB,KAAD,IAAWA,KAAK,CAACV,eAA/B,CAA5C;AAEP,OAAO,MAAM+B,iBAAiB,GAAGpC,cAAc,CAACkC,WAAD,EAAenB,KAAD,IAAWA,KAAK,CAACV,eAAN,CAAsBE,WAAtB,CAAkCC,OAA3D,CAAxC;AAEP,OAAO,MAAM6B,mBAAmB,GAAGrC,cAAc,CAACkC,WAAD,EAAenB,KAAD,IAAWA,KAAK,CAACV,eAAN,CAAsBE,WAAtB,CAAkCC,OAA3D,CAA1C;AAEP,OAAO,MAAM8B,cAAc,GAAGtC,cAAc,CAACkC,WAAD,EAAenB,KAAD,IAAWA,KAAK,CAACJ,QAA/B,CAArC;AAEP,eAAeC,QAAf","sourcesContent":["import { actionTypes } from '@/utils/constant'\nimport { createAction, createSlice, createSelector, PayloadAction } from '@reduxjs/toolkit'\n\nimport type { Entity, ParameterOption, DataForDropdown, PayloadOperation } from '@/types/Common'\nimport type { RootReducerType } from './rootReducer'\nimport type { TagInitDataForList } from '@/types/Tag'\n\nexport const name: Entity = 'element'\nexport const resetState = createAction(`${name}/${actionTypes.RESET_STATE}`)\n\nexport const initialState = {\n  initDataForList: {\n    jobs: [],\n    permissions: {\n      element: null\n    },\n    wiki_page: '',\n    column_tooltips: {}\n  } as TagInitDataForList,\n  dataList: []\n}\n\nconst tagSlice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setInitDataForList(state, { payload }: PayloadAction<TagInitDataForList>) {\n      state.initDataForList = payload\n    },\n    setDataList(state, { payload }) {\n      state.dataList = payload\n    }\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState\n    }\n  }\n})\n\nexport const { actions } = tagSlice\n\n// Saga actions\nexport const sagaGetList = createAction(`${name}/${actionTypes.GET_LIST}`)\nexport const sagaOpenCreateDialog = createAction(`${name}/${actionTypes.OPEN_CREATE_DIALOG}`)\nexport const sagaOpenUpdateDialog = createAction<number>(`${name}/${actionTypes.OPEN_UPDATE_DIALOG}`)\nexport const sagaChangeUserJob = createAction<ParameterOption>(`${name}/${actionTypes.CHANGE_USER_JOB}`)\nexport const sagaChangeUserSchematic = createAction<DataForDropdown>(`${name}/CHANGE_USER_SCHEMATIC`)\n\nexport const sagaRemove = createAction<PayloadOperation[]>(`${name}/${actionTypes.REMOVE}`)\nexport const sagaChangeUserDrawing = createAction<DataForDropdown>(`${name}/${actionTypes.CHANGE_USER_DRAWING}`)\n\n// Selectors\nexport const selectState = (state: RootReducerType) => state[name]\n\nexport const selectInitDataForList = createSelector(selectState, (state) => state.initDataForList)\n\nexport const selectPermissions = createSelector(selectState, (state) => state.initDataForList.permissions.element)\n\nexport const selectSpecification = createSelector(selectState, (state) => state.initDataForList.permissions.element)\n\nexport const selectDataList = createSelector(selectState, (state) => state.dataList)\n\nexport default tagSlice\n"]},"metadata":{},"sourceType":"module"}