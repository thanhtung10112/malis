{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { takeEvery, put, putResolve } from 'redux-saga/effects';\nimport { call, select, all, takeLatest } from 'typed-redux-saga';\nimport immer from 'immer';\nimport * as errorSaga from '@/store/saga/errorSaga';\nimport { advancedFilterActions, commonStore, locationStore } from '@/store/reducers';\nimport locationApi from '@/apis/location.api';\nexport function* fetchInitDataForList() {\n  const data = yield call(locationApi.getInitDataForList);\n  yield put(locationStore.actions.setInitDataForList(data));\n}\nexport function* fetchInitDataForCE() {\n  const _yield$call = yield call(locationApi.getInitDataForCE),\n        {\n    permissions\n  } = _yield$call,\n        data = _objectWithoutProperties(_yield$call, [\"permissions\"]);\n\n  yield put(locationStore.actions.setInitDataForCE(data));\n  yield put(locationStore.actions.setDetail({\n    location_id: data.next_code\n  }));\n}\nexport function* fetchList() {\n  const {\n    tableState,\n    searchQuery,\n    filterData\n  } = yield* all({\n    tableState: select(commonStore.selectTableState),\n    searchQuery: select(commonStore.selectSearchQuery),\n    filterData: select(advancedFilterActions.selectFilterData)\n  });\n  const {\n    page,\n    per_page\n  } = tableState;\n  const data = yield call(locationApi.getList, _objectSpread({\n    per_page,\n    page,\n    s: searchQuery\n  }, filterData));\n  yield put(commonStore.actions.setTableState({\n    total_items: data.total_items\n  }));\n  yield put(locationStore.actions.setDataList(data.locations));\n}\nexport function* fetchDetail(id) {\n  const {\n    location\n  } = yield call(locationApi.getDetail, id);\n  yield put(locationStore.actions.setDetail(location));\n}\nexport function* getLocationList() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchInitDataForList);\n    const permissions = yield* select(locationStore.selectPermissions);\n\n    if (permissions === null || permissions === void 0 ? void 0 : permissions.view) {\n      yield call(fetchList);\n    }\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\nexport function* openLocationCreateDialog() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchInitDataForCE);\n    yield put(locationStore.actions.setDialogStateOpen(true));\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\nexport function* createLocation({\n  payload\n}) {\n  yield put(locationStore.actions.setDialogStateLoading(true));\n\n  try {\n    const {\n      message\n    } = yield call(locationApi.create, payload);\n    yield put(commonStore.actions.setSuccessMessage(message));\n    const {\n      generated_code\n    } = yield call(locationApi.getNextCode, null);\n    yield put(locationStore.actions.setDetail(_objectSpread(_objectSpread({}, locationStore.initialState.detail), {}, {\n      location_id: generated_code\n    })));\n    yield put(locationStore.actions.setNextCode(generated_code));\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(locationStore.actions.setDialogStateLoading(false));\n}\nexport function* updateLocation({\n  payload\n}) {\n  yield put(locationStore.actions.setDialogStateLoading(true));\n\n  try {\n    const permissions = yield* select(locationStore.selectPermissions);\n    const {\n      id\n    } = payload; // delete location_type if user not have change_type permission\n\n    const location = immer(payload.location, draft => {\n      if (!permissions.change_type) {\n        delete draft.location_type;\n      }\n    });\n    const {\n      message\n    } = yield call(locationApi.update, id, location);\n    yield call(closeLocationDialog);\n    yield put(commonStore.actions.setSuccessMessage(message));\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(locationStore.actions.setDialogStateLoading(false));\n}\nexport function* openLocationUpdateDialog({\n  payload\n}) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield put(locationStore.actions.setDialogStateEditMode(true));\n    yield call(fetchInitDataForCE);\n    yield call(fetchDetail, payload);\n    yield put(locationStore.actions.setDialogStateOpen(true));\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\nexport function* getLocationNextCode({\n  payload\n}) {\n  yield put(locationStore.actions.setDialogStateLoading(true));\n\n  try {\n    const {\n      generated_code\n    } = yield call(locationApi.getNextCode, payload.location_id);\n    const newDetail = immer(payload, draft => {\n      draft.location_id = generated_code;\n    });\n    yield put(locationStore.actions.setDetail(newDetail));\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(locationStore.actions.setDialogStateLoading(false));\n}\nexport function* closeLocationDialog() {\n  try {\n    yield putResolve(locationStore.actions.setDialogStateOpen(false));\n    yield call(getLocationList);\n    yield all([put(locationStore.actions.setDialogStateEditMode(false)), put(locationStore.actions.resetDetail())]);\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n}\n\nfunction* locationSaga() {\n  yield takeEvery(locationStore.sagaGetList, getLocationList);\n  yield takeEvery(locationStore.sagaOpenCreateDialog, openLocationCreateDialog);\n  yield takeEvery(locationStore.sagaCreate, createLocation);\n  yield takeEvery(locationStore.sagaOpenUpdateDialog, openLocationUpdateDialog);\n  yield takeEvery(locationStore.sagaUpdate, updateLocation);\n  yield takeEvery(locationStore.sagaCloseDialog, closeLocationDialog);\n  yield takeLatest(locationStore.sagaGetNextCode, getLocationNextCode);\n}\n\nexport default locationSaga;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/saga/location.saga.ts"],"names":["takeEvery","put","putResolve","call","select","all","takeLatest","immer","errorSaga","advancedFilterActions","commonStore","locationStore","locationApi","fetchInitDataForList","data","getInitDataForList","actions","setInitDataForList","fetchInitDataForCE","getInitDataForCE","permissions","setInitDataForCE","setDetail","location_id","next_code","fetchList","tableState","searchQuery","filterData","selectTableState","selectSearchQuery","selectFilterData","page","per_page","getList","s","setTableState","total_items","setDataList","locations","fetchDetail","id","location","getDetail","getLocationList","setLoadingPage","selectPermissions","view","error","handleError","openLocationCreateDialog","setDialogStateOpen","createLocation","payload","setDialogStateLoading","message","create","setSuccessMessage","generated_code","getNextCode","initialState","detail","setNextCode","updateLocation","draft","change_type","location_type","update","closeLocationDialog","openLocationUpdateDialog","setDialogStateEditMode","getLocationNextCode","newDetail","resetDetail","locationSaga","sagaGetList","sagaOpenCreateDialog","sagaCreate","sagaOpenUpdateDialog","sagaUpdate","sagaCloseDialog","sagaGetNextCode"],"mappings":"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","sourcesContent":["import { takeEvery, put, putResolve } from 'redux-saga/effects'\n\nimport { call, select, all, takeLatest } from 'typed-redux-saga'\nimport immer from 'immer'\n\nimport * as errorSaga from '@/store/saga/errorSaga'\n\nimport { advancedFilterActions, commonStore, locationStore } from '@/store/reducers'\n\nimport locationApi from '@/apis/location.api'\n\nexport function* fetchInitDataForList() {\n  const data = yield call(locationApi.getInitDataForList)\n  yield put(locationStore.actions.setInitDataForList(data))\n}\n\nexport function* fetchInitDataForCE() {\n  const { permissions, ...data } = yield call(locationApi.getInitDataForCE)\n  yield put(locationStore.actions.setInitDataForCE(data))\n  yield put(locationStore.actions.setDetail({ location_id: data.next_code }))\n}\n\nexport function* fetchList() {\n  const { tableState, searchQuery, filterData } = yield* all({\n    tableState: select(commonStore.selectTableState),\n    searchQuery: select(commonStore.selectSearchQuery),\n    filterData: select(advancedFilterActions.selectFilterData)\n  })\n  const { page, per_page } = tableState\n  const data = yield call(locationApi.getList, {\n    per_page,\n    page,\n    s: searchQuery,\n    ...filterData\n  })\n  yield put(commonStore.actions.setTableState({ total_items: data.total_items }))\n  yield put(locationStore.actions.setDataList(data.locations))\n}\n\nexport function* fetchDetail(id: number) {\n  const { location } = yield call(locationApi.getDetail, id)\n  yield put(locationStore.actions.setDetail(location))\n}\n\nexport function* getLocationList() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchInitDataForList)\n    const permissions = yield* select(locationStore.selectPermissions)\n    if (permissions?.view) {\n      yield call(fetchList)\n    }\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nexport function* openLocationCreateDialog() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchInitDataForCE)\n    yield put(locationStore.actions.setDialogStateOpen(true))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nexport function* createLocation({ payload }: ReturnType<typeof locationStore.sagaCreate>) {\n  yield put(locationStore.actions.setDialogStateLoading(true))\n  try {\n    const { message } = yield call(locationApi.create, payload)\n    yield put(commonStore.actions.setSuccessMessage(message))\n    const { generated_code } = yield call(locationApi.getNextCode, null)\n    yield put(\n      locationStore.actions.setDetail({\n        ...locationStore.initialState.detail,\n        location_id: generated_code\n      })\n    )\n    yield put(locationStore.actions.setNextCode(generated_code))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(locationStore.actions.setDialogStateLoading(false))\n}\n\nexport function* updateLocation({ payload }: ReturnType<typeof locationStore.sagaUpdate>) {\n  yield put(locationStore.actions.setDialogStateLoading(true))\n  try {\n    const permissions = yield* select(locationStore.selectPermissions)\n    const { id } = payload\n    // delete location_type if user not have change_type permission\n    const location = immer(payload.location, (draft) => {\n      if (!permissions.change_type) {\n        delete draft.location_type\n      }\n    })\n    const { message } = yield call(locationApi.update, id, location)\n    yield call(closeLocationDialog)\n    yield put(commonStore.actions.setSuccessMessage(message))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(locationStore.actions.setDialogStateLoading(false))\n}\n\nexport function* openLocationUpdateDialog({ payload }: ReturnType<typeof locationStore.sagaOpenUpdateDialog>) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield put(locationStore.actions.setDialogStateEditMode(true))\n    yield call(fetchInitDataForCE)\n    yield call(fetchDetail, payload)\n    yield put(locationStore.actions.setDialogStateOpen(true))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nexport function* getLocationNextCode({ payload }: ReturnType<typeof locationStore.sagaGetNextCode>) {\n  yield put(locationStore.actions.setDialogStateLoading(true))\n  try {\n    const { generated_code } = yield call(locationApi.getNextCode, payload.location_id)\n    const newDetail = immer(payload, (draft) => {\n      draft.location_id = generated_code\n    })\n    yield put(locationStore.actions.setDetail(newDetail))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(locationStore.actions.setDialogStateLoading(false))\n}\n\nexport function* closeLocationDialog() {\n  try {\n    yield putResolve(locationStore.actions.setDialogStateOpen(false))\n    yield call(getLocationList)\n    yield all([put(locationStore.actions.setDialogStateEditMode(false)), put(locationStore.actions.resetDetail())])\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n}\n\nfunction* locationSaga() {\n  yield takeEvery(locationStore.sagaGetList, getLocationList)\n  yield takeEvery(locationStore.sagaOpenCreateDialog, openLocationCreateDialog)\n  yield takeEvery(locationStore.sagaCreate, createLocation)\n  yield takeEvery(locationStore.sagaOpenUpdateDialog, openLocationUpdateDialog)\n  yield takeEvery(locationStore.sagaUpdate, updateLocation)\n  yield takeEvery(locationStore.sagaCloseDialog, closeLocationDialog)\n  yield takeLatest(locationStore.sagaGetNextCode, getLocationNextCode)\n}\n\nexport default locationSaga\n"]},"metadata":{},"sourceType":"module"}