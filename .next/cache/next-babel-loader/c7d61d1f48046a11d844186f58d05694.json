{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchInitDataForList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchInitDataForCE),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(fetchList),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(getJobList),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(openJobCreateDialog),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(getUserGroupMapping),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(createJob),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(closeJobDialog),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(openJobUpdateDialog),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(updateJob),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(jobSaga);\n\nimport { takeEvery, putResolve } from 'redux-saga/effects';\nimport { call, put, all, select } from 'typed-redux-saga';\nimport { jobStore, commonStore, advancedFilterActions } from '@/store/reducers';\nimport * as errorSaga from '@/store/saga/errorSaga';\nimport jobApi from '@/apis/job.api';\nimport _ from 'lodash';\nimport { getDefaultValue } from '@/utils/getDefaultValues';\n\nfunction fetchInitDataForList() {\n  var data, selectedJobCategory, defaultJobCategory;\n  return _regeneratorRuntime.wrap(function fetchInitDataForList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return call(jobApi.getInitDataForList);\n\n        case 2:\n          data = _context.sent;\n          return _context.delegateYield(select(jobStore.selectSelectedJobCategory), \"t0\", 4);\n\n        case 4:\n          selectedJobCategory = _context.t0;\n\n          if (!_.isNull(selectedJobCategory.id)) {\n            _context.next = 9;\n            break;\n          }\n\n          defaultJobCategory = getDefaultValue(data.job_categories, false);\n          _context.next = 9;\n          return put(jobStore.actions.setSelectedCategory(defaultJobCategory));\n\n        case 9:\n          _context.next = 11;\n          return put(jobStore.actions.setInitDataForList(data));\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction fetchInitDataForCE() {\n  var data, jobStandard;\n  return _regeneratorRuntime.wrap(function fetchInitDataForCE$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return call(jobApi.getInitDataForCE);\n\n        case 2:\n          data = _context2.sent;\n          data.job_template = _.pick(data.job_template, ['language', 'equipment_type', 'erection_site', 'people_responsible', 'squad_leader', 'drawings_responsible', 'job_users']);\n          jobStandard = data.parameters.PLNO.map(function (item) {\n            return _.pick(item, ['description', 'id', 'parameter_id']);\n          });\n          _context2.next = 7;\n          return put(jobStore.actions.setDetail(_objectSpread(_objectSpread({}, data.job_template), {}, {\n            job_standard: jobStandard\n          })));\n\n        case 7:\n          _context2.next = 9;\n          return put(jobStore.actions.setInitDataForCE(data));\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction fetchList() {\n  var _yield$all, tableState, searchQuery, filterData, selectedCategory, page, per_page, data;\n\n  return _regeneratorRuntime.wrap(function fetchList$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.delegateYield(all({\n            tableState: select(commonStore.selectTableState),\n            searchQuery: select(commonStore.selectSearchQuery),\n            filterData: select(advancedFilterActions.selectFilterData),\n            selectedCategory: select(jobStore.selectSelectedJobCategory)\n          }), \"t0\", 1);\n\n        case 1:\n          _yield$all = _context3.t0;\n          tableState = _yield$all.tableState;\n          searchQuery = _yield$all.searchQuery;\n          filterData = _yield$all.filterData;\n          selectedCategory = _yield$all.selectedCategory;\n          page = tableState.page, per_page = tableState.per_page;\n          _context3.next = 9;\n          return call(jobApi.getList, _objectSpread({\n            per_page: per_page,\n            page: page,\n            s: searchQuery,\n            job_category_id: selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.id\n          }, filterData));\n\n        case 9:\n          data = _context3.sent;\n          _context3.next = 12;\n          return put(commonStore.actions.setTableState({\n            total_items: data.total_items\n          }));\n\n        case 12:\n          _context3.next = 14;\n          return put(jobStore.actions.setDataList(data.jobs));\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction getJobList() {\n  var permissions;\n  return _regeneratorRuntime.wrap(function getJobList$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 2:\n          _context4.prev = 2;\n          _context4.next = 5;\n          return call(fetchInitDataForList);\n\n        case 5:\n          return _context4.delegateYield(select(jobStore.selectPermissions), \"t0\", 6);\n\n        case 6:\n          permissions = _context4.t0;\n\n          if (!(permissions === null || permissions === void 0 ? void 0 : permissions.view)) {\n            _context4.next = 10;\n            break;\n          }\n\n          _context4.next = 10;\n          return call(fetchList);\n\n        case 10:\n          _context4.next = 16;\n          break;\n\n        case 12:\n          _context4.prev = 12;\n          _context4.t1 = _context4[\"catch\"](2);\n          _context4.next = 16;\n          return errorSaga.handleError(_context4.t1);\n\n        case 16:\n          _context4.next = 18;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 18:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[2, 12]]);\n}\n\nfunction openJobCreateDialog() {\n  return _regeneratorRuntime.wrap(function openJobCreateDialog$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 2:\n          _context5.prev = 2;\n          _context5.next = 5;\n          return call(fetchInitDataForCE);\n\n        case 5:\n          _context5.next = 7;\n          return put(jobStore.actions.setDialogStateOpen(true));\n\n        case 7:\n          _context5.next = 13;\n          break;\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](2);\n          _context5.next = 13;\n          return errorSaga.handleError(_context5.t0);\n\n        case 13:\n          _context5.next = 15;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 15:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[2, 9]]);\n}\n\nfunction getUserGroupMapping(_ref) {\n  var payload, data;\n  return _regeneratorRuntime.wrap(function getUserGroupMapping$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          payload = _ref.payload;\n          _context6.next = 3;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 3:\n          _context6.prev = 3;\n          _context6.next = 6;\n          return call(jobApi.getUserGroupMapping, payload);\n\n        case 6:\n          data = _context6.sent;\n          _context6.next = 9;\n          return put(jobStore.actions.setTransferUserAvailableList(data.available_users));\n\n        case 9:\n          _context6.next = 11;\n          return put(jobStore.actions.setOpenTransferList(true));\n\n        case 11:\n          _context6.next = 17;\n          break;\n\n        case 13:\n          _context6.prev = 13;\n          _context6.t0 = _context6[\"catch\"](3);\n          _context6.next = 17;\n          return errorSaga.handleError(_context6.t0);\n\n        case 17:\n          _context6.next = 19;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 19:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[3, 13]]);\n}\n\nfunction createJob(_ref2) {\n  var payload, _yield$call, message, _yield$select, job_template;\n\n  return _regeneratorRuntime.wrap(function createJob$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          payload = _ref2.payload;\n          _context7.next = 3;\n          return put(jobStore.actions.setDialogStateLoading(true));\n\n        case 3:\n          _context7.prev = 3;\n          _context7.next = 6;\n          return call(jobApi.create, payload);\n\n        case 6:\n          _yield$call = _context7.sent;\n          message = _yield$call.message;\n          return _context7.delegateYield(select(jobStore.selectInitDataForCE), \"t0\", 9);\n\n        case 9:\n          _yield$select = _context7.t0;\n          job_template = _yield$select.job_template;\n          _context7.next = 13;\n          return put(jobStore.actions.setDetail(job_template));\n\n        case 13:\n          _context7.next = 15;\n          return put(commonStore.actions.setSuccessMessage(message));\n\n        case 15:\n          _context7.next = 21;\n          break;\n\n        case 17:\n          _context7.prev = 17;\n          _context7.t1 = _context7[\"catch\"](3);\n          _context7.next = 21;\n          return errorSaga.handleError(_context7.t1);\n\n        case 21:\n          _context7.next = 23;\n          return put(jobStore.actions.setDialogStateLoading(false));\n\n        case 23:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[3, 17]]);\n}\n\nfunction closeJobDialog() {\n  return _regeneratorRuntime.wrap(function closeJobDialog$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return putResolve(jobStore.actions.setDialogStateOpen(false));\n\n        case 3:\n          _context8.next = 5;\n          return call(getJobList);\n\n        case 5:\n          _context8.next = 7;\n          return put(jobStore.actions.resetDetail());\n\n        case 7:\n          _context8.next = 13;\n          break;\n\n        case 9:\n          _context8.prev = 9;\n          _context8.t0 = _context8[\"catch\"](0);\n          _context8.next = 13;\n          return errorSaga.handleError(_context8.t0);\n\n        case 13:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 9]]);\n}\n\nfunction openJobUpdateDialog(_ref3) {\n  var payload, _yield$call2, job;\n\n  return _regeneratorRuntime.wrap(function openJobUpdateDialog$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          payload = _ref3.payload;\n          _context9.next = 3;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 3:\n          _context9.prev = 3;\n          _context9.next = 6;\n          return call(fetchInitDataForCE);\n\n        case 6:\n          _context9.next = 8;\n          return call(jobApi.getDetail, payload);\n\n        case 8:\n          _yield$call2 = _context9.sent;\n          job = _yield$call2.job;\n          job.job_currencies = job.job_currencies.map(function (currency) {\n            return _objectSpread({\n              id: currency.currency_id\n            }, currency);\n          });\n          _context9.next = 13;\n          return putResolve(jobStore.actions.setDetail(job));\n\n        case 13:\n          _context9.next = 15;\n          return put(jobStore.actions.setDialogState({\n            open: true,\n            editMode: true\n          }));\n\n        case 15:\n          _context9.next = 21;\n          break;\n\n        case 17:\n          _context9.prev = 17;\n          _context9.t0 = _context9[\"catch\"](3);\n          _context9.next = 21;\n          return errorSaga.handleError(_context9.t0);\n\n        case 21:\n          _context9.next = 23;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 23:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[3, 17]]);\n}\n\nfunction updateJob(_ref4) {\n  var payload, id, formData, _yield$call3, message;\n\n  return _regeneratorRuntime.wrap(function updateJob$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          payload = _ref4.payload;\n          _context10.next = 3;\n          return put(jobStore.actions.setDialogStateLoading(true));\n\n        case 3:\n          _context10.prev = 3;\n          id = payload.id, formData = payload.formData;\n          _context10.next = 7;\n          return call(jobApi.update, id, formData);\n\n        case 7:\n          _yield$call3 = _context10.sent;\n          message = _yield$call3.message;\n          _context10.next = 11;\n          return put(commonStore.actions.setSuccessMessage(message));\n\n        case 11:\n          _context10.next = 13;\n          return call(closeJobDialog);\n\n        case 13:\n          _context10.next = 19;\n          break;\n\n        case 15:\n          _context10.prev = 15;\n          _context10.t0 = _context10[\"catch\"](3);\n          _context10.next = 19;\n          return errorSaga.handleError(_context10.t0);\n\n        case 19:\n          _context10.next = 21;\n          return put(jobStore.actions.setDialogStateLoading(false));\n\n        case 21:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10, null, [[3, 15]]);\n}\n\nfunction jobSaga() {\n  return _regeneratorRuntime.wrap(function jobSaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeEvery(jobStore.sagaGetList, getJobList);\n\n        case 2:\n          _context11.next = 4;\n          return takeEvery(jobStore.sagaOpenCreateDialog, openJobCreateDialog);\n\n        case 4:\n          _context11.next = 6;\n          return takeEvery(jobStore.sagaGetUserGroupMapping, getUserGroupMapping);\n\n        case 6:\n          _context11.next = 8;\n          return takeEvery(jobStore.sagaCreate, createJob);\n\n        case 8:\n          _context11.next = 10;\n          return takeEvery(jobStore.sagaCloseDialog, closeJobDialog);\n\n        case 10:\n          _context11.next = 12;\n          return takeEvery(jobStore.sagaOpenUpdateDialog, openJobUpdateDialog);\n\n        case 12:\n          _context11.next = 14;\n          return takeEvery(jobStore.sagaUpdate, updateJob);\n\n        case 14:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\nexport default jobSaga;","map":null,"metadata":{},"sourceType":"module"}