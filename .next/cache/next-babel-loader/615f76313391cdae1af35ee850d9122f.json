{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\pages\\\\drawings.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Link } from '@material-ui/core';\nimport { DialogDrawingCreateEdit, AppLayout, CreateIcon, DeleteIcon, MakeAListIcon, DrawingTreeView, ExcludeIcon, CadIcon, SearchPageIcon, ContractIcon, ViewEditionIcon, CopyIcon, EditIcon, useConfirm, AppAutocompleteStyled, DialogPart, DialogMain } from '@/components';\nimport { useMemo, useEffect, useState } from 'react';\nimport { useTranslation } from 'next-i18next';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useStyles from '@/styles/page/layout';\nimport { drawingStore, commonStore } from '@/store/reducers';\nimport * as columnProperties from '@/utils/columnProperties';\nimport immer from 'immer';\nimport getMessageConfirm from '@/utils/getMessageConfirm';\n\nfunction DrawingsPage() {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation('drawing'),\n      t = _useTranslation.t;\n\n  var _useConfirm = useConfirm(),\n      confirm = _useConfirm.confirm;\n\n  var _useState = useState({\n    open: false,\n    content: ''\n  }),\n      fileTypeDialog = _useState[0],\n      setFileTypeDialog = _useState[1];\n\n  var dispatch = useDispatch();\n  var permissions = useSelector(drawingStore.selectPermissions);\n  var selectedRows = useSelector(commonStore.selectSelectedRows);\n  var userJob = useSelector(commonStore.selectUserValueJob);\n  var currentLang = useSelector(commonStore.selectCurrentLanguage);\n\n  var _useSelector = useSelector(drawingStore.selectInitDataForList),\n      jobOptions = _useSelector.jobs,\n      column_tooltips = _useSelector.column_tooltips,\n      wiki_page = _useSelector.wiki_page;\n\n  useEffect(function () {\n    return function () {\n      return dispatch(commonStore.actions.resetUserValue());\n    };\n  }, []);\n  var isAllJob = useMemo(function () {\n    return userJob.value < 0;\n  }, [userJob]);\n  var breadcrumbData = useMemo(function () {\n    return [{\n      label: 'Home',\n      href: '/'\n    }, {\n      label: 'Drawings',\n      href: '/drawings'\n    }, {\n      label: 'Drawings Management',\n      href: '/drawings'\n    }];\n  }, []);\n\n  var handleOpenFileType = function handleOpenFileType(windowPath) {\n    return function (event) {\n      event.preventDefault();\n      setFileTypeDialog({\n        open: true,\n        content: windowPath\n      });\n    };\n  };\n\n  var handleCloseFileTypeDialog = function handleCloseFileTypeDialog() {\n    setFileTypeDialog(function (currentState) {\n      return immer(currentState, function (draft) {\n        draft.open = false;\n      });\n    });\n  };\n\n  var columns = [_objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.iconColumn), {}, {\n    description: column_tooltips.edit,\n    field: 'id',\n    headerName: 'Edit',\n    renderCell: function renderCell(params) {\n      return /*#__PURE__*/_jsxDEV(EditIcon, {\n        onClick: handleOpenUpdateDialog(params.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 16\n      }, this);\n    }\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.iconColumn), {}, {\n    description: column_tooltips.copy,\n    field: 'copy',\n    headerName: 'Copy',\n    valueGetter: function valueGetter(params) {\n      return params.id;\n    },\n    renderCell: function renderCell() {\n      return /*#__PURE__*/_jsxDEV(CopyIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 16\n      }, this);\n    }\n  }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n    description: column_tooltips.drawing_id,\n    field: 'drawing_id',\n    headerName: 'Job Drawing',\n    width: 150\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    description: column_tooltips.revision,\n    field: 'revision',\n    headerName: 'Rev',\n    width: 150\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.descriptionsColumn(currentLang)), {}, {\n    description: column_tooltips.descriptions,\n    flex: 0.3\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    description: column_tooltips.raw_drawing_format,\n    field: 'raw_drawing_format',\n    headerName: 'Format',\n    width: 100\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    description: column_tooltips.raw_drawing_purpose,\n    field: 'raw_drawing_purpose',\n    headerName: 'Purpose',\n    width: 100\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    description: column_tooltips.part_id,\n    field: 'number_of_parts',\n    headerName: '# Parts',\n    width: 100\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    description: column_tooltips.tag_id,\n    field: 'number_of_tags',\n    headerName: '# Tags',\n    width: 100\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    description: column_tooltips.spec_id,\n    field: 'number_of_specs',\n    headerName: '# Specs',\n    width: 100\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    description: column_tooltips.raw_file_prefix,\n    field: 'raw_file_prefix',\n    headerName: 'File Prefix',\n    width: 100\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    description: column_tooltips.raw_file_type,\n    field: 'raw_file_type',\n    headerName: 'File Type',\n    width: 100,\n    renderCell: function renderCell(params) {\n      var windows_path = params.row.windows_path;\n      return /*#__PURE__*/_jsxDEV(Link, {\n        href: windows_path,\n        onClick: handleOpenFileType(windows_path),\n        children: params.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, _this);\n    }\n  })];\n\n  var handleOpenCreateDialog = function handleOpenCreateDialog() {\n    dispatch(drawingStore.sagaOpenCreateDialog());\n  };\n\n  var handleOpenUpdateDialog = function handleOpenUpdateDialog(id) {\n    return function () {\n      dispatch(drawingStore.sagaOpenUpdateDialog(id));\n    };\n  };\n\n  var handleChangeUserJob = function handleChangeUserJob(event, optionValue) {\n    dispatch(drawingStore.sagaChangeUserJob(optionValue));\n  };\n\n  var handleRemoveDrawings = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var description, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              description = getMessageConfirm(t, 'drawing', selectedRows, 'delete');\n              _context.next = 3;\n              return confirm({\n                description: description\n              });\n\n            case 3:\n              result = _context.sent;\n\n              if (result === 'OK') {\n                dispatch(commonStore.sagaExecuteOperation({\n                  entity: 'drawing',\n                  operationList: selectedRows,\n                  operation: 'delete'\n                }));\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleRemoveDrawings() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var renderButtons = [{\n    label: t('common:button.new'),\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.view) || isAllJob || !(userJob === null || userJob === void 0 ? void 0 : userJob.value),\n    startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 18\n    }, this),\n    item: [{\n      label: 'Create New Drawing',\n      onClick: handleOpenCreateDialog\n    }, {\n      label: 'Copy Drawing',\n      disabled: true\n    }, {\n      label: 'Import Drawing',\n      disabled: true\n    }, {\n      label: 'Import Drawing Titles',\n      disabled: true\n    }]\n  }, {\n    label: t('common:button.delete'),\n    startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 18\n    }, this),\n    onClick: handleRemoveDrawings,\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions[\"delete\"]) || selectedRows.length === 0 || isAllJob\n  }, {\n    label: 'Exclude',\n    startIcon: /*#__PURE__*/_jsxDEV(ExcludeIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 18\n    }, this),\n    disabled: isAllJob\n  }, {\n    label: 'Export to CAD',\n    startIcon: /*#__PURE__*/_jsxDEV(CadIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 18\n    }, this),\n    disabled: isAllJob\n  }, {\n    label: t('common:button.make_a_list'),\n    startIcon: /*#__PURE__*/_jsxDEV(MakeAListIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 18\n    }, this),\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.make_a_list)\n  }, {\n    label: 'Parents search',\n    startIcon: /*#__PURE__*/_jsxDEV(SearchPageIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 18\n    }, this),\n    disabled: isAllJob\n  }, {\n    label: 'View contract item',\n    startIcon: /*#__PURE__*/_jsxDEV(ContractIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 18\n    }, this),\n    disabled: isAllJob\n  }, {\n    label: 'View edition',\n    startIcon: /*#__PURE__*/_jsxDEV(ViewEditionIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 18\n    }, this),\n    disabled: isAllJob\n  }];\n\n  var Options = /*#__PURE__*/_jsxDEV(AppAutocompleteStyled, {\n    width: 250,\n    primaryKeyOption: \"value\",\n    label: \"Jobs\",\n    className: classes.controlAutocomplete,\n    options: jobOptions,\n    value: userJob,\n    renderOption: function renderOption(option) {\n      return option.description;\n    },\n    onChange: handleChangeUserJob\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n\n  var Dialogs = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DialogDrawingCreateEdit, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogPart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogMain, {\n      open: fileTypeDialog.open,\n      title: \"Infomation\",\n      description: fileTypeDialog.content,\n      onClose: handleCloseFileTypeDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  var layoutLeftSection = {\n    Component: /*#__PURE__*/_jsxDEV(DrawingTreeView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 16\n    }, this),\n    breakPoint: {\n      xs: 2\n    },\n    hide: isAllJob,\n    style: {\n      height: '100%',\n      overflowY: 'auto'\n    }\n  };\n  var tableSection = {\n    breakPoint: {\n      xs: isAllJob ? 12 : 10\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    entity: \"drawing\",\n    breadcrumbs: breadcrumbData,\n    wikiPage: wiki_page,\n    permissions: permissions,\n    searchProps: {\n      width: 300\n    },\n    buttons: renderButtons,\n    Dialogs: Dialogs,\n    Options: Options,\n    leftSection: layoutLeftSection,\n    tableSection: tableSection,\n    tableProps: {\n      columns: columns,\n      onCellClick: function onCellClick(params, event) {\n        if (['raw_file_type', 'id'].includes(params.field)) {\n          event.stopPropagation();\n        }\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 315,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DrawingsPage, \"xfKceWkWzi8HGt0qA9hvCSMF7I8=\", false, function () {\n  return [useStyles, useTranslation, useConfirm, useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = DrawingsPage;\nexport var __N_SSP = true;\nexport default DrawingsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawingsPage\");","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/pages/drawings.tsx"],"names":["Link","DialogDrawingCreateEdit","AppLayout","CreateIcon","DeleteIcon","MakeAListIcon","DrawingTreeView","ExcludeIcon","CadIcon","SearchPageIcon","ContractIcon","ViewEditionIcon","CopyIcon","EditIcon","useConfirm","AppAutocompleteStyled","DialogPart","DialogMain","useMemo","useEffect","useState","useTranslation","useSelector","useDispatch","useStyles","drawingStore","commonStore","columnProperties","immer","getMessageConfirm","DrawingsPage","classes","t","confirm","open","content","fileTypeDialog","setFileTypeDialog","dispatch","permissions","selectPermissions","selectedRows","selectSelectedRows","userJob","selectUserValueJob","currentLang","selectCurrentLanguage","selectInitDataForList","jobOptions","jobs","column_tooltips","wiki_page","actions","resetUserValue","isAllJob","value","breadcrumbData","label","href","handleOpenFileType","windowPath","event","preventDefault","handleCloseFileTypeDialog","currentState","draft","columns","defaultProperties","iconColumn","description","edit","field","headerName","renderCell","params","handleOpenUpdateDialog","id","copy","valueGetter","drawing_id","width","centerColumn","revision","descriptionsColumn","descriptions","flex","raw_drawing_format","raw_drawing_purpose","part_id","tag_id","spec_id","raw_file_prefix","raw_file_type","windows_path","row","handleOpenCreateDialog","sagaOpenCreateDialog","sagaOpenUpdateDialog","handleChangeUserJob","optionValue","sagaChangeUserJob","handleRemoveDrawings","result","sagaExecuteOperation","entity","operationList","operation","renderButtons","disabled","view","startIcon","item","onClick","length","make_a_list","Options","controlAutocomplete","option","Dialogs","layoutLeftSection","Component","breakPoint","xs","hide","style","height","overflowY","tableSection","onCellClick","includes","stopPropagation"],"mappings":"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","sourcesContent":["import { Link } from '@material-ui/core'\nimport {\n  DialogDrawingCreateEdit,\n  AppLayout,\n  CreateIcon,\n  DeleteIcon,\n  MakeAListIcon,\n  DrawingTreeView,\n  ExcludeIcon,\n  CadIcon,\n  SearchPageIcon,\n  ContractIcon,\n  ViewEditionIcon,\n  CopyIcon,\n  EditIcon,\n  useConfirm,\n  AppAutocompleteStyled,\n  DialogPart,\n  DialogMain\n} from '@/components'\n\nimport { useMemo, useEffect, useState } from 'react'\nimport { useTranslation } from 'next-i18next'\nimport useAuthMiddleware from '@/hooks/useAuthMiddleware'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useStyles from '@/styles/page/layout'\n\nimport { drawingStore, commonStore } from '@/store/reducers'\nimport * as columnProperties from '@/utils/columnProperties'\nimport immer from 'immer'\nimport getMessageConfirm from '@/utils/getMessageConfirm'\n\nimport type { GridColumns } from '@material-ui/data-grid'\nimport type { ParameterOption } from '@/types/Common'\n\nfunction DrawingsPage() {\n  const classes = useStyles()\n  const { t } = useTranslation('drawing')\n  const { confirm } = useConfirm()\n\n  const [fileTypeDialog, setFileTypeDialog] = useState({\n    open: false,\n    content: ''\n  })\n\n  const dispatch = useDispatch()\n  const permissions = useSelector(drawingStore.selectPermissions)\n  const selectedRows = useSelector(commonStore.selectSelectedRows)\n  const userJob = useSelector(commonStore.selectUserValueJob)\n  const currentLang = useSelector(commonStore.selectCurrentLanguage)\n  const { jobs: jobOptions, column_tooltips, wiki_page } = useSelector(drawingStore.selectInitDataForList)\n\n  useEffect(() => {\n    return () => dispatch(commonStore.actions.resetUserValue())\n  }, [])\n\n  const isAllJob = useMemo(() => userJob.value < 0, [userJob])\n\n  const breadcrumbData = useMemo(\n    () => [\n      { label: 'Home', href: '/' },\n      { label: 'Drawings', href: '/drawings' },\n      { label: 'Drawings Management', href: '/drawings' }\n    ],\n    []\n  )\n\n  const handleOpenFileType = (windowPath) => (event) => {\n    event.preventDefault()\n    setFileTypeDialog({\n      open: true,\n      content: windowPath\n    })\n  }\n\n  const handleCloseFileTypeDialog = () => {\n    setFileTypeDialog((currentState) =>\n      immer(currentState, (draft) => {\n        draft.open = false\n      })\n    )\n  }\n\n  const columns: GridColumns = [\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.iconColumn,\n      description: column_tooltips.edit,\n      field: 'id',\n      headerName: 'Edit',\n      renderCell(params) {\n        return <EditIcon onClick={handleOpenUpdateDialog(params.id as number)} />\n      }\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.iconColumn,\n      description: column_tooltips.copy,\n      field: 'copy',\n      headerName: 'Copy',\n      valueGetter: (params) => params.id,\n      renderCell() {\n        return <CopyIcon />\n      }\n    },\n    {\n      ...columnProperties.defaultProperties,\n      description: column_tooltips.drawing_id,\n      field: 'drawing_id',\n      headerName: 'Job Drawing',\n      width: 150\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.centerColumn,\n      description: column_tooltips.revision,\n      field: 'revision',\n      headerName: 'Rev',\n      width: 150\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.descriptionsColumn(currentLang),\n      description: column_tooltips.descriptions,\n      flex: 0.3\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.centerColumn,\n      description: column_tooltips.raw_drawing_format,\n      field: 'raw_drawing_format',\n      headerName: 'Format',\n      width: 100\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.centerColumn,\n      description: column_tooltips.raw_drawing_purpose,\n      field: 'raw_drawing_purpose',\n      headerName: 'Purpose',\n      width: 100\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.centerColumn,\n      description: column_tooltips.part_id,\n      field: 'number_of_parts',\n      headerName: '# Parts',\n      width: 100\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.centerColumn,\n      description: column_tooltips.tag_id,\n      field: 'number_of_tags',\n      headerName: '# Tags',\n      width: 100\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.centerColumn,\n      description: column_tooltips.spec_id,\n      field: 'number_of_specs',\n      headerName: '# Specs',\n      width: 100\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.centerColumn,\n      description: column_tooltips.raw_file_prefix,\n      field: 'raw_file_prefix',\n      headerName: 'File Prefix',\n      width: 100\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.centerColumn,\n      description: column_tooltips.raw_file_type,\n      field: 'raw_file_type',\n      headerName: 'File Type',\n      width: 100,\n      renderCell: (params) => {\n        const { windows_path } = params.row\n        return (\n          <Link href={windows_path} onClick={handleOpenFileType(windows_path)}>\n            {params.value}\n          </Link>\n        )\n      }\n    }\n  ]\n\n  const handleOpenCreateDialog = () => {\n    dispatch(drawingStore.sagaOpenCreateDialog())\n  }\n\n  const handleOpenUpdateDialog = (id: number) => () => {\n    dispatch(drawingStore.sagaOpenUpdateDialog(id))\n  }\n\n  const handleChangeUserJob = (event, optionValue: ParameterOption) => {\n    dispatch(drawingStore.sagaChangeUserJob(optionValue))\n  }\n\n  const handleRemoveDrawings = async () => {\n    const description = getMessageConfirm(t, 'drawing', selectedRows, 'delete')\n    const result = await confirm({\n      description\n    })\n    if (result === 'OK') {\n      dispatch(\n        commonStore.sagaExecuteOperation({ entity: 'drawing', operationList: selectedRows, operation: 'delete' })\n      )\n    }\n  }\n\n  const renderButtons = [\n    {\n      label: t('common:button.new'),\n      disabled: !permissions?.view || isAllJob || !userJob?.value,\n      startIcon: <CreateIcon />,\n      item: [\n        {\n          label: 'Create New Drawing',\n          onClick: handleOpenCreateDialog\n        },\n        {\n          label: 'Copy Drawing',\n          disabled: true\n        },\n        {\n          label: 'Import Drawing',\n          disabled: true\n        },\n        {\n          label: 'Import Drawing Titles',\n          disabled: true\n        }\n      ]\n    },\n    {\n      label: t('common:button.delete'),\n      startIcon: <DeleteIcon />,\n      onClick: handleRemoveDrawings,\n      disabled: !permissions?.delete || selectedRows.length === 0 || isAllJob\n    },\n    {\n      label: 'Exclude',\n      startIcon: <ExcludeIcon />,\n      disabled: isAllJob\n    },\n    {\n      label: 'Export to CAD',\n      startIcon: <CadIcon />,\n      disabled: isAllJob\n    },\n    {\n      label: t('common:button.make_a_list'),\n      startIcon: <MakeAListIcon />,\n      disabled: !permissions?.make_a_list\n    },\n    {\n      label: 'Parents search',\n      startIcon: <SearchPageIcon />,\n      disabled: isAllJob\n    },\n    {\n      label: 'View contract item',\n      startIcon: <ContractIcon />,\n      disabled: isAllJob\n    },\n    {\n      label: 'View edition',\n      startIcon: <ViewEditionIcon />,\n      disabled: isAllJob\n    }\n  ]\n\n  const Options = (\n    <AppAutocompleteStyled\n      width={250}\n      primaryKeyOption=\"value\"\n      label=\"Jobs\"\n      className={classes.controlAutocomplete}\n      options={jobOptions}\n      value={userJob}\n      renderOption={(option) => option.description}\n      onChange={handleChangeUserJob}\n    />\n  )\n\n  const Dialogs = (\n    <>\n      <DialogDrawingCreateEdit />\n      <DialogPart />\n      <DialogMain\n        open={fileTypeDialog.open}\n        title=\"Infomation\"\n        description={fileTypeDialog.content}\n        onClose={handleCloseFileTypeDialog}\n      />\n    </>\n  )\n\n  const layoutLeftSection = {\n    Component: <DrawingTreeView />,\n    breakPoint: { xs: 2 },\n    hide: isAllJob,\n    style: { height: '100%', overflowY: 'auto' }\n  }\n\n  const tableSection = { breakPoint: { xs: isAllJob ? 12 : 10 } }\n\n  return (\n    <AppLayout\n      entity=\"drawing\"\n      breadcrumbs={breadcrumbData}\n      wikiPage={wiki_page}\n      permissions={permissions}\n      searchProps={{\n        width: 300\n      }}\n      buttons={renderButtons}\n      Dialogs={Dialogs}\n      Options={Options}\n      leftSection={layoutLeftSection as any}\n      tableSection={tableSection as any}\n      tableProps={{\n        columns: columns,\n        onCellClick: (params, event) => {\n          if (['raw_file_type', 'id'].includes(params.field)) {\n            event.stopPropagation()\n          }\n        }\n      }}\n    />\n  )\n}\n\nexport const getServerSideProps = useAuthMiddleware([\n  'common',\n  'advanced_filter',\n  'drawing',\n  'item',\n  'assembly',\n  'manufacturer',\n  'element'\n])\n\nexport default DrawingsPage\n"]},"metadata":{},"sourceType":"module"}