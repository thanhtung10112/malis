{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\AdvancedFilter\\\\ConditionTree\\\\ConditionGroup.tsx\",\n    _s = $RefreshSig$();\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { useState } from 'react';\nimport { useTranslation } from 'next-i18next';\nimport { format as formatDate } from 'date-fns';\nimport { TreeItem } from '@material-ui/lab';\nimport { AddCircle, Cancel } from '@material-ui/icons';\nimport { Menu, MenuItem, IconButton, ButtonGroup, Tooltip } from '@material-ui/core';\nimport { Unless } from 'react-if';\nimport { v1 as uuidv1 } from 'uuid';\nimport ConditionRule from './ConditionRule';\nimport ConjunctionOptions from './ConjunctionOptions';\nimport useStyles from '../styles'; // The condition group component, which can contain other rules or groups\n\nfunction ConditionGroup(_ref) {\n  _s();\n\n  var columnOptions = _ref.columnOptions,\n      comparatorOptions = _ref.comparatorOptions,\n      conjunctionOptions = _ref.conjunctionOptions,\n      level = _ref.level,\n      groupData = _ref.groupData,\n      parentGroup = _ref.parent,\n      forceParentRerender = _ref.forceParentRerender,\n      disabled = _ref.disabled,\n      maxLevel = _ref.maxLevel;\n\n  var _useState = useState(null),\n      anchorEl = _useState[0],\n      setAnchorEl = _useState[1];\n\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation(['advanced_filter']),\n      t = _useTranslation.t; // trick for forcing rerender\n\n\n  var _useState2 = useState(0),\n      setValue = _useState2[1];\n\n  var forceRerender = function forceRerender() {\n    setValue(function (value) {\n      return value + 1;\n    });\n  };\n\n  var groupConditions = [];\n\n  var _iterator = _createForOfIteratorHelper(groupData.conditions),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var condition = _step.value;\n\n      if (condition.type === 'rule') {\n        groupConditions.push( /*#__PURE__*/_jsxDEV(ConditionRule, {\n          ruleData: condition,\n          parent: groupData,\n          forceParentRerender: forceRerender,\n          columnOptions: columnOptions,\n          comparatorOptions: comparatorOptions,\n          disabled: disabled\n        }, condition.condition_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this));\n      } else {\n        // condition.type === \"group\"\n        groupConditions.push( /*#__PURE__*/_jsxDEV(ConditionGroup, {\n          maxLevel: maxLevel,\n          groupData: condition,\n          level: level + 1,\n          parent: groupData,\n          forceParentRerender: forceRerender,\n          columnOptions: columnOptions,\n          comparatorOptions: comparatorOptions,\n          conjunctionOptions: conjunctionOptions,\n          disabled: disabled\n        }, condition.condition_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this));\n      }\n    } // Some neccessary functions\n\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var openAddMenu = function openAddMenu(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var closeAddMenu = function closeAddMenu() {\n    setAnchorEl(null);\n  };\n\n  var handleAddOptions = function handleAddOptions(type) {\n    return function () {\n      if (type === 'rule') {\n        var newRule = {\n          type: 'rule',\n          id: columnOptions[0].id,\n          condition_id: uuidv1()\n        };\n\n        switch (columnOptions[0].column_type) {\n          case 'string':\n            newRule.value = '';\n            newRule.comparator = 'ilike';\n            break;\n\n          case 'number':\n            newRule.value = 0;\n            newRule.comparator = 'eq';\n            break;\n\n          case 'date':\n            newRule.value = formatDate(new Date(), 'yyyy-MM-dd');\n            newRule.comparator = 'eq';\n            break;\n\n          case 'datetime':\n            newRule.value = formatDate(new Date(), 'yyyy-MM-dd HH:mm');\n            newRule.comparator = 'eq';\n            break;\n\n          case 'predefined_value':\n            newRule.value = [];\n            newRule.comparator = 'in';\n            newRule.value_as_string = columnOptions[0].value_as_string;\n            break;\n\n          case 'boolean':\n            newRule.value = false;\n            newRule.comparator = 'eq';\n            break;\n        }\n\n        groupData.conditions.push(newRule);\n      } else {\n        // type = \"group\"\n        groupData.conditions.push({\n          conjunction: conjunctionOptions[0].value,\n          type: 'group',\n          conditions: [],\n          condition_id: uuidv1()\n        });\n      }\n\n      closeAddMenu();\n    };\n  };\n\n  var removeGroup = function removeGroup(group_condition_id) {\n    return function () {\n      var newParentGroupConditions = parentGroup.conditions.filter(function (cond) {\n        return cond.condition_id !== group_condition_id;\n      });\n      parentGroup.conditions = newParentGroupConditions;\n      forceParentRerender();\n    };\n  };\n\n  var handleGroupConjunctionChange = function handleGroupConjunctionChange(value) {\n    groupData.conjunction = value;\n    forceParentRerender();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TreeItem, {\n      nodeId: \"group\",\n      style: {\n        borderLeft: level === 0 ? '' : '1px #D8D8D8 dashed',\n        marginLeft: level === 0 ? '' : '1.65rem',\n        marginTop: level === 0 ? '' : '0.5rem'\n      },\n      label: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(ConjunctionOptions, {\n          conjunctionOptions: conjunctionOptions,\n          value: groupData.conjunction,\n          onGroupConjunctionChange: handleGroupConjunctionChange,\n          disabled: disabled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Unless, {\n          condition: disabled,\n          children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n            className: classes.buttonGroup,\n            size: \"small\",\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"Add\",\n              \"aria-controls\": \"add-menu\",\n              \"aria-haspopup\": \"true\",\n              onClick: openAddMenu,\n              children: /*#__PURE__*/_jsxDEV(AddCircle, {\n                className: classes.iconButton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Unless, {\n              condition: level === 0,\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: t('tooltip.condition_remove_group'),\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: removeGroup(groupData.condition_id),\n                  children: /*#__PURE__*/_jsxDEV(Cancel, {\n                    className: classes.iconButton\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Menu, {\n            id: \"add-menu\",\n            anchorEl: anchorEl,\n            keepMounted: true,\n            open: Boolean(anchorEl),\n            onClose: closeAddMenu,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              onClick: handleAddOptions('rule'),\n              children: t('condition_group.add_rule')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Unless, {\n              condition: level >= maxLevel,\n              children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: handleAddOptions('group'),\n                children: t('condition_group.add_group')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this),\n      children: groupConditions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ConditionGroup, \"Urxf6NTeIo9JWYfmBYeveo1OsvU=\", false, function () {\n  return [useStyles, useTranslation];\n});\n\n_c = ConditionGroup;\nexport default ConditionGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConditionGroup\");","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/AdvancedFilter/ConditionTree/ConditionGroup.tsx"],"names":["useState","useTranslation","format","formatDate","TreeItem","AddCircle","Cancel","Menu","MenuItem","IconButton","ButtonGroup","Tooltip","Unless","v1","uuidv1","ConditionRule","ConjunctionOptions","useStyles","ConditionGroup","columnOptions","comparatorOptions","conjunctionOptions","level","groupData","parentGroup","parent","forceParentRerender","disabled","maxLevel","anchorEl","setAnchorEl","classes","t","setValue","forceRerender","value","groupConditions","conditions","condition","type","push","condition_id","openAddMenu","event","currentTarget","closeAddMenu","handleAddOptions","newRule","id","column_type","comparator","Date","value_as_string","conjunction","removeGroup","group_condition_id","newParentGroupConditions","filter","cond","handleGroupConjunctionChange","borderLeft","marginLeft","marginTop","display","alignItems","buttonGroup","iconButton","Boolean"],"mappings":";;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AAEA,SAASC,MAAM,IAAIC,UAAnB,QAAqC,UAArC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,oBAAlC;AAEA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,WAArC,EAAkDC,OAAlD,QAAiE,mBAAjE;AAEA,SAASC,MAAT,QAAuB,UAAvB;AAEA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAEA,OAAOC,SAAP,MAAsB,WAAtB,C,CAEA;;AACA,SAASC,cAAT,OAUG;AAAA;;AAAA,MATDC,aASC,QATDA,aASC;AAAA,MARDC,iBAQC,QARDA,iBAQC;AAAA,MAPDC,kBAOC,QAPDA,kBAOC;AAAA,MANDC,KAMC,QANDA,KAMC;AAAA,MALDC,SAKC,QALDA,SAKC;AAAA,MAJOC,WAIP,QAJDC,MAIC;AAAA,MAHDC,mBAGC,QAHDA,mBAGC;AAAA,MAFDC,QAEC,QAFDA,QAEC;AAAA,MADDC,QACC,QADDA,QACC;;AAAA,kBAC+B5B,QAAQ,CAAC,IAAD,CADvC;AAAA,MACM6B,QADN;AAAA,MACgBC,WADhB;;AAED,MAAMC,OAAO,GAAGd,SAAS,EAAzB;;AAFC,wBAIahB,cAAc,CAAC,CAAC,iBAAD,CAAD,CAJ3B;AAAA,MAIO+B,CAJP,mBAIOA,CAJP,EAMD;;;AANC,mBAOoBhC,QAAQ,CAAC,CAAD,CAP5B;AAAA,MAOQiC,QAPR;;AAQD,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BD,IAAAA,QAAQ,CAAC,UAACE,KAAD;AAAA,aAAWA,KAAK,GAAG,CAAnB;AAAA,KAAD,CAAR;AACD,GAFD;;AAGA,MAAMC,eAAe,GAAG,EAAxB;;AAXC,6CAauBb,SAAS,CAACc,UAbjC;AAAA;;AAAA;AAaD,wDAA8C;AAAA,UAAnCC,SAAmC;;AAC5C,UAAIA,SAAS,CAACC,IAAV,KAAmB,MAAvB,EAA+B;AAC7BH,QAAAA,eAAe,CAACI,IAAhB,eACE,QAAC,aAAD;AAEE,UAAA,QAAQ,EAAEF,SAFZ;AAGE,UAAA,MAAM,EAAEf,SAHV;AAIE,UAAA,mBAAmB,EAAEW,aAJvB;AAKE,UAAA,aAAa,EAAEf,aALjB;AAME,UAAA,iBAAiB,EAAEC,iBANrB;AAOE,UAAA,QAAQ,EAAEO;AAPZ,WACOW,SAAS,CAACG,YADjB;AAAA;AAAA;AAAA;AAAA,gBADF;AAWD,OAZD,MAYO;AACL;AACAL,QAAAA,eAAe,CAACI,IAAhB,eACE,QAAC,cAAD;AACE,UAAA,QAAQ,EAAEZ,QADZ;AAGE,UAAA,SAAS,EAAEU,SAHb;AAIE,UAAA,KAAK,EAAEhB,KAAK,GAAG,CAJjB;AAKE,UAAA,MAAM,EAAEC,SALV;AAME,UAAA,mBAAmB,EAAEW,aANvB;AAOE,UAAA,aAAa,EAAEf,aAPjB;AAQE,UAAA,iBAAiB,EAAEC,iBARrB;AASE,UAAA,kBAAkB,EAAEC,kBATtB;AAUE,UAAA,QAAQ,EAAEM;AAVZ,WAEOW,SAAS,CAACG,YAFjB;AAAA;AAAA;AAAA;AAAA,gBADF;AAcD;AACF,KA3CA,CA6CD;;AA7CC;AAAA;AAAA;AAAA;AAAA;;AA+CD,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7Bb,IAAAA,WAAW,CAACa,KAAK,CAACC,aAAP,CAAX;AACD,GAFD;;AAIA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBf,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,MAAMgB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACP,IAAD;AAAA,WAAU,YAAM;AACvC,UAAIA,IAAI,KAAK,MAAb,EAAqB;AACnB,YAAMQ,OAAY,GAAG;AACnBR,UAAAA,IAAI,EAAE,MADa;AAEnBS,UAAAA,EAAE,EAAE7B,aAAa,CAAC,CAAD,CAAb,CAAiB6B,EAFF;AAGnBP,UAAAA,YAAY,EAAE3B,MAAM;AAHD,SAArB;;AAMA,gBAAQK,aAAa,CAAC,CAAD,CAAb,CAAiB8B,WAAzB;AACE,eAAK,QAAL;AACEF,YAAAA,OAAO,CAACZ,KAAR,GAAgB,EAAhB;AACAY,YAAAA,OAAO,CAACG,UAAR,GAAqB,OAArB;AACA;;AACF,eAAK,QAAL;AACEH,YAAAA,OAAO,CAACZ,KAAR,GAAgB,CAAhB;AACAY,YAAAA,OAAO,CAACG,UAAR,GAAqB,IAArB;AACA;;AACF,eAAK,MAAL;AACEH,YAAAA,OAAO,CAACZ,KAAR,GAAgBhC,UAAU,CAAC,IAAIgD,IAAJ,EAAD,EAAa,YAAb,CAA1B;AACAJ,YAAAA,OAAO,CAACG,UAAR,GAAqB,IAArB;AACA;;AACF,eAAK,UAAL;AACEH,YAAAA,OAAO,CAACZ,KAAR,GAAgBhC,UAAU,CAAC,IAAIgD,IAAJ,EAAD,EAAa,kBAAb,CAA1B;AACAJ,YAAAA,OAAO,CAACG,UAAR,GAAqB,IAArB;AACA;;AACF,eAAK,kBAAL;AACEH,YAAAA,OAAO,CAACZ,KAAR,GAAgB,EAAhB;AACAY,YAAAA,OAAO,CAACG,UAAR,GAAqB,IAArB;AACAH,YAAAA,OAAO,CAACK,eAAR,GAA0BjC,aAAa,CAAC,CAAD,CAAb,CAAiBiC,eAA3C;AACA;;AACF,eAAK,SAAL;AACEL,YAAAA,OAAO,CAACZ,KAAR,GAAgB,KAAhB;AACAY,YAAAA,OAAO,CAACG,UAAR,GAAqB,IAArB;AACA;AAzBJ;;AA2BA3B,QAAAA,SAAS,CAACc,UAAV,CAAqBG,IAArB,CAA0BO,OAA1B;AACD,OAnCD,MAmCO;AACL;AACAxB,QAAAA,SAAS,CAACc,UAAV,CAAqBG,IAArB,CAA0B;AACxBa,UAAAA,WAAW,EAAEhC,kBAAkB,CAAC,CAAD,CAAlB,CAAsBc,KADX;AAExBI,UAAAA,IAAI,EAAE,OAFkB;AAGxBF,UAAAA,UAAU,EAAE,EAHY;AAIxBI,UAAAA,YAAY,EAAE3B,MAAM;AAJI,SAA1B;AAMD;;AACD+B,MAAAA,YAAY;AACb,KA9CwB;AAAA,GAAzB;;AAgDA,MAAMS,WAAW,GAAG,SAAdA,WAAc,CAACC,kBAAD;AAAA,WAAwB,YAAM;AAChD,UAAMC,wBAAwB,GAAGhC,WAAW,CAACa,UAAZ,CAAuBoB,MAAvB,CAA8B,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACjB,YAAL,KAAsBc,kBAAhC;AAAA,OAA9B,CAAjC;AACA/B,MAAAA,WAAW,CAACa,UAAZ,GAAyBmB,wBAAzB;AACA9B,MAAAA,mBAAmB;AACpB,KAJmB;AAAA,GAApB;;AAMA,MAAMiC,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACxB,KAAD,EAAW;AAC9CZ,IAAAA,SAAS,CAAC8B,WAAV,GAAwBlB,KAAxB;AACAT,IAAAA,mBAAmB;AACpB,GAHD;;AAKA,sBACE;AAAA,2BACE,QAAC,QAAD;AACE,MAAA,MAAM,EAAC,OADT;AAEE,MAAA,KAAK,EAAE;AACLkC,QAAAA,UAAU,EAAEtC,KAAK,KAAK,CAAV,GAAc,EAAd,GAAmB,oBAD1B;AAELuC,QAAAA,UAAU,EAAEvC,KAAK,KAAK,CAAV,GAAc,EAAd,GAAmB,SAF1B;AAGLwC,QAAAA,SAAS,EAAExC,KAAK,KAAK,CAAV,GAAc,EAAd,GAAmB;AAHzB,OAFT;AAOE,MAAA,KAAK,eACH;AAAK,QAAA,KAAK,EAAE;AAAEyC,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,UAAU,EAAE;AAA/B,SAAZ;AAAA,gCACE,QAAC,kBAAD;AACE,UAAA,kBAAkB,EAAE3C,kBADtB;AAEE,UAAA,KAAK,EAAEE,SAAS,CAAC8B,WAFnB;AAGE,UAAA,wBAAwB,EAAEM,4BAH5B;AAIE,UAAA,QAAQ,EAAEhC;AAJZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAEA,QAAnB;AAAA,kCACE,QAAC,WAAD;AAAa,YAAA,SAAS,EAAEI,OAAO,CAACkC,WAAhC;AAA6C,YAAA,IAAI,EAAC,OAAlD;AAAA,oCACE,QAAC,UAAD;AAAY,4BAAW,KAAvB;AAA6B,+BAAc,UAA3C;AAAsD,+BAAc,MAApE;AAA2E,cAAA,OAAO,EAAEvB,WAApF;AAAA,qCACE,QAAC,SAAD;AAAW,gBAAA,SAAS,EAAEX,OAAO,CAACmC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAKE,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAE5C,KAAK,KAAK,CAA7B;AAAA,qCACE,QAAC,OAAD;AAAS,gBAAA,KAAK,EAAEU,CAAC,CAAC,gCAAD,CAAjB;AAAA,uCACE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAEsB,WAAW,CAAC/B,SAAS,CAACkB,YAAX,CAAhC;AAAA,yCACE,QAAC,MAAD;AAAQ,oBAAA,SAAS,EAAEV,OAAO,CAACmC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAeE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,UAAT;AAAoB,YAAA,QAAQ,EAAErC,QAA9B;AAAwC,YAAA,WAAW,MAAnD;AAAoD,YAAA,IAAI,EAAEsC,OAAO,CAACtC,QAAD,CAAjE;AAA6E,YAAA,OAAO,EAAEgB,YAAtF;AAAA,oCACE,QAAC,QAAD;AAAU,cAAA,OAAO,EAAEC,gBAAgB,CAAC,MAAD,CAAnC;AAAA,wBAA8Cd,CAAC,CAAC,0BAAD;AAA/C;AAAA;AAAA;AAAA;AAAA,oBADF,eAGE,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAEV,KAAK,IAAIM,QAA5B;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,OAAO,EAAEkB,gBAAgB,CAAC,OAAD,CAAnC;AAAA,0BAA+Cd,CAAC,CAAC,2BAAD;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA,gBA0CGI;AA1CH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAgDD;;GA5KQlB,c;UAYSD,S,EAEFhB,c;;;KAdPiB,c;AA8KT,eAAeA,cAAf","sourcesContent":["import { useState } from 'react'\nimport { useTranslation } from 'next-i18next'\n\nimport { format as formatDate } from 'date-fns'\nimport { TreeItem } from '@material-ui/lab'\nimport { AddCircle, Cancel } from '@material-ui/icons'\n\nimport { Menu, MenuItem, IconButton, ButtonGroup, Tooltip } from '@material-ui/core'\n\nimport { Unless } from 'react-if'\n\nimport { v1 as uuidv1 } from 'uuid'\n\nimport ConditionRule from './ConditionRule'\nimport ConjunctionOptions from './ConjunctionOptions'\n\nimport useStyles from '../styles'\n\n// The condition group component, which can contain other rules or groups\nfunction ConditionGroup({\n  columnOptions,\n  comparatorOptions,\n  conjunctionOptions,\n  level,\n  groupData,\n  parent: parentGroup,\n  forceParentRerender,\n  disabled,\n  maxLevel\n}) {\n  const [anchorEl, setAnchorEl] = useState(null)\n  const classes = useStyles()\n\n  const { t } = useTranslation(['advanced_filter'])\n\n  // trick for forcing rerender\n  const [, setValue] = useState(0)\n  const forceRerender = () => {\n    setValue((value) => value + 1)\n  }\n  const groupConditions = []\n\n  for (const condition of groupData.conditions) {\n    if (condition.type === 'rule') {\n      groupConditions.push(\n        <ConditionRule\n          key={condition.condition_id}\n          ruleData={condition}\n          parent={groupData}\n          forceParentRerender={forceRerender}\n          columnOptions={columnOptions}\n          comparatorOptions={comparatorOptions}\n          disabled={disabled}\n        />\n      )\n    } else {\n      // condition.type === \"group\"\n      groupConditions.push(\n        <ConditionGroup\n          maxLevel={maxLevel}\n          key={condition.condition_id}\n          groupData={condition}\n          level={level + 1}\n          parent={groupData}\n          forceParentRerender={forceRerender}\n          columnOptions={columnOptions}\n          comparatorOptions={comparatorOptions}\n          conjunctionOptions={conjunctionOptions}\n          disabled={disabled}\n        />\n      )\n    }\n  }\n\n  // Some neccessary functions\n\n  const openAddMenu = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const closeAddMenu = () => {\n    setAnchorEl(null)\n  }\n\n  const handleAddOptions = (type) => () => {\n    if (type === 'rule') {\n      const newRule: any = {\n        type: 'rule',\n        id: columnOptions[0].id,\n        condition_id: uuidv1()\n      }\n\n      switch (columnOptions[0].column_type) {\n        case 'string':\n          newRule.value = ''\n          newRule.comparator = 'ilike'\n          break\n        case 'number':\n          newRule.value = 0\n          newRule.comparator = 'eq'\n          break\n        case 'date':\n          newRule.value = formatDate(new Date(), 'yyyy-MM-dd')\n          newRule.comparator = 'eq'\n          break\n        case 'datetime':\n          newRule.value = formatDate(new Date(), 'yyyy-MM-dd HH:mm')\n          newRule.comparator = 'eq'\n          break\n        case 'predefined_value':\n          newRule.value = []\n          newRule.comparator = 'in'\n          newRule.value_as_string = columnOptions[0].value_as_string\n          break\n        case 'boolean':\n          newRule.value = false\n          newRule.comparator = 'eq'\n          break\n      }\n      groupData.conditions.push(newRule)\n    } else {\n      // type = \"group\"\n      groupData.conditions.push({\n        conjunction: conjunctionOptions[0].value,\n        type: 'group',\n        conditions: [],\n        condition_id: uuidv1()\n      })\n    }\n    closeAddMenu()\n  }\n\n  const removeGroup = (group_condition_id) => () => {\n    const newParentGroupConditions = parentGroup.conditions.filter((cond) => cond.condition_id !== group_condition_id)\n    parentGroup.conditions = newParentGroupConditions\n    forceParentRerender()\n  }\n\n  const handleGroupConjunctionChange = (value) => {\n    groupData.conjunction = value\n    forceParentRerender()\n  }\n\n  return (\n    <>\n      <TreeItem\n        nodeId=\"group\"\n        style={{\n          borderLeft: level === 0 ? '' : '1px #D8D8D8 dashed',\n          marginLeft: level === 0 ? '' : '1.65rem',\n          marginTop: level === 0 ? '' : '0.5rem'\n        }}\n        label={\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <ConjunctionOptions\n              conjunctionOptions={conjunctionOptions}\n              value={groupData.conjunction}\n              onGroupConjunctionChange={handleGroupConjunctionChange}\n              disabled={disabled}\n            />\n\n            <Unless condition={disabled}>\n              <ButtonGroup className={classes.buttonGroup} size=\"small\">\n                <IconButton aria-label=\"Add\" aria-controls=\"add-menu\" aria-haspopup=\"true\" onClick={openAddMenu}>\n                  <AddCircle className={classes.iconButton} />\n                </IconButton>\n\n                <Unless condition={level === 0}>\n                  <Tooltip title={t('tooltip.condition_remove_group')}>\n                    <IconButton onClick={removeGroup(groupData.condition_id)}>\n                      <Cancel className={classes.iconButton} />\n                    </IconButton>\n                  </Tooltip>\n                </Unless>\n              </ButtonGroup>\n\n              <Menu id=\"add-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={closeAddMenu}>\n                <MenuItem onClick={handleAddOptions('rule')}>{t('condition_group.add_rule')}</MenuItem>\n\n                <Unless condition={level >= maxLevel}>\n                  <MenuItem onClick={handleAddOptions('group')}>{t('condition_group.add_group')}</MenuItem>\n                </Unless>\n              </Menu>\n            </Unless>\n          </div>\n        }\n      >\n        {groupConditions}\n      </TreeItem>\n    </>\n  )\n}\n\nexport default ConditionGroup\n"]},"metadata":{},"sourceType":"module"}