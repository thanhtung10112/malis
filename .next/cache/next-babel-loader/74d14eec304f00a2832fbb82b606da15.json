{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Fersher\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Currency\\\\CreateEdit.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'next-i18next';\nimport useStyles from './styles';\nimport { useForm } from 'react-hook-form';\nimport { Grid, Typography } from '@material-ui/core';\nimport SyncAltIcon from '@material-ui/icons/SyncAlt';\nimport { FormControllerAutocomplete, FormControllerTextField, SectionTimezone, DialogMain, AppTabHistoryLog, FormControllerTabs, FormControllerNumberField, BtnHelp } from '@/components';\nimport { Unless } from 'react-if';\nimport _ from 'lodash';\nimport { currencyStore } from '@/store/reducers';\nimport { currencyRateFormat } from '@/utils/constant';\nimport clsx from 'clsx';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport getValidationSchema from './validationSchema';\n\nfunction CurrencyAddEditDialog() {\n  const {\n    t\n  } = useTranslation('currency');\n  const classes = useStyles();\n  const {\n    0: tab,\n    1: setTab\n  } = useState(0);\n  const dispatch = useDispatch();\n  const dialogState = useSelector(currencyStore.selectDialogState);\n  const initDataForCE = useSelector(currencyStore.selectInitDataForCE);\n  const baseCurrency = useSelector(currencyStore.selectUserBaseCurrency);\n  const currencyDetail = useSelector(currencyStore.selectDetail);\n  const permissions = useSelector(currencyStore.selectPermissions);\n  const {\n    wiki_page\n  } = useSelector(currencyStore.selectInitDataForCE);\n\n  const isCreating = _.isNil(currencyDetail.id);\n\n  const titleDialog = isCreating ? t('form.create_currency') : t('form.update_currency');\n  const validationSchema = useMemo(() => getValidationSchema(t), []);\n  const currencyForm = useForm({\n    shouldUnregister: false,\n    resolver: yupResolver(validationSchema)\n  });\n  const watchCurrencyId = currencyForm.watch('currency_id', '');\n  const watchIsBaseRateMode = currencyForm.watch('is_base_rate_mode', false);\n  const disableSwapRating = !isCreating && !currencyDetail.base_currency;\n  useEffect(() => {\n    const resetData = _objectSpread({}, currencyDetail);\n\n    if (_.isNil(currencyDetail.is_base_rate_mode)) {\n      resetData.is_base_rate_mode = false;\n    }\n\n    currencyForm.reset(_objectSpread({}, resetData));\n  }, [currencyDetail]);\n\n  const handleClose = () => {\n    currencyForm.clearErrors();\n    setTab(0);\n    dispatch(currencyStore.sagaCloseDialog());\n  };\n\n  const onSwapRateMode = () => {\n    if (!disableSwapRating) {\n      currencyForm.setValue('is_base_rate_mode', !watchIsBaseRateMode);\n      currencyForm.setValue('multiplier', null);\n      currencyForm.setValue('rate', '');\n      currencyForm.unregister('rate');\n      currencyForm.clearErrors(['rate', 'multiplier']);\n    }\n  };\n\n  const onSubmitData = currencyForm.handleSubmit(formData => {\n    const data = _.pick(formData, ['base_currency', 'currency_id', 'description', 'is_base_rate_mode', 'multiplier', 'rate', 'round_to']);\n\n    if (isCreating) {\n      data.base_currency = baseCurrency.id;\n      dispatch(currencyStore.sagaCreate(data));\n    } else {\n      dispatch(currencyStore.sagaUpdate({\n        id: formData.id,\n        formData: data\n      }));\n    }\n  });\n\n  const handleChangeTab = (_, nextTab) => {\n    setTab(nextTab);\n  };\n\n  const handleChangeHistoryLogs = data => {\n    dispatch(currencyStore.actions.setHistoryLogs(data));\n  };\n\n  const TabGeneral = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      style: {\n        marginTop: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n          name: \"currency_id\",\n          control: currencyForm.control,\n          label: t('label.code'),\n          required: true,\n          disabled: !isCreating,\n          transformValue: value => _.toUpper(value),\n          limitText: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormControllerAutocomplete, {\n          disableClearable: true,\n          control: currencyForm.control,\n          name: \"round_to\",\n          options: initDataForCE.round_to_options,\n          renderOption: option => option.description,\n          label: t('label.round_to'),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.gridTop,\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 5,\n        className: classes.wrapContent,\n        children: [/*#__PURE__*/_jsxDEV(FormControllerAutocomplete, {\n          disableClearable: true,\n          control: currencyForm.control,\n          name: \"multiplier\",\n          options: initDataForCE.multiplier_options,\n          disabled: !isCreating && !currencyDetail.base_currency,\n          renderOption: option => option.description,\n          primaryKeyOption: \"value\",\n          style: {\n            width: '100%'\n          },\n          label: \"Multiplier\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          display: \"inline\",\n          variant: \"caption\",\n          className: classes.multiplierLabel,\n          children: watchIsBaseRateMode ? baseCurrency.currency_id : watchCurrencyId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        className: classes.wrapSymbol,\n        children: [/*#__PURE__*/_jsxDEV(SyncAltIcon, {\n          className: clsx(classes.syncAltIcon, disableSwapRating && classes.disabled),\n          onClick: onSwapRateMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          display: \"inline\",\n          variant: \"caption\",\n          className: classes.symbolEqual,\n          children: \"=\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 5,\n        className: classes.wrapContent,\n        children: [/*#__PURE__*/_jsxDEV(FormControllerNumberField, {\n          control: currencyForm.control,\n          name: \"rate\",\n          label: \"Rate\",\n          required: true,\n          disabled: !isCreating && !currencyDetail.base_currency,\n          decimalScale: currencyRateFormat.precision,\n          fixedDecimalScale: currencyRateFormat.precision\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          display: \"inline\",\n          variant: \"caption\",\n          className: classes.multiplierLabel,\n          children: watchIsBaseRateMode ? watchCurrencyId : baseCurrency.currency_id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.gridTop,\n      container: true,\n      spacing: 1,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormControllerTextField, {\n          control: currencyForm.control,\n          label: t('label.description'),\n          multiline: true,\n          rows: 12,\n          name: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Unless, {\n      condition: isCreating,\n      children: /*#__PURE__*/_jsxDEV(SectionTimezone, {\n        value: currencyDetail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  const generalTab = {\n    label: t('common:tab.general'),\n    panel: TabGeneral,\n    errorKey: ['currency_id', 'multiplier', 'rate', 'round_to', 'description']\n  };\n  const historyTab = {\n    label: t('common:tab.history'),\n    disabled: isCreating,\n    panel: /*#__PURE__*/_jsxDEV(AppTabHistoryLog, {\n      isOpenDialog: dialogState.open,\n      data: dialogState.historyLogs,\n      onChange: handleChangeHistoryLogs,\n      entityId: currencyDetail.id,\n      tableHeight: 250,\n      entity: \"currency\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)\n  };\n  const tabs = [generalTab, historyTab];\n  return /*#__PURE__*/_jsxDEV(DialogMain, {\n    open: dialogState.open,\n    title: /*#__PURE__*/_jsxDEV(BtnHelp, {\n      title: titleDialog,\n      href: wiki_page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 14\n    }, this),\n    onOk: onSubmitData,\n    onClose: handleClose,\n    loading: dialogState.loading,\n    height: 470,\n    okButtonProps: {\n      disabled: dialogState.loading || !(permissions === null || permissions === void 0 ? void 0 : permissions.edit) && !isCreating\n    },\n    okText: isCreating ? t('common:button.create') : t('common:button.update'),\n    children: /*#__PURE__*/_jsxDEV(FormControllerTabs, {\n      value: tab,\n      onChange: handleChangeTab,\n      form: currencyForm,\n      tabs: tabs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n}\n\nexport default CurrencyAddEditDialog;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Currency/CreateEdit.tsx"],"names":["useEffect","useMemo","useState","useDispatch","useSelector","useTranslation","useStyles","useForm","Grid","Typography","SyncAltIcon","FormControllerAutocomplete","FormControllerTextField","SectionTimezone","DialogMain","AppTabHistoryLog","FormControllerTabs","FormControllerNumberField","BtnHelp","Unless","_","currencyStore","currencyRateFormat","clsx","yupResolver","getValidationSchema","CurrencyAddEditDialog","t","classes","tab","setTab","dispatch","dialogState","selectDialogState","initDataForCE","selectInitDataForCE","baseCurrency","selectUserBaseCurrency","currencyDetail","selectDetail","permissions","selectPermissions","wiki_page","isCreating","isNil","id","titleDialog","validationSchema","currencyForm","shouldUnregister","resolver","watchCurrencyId","watch","watchIsBaseRateMode","disableSwapRating","base_currency","resetData","is_base_rate_mode","reset","handleClose","clearErrors","sagaCloseDialog","onSwapRateMode","setValue","unregister","onSubmitData","handleSubmit","formData","data","pick","sagaCreate","sagaUpdate","handleChangeTab","nextTab","handleChangeHistoryLogs","actions","setHistoryLogs","TabGeneral","marginTop","control","value","toUpper","round_to_options","option","description","gridTop","wrapContent","multiplier_options","width","multiplierLabel","currency_id","wrapSymbol","syncAltIcon","disabled","symbolEqual","precision","generalTab","label","panel","errorKey","historyTab","open","historyLogs","tabs","loading","edit"],"mappings":"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","sourcesContent":["import { useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useTranslation } from 'next-i18next'\nimport useStyles from './styles'\nimport { useForm } from 'react-hook-form'\n\nimport { Grid, Typography } from '@material-ui/core'\n\nimport SyncAltIcon from '@material-ui/icons/SyncAlt'\n\nimport {\n  FormControllerAutocomplete,\n  FormControllerTextField,\n  SectionTimezone,\n  DialogMain,\n  AppTabHistoryLog,\n  FormControllerTabs,\n  FormControllerNumberField,\n  BtnHelp\n} from '@/components'\n\nimport { Unless } from 'react-if'\n\nimport _ from 'lodash'\nimport { currencyStore } from '@/store/reducers'\nimport { currencyRateFormat } from '@/utils/constant'\nimport clsx from 'clsx'\nimport { yupResolver } from '@hookform/resolvers/yup'\n\nimport getValidationSchema from './validationSchema'\n\nimport type { CurrencyDetail } from '@/types/Currency'\nimport type { HistoryLog } from '@/types/Common'\n\nfunction CurrencyAddEditDialog() {\n  const { t } = useTranslation('currency')\n  const classes = useStyles()\n  const [tab, setTab] = useState(0)\n\n  const dispatch = useDispatch()\n  const dialogState = useSelector(currencyStore.selectDialogState)\n  const initDataForCE = useSelector(currencyStore.selectInitDataForCE)\n  const baseCurrency = useSelector(currencyStore.selectUserBaseCurrency)\n  const currencyDetail = useSelector(currencyStore.selectDetail)\n  const permissions = useSelector(currencyStore.selectPermissions)\n  const { wiki_page } = useSelector(currencyStore.selectInitDataForCE)\n\n  const isCreating = _.isNil(currencyDetail.id)\n\n  const titleDialog = isCreating ? t('form.create_currency') : t('form.update_currency')\n\n  const validationSchema = useMemo(() => getValidationSchema(t), [])\n\n  const currencyForm = useForm<CurrencyDetail>({\n    shouldUnregister: false,\n    resolver: yupResolver(validationSchema)\n  })\n\n  const watchCurrencyId = currencyForm.watch('currency_id', '')\n  const watchIsBaseRateMode = currencyForm.watch('is_base_rate_mode', false)\n\n  const disableSwapRating = !isCreating && !currencyDetail.base_currency\n\n  useEffect(() => {\n    const resetData = { ...currencyDetail }\n    if (_.isNil(currencyDetail.is_base_rate_mode)) {\n      resetData.is_base_rate_mode = false\n    }\n    currencyForm.reset({\n      ...resetData\n    })\n  }, [currencyDetail])\n\n  const handleClose = () => {\n    currencyForm.clearErrors()\n    setTab(0)\n    dispatch(currencyStore.sagaCloseDialog())\n  }\n\n  const onSwapRateMode = () => {\n    if (!disableSwapRating) {\n      currencyForm.setValue('is_base_rate_mode', !watchIsBaseRateMode)\n      currencyForm.setValue('multiplier', null)\n      currencyForm.setValue('rate', '')\n      currencyForm.unregister('rate')\n      currencyForm.clearErrors(['rate', 'multiplier'])\n    }\n  }\n\n  const onSubmitData = currencyForm.handleSubmit((formData) => {\n    const data = _.pick(formData, [\n      'base_currency',\n      'currency_id',\n      'description',\n      'is_base_rate_mode',\n      'multiplier',\n      'rate',\n      'round_to'\n    ])\n    if (isCreating) {\n      data.base_currency = baseCurrency.id\n      dispatch(currencyStore.sagaCreate(data as CurrencyDetail))\n    } else {\n      dispatch(currencyStore.sagaUpdate({ id: formData.id, formData: data }))\n    }\n  })\n\n  const handleChangeTab = (_, nextTab: number) => {\n    setTab(nextTab)\n  }\n\n  const handleChangeHistoryLogs = (data: HistoryLog[]) => {\n    dispatch(currencyStore.actions.setHistoryLogs(data))\n  }\n\n  const TabGeneral = (\n    <>\n      <Grid container spacing={2} style={{ marginTop: 8 }}>\n        <Grid item xs={12}>\n          <FormControllerTextField\n            name=\"currency_id\"\n            control={currencyForm.control}\n            label={t('label.code')}\n            required\n            disabled={!isCreating}\n            transformValue={(value) => _.toUpper(value)}\n            limitText={3}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControllerAutocomplete\n            disableClearable\n            control={currencyForm.control}\n            name=\"round_to\"\n            options={initDataForCE.round_to_options}\n            renderOption={(option) => option.description}\n            label={t('label.round_to')}\n            required\n          />\n        </Grid>\n      </Grid>\n\n      <Grid className={classes.gridTop} container spacing={2}>\n        <Grid item xs={5} className={classes.wrapContent}>\n          <FormControllerAutocomplete\n            disableClearable\n            control={currencyForm.control}\n            name=\"multiplier\"\n            options={initDataForCE.multiplier_options}\n            disabled={!isCreating && !currencyDetail.base_currency}\n            renderOption={(option) => option.description}\n            primaryKeyOption=\"value\"\n            style={{ width: '100%' }}\n            label=\"Multiplier\"\n            required\n          />\n          <Typography display=\"inline\" variant=\"caption\" className={classes.multiplierLabel}>\n            {watchIsBaseRateMode ? baseCurrency.currency_id : watchCurrencyId}\n          </Typography>\n        </Grid>\n        <Grid item xs={2} className={classes.wrapSymbol}>\n          <SyncAltIcon\n            className={clsx(classes.syncAltIcon, disableSwapRating && classes.disabled)}\n            onClick={onSwapRateMode}\n          />\n          <Typography display=\"inline\" variant=\"caption\" className={classes.symbolEqual}>\n            =\n          </Typography>\n        </Grid>\n        <Grid item xs={5} className={classes.wrapContent}>\n          <FormControllerNumberField\n            control={currencyForm.control}\n            name=\"rate\"\n            label=\"Rate\"\n            required\n            disabled={!isCreating && !currencyDetail.base_currency}\n            decimalScale={currencyRateFormat.precision}\n            fixedDecimalScale={currencyRateFormat.precision}\n          />\n          <Typography display=\"inline\" variant=\"caption\" className={classes.multiplierLabel}>\n            {watchIsBaseRateMode ? watchCurrencyId : baseCurrency.currency_id}\n          </Typography>\n        </Grid>\n      </Grid>\n\n      <Grid className={classes.gridTop} container spacing={1}>\n        <Grid item xs={12}>\n          <FormControllerTextField\n            control={currencyForm.control}\n            label={t('label.description')}\n            multiline\n            rows={12}\n            name=\"description\"\n          />\n        </Grid>\n      </Grid>\n\n      <Unless condition={isCreating}>\n        <SectionTimezone value={currencyDetail} />\n      </Unless>\n    </>\n  )\n\n  const generalTab = {\n    label: t('common:tab.general'),\n    panel: TabGeneral,\n    errorKey: ['currency_id', 'multiplier', 'rate', 'round_to', 'description']\n  }\n\n  const historyTab = {\n    label: t('common:tab.history'),\n    disabled: isCreating,\n    panel: (\n      <AppTabHistoryLog\n        isOpenDialog={dialogState.open}\n        data={dialogState.historyLogs}\n        onChange={handleChangeHistoryLogs}\n        entityId={currencyDetail.id}\n        tableHeight={250}\n        entity=\"currency\"\n      />\n    )\n  }\n  const tabs = [generalTab, historyTab]\n\n  return (\n    <DialogMain\n      open={dialogState.open}\n      title={<BtnHelp title={titleDialog} href={wiki_page} />}\n      onOk={onSubmitData}\n      onClose={handleClose}\n      loading={dialogState.loading}\n      height={470}\n      okButtonProps={{\n        disabled: dialogState.loading || (!permissions?.edit && !isCreating)\n      }}\n      okText={isCreating ? t('common:button.create') : t('common:button.update')}\n    >\n      <FormControllerTabs value={tab} onChange={handleChangeTab} form={currencyForm} tabs={tabs} />\n    </DialogMain>\n  )\n}\n\nexport default CurrencyAddEditDialog\n"]},"metadata":{},"sourceType":"module"}