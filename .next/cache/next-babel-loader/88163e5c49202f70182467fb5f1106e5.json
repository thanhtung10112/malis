{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { TreeView, TreeItem } from '@material-ui/lab';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport useStyles from './styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { drawingStore } from '@/store/reducers';\n\nfunction LabelTree({\n  label\n}) {\n  return /*#__PURE__*/_jsxs(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsx(FolderIcon, {\n      style: {\n        marginRight: 8,\n        color: '#78909C',\n        fontSize: '1.3rem'\n      }\n    }), /*#__PURE__*/_jsx(\"span\", {\n      children: label\n    })]\n  });\n}\n\nexport default function App() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const drawingGroups = useSelector(drawingStore.selectDrawingGroups);\n  const drawingGroupId = useSelector(drawingStore.selectDrawingGroupId);\n\n  const handleSelectDrawing = groupId => () => {\n    if (drawingGroupId !== groupId) {\n      dispatch(drawingStore.actions.setDrawingGroupId(groupId));\n      dispatch(drawingStore.sagaGetList());\n    }\n  };\n\n  return /*#__PURE__*/_jsx(TreeView, {\n    defaultExpanded: ['-1'],\n    defaultCollapseIcon: /*#__PURE__*/_jsx(ExpandMoreIcon, {\n      style: {\n        fontSize: 22,\n        color: '#78909C'\n      }\n    }),\n    defaultExpandIcon: /*#__PURE__*/_jsx(ChevronRightIcon, {\n      style: {\n        fontSize: 22,\n        color: '#78909C'\n      }\n    }),\n    children: /*#__PURE__*/_jsx(TreeItem, {\n      nodeId: '-1',\n      label: /*#__PURE__*/_jsx(LabelTree, {\n        label: \"All\"\n      }),\n      className: classes.treeRoot,\n      classes: {\n        content: classes.all\n      },\n      onClick: handleSelectDrawing(drawingGroups.id),\n      children: drawingGroups.children.map(data => {\n        return /*#__PURE__*/_jsx(TreeItem, {\n          className: classes.treeItemParent,\n          nodeId: data.group_id,\n          label: /*#__PURE__*/_jsx(LabelTree, {\n            label: data.description\n          }),\n          onClick: handleSelectDrawing(data.id),\n          children: data.children.map(child => /*#__PURE__*/_jsx(TreeItem, {\n            className: classes.treeItemChild,\n            nodeId: child.group_id,\n            label: child.description,\n            onClick: handleSelectDrawing(child.id),\n            endIcon: /*#__PURE__*/_jsx(DescriptionIcon, {\n              style: {\n                color: '5E6366',\n                fontSize: '1.3rem'\n              }\n            })\n          }, child.group_id))\n        }, data.group_id);\n      })\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}