{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport var initialState = {\n  isOpen: false,\n  operationId: '',\n  message: 'Initializing...',\n  status: 'LOADING',\n  celeryId: ''\n};\nvar exportProcessDialogReducer = createSlice({\n  name: 'exportProcessDialog',\n  initialState: initialState,\n  reducers: {\n    setOpen: function setOpen(state, action) {\n      state.isOpen = action.payload;\n    },\n    setMessage: function setMessage(state, action) {\n      state.message = action.payload;\n    },\n    setOperationId: function setOperationId(state, action) {\n      state.operationId = action.payload;\n    },\n    setCeleryId: function setCeleryId(state, action) {\n      state.celeryId = action.payload;\n    },\n    setStatus: function setStatus(state, action) {\n      state.status = action.payload;\n    },\n    resetInitState: function resetInitState(state) {\n      state.operationId = initialState.operationId;\n      state.celeryId = initialState.celeryId;\n      state.message = initialState.message;\n      state.status = initialState.status;\n    }\n  }\n}); // Actions\n\nvar _exportProcessDialogR = exportProcessDialogReducer.actions,\n    setOpen = _exportProcessDialogR.setOpen,\n    setMessage = _exportProcessDialogR.setMessage,\n    setOperationId = _exportProcessDialogR.setOperationId,\n    setCeleryId = _exportProcessDialogR.setCeleryId,\n    setStatus = _exportProcessDialogR.setStatus,\n    resetInitState = _exportProcessDialogR.resetInitState;\nexport { setOpen, setMessage, setOperationId, setCeleryId, setStatus, resetInitState };\nexport default exportProcessDialogReducer.reducer;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/store/reducers/exportProcessDialog.ts"],"names":["createSlice","initialState","isOpen","operationId","message","status","celeryId","exportProcessDialogReducer","name","reducers","setOpen","state","action","payload","setMessage","setOperationId","setCeleryId","setStatus","resetInitState","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE,KADkB;AAE1BC,EAAAA,WAAW,EAAE,EAFa;AAG1BC,EAAAA,OAAO,EAAE,iBAHiB;AAI1BC,EAAAA,MAAM,EAAE,SAJkB;AAK1BC,EAAAA,QAAQ,EAAE;AALgB,CAArB;AAQP,IAAMC,0BAA0B,GAAGP,WAAW,CAAC;AAC7CQ,EAAAA,IAAI,EAAE,qBADuC;AAE7CP,EAAAA,YAAY,EAAZA,YAF6C;AAG7CQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OADQ,mBACAC,KADA,EACOC,MADP,EACe;AACrBD,MAAAA,KAAK,CAACT,MAAN,GAAeU,MAAM,CAACC,OAAtB;AACD,KAHO;AAIRC,IAAAA,UAJQ,sBAIGH,KAJH,EAIUC,MAJV,EAIkB;AACxBD,MAAAA,KAAK,CAACP,OAAN,GAAgBQ,MAAM,CAACC,OAAvB;AACD,KANO;AAORE,IAAAA,cAPQ,0BAOOJ,KAPP,EAOcC,MAPd,EAOsB;AAC5BD,MAAAA,KAAK,CAACR,WAAN,GAAoBS,MAAM,CAACC,OAA3B;AACD,KATO;AAURG,IAAAA,WAVQ,uBAUIL,KAVJ,EAUWC,MAVX,EAUmB;AACzBD,MAAAA,KAAK,CAACL,QAAN,GAAiBM,MAAM,CAACC,OAAxB;AACD,KAZO;AAaRI,IAAAA,SAbQ,qBAaEN,KAbF,EAaSC,MAbT,EAaiB;AACvBD,MAAAA,KAAK,CAACN,MAAN,GAAeO,MAAM,CAACC,OAAtB;AACD,KAfO;AAgBRK,IAAAA,cAhBQ,0BAgBOP,KAhBP,EAgBc;AACpBA,MAAAA,KAAK,CAACR,WAAN,GAAoBF,YAAY,CAACE,WAAjC;AACAQ,MAAAA,KAAK,CAACL,QAAN,GAAiBL,YAAY,CAACK,QAA9B;AACAK,MAAAA,KAAK,CAACP,OAAN,GAAgBH,YAAY,CAACG,OAA7B;AACAO,MAAAA,KAAK,CAACN,MAAN,GAAeJ,YAAY,CAACI,MAA5B;AACD;AArBO;AAHmC,CAAD,CAA9C,C,CA4BA;;4BAEEE,0BAA0B,CAACY,O;IADdT,O,yBAAAA,O;IAASI,U,yBAAAA,U;IAAYC,c,yBAAAA,c;IAAgBC,W,yBAAAA,W;IAAaC,S,yBAAAA,S;IAAWC,c,yBAAAA,c;;AAG5E,eAAeX,0BAA0B,CAACa,OAA1C","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const initialState = {\n  isOpen: false,\n  operationId: '',\n  message: 'Initializing...',\n  status: 'LOADING',\n  celeryId: ''\n}\n\nconst exportProcessDialogReducer = createSlice({\n  name: 'exportProcessDialog',\n  initialState,\n  reducers: {\n    setOpen(state, action) {\n      state.isOpen = action.payload\n    },\n    setMessage(state, action) {\n      state.message = action.payload\n    },\n    setOperationId(state, action) {\n      state.operationId = action.payload\n    },\n    setCeleryId(state, action) {\n      state.celeryId = action.payload\n    },\n    setStatus(state, action) {\n      state.status = action.payload\n    },\n    resetInitState(state) {\n      state.operationId = initialState.operationId\n      state.celeryId = initialState.celeryId\n      state.message = initialState.message\n      state.status = initialState.status\n    }\n  }\n})\n\n// Actions\nexport const { setOpen, setMessage, setOperationId, setCeleryId, setStatus, resetInitState } =\n  exportProcessDialogReducer.actions\n\nexport default exportProcessDialogReducer.reducer\n"]},"metadata":{},"sourceType":"module"}