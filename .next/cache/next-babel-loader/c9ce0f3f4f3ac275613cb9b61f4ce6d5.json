{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createSlice, createAction } from '@reduxjs/toolkit';\nimport { v1 as uuidv1 } from 'uuid';\nimport { actionTypes } from '@/utils/constant';\nexport const name = 'budget';\nexport const resetState = createAction(name + '/RESET_STATE');\nexport const dialogState = {\n  isOpen: false,\n  isEdit: false,\n  isLoading: false\n};\nexport const importDialogState = {\n  isOpen: false,\n  isLoading: false,\n  mode: 0 // 0 -> test, 1 -> write\n\n};\nexport const resultImportDialog = {\n  isOpen: false,\n  success: true,\n  result: '',\n  isLoading: false\n};\nexport const budgetDetail = {\n  job_id: null,\n  budget_id: '',\n  puco: null,\n  description: '',\n  amount: null,\n  currency: ''\n};\nexport const initDataForList = {\n  jobs: [],\n  puco_list: [],\n  selected_job: {\n    description: '',\n    value: null\n  },\n  user_puco: {\n    description: '',\n    value: null\n  },\n  permissions: {\n    budget: null\n  },\n  wiki_page: '',\n  column_tooltips: {}\n};\nexport const initDataForCreateEdit = {\n  puco_list: [],\n  user_currency: {\n    description: '',\n    value: null\n  },\n  user_job: {\n    description: '',\n    value: null\n  },\n  user_puco: {\n    description: '',\n    value: null\n  },\n  wiki_page: ''\n};\nconst remindData = {\n  open: false,\n  helpText: ''\n};\nexport const initialState = {\n  dataList: [],\n  dialogState,\n  importDialogState,\n  resultImportDialog,\n  budgetDetail,\n  initDataForList,\n  remindData,\n  initDataForCreateEdit,\n  budgetImportProcess: {\n    celery_id: '',\n    operation_id: '',\n    openDialogProcess: false\n  },\n  budgetSum: {\n    amount: 0,\n    budget_id: '',\n    currency_id: '',\n    description: 'Total of selected cost codes',\n    left_in_order: 0,\n    left_in_rfq: 0,\n    parameter_id: '',\n    used_in_order: 0,\n    used_in_rfq: 0,\n    id: uuidv1()\n  }\n};\nconst budget = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setOpenDialog(state, {\n      payload\n    }) {\n      state.dialogState.isOpen = payload;\n    },\n\n    setLoadingDialog(state, {\n      payload\n    }) {\n      state.dialogState.isLoading = payload;\n    },\n\n    setEditMode(state, action) {\n      state.dialogState.isEdit = action.payload;\n    },\n\n    setInitDataForList(state, {\n      payload\n    }) {\n      state.initDataForList = payload;\n    },\n\n    setInitDataForCreateEdit(state, {\n      payload\n    }) {\n      state.initDataForCreateEdit = payload;\n    },\n\n    setDataList(state, {\n      payload\n    }) {\n      state.dataList = payload;\n    },\n\n    setUserValues(state, {\n      payload\n    }) {\n      if (payload.value === 'puco') {\n        state.initDataForList.user_puco = payload.option;\n      } else {\n        state.initDataForList.selected_job = payload.option;\n      }\n    },\n\n    setBudgetDetail(state, {\n      payload\n    }) {\n      state.budgetDetail = _objectSpread(_objectSpread({}, state.budgetDetail), payload);\n    },\n\n    setBudgetSum(state, {\n      payload\n    }) {\n      state.budgetSum.amount = payload.sum_amount;\n      state.budgetSum.used_in_rfq = payload.sum_used_in_rfq;\n      state.budgetSum.left_in_rfq = payload.sum_left_in_rfq;\n      state.budgetSum.used_in_order = payload.sum_used_in_order; // state.budgetSum.left_in_order = payload.sum_left_in_order\n    },\n\n    setPermissions(state, {\n      payload\n    }) {\n      state.initDataForList.permissions.budget = payload;\n    },\n\n    setImportOpen(state, {\n      payload\n    }) {\n      state.importDialogState.isOpen = payload;\n    },\n\n    setImportLoading(state, {\n      payload\n    }) {\n      state.importDialogState.isLoading = payload;\n    },\n\n    setImportMode(state, {\n      payload\n    }) {\n      state.importDialogState.mode = payload;\n    },\n\n    setImportResult(state, {\n      payload\n    }) {\n      state.resultImportDialog = _objectSpread(_objectSpread({}, state.resultImportDialog), payload);\n    },\n\n    setOpenImportProcess(state, {\n      payload\n    }) {\n      state.budgetImportProcess.openDialogProcess = payload;\n    },\n\n    setCeleryId(state, {\n      payload\n    }) {\n      state.budgetImportProcess.celery_id = payload;\n    },\n\n    setOperationId(state, {\n      payload\n    }) {\n      state.budgetImportProcess.operation_id = payload;\n    },\n\n    setRemindData(state, {\n      payload\n    }) {\n      state.remindData = _objectSpread(_objectSpread({}, state.remindData), payload);\n    }\n\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState;\n    }\n\n  }\n});\nexport const {\n  setOpenDialog,\n  setLoadingDialog,\n  setEditMode,\n  setInitDataForList,\n  setDataList,\n  setUserValues,\n  setBudgetDetail,\n  setInitDataForCreateEdit,\n  setBudgetSum,\n  setPermissions,\n  setImportOpen,\n  setImportLoading,\n  setImportResult,\n  setImportMode,\n  setOpenImportProcess,\n  setCeleryId,\n  setOperationId,\n  setRemindData\n} = budget.actions;\nexport const openUpdateDialog = createAction(name + '/OPEN_UPDATE_DIALOG');\nexport const closeDialog = createAction(name + '/CLOSE_DIALOG');\nexport const openCreateDialog = createAction(name + '/OPEN_CREATE_DIALOG');\nexport const getList = createAction(name + '/GET_LIST');\nexport const changeUserValue = createAction(name + '/CHANGE_USER_VALUE');\nexport const updateMultiple = createAction(name + '/' + actionTypes.UPDATE_MULTIPLE);\nexport const create = createAction(name + '/CREATE');\nexport const update = createAction(name + '/UPDATE');\nexport const remove = createAction(name + '/REMOVE');\nexport const importCostCode = createAction(name + '/IMPORT');\nexport const sendReportMail = createAction(name + '/SEND_REPORT_MAIL');\nexport const getRemindData = createAction(name + '/GET_REMIND_DATA'); // selector\n\nexport const selectDialogState = state => state.budget.dialogState;\nexport const selectUserJob = state => state.budget.initDataForList.selected_job;\nexport const selectUserPuco = state => state.budget.initDataForList.user_puco;\nexport const selectDataList = state => state.budget.dataList;\nexport const selectJobList = state => state.budget.initDataForList.jobs;\nexport const selectPucoList = state => state.budget.initDataForList.puco_list;\nexport const selectBudgetDetail = state => state.budget.budgetDetail;\nexport const selectInitDataCreateEdit = state => state.budget.initDataForCreateEdit;\nexport const selectBudgetSum = state => state.budget.budgetSum;\nexport const selectPermissions = state => state.budget.initDataForList.permissions.budget;\nexport const selectImportDialogState = state => state.budget.importDialogState;\nexport const selectImportResultDialog = state => state.budget.resultImportDialog;\nexport const selectImportDialogProcess = state => state.budget.budgetImportProcess;\nexport const selectRemindData = state => state.budget.remindData;\nexport const selectInitDataForCE = state => state.budget.initDataForCreateEdit;\nexport const selectInitDataForList = state => state.budget.initDataForList;\nexport default budget.reducer;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/reducers/budget.ts"],"names":["createSlice","createAction","v1","uuidv1","actionTypes","name","resetState","dialogState","isOpen","isEdit","isLoading","importDialogState","mode","resultImportDialog","success","result","budgetDetail","job_id","budget_id","puco","description","amount","currency","initDataForList","jobs","puco_list","selected_job","value","user_puco","permissions","budget","wiki_page","column_tooltips","initDataForCreateEdit","user_currency","user_job","remindData","open","helpText","initialState","dataList","budgetImportProcess","celery_id","operation_id","openDialogProcess","budgetSum","currency_id","left_in_order","left_in_rfq","parameter_id","used_in_order","used_in_rfq","id","reducers","setOpenDialog","state","payload","setLoadingDialog","setEditMode","action","setInitDataForList","setInitDataForCreateEdit","setDataList","setUserValues","option","setBudgetDetail","setBudgetSum","sum_amount","sum_used_in_rfq","sum_left_in_rfq","sum_used_in_order","setPermissions","setImportOpen","setImportLoading","setImportMode","setImportResult","setOpenImportProcess","setCeleryId","setOperationId","setRemindData","extraReducers","type","actions","openUpdateDialog","closeDialog","openCreateDialog","getList","changeUserValue","updateMultiple","UPDATE_MULTIPLE","create","update","remove","importCostCode","sendReportMail","getRemindData","selectDialogState","selectUserJob","selectUserPuco","selectDataList","selectJobList","selectPucoList","selectBudgetDetail","selectInitDataCreateEdit","selectBudgetSum","selectPermissions","selectImportDialogState","selectImportResultDialog","selectImportDialogProcess","selectRemindData","selectInitDataForCE","selectInitDataForList","reducer"],"mappings":"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","sourcesContent":["import {\n  Budget,\n  BudgetInitDataForCreateEdit,\n  BudgetInitDataForList,\n  BudgetItem,\n  BudgetPermission,\n  BudgetSum,\n  BudgetUserValue\n} from '@/types/Budget'\nimport { createSlice, PayloadAction, createAction } from '@reduxjs/toolkit'\n\nimport { v1 as uuidv1 } from 'uuid'\nimport { actionTypes } from '@/utils/constant'\n\nimport { RootReducerType } from './rootReducer'\nimport { NextRouter } from 'next/router'\n\nexport const name = 'budget'\nexport const resetState = createAction(name + '/RESET_STATE')\n\nexport const dialogState = {\n  isOpen: false,\n  isEdit: false,\n  isLoading: false\n}\n\nexport const importDialogState = {\n  isOpen: false,\n  isLoading: false,\n  mode: 0 // 0 -> test, 1 -> write\n}\n\nexport const resultImportDialog = {\n  isOpen: false,\n  success: true,\n  result: '',\n  isLoading: false\n}\n\nexport const budgetDetail = {\n  job_id: null,\n  budget_id: '',\n  puco: null,\n  description: '',\n  amount: null,\n  currency: ''\n}\n\nexport const initDataForList = {\n  jobs: [],\n  puco_list: [],\n  selected_job: {\n    description: '',\n    value: null\n  },\n  user_puco: {\n    description: '',\n    value: null\n  },\n  permissions: {\n    budget: null\n  },\n  wiki_page: '',\n  column_tooltips: {}\n} as BudgetInitDataForList\n\nexport const initDataForCreateEdit = {\n  puco_list: [],\n  user_currency: {\n    description: '',\n    value: null\n  },\n  user_job: {\n    description: '',\n    value: null\n  },\n  user_puco: {\n    description: '',\n    value: null\n  },\n  wiki_page: ''\n} as BudgetInitDataForCreateEdit\n\nconst remindData = {\n  open: false,\n  helpText: ''\n}\n\nexport const initialState = {\n  dataList: [] as BudgetItem[],\n  dialogState,\n  importDialogState,\n  resultImportDialog,\n  budgetDetail,\n  initDataForList,\n  remindData,\n  initDataForCreateEdit,\n  budgetImportProcess: {\n    celery_id: '',\n    operation_id: '',\n    openDialogProcess: false\n  },\n  budgetSum: {\n    amount: 0,\n    budget_id: '',\n    currency_id: '',\n    description: 'Total of selected cost codes',\n    left_in_order: 0,\n    left_in_rfq: 0,\n    parameter_id: '',\n    used_in_order: 0,\n    used_in_rfq: 0,\n    id: uuidv1()\n  } as BudgetItem\n}\n\nconst budget = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setOpenDialog(state, { payload }: PayloadAction<boolean>) {\n      state.dialogState.isOpen = payload\n    },\n    setLoadingDialog(state, { payload }: PayloadAction<boolean>) {\n      state.dialogState.isLoading = payload\n    },\n    setEditMode(state, action: PayloadAction<boolean>) {\n      state.dialogState.isEdit = action.payload\n    },\n    setInitDataForList(state, { payload }: PayloadAction<BudgetInitDataForList>) {\n      state.initDataForList = payload\n    },\n    setInitDataForCreateEdit(state, { payload }: PayloadAction<BudgetInitDataForCreateEdit>) {\n      state.initDataForCreateEdit = payload\n    },\n    setDataList(state, { payload }: PayloadAction<BudgetItem[]>) {\n      state.dataList = payload\n    },\n    setUserValues(state, { payload }: PayloadAction<{ value: 'puco' | 'job'; option: BudgetUserValue }>) {\n      if (payload.value === 'puco') {\n        state.initDataForList.user_puco = payload.option\n      } else {\n        state.initDataForList.selected_job = payload.option\n      }\n    },\n    setBudgetDetail(state, { payload }: PayloadAction<Partial<Budget>>) {\n      state.budgetDetail = {\n        ...state.budgetDetail,\n        ...payload\n      }\n    },\n    setBudgetSum(state, { payload }: PayloadAction<BudgetSum>) {\n      state.budgetSum.amount = payload.sum_amount\n      state.budgetSum.used_in_rfq = payload.sum_used_in_rfq\n      state.budgetSum.left_in_rfq = payload.sum_left_in_rfq\n      state.budgetSum.used_in_order = payload.sum_used_in_order\n      // state.budgetSum.left_in_order = payload.sum_left_in_order\n    },\n    setPermissions(state, { payload }: PayloadAction<BudgetPermission>) {\n      state.initDataForList.permissions.budget = payload\n    },\n    setImportOpen(state, { payload }: PayloadAction<boolean>) {\n      state.importDialogState.isOpen = payload\n    },\n    setImportLoading(state, { payload }: PayloadAction<boolean>) {\n      state.importDialogState.isLoading = payload\n    },\n    setImportMode(state, { payload }: PayloadAction<number>) {\n      state.importDialogState.mode = payload\n    },\n    setImportResult(state, { payload }: PayloadAction<Partial<typeof resultImportDialog>>) {\n      state.resultImportDialog = {\n        ...state.resultImportDialog,\n        ...payload\n      }\n    },\n    setOpenImportProcess(state, { payload }: PayloadAction<boolean>) {\n      state.budgetImportProcess.openDialogProcess = payload\n    },\n    setCeleryId(state, { payload }: PayloadAction<string>) {\n      state.budgetImportProcess.celery_id = payload\n    },\n    setOperationId(state, { payload }: PayloadAction<string>) {\n      state.budgetImportProcess.operation_id = payload\n    },\n    setRemindData(state, { payload }: PayloadAction<Partial<typeof remindData>>) {\n      state.remindData = {\n        ...state.remindData,\n        ...payload\n      }\n    }\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState\n    }\n  }\n})\n\nexport const {\n  setOpenDialog,\n  setLoadingDialog,\n  setEditMode,\n  setInitDataForList,\n  setDataList,\n  setUserValues,\n  setBudgetDetail,\n  setInitDataForCreateEdit,\n  setBudgetSum,\n  setPermissions,\n  setImportOpen,\n  setImportLoading,\n  setImportResult,\n  setImportMode,\n  setOpenImportProcess,\n  setCeleryId,\n  setOperationId,\n  setRemindData\n} = budget.actions\n\nexport const openUpdateDialog = createAction<number>(name + '/OPEN_UPDATE_DIALOG')\nexport const closeDialog = createAction(name + '/CLOSE_DIALOG')\nexport const openCreateDialog = createAction(name + '/OPEN_CREATE_DIALOG')\nexport const getList = createAction(name + '/GET_LIST')\nexport const changeUserValue = createAction<any>(name + '/CHANGE_USER_VALUE')\nexport const updateMultiple = createAction<{\n  router: NextRouter\n  href: string\n}>(name + '/' + actionTypes.UPDATE_MULTIPLE)\n\nexport const create = createAction<Budget>(name + '/CREATE')\nexport const update = createAction<Budget>(name + '/UPDATE')\nexport const remove = createAction<number[]>(name + '/REMOVE')\nexport const importCostCode = createAction<{\n  operationData: {\n    job_id_pk: number\n    file_type: 'text' | 'excel'\n    mode: 'test' | 'write'\n  }\n  mode: number\n  file: File\n}>(name + '/IMPORT')\nexport const sendReportMail = createAction<FormData>(name + '/SEND_REPORT_MAIL')\nexport const getRemindData = createAction(name + '/GET_REMIND_DATA')\n\n// selector\nexport const selectDialogState = (state: RootReducerType) => state.budget.dialogState\nexport const selectUserJob = (state: RootReducerType) => state.budget.initDataForList.selected_job\nexport const selectUserPuco = (state: RootReducerType) => state.budget.initDataForList.user_puco\nexport const selectDataList = (state: RootReducerType) => state.budget.dataList\nexport const selectJobList = (state: RootReducerType) => state.budget.initDataForList.jobs\nexport const selectPucoList = (state: RootReducerType) => state.budget.initDataForList.puco_list\nexport const selectBudgetDetail = (state: RootReducerType) => state.budget.budgetDetail\nexport const selectInitDataCreateEdit = (state: RootReducerType) => state.budget.initDataForCreateEdit\nexport const selectBudgetSum = (state: RootReducerType) => state.budget.budgetSum\nexport const selectPermissions = (state: RootReducerType) => state.budget.initDataForList.permissions.budget\nexport const selectImportDialogState = (state: RootReducerType) => state.budget.importDialogState\nexport const selectImportResultDialog = (state: RootReducerType) => state.budget.resultImportDialog\nexport const selectImportDialogProcess = (state: RootReducerType) => state.budget.budgetImportProcess\nexport const selectRemindData = (state: RootReducerType) => state.budget.remindData\n\nexport const selectInitDataForCE = (state: RootReducerType) => state.budget.initDataForCreateEdit\n\nexport const selectInitDataForList = (state: RootReducerType) => state.budget.initDataForList\n\nexport default budget.reducer\n"]},"metadata":{},"sourceType":"module"}