{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { CircularProgress, Typography } from '@material-ui/core';\nimport { CheckCircleRounded, HighlightOffOutlined } from '@material-ui/icons';\nimport { Case, Default, Switch } from 'react-if';\nimport { DialogMain, useConfirm } from '@/components/index';\nimport { useDispatch } from 'react-redux';\nimport useSSE from '@/hooks/useSSE';\nimport _ from 'lodash';\nimport { commonStore } from '@/store/reducers';\n\nfunction DialogSSEProcess(props) {\n  var open = props.open,\n      operationId = props.operationId,\n      onClose = props.onClose,\n      onSuccess = props.onSuccess,\n      onError = props.onError;\n\n  var _useSSE = useSSE(operationId),\n      dataSSE = _useSSE.dataSSE,\n      setDataSSE = _useSSE.setDataSSE;\n\n  var _useConfirm = useConfirm(),\n      confirm = _useConfirm.confirm,\n      handleCloseConfirm = _useConfirm.handleClose;\n\n  var dispatch = useDispatch();\n  var isCompleted = React.useMemo(function () {\n    return dataSSE.status === 'SUCCESS' || dataSSE.status === 'ERROR';\n  }, [dataSSE.status]);\n  React.useEffect(function () {\n    if (isCompleted) {\n      handleCloseConfirm();\n      onClose();\n\n      if (_.isFunction(onSuccess) && dataSSE.status === 'SUCCESS') {\n        onSuccess(operationId, dataSSE);\n      }\n\n      if (_.isFunction(onError) && dataSSE.status === 'ERROR') {\n        onError(operationId, dataSSE);\n      }\n    }\n  }, [isCompleted]);\n  /**\n   * This hook to reset state if open = false\n   */\n\n  React.useEffect(function () {\n    if (!open) {\n      setDataSSE({\n        message: 'Initializing...',\n        status: null,\n        operation_result: null\n      });\n    }\n  }, [open]);\n\n  var handleCancelProcess = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return confirm({\n                title: 'Confirm canceling exporting progress',\n                description: 'The progress is not completed yet. Are you sure you want to cancel?'\n              });\n\n            case 2:\n              result = _context.sent;\n\n              if (result === 'OK') {\n                onClose();\n                dispatch(commonStore.sagaCancelBackgroundJob(operationId));\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleCancelProcess() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxs(DialogMain, {\n    open: open,\n    onClose: isCompleted ? onClose : handleCancelProcess,\n    maxWidth: \"xs\",\n    fullWidth: true,\n    bodyStyles: {\n      margin: 'auto',\n      textAlign: 'center'\n    },\n    closeText: isCompleted ? 'Close' : 'Cancel',\n    children: [/*#__PURE__*/_jsxs(Switch, {\n      children: [/*#__PURE__*/_jsx(Case, {\n        condition: dataSSE.status === 'SUCCESS',\n        children: /*#__PURE__*/_jsx(CheckCircleRounded, {\n          fontSize: \"large\",\n          style: {\n            marginTop: '1rem'\n          }\n        })\n      }), /*#__PURE__*/_jsx(Case, {\n        condition: dataSSE.status === 'ERROR',\n        children: /*#__PURE__*/_jsx(HighlightOffOutlined, {\n          fontSize: \"large\",\n          style: {\n            marginTop: '1rem'\n          }\n        })\n      }), /*#__PURE__*/_jsx(Default, {\n        children: /*#__PURE__*/_jsx(CircularProgress, {\n          style: {\n            marginTop: '1rem'\n          }\n        })\n      })]\n    }), /*#__PURE__*/_jsx(Typography, {\n      variant: \"body1\",\n      style: {\n        marginTop: '1rem'\n      },\n      children: dataSSE.message\n    })]\n  });\n}\n\nexport default DialogSSEProcess;","map":null,"metadata":{},"sourceType":"module"}