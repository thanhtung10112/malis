{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useMemo } from 'react';\nimport HttpService from '@/helper/HttpService';\nimport { singular } from 'pluralize';\n\nfunction useGetData(entity) {\n  var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var http = useMemo(function () {\n    return new HttpService(entity);\n  }, [entity]);\n\n  var getInitDataForCE = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var params,\n          response,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              params = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n              _context.prev = 1;\n              _context.next = 4;\n              return http.getInitDataForCE(_objectSpread(_objectSpread({}, query), params));\n\n            case 4:\n              response = _context.sent;\n              return _context.abrupt(\"return\", response);\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('error', '>>>', _context.t0);\n              return _context.abrupt(\"return\", _context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n\n    return function getInitDataForCE() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getGeneratedCode = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(query) {\n      var _yield$http$getGenera, generated_code;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return http.getGeneratedCode(query);\n\n            case 3:\n              _yield$http$getGenera = _context2.sent;\n              generated_code = _yield$http$getGenera.generated_code;\n              return _context2.abrupt(\"return\", generated_code);\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('error', '>>>', _context2.t0);\n              return _context2.abrupt(\"return\", _context2.t0);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 8]]);\n    }));\n\n    return function getGeneratedCode(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var getDetail = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n      var response, singularEntity;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return http.getDetail(id);\n\n            case 3:\n              response = _context3.sent;\n              singularEntity = singular(entity);\n              return _context3.abrupt(\"return\", response[singularEntity]);\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('error', '>>>', _context3.t0);\n              return _context3.abrupt(\"return\", _context3.t0);\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 8]]);\n    }));\n\n    return function getDetail(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var postCreate = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(data) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return http.create(data);\n\n            case 3:\n              response = _context4.sent;\n              return _context4.abrupt(\"return\", response);\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error('error', '>>>', _context4.t0);\n              return _context4.abrupt(\"return\", _context4.t0);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 7]]);\n    }));\n\n    return function postCreate(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var putUpdate = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(id, data) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return http.update(id, data);\n\n            case 3:\n              response = _context5.sent;\n              return _context5.abrupt(\"return\", response);\n\n            case 7:\n              _context5.prev = 7;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.error('error', '>>>', _context5.t0);\n              return _context5.abrupt(\"return\", _context5.t0);\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 7]]);\n    }));\n\n    return function putUpdate(_x4, _x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  return {\n    getInitDataForCE: getInitDataForCE,\n    getDetail: getDetail,\n    getGeneratedCode: getGeneratedCode,\n    postCreate: postCreate,\n    putUpdate: putUpdate\n  };\n}\n\nexport default useGetData;","map":null,"metadata":{},"sourceType":"module"}