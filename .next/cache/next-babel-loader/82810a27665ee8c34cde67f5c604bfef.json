{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\ErrorBoundary\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { DialogMain } from '@/components/index';\n\nclass ErrorDialog extends React.PureComponent {\n  render() {\n    const {\n      open,\n      onClose\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(DialogMain, {\n      type: \"error\",\n      open: open,\n      maxWidth: \"xs\",\n      title: \"Error\",\n      onClose: onClose,\n      closeText: \"Ok\",\n      closeButtonProps: {\n        color: 'secondary'\n      },\n      description: \"An unexpected error has occurred, please contact your administrator.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass ErrorBoundary extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      hasError: false\n    });\n\n    _defineProperty(this, \"onCloseErrorDialog\", () => {\n      this.setState(prevState => _objectSpread(_objectSpread({}, prevState), {}, {\n        hasError: false\n      }));\n    });\n  }\n\n  static getDerivedStateFromError(error) {\n    if (process.env.NEXT_PUBLIC_MODE === 'develop') {\n      console.error('error', error);\n    }\n\n    return {\n      hasError: true\n    };\n  }\n\n  render() {\n    const {\n      hasError\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.children, /*#__PURE__*/_jsxDEV(ErrorDialog, {\n        open: hasError,\n        onClose: this.onCloseErrorDialog\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/ErrorBoundary/index.tsx"],"names":["React","DialogMain","ErrorDialog","PureComponent","render","open","onClose","props","color","ErrorBoundary","Component","hasError","setState","prevState","getDerivedStateFromError","error","process","env","NEXT_PUBLIC_MODE","console","state","children","onCloseErrorDialog"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,oBAA3B;;AAEA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,aAAhC,CAGG;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAoB,KAAKC,KAA/B;AACA,wBACE,QAAC,UAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAEF,IAFR;AAGE,MAAA,QAAQ,EAAC,IAHX;AAIE,MAAA,KAAK,EAAC,OAJR;AAKE,MAAA,OAAO,EAAEC,OALX;AAME,MAAA,SAAS,EAAC,IANZ;AAOE,MAAA,gBAAgB,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAPpB;AAQE,MAAA,WAAW,EAAC;AARd;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAfA;;AAkBH,MAAMC,aAAN,SAA4BT,KAAK,CAACU,SAAlC,CAAiD;AAAA;AAAA;;AAAA,mCACvC;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADuC;;AAAA,gDAY1B,MAAM;AACzB,WAAKC,QAAL,CAAeC,SAAD,oCAAqBA,SAArB;AAAgCF,QAAAA,QAAQ,EAAE;AAA1C,QAAd;AACD,KAd8C;AAAA;;AAK/C,SAAOG,wBAAP,CAAgCC,KAAhC,EAAuC;AACrC,QAAIC,OAAO,CAACC,GAAR,CAAYC,gBAAZ,KAAiC,SAArC,EAAgD;AAC9CC,MAAAA,OAAO,CAACJ,KAAR,CAAc,OAAd,EAAuBA,KAAvB;AACD;;AACD,WAAO;AAAEJ,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACD;;AAMDP,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEO,MAAAA;AAAF,QAAe,KAAKS,KAA1B;AACA,wBACE;AAAA,iBACG,KAAKb,KAAL,CAAWc,QADd,eAEE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEV,QAAnB;AAA6B,QAAA,OAAO,EAAE,KAAKW;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAMD;;AAxB8C;;AA2BjD,eAAeb,aAAf","sourcesContent":["import React from 'react'\nimport { DialogMain } from '@/components/index'\n\nclass ErrorDialog extends React.PureComponent<{\n  open: boolean\n  onClose(): void\n}> {\n  render() {\n    const { open, onClose } = this.props\n    return (\n      <DialogMain\n        type=\"error\"\n        open={open}\n        maxWidth=\"xs\"\n        title=\"Error\"\n        onClose={onClose}\n        closeText=\"Ok\"\n        closeButtonProps={{ color: 'secondary' }}\n        description=\"An unexpected error has occurred, please contact your administrator.\"\n      />\n    )\n  }\n}\n\nclass ErrorBoundary extends React.Component<any> {\n  state = {\n    hasError: false\n  }\n\n  static getDerivedStateFromError(error) {\n    if (process.env.NEXT_PUBLIC_MODE === 'develop') {\n      console.error('error', error)\n    }\n    return { hasError: true }\n  }\n\n  onCloseErrorDialog = () => {\n    this.setState((prevState) => ({ ...prevState, hasError: false }))\n  }\n\n  render() {\n    const { hasError } = this.state\n    return (\n      <>\n        {this.props.children}\n        <ErrorDialog open={hasError} onClose={this.onCloseErrorDialog} />\n      </>\n    )\n  }\n}\n\nexport default ErrorBoundary\n"]},"metadata":{},"sourceType":"module"}