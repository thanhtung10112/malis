{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport useStyles from './styles';\nimport useGetData from '@/hooks/useGetData';\nimport { useDispatch, useSelector } from 'react-redux'; // import { useTranslation } from 'next-i18next'\n\nimport { Paper, Link } from '@material-ui/core';\nimport { DataTable, CreateIcon, DeleteIcon, AppButton, DialogTag } from '@/components';\nimport immer from 'immer'; // import _ from 'lodash'\n\nimport { commonStore, drawingStore } from '@/store/reducers';\nimport { defaultTagInitDataForCE, defaultTagDetail } from '@/utils/defaultValues';\nimport { defaultProperties } from '@/utils/columnProperties'; // import getMessageConfirm from '@/utils/getMessageConfirm'\n\nvar TabTags = function TabTags() {\n  var classes = useStyles();\n\n  var _useGetData = useGetData('elements'),\n      getInitDataForCE = _useGetData.getInitDataForCE,\n      getGeneratedCode = _useGetData.getGeneratedCode,\n      getDetail = _useGetData.getDetail;\n\n  var _useGetData2 = useGetData('drawings'),\n      getDrawingDetail = _useGetData2.getDetail; // const { confirm } = useConfirm()\n  // const { t } = useTranslation('element')\n\n\n  var _useState = useState(false),\n      openDialog = _useState[0],\n      setOpenDialog = _useState[1];\n\n  var _useState2 = useState(defaultTagInitDataForCE),\n      initDataForCE = _useState2[0],\n      setInitDataForCE = _useState2[1];\n\n  var _useState3 = useState(defaultTagDetail),\n      tagDetail = _useState3[0],\n      setTagDetail = _useState3[1];\n\n  var _useState4 = useState([]),\n      selectedRows = _useState4[0],\n      setSelectedRows = _useState4[1];\n\n  var drawingForm = useFormContext();\n  var watchTagsList = drawingForm.watch('tag_list', []) || [];\n  var watchId = drawingForm.watch('id', null);\n  var watchDrawing_id = drawingForm.watch('drawing_id', '');\n  var dispatch = useDispatch();\n  var userJob = useSelector(commonStore.selectUserValueJob);\n  var userDrawing = useSelector(commonStore.selectUserValueDrawing);\n  useEffect(function () {\n    var schematicValue = userDrawing.value > 0 ? userDrawing : null;\n    setTagDetail(function (currentState) {\n      return immer(currentState, function (draft) {\n        draft.schematic_id = schematicValue;\n      });\n    });\n  }, [userDrawing]);\n  useEffect(function () {\n    setTagDetail(function (currentState) {\n      return immer(currentState, function (draft) {\n        draft.job_id = userJob.value;\n      });\n    });\n  }, [userJob]);\n\n  var handleSelectRows = function handleSelectRows(_ref) {\n    var selectionModel = _ref.selectionModel;\n    setSelectedRows(selectionModel);\n  };\n\n  var resetDetail = function resetDetail() {\n    setTagDetail(function (currentState) {\n      return immer(defaultTagDetail, function (draft) {\n        draft.schematic_id = currentState.schematic_id;\n        draft.job_id = currentState.job_id;\n      });\n    });\n  };\n\n  var handleCloseDialog = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$getDrawingDeta, tag_list;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setOpenDialog(false);\n              dispatch(drawingStore.actions.setDialogStateLoading(true));\n              _context.prev = 2;\n              _context.next = 5;\n              return getDrawingDetail(watchId);\n\n            case 5:\n              _yield$getDrawingDeta = _context.sent;\n              tag_list = _yield$getDrawingDeta.tag_list;\n              drawingForm.setValue('tag_list', tag_list);\n              resetDetail();\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n              console.error('error', '>>>', _context.t0);\n\n            case 14:\n              dispatch(drawingStore.actions.setDialogStateLoading(false));\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 11]]);\n    }));\n\n    return function handleCloseDialog() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var updateUserDrawing = function updateUserDrawing() {\n    dispatch(commonStore.actions.setUserValueDrawing({\n      entity_id: watchDrawing_id,\n      description: '',\n      value: watchId\n    }));\n  };\n\n  var handleOpenTagCreateDialog = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var resInitDataForCE, generatedCode;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              updateUserDrawing();\n              dispatch(commonStore.actions.setLoadingPage(true));\n              _context2.prev = 2;\n              _context2.next = 5;\n              return getInitDataForCE();\n\n            case 5:\n              resInitDataForCE = _context2.sent;\n              _context2.next = 8;\n              return getGeneratedCode({\n                drawing_id: watchId\n              });\n\n            case 8:\n              generatedCode = _context2.sent;\n              setInitDataForCE(resInitDataForCE);\n              setTagDetail(function (currentState) {\n                return immer(currentState, function (draft) {\n                  draft.element_id = generatedCode;\n                });\n              });\n              setOpenDialog(true);\n              _context2.next = 17;\n              break;\n\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.error('error', '>>>', _context2.t0);\n\n            case 17:\n              dispatch(commonStore.actions.setLoadingPage(false));\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 14]]);\n    }));\n\n    return function handleOpenTagCreateDialog() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleOpenTagUpdateDialog = function handleOpenTagUpdateDialog(id) {\n    return /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n        var resInitDataForCE, resDetail;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                event.preventDefault();\n                updateUserDrawing();\n                dispatch(commonStore.actions.setLoadingPage(true));\n                _context3.prev = 3;\n                _context3.next = 6;\n                return getInitDataForCE();\n\n              case 6:\n                resInitDataForCE = _context3.sent;\n                _context3.next = 9;\n                return getDetail(id);\n\n              case 9:\n                resDetail = _context3.sent;\n                setInitDataForCE(resInitDataForCE);\n                setTagDetail(immer(resDetail, function (draft) {\n                  draft.schematic_id = resDetail.related_schematic;\n                  draft.part_id = resDetail.related_part;\n                }));\n                setOpenDialog(true);\n                _context3.next = 18;\n                break;\n\n              case 15:\n                _context3.prev = 15;\n                _context3.t0 = _context3[\"catch\"](3);\n                console.error('error', '>>>', _context3.t0);\n\n              case 18:\n                dispatch(commonStore.actions.setLoadingPage(false));\n\n              case 19:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[3, 15]]);\n      }));\n\n      return function (_x) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n  }; // const handleRemoveTags = async () => {\n  //   const description = getMessageConfirm(t, 'element', selectedRows, 'delete')\n  //   const result = await confirm({ description })\n  //   if (result === 'OK') {\n  //     const tags: PayloadOperation[] = _.map(selectedRows, (partId) => {\n  //       const { element_id, id } = _.find(watchTagsList, { id: partId })\n  //       return { entity_id: element_id, id }\n  //     })\n  //     // dispatch(tagStore.sagaRemove(tags))\n  //   }\n  // }\n\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: classes.buttonGroupRoot,\n      children: [/*#__PURE__*/_jsx(AppButton, {\n        startIcon: /*#__PURE__*/_jsx(CreateIcon, {}),\n        onClick: handleOpenTagCreateDialog,\n        children: \"New\"\n      }), /*#__PURE__*/_jsx(AppButton, {\n        startIcon: /*#__PURE__*/_jsx(DeleteIcon, {}),\n        disabled: selectedRows.length === 0,\n        children: \"Remove\"\n      })]\n    }), /*#__PURE__*/_jsx(Paper, {\n      elevation: 1,\n      children: /*#__PURE__*/_jsx(DataTable, {\n        rows: watchTagsList,\n        checkboxSelection: true,\n        selectionModel: selectedRows,\n        onSelectionModelChange: handleSelectRows,\n        onCellClick: function onCellClick(params, event) {\n          if (['element_id'].includes(params.field)) {\n            event.stopPropagation();\n          }\n        },\n        columns: [_objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'element_id',\n          headerName: 'Element #',\n          flex: 0.15,\n          renderCell: function renderCell(params) {\n            var value = params.value,\n                id = params.id;\n            return /*#__PURE__*/_jsx(Link, {\n              href: \"#\",\n              onClick: handleOpenTagUpdateDialog(id),\n              children: value\n            });\n          }\n        }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'tag',\n          headerName: 'Tag #',\n          flex: 0.15\n        }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'related_part',\n          headerName: 'Part',\n          valueGetter: function valueGetter(params) {\n            return params.value.entity_id;\n          },\n          flex: 0.15\n        }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'description',\n          headerName: 'Description',\n          flex: 0.6\n        })],\n        hideFooter: true,\n        tableHeight: 385\n      })\n    }), /*#__PURE__*/_jsx(DialogTag, {\n      open: openDialog,\n      initData: initDataForCE,\n      detail: tagDetail,\n      onClose: handleCloseDialog\n    })]\n  });\n};\n\nexport default TabTags;","map":null,"metadata":{},"sourceType":"module"}