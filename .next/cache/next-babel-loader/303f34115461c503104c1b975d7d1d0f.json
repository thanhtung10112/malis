{"ast":null,"code":"import * as yup from 'yup';\nexport var regexSpecCharacters = '[!\"#$%&()*+,-./:;<=>?@[\\\\]^_`{|}~]';\nexport var regexes = ['[A-Z]', '[a-z]', '[0-9]', regexSpecCharacters];\n\nvar getPasswordYup = function getPasswordYup() {\n  var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Password';\n  return yup.string().required(\"\".concat(key, \" is required!\")).min(8, \"\".concat(key, \" valid length is from 8 to 30!\")).max(30, \"\".concat(key, \" valid length is from 8 to 30!\")).test('strength', \"\".concat(key, \" must follow the format: Must be min 8 chars, at least 3 properties out of: capital letters, lower case letters, special characters, numbers.\"), function (value) {\n    var passed = 0;\n    regexes.forEach(function (regex) {\n      var isMatch = new RegExp(regex).test(value);\n      isMatch && passed++;\n    });\n    return passed === regexes.length;\n  });\n};\n\nexport default getPasswordYup;","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/utils/getPasswordYup.ts"],"names":["yup","regexSpecCharacters","regexes","getPasswordYup","key","string","required","min","max","test","value","passed","forEach","regex","isMatch","RegExp","length"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAEA,OAAO,IAAMC,mBAAmB,GAAG,oCAA5B;AACP,OAAO,IAAMC,OAAO,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4BD,mBAA5B,CAAhB;;AAEP,IAAME,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAACC,GAAD,uEAAO,UAAP;AAAA,SACrBJ,GAAG,CACAK,MADH,GAEGC,QAFH,WAEeF,GAFf,oBAGGG,GAHH,CAGO,CAHP,YAGaH,GAHb,qCAIGI,GAJH,CAIO,EAJP,YAIcJ,GAJd,qCAKGK,IALH,CAMI,UANJ,YAOOL,GAPP,oJAQI,UAACM,KAAD,EAAW;AACT,QAAIC,MAAM,GAAG,CAAb;AACAT,IAAAA,OAAO,CAACU,OAAR,CAAgB,UAACC,KAAD,EAAW;AACzB,UAAMC,OAAO,GAAG,IAAIC,MAAJ,CAAWF,KAAX,EAAkBJ,IAAlB,CAAuBC,KAAvB,CAAhB;AACAI,MAAAA,OAAO,IAAIH,MAAM,EAAjB;AACD,KAHD;AAIA,WAAOA,MAAM,KAAKT,OAAO,CAACc,MAA1B;AACD,GAfL,CADqB;AAAA,CAAvB;;AAmBA,eAAeb,cAAf","sourcesContent":["import * as yup from 'yup'\n\nexport const regexSpecCharacters = '[!\"#$%&()*+,-./:;<=>?@[\\\\]^_`{|}~]'\nexport const regexes = ['[A-Z]', '[a-z]', '[0-9]', regexSpecCharacters]\n\nconst getPasswordYup = (key = 'Password') =>\n  yup\n    .string()\n    .required(`${key} is required!`)\n    .min(8, `${key} valid length is from 8 to 30!`)\n    .max(30, `${key} valid length is from 8 to 30!`)\n    .test(\n      'strength',\n      `${key} must follow the format: Must be min 8 chars, at least 3 properties out of: capital letters, lower case letters, special characters, numbers.`,\n      (value) => {\n        let passed = 0\n        regexes.forEach((regex) => {\n          const isMatch = new RegExp(regex).test(value)\n          isMatch && passed++\n        })\n        return passed === regexes.length\n      }\n    )\n\nexport default getPasswordYup\n"]},"metadata":{},"sourceType":"module"}