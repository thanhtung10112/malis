{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createAction, createSelector, createSlice } from '@reduxjs/toolkit';\nimport { actionTypes } from '@/utils/constant';\nexport var name = 'specification';\nexport var resetState = createAction(\"\".concat(name, \"/\").concat(actionTypes.RESET_STATE));\nexport var specificationDetail = {\n  job_id: null,\n  drawing_id: null,\n  descriptions: [],\n  spec_id: null,\n  additional_attributes: {}\n};\nvar initialState = {\n  initDataForList: {\n    jobs: [],\n    permissions: {\n      specification: null\n    },\n    wiki_page: '',\n    column_tooltips: {}\n  },\n  dataList: [],\n  dialogState: {\n    open: false,\n    loading: false,\n    tab: 0,\n    historyLogs: []\n  },\n  initDataForCE: {\n    parameters: {\n      PLLA: [],\n      SSAT: []\n    },\n    wiki_page: ''\n  },\n  detail: specificationDetail\n};\nvar specificationSlice = createSlice({\n  name: name,\n  initialState: initialState,\n  reducers: {\n    setInitDataForList: function setInitDataForList(state, _ref) {\n      var payload = _ref.payload;\n      state.initDataForList = payload;\n    },\n    setInitDataForCE: function setInitDataForCE(state, _ref2) {\n      var payload = _ref2.payload;\n      state.initDataForCE = payload;\n    },\n    setDataList: function setDataList(state, _ref3) {\n      var payload = _ref3.payload;\n      state.dataList = payload;\n    },\n    setHistoryLogs: function setHistoryLogs(state, _ref4) {\n      var payload = _ref4.payload;\n      state.dialogState.historyLogs = payload;\n    },\n    setDialogState: function setDialogState(state, _ref5) {\n      var payload = _ref5.payload;\n      state.dialogState = _objectSpread(_objectSpread({}, state.dialogState), payload);\n    },\n    setDialogStateOpen: function setDialogStateOpen(state, _ref6) {\n      var payload = _ref6.payload;\n      state.dialogState.open = payload;\n    },\n    setDialogStateLoading: function setDialogStateLoading(state, _ref7) {\n      var payload = _ref7.payload;\n      state.dialogState.loading = payload;\n    },\n    setDetail: function setDetail(state, _ref8) {\n      var payload = _ref8.payload;\n      state.detail = _objectSpread(_objectSpread({}, state.detail), payload);\n    },\n    resetDetail: function resetDetail(state, _ref9) {\n      var payload = _ref9.payload;\n      var userJob = payload.userJob;\n      state.detail = _objectSpread(_objectSpread({}, initialState.detail), {}, {\n        job_id: userJob.value\n      });\n    },\n    setDialogStateTab: function setDialogStateTab(state, _ref10) {\n      var payload = _ref10.payload;\n      state.dialogState.tab = payload;\n    }\n  },\n  extraReducers: _defineProperty({}, resetState.type, function () {\n    return initialState;\n  })\n});\nvar actions = specificationSlice.actions; // Saga actions\n\nexport { actions };\nexport var sagaGetList = createAction(\"\".concat(name, \"/\").concat(actionTypes.GET_LIST));\nexport var sagaOpenCreateDialog = createAction(\"\".concat(name, \"/\").concat(actionTypes.OPEN_CREATE_DIALOG));\nexport var sagaOpenUpdateDialog = createAction(\"\".concat(name, \"/\").concat(actionTypes.OPEN_UPDATE_DIALOG));\nexport var sagaCloseDialog = createAction(\"\".concat(name, \"/\").concat(actionTypes.CLOSE_DIALOG));\nexport var sagaChangeUserJob = createAction(\"\".concat(name, \"/\").concat(actionTypes.CHANGE_USER_JOB));\nexport var sagaChangeUserDrawing = createAction(\"\".concat(name, \"/\").concat(actionTypes.CHANGE_USER_DRAWING));\nexport var sagaGenerateCode = createAction(\"\".concat(name, \"/\").concat(actionTypes.GET_GENERATE_CODE));\nexport var sagaRemove = createAction(\"\".concat(name, \"/\").concat(actionTypes.REMOVE));\nexport var sagaUpdate = createAction(\"\".concat(name, \"/\").concat(actionTypes.UPDATE));\nexport var sagaCreate = createAction(\"\".concat(name, \"/\").concat(actionTypes.CREATE));\nexport var sagaOpenDrawingDialog = createAction(\"\".concat(name, \"/OPEN_DRAWING_DIALOG\")); // Selectors\n\nexport var selectState = function selectState(state) {\n  return state[name];\n};\nexport var selectInitDataForList = createSelector(selectState, function (state) {\n  return state.initDataForList;\n});\nexport var selectInitDataForCE = createSelector(selectState, function (state) {\n  return state.initDataForCE;\n});\nexport var selectPermissions = createSelector(selectState, function (state) {\n  return state.initDataForList.permissions.specification;\n});\nexport var selectDialogState = createSelector(selectState, function (state) {\n  return state.dialogState;\n});\nexport var selectParameters = createSelector(selectState, function (_ref11) {\n  var initDataForCE = _ref11.initDataForCE;\n  return initDataForCE.parameters;\n});\nexport var selectDetail = createSelector(selectState, function (state) {\n  return state.detail;\n});\nexport var selectDataList = createSelector(selectState, function (state) {\n  return state.dataList;\n});\nexport default specificationSlice;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/reducers/specification.reducer.ts"],"names":["createAction","createSelector","createSlice","actionTypes","name","resetState","RESET_STATE","specificationDetail","job_id","drawing_id","descriptions","spec_id","additional_attributes","initialState","initDataForList","jobs","permissions","specification","wiki_page","column_tooltips","dataList","dialogState","open","loading","tab","historyLogs","initDataForCE","parameters","PLLA","SSAT","detail","specificationSlice","reducers","setInitDataForList","state","payload","setInitDataForCE","setDataList","setHistoryLogs","setDialogState","setDialogStateOpen","setDialogStateLoading","setDetail","resetDetail","userJob","value","setDialogStateTab","extraReducers","type","actions","sagaGetList","GET_LIST","sagaOpenCreateDialog","OPEN_CREATE_DIALOG","sagaOpenUpdateDialog","OPEN_UPDATE_DIALOG","sagaCloseDialog","CLOSE_DIALOG","sagaChangeUserJob","CHANGE_USER_JOB","sagaChangeUserDrawing","CHANGE_USER_DRAWING","sagaGenerateCode","GET_GENERATE_CODE","sagaRemove","REMOVE","sagaUpdate","UPDATE","sagaCreate","CREATE","sagaOpenDrawingDialog","selectState","selectInitDataForList","selectInitDataForCE","selectPermissions","selectDialogState","selectParameters","selectDetail","selectDataList"],"mappings":"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","sourcesContent":["import { createAction, createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { actionTypes } from '@/utils/constant'\n\nimport type { RootReducerType } from './rootReducer'\nimport type { DataForDropdown, Entity, ParameterOption, PayloadOperation, HistoryLog } from '@/types/Common'\nimport type {\n  SpecificationInitDataForCE,\n  SpecificationInitDataForList,\n  SpecificationDetail\n} from '@/types/Specification'\n\nexport const name: Entity = 'specification'\nexport const resetState = createAction(`${name}/${actionTypes.RESET_STATE}`)\n\nexport const specificationDetail = {\n  job_id: null,\n  drawing_id: null,\n  descriptions: [],\n  spec_id: null,\n  additional_attributes: {}\n} as SpecificationDetail\n\nconst initialState = {\n  initDataForList: {\n    jobs: [],\n    permissions: {\n      specification: null\n    },\n    wiki_page: '',\n    column_tooltips: {}\n  } as SpecificationInitDataForList,\n  dataList: [],\n  dialogState: {\n    open: false,\n    loading: false,\n    tab: 0,\n    historyLogs: [] as HistoryLog[]\n  },\n  initDataForCE: {\n    parameters: {\n      PLLA: [],\n      SSAT: []\n    },\n    wiki_page: ''\n  } as SpecificationInitDataForCE,\n  detail: specificationDetail\n}\n\nconst specificationSlice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setInitDataForList(state, { payload }: PayloadAction<SpecificationInitDataForList>) {\n      state.initDataForList = payload\n    },\n    setInitDataForCE(state, { payload }: PayloadAction<SpecificationInitDataForCE>) {\n      state.initDataForCE = payload\n    },\n    setDataList(state, { payload }) {\n      state.dataList = payload\n    },\n    setHistoryLogs(state, { payload }: PayloadAction<HistoryLog[]>) {\n      state.dialogState.historyLogs = payload\n    },\n    setDialogState(state, { payload }) {\n      state.dialogState = { ...state.dialogState, ...payload }\n    },\n    setDialogStateOpen(state, { payload }: PayloadAction<boolean>) {\n      state.dialogState.open = payload\n    },\n    setDialogStateLoading(state, { payload }: PayloadAction<boolean>) {\n      state.dialogState.loading = payload\n    },\n    setDetail(state, { payload }) {\n      state.detail = {\n        ...state.detail,\n        ...payload\n      }\n    },\n    resetDetail(state, { payload }: PayloadAction<{ userJob: ParameterOption }>) {\n      const { userJob } = payload\n      state.detail = { ...initialState.detail, job_id: userJob.value }\n    },\n    setDialogStateTab(state, { payload }: PayloadAction<number>) {\n      state.dialogState.tab = payload\n    }\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState\n    }\n  }\n})\n\nexport const { actions } = specificationSlice\n\n// Saga actions\nexport const sagaGetList = createAction(`${name}/${actionTypes.GET_LIST}`)\nexport const sagaOpenCreateDialog = createAction(`${name}/${actionTypes.OPEN_CREATE_DIALOG}`)\nexport const sagaOpenUpdateDialog = createAction<number>(`${name}/${actionTypes.OPEN_UPDATE_DIALOG}`)\nexport const sagaCloseDialog = createAction(`${name}/${actionTypes.CLOSE_DIALOG}`)\nexport const sagaChangeUserJob = createAction<ParameterOption>(`${name}/${actionTypes.CHANGE_USER_JOB}`)\nexport const sagaChangeUserDrawing = createAction<DataForDropdown>(`${name}/${actionTypes.CHANGE_USER_DRAWING}`)\nexport const sagaGenerateCode = createAction<{ formData: SpecificationDetail; drawing: DataForDropdown }>(\n  `${name}/${actionTypes.GET_GENERATE_CODE}`\n)\nexport const sagaRemove = createAction<PayloadOperation[]>(`${name}/${actionTypes.REMOVE}`)\nexport const sagaUpdate = createAction<{ id: number; formData: SpecificationDetail }>(`${name}/${actionTypes.UPDATE}`)\nexport const sagaCreate = createAction<SpecificationDetail>(`${name}/${actionTypes.CREATE}`)\nexport const sagaOpenDrawingDialog = createAction<SpecificationDetail>(`${name}/OPEN_DRAWING_DIALOG`)\n\n// Selectors\nexport const selectState = (state: RootReducerType) => state[name]\nexport const selectInitDataForList = createSelector(selectState, (state) => state.initDataForList)\nexport const selectInitDataForCE = createSelector(selectState, (state) => state.initDataForCE)\nexport const selectPermissions = createSelector(selectState, (state) => state.initDataForList.permissions.specification)\nexport const selectDialogState = createSelector(selectState, (state) => state.dialogState)\nexport const selectParameters = createSelector(selectState, ({ initDataForCE }) => initDataForCE.parameters)\nexport const selectDetail = createSelector(selectState, (state) => state.detail)\nexport const selectDataList = createSelector(selectState, (state) => state.dataList)\n\nexport default specificationSlice\n"]},"metadata":{},"sourceType":"module"}