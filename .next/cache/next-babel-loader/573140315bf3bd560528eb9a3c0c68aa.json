{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Fersher\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\FormController\\\\Checkbox\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FormControlLabel, Checkbox } from '@material-ui/core';\nimport { useController } from 'react-hook-form';\nimport useStyles from './styles';\n\nfunction ControlledChecbox(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var control = props.control,\n      name = props.name,\n      rules = props.rules,\n      defaultValue = props.defaultValue,\n      color = props.color,\n      checkboxProps = _objectWithoutProperties(props, [\"control\", \"name\", \"rules\", \"defaultValue\", \"color\"]);\n\n  var _useController = useController({\n    name: name,\n    rules: rules,\n    defaultValue: defaultValue,\n    control: control\n  }),\n      _useController$field = _useController.field,\n      onChange = _useController$field.onChange,\n      value = _useController$field.value,\n      inputProps = _objectWithoutProperties(_useController$field, [\"onChange\", \"value\"]);\n\n  var onChangeCheckbox = function onChangeCheckbox(_, checked) {\n    onChange(checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormControlLabel, _objectSpread(_objectSpread({}, checkboxProps), {}, {\n    classes: {\n      label: classes.labelCheckbox\n    },\n    control: /*#__PURE__*/_jsxDEV(Checkbox, _objectSpread(_objectSpread({}, inputProps), {}, {\n      color: color,\n      classes: classes,\n      checked: value,\n      onChange: onChangeCheckbox\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ControlledChecbox, \"F9ByJswrpjuPZ9u4xrSS9iKC/7Q=\", false, function () {\n  return [useStyles, useController];\n});\n\n_c = ControlledChecbox;\nControlledChecbox.defaultProps = {\n  color: 'primary'\n};\nexport default ControlledChecbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlledChecbox\");","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/components/FormController/Checkbox/index.tsx"],"names":["FormControlLabel","Checkbox","useController","useStyles","ControlledChecbox","props","classes","control","name","rules","defaultValue","color","checkboxProps","field","onChange","value","inputProps","onChangeCheckbox","_","checked","label","labelCheckbox","defaultProps"],"mappings":";;;;;;;;;;;AAAA,SAASA,gBAAT,EAA2BC,QAA3B,QAA2C,mBAA3C;AAEA,SAASC,aAAT,QAA8B,iBAA9B;AAGA,OAAOC,SAAP,MAAsB,UAAtB;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAA2D;AAAA;;AACzD,MAAMC,OAAO,GAAGH,SAAS,EAAzB;;AADyD,MAEjDI,OAFiD,GAEeF,KAFf,CAEjDE,OAFiD;AAAA,MAExCC,IAFwC,GAEeH,KAFf,CAExCG,IAFwC;AAAA,MAElCC,KAFkC,GAEeJ,KAFf,CAElCI,KAFkC;AAAA,MAE3BC,YAF2B,GAEeL,KAFf,CAE3BK,YAF2B;AAAA,MAEbC,KAFa,GAEeN,KAFf,CAEbM,KAFa;AAAA,MAEHC,aAFG,4BAEeP,KAFf;;AAAA,uBAMrDH,aAAa,CAAC;AAChBM,IAAAA,IAAI,EAAJA,IADgB;AAEhBC,IAAAA,KAAK,EAALA,KAFgB;AAGhBC,IAAAA,YAAY,EAAZA,YAHgB;AAIhBH,IAAAA,OAAO,EAAPA;AAJgB,GAAD,CANwC;AAAA,4CAKvDM,KALuD;AAAA,MAK9CC,QAL8C,wBAK9CA,QAL8C;AAAA,MAKpCC,KALoC,wBAKpCA,KALoC;AAAA,MAK1BC,UAL0B;;AAazD,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD,EAAIC,OAAJ,EAAgB;AACvCL,IAAAA,QAAQ,CAACK,OAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,gBAAD,kCACMP,aADN;AAEE,IAAA,OAAO,EAAE;AAAEQ,MAAAA,KAAK,EAAEd,OAAO,CAACe;AAAjB,KAFX;AAGE,IAAA,OAAO,eAAE,QAAC,QAAD,kCAAcL,UAAd;AAA0B,MAAA,KAAK,EAAEL,KAAjC;AAAwC,MAAA,OAAO,EAAEL,OAAjD;AAA0D,MAAA,OAAO,EAAES,KAAnE;AAA0E,MAAA,QAAQ,EAAEE;AAApF;AAAA;AAAA;AAAA;AAAA;AAHX;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAxBQb,iB;UACSD,S,EAKZD,a;;;KANGE,iB;AA0BTA,iBAAiB,CAACkB,YAAlB,GAAiC;AAC/BX,EAAAA,KAAK,EAAE;AADwB,CAAjC;AAIA,eAAeP,iBAAf","sourcesContent":["import { FormControlLabel, Checkbox } from '@material-ui/core'\n\nimport { useController } from 'react-hook-form'\n\nimport { ControlledCheckboxProps } from './type'\nimport useStyles from './styles'\n\nfunction ControlledChecbox(props: ControlledCheckboxProps) {\n  const classes = useStyles()\n  const { control, name, rules, defaultValue, color, ...checkboxProps } = props\n\n  const {\n    field: { onChange, value, ...inputProps }\n  } = useController({\n    name,\n    rules,\n    defaultValue,\n    control\n  })\n\n  const onChangeCheckbox = (_, checked) => {\n    onChange(checked)\n  }\n\n  return (\n    <FormControlLabel\n      {...checkboxProps}\n      classes={{ label: classes.labelCheckbox }}\n      control={<Checkbox {...inputProps} color={color} classes={classes} checked={value} onChange={onChangeCheckbox} />}\n    />\n  )\n}\n\nControlledChecbox.defaultProps = {\n  color: 'primary'\n}\n\nexport default ControlledChecbox\n"]},"metadata":{},"sourceType":"module"}