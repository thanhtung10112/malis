{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useStyles from '@/styles/page/layout';\nimport { useTranslation } from 'next-i18next';\nimport useGetData from '@/hooks/useGetData';\nimport { Link } from '@material-ui/core';\nimport { AppLayout, EditIcon, CreateIcon, AppAutocompleteStyled, DeleteIcon, SaveIcon, MakeAListIcon, DialogTag, useConfirm, AppAutocompleteStyledAsync, DialogDrawingCreateEdit, DialogPart } from '@/components';\nimport _ from 'lodash';\nimport immer from 'immer';\nimport { tagStore, commonStore, drawingStore } from '@/store/reducers';\nimport { defaultProperties, iconColumn } from '@/utils/columnProperties';\nimport getMessageConfirm from '@/utils/getMessageConfirm';\nimport { defaultTagInitDataForCE, defaultTagDetail } from '@/utils/defaultValues';\n\nvar Specifications_Page = function Specifications_Page() {\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation('element'),\n      t = _useTranslation.t;\n\n  var _useConfirm = useConfirm(),\n      confirm = _useConfirm.confirm;\n\n  var _useGetData = useGetData('elements'),\n      getInitDataForCE = _useGetData.getInitDataForCE,\n      getGeneratedCode = _useGetData.getGeneratedCode,\n      getDetail = _useGetData.getDetail;\n\n  var _useState = useState(false),\n      openDialog = _useState[0],\n      setOpenDialog = _useState[1];\n\n  var _useState2 = useState(defaultTagInitDataForCE),\n      initDataForCE = _useState2[0],\n      setInitDataForCE = _useState2[1];\n\n  var _useState3 = useState(defaultTagDetail),\n      tagDetail = _useState3[0],\n      setTagDetail = _useState3[1];\n\n  var breadcrumbData = useMemo(function () {\n    return [{\n      label: 'Home',\n      href: '/'\n    }, {\n      label: 'Drawings',\n      href: '/drawings'\n    }, {\n      label: 'Tags Management',\n      href: '/tags'\n    }];\n  }, []);\n  var dispatch = useDispatch();\n  var permissions = useSelector(tagStore.selectPermissions);\n  var userJob = useSelector(commonStore.selectUserValueJob);\n\n  var _useSelector = useSelector(tagStore.selectInitDataForList),\n      wiki_page = _useSelector.wiki_page,\n      column_tooltips = _useSelector.column_tooltips,\n      jobOptions = _useSelector.jobs;\n\n  var selectedRows = useSelector(commonStore.selectSelectedRows);\n  var dataList = useSelector(tagStore.selectDataList);\n  var userDrawing = useSelector(commonStore.selectUserValueDrawing);\n  useEffect(function () {\n    return function () {\n      return dispatch(commonStore.actions.resetUserValue());\n    };\n  }, []);\n  useEffect(function () {\n    var schematicValue = userDrawing.value > 0 ? userDrawing : null;\n    setTagDetail(function (currentState) {\n      return immer(currentState, function (draft) {\n        draft.schematic_id = schematicValue;\n      });\n    });\n  }, [userDrawing]);\n  useEffect(function () {\n    setTagDetail(function (currentState) {\n      return immer(currentState, function (draft) {\n        draft.job_id = userJob.value;\n      });\n    });\n  }, [userJob]);\n\n  var resetDetail = function resetDetail() {\n    setTagDetail(function (currentState) {\n      return immer(defaultTagDetail, function (draft) {\n        draft.schematic_id = currentState.schematic_id;\n        draft.job_id = currentState.job_id;\n      });\n    });\n  };\n\n  var handleOpenCreateDialog = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var resInitDataForCE, generatedCode;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(commonStore.actions.setLoadingPage(true));\n              _context.prev = 1;\n              _context.next = 4;\n              return getInitDataForCE();\n\n            case 4:\n              resInitDataForCE = _context.sent;\n              setInitDataForCE(resInitDataForCE);\n\n              if (!(userDrawing.value > 0)) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 9;\n              return getGeneratedCode({\n                drawing_id: userDrawing.value\n              });\n\n            case 9:\n              generatedCode = _context.sent;\n              setTagDetail(function (currentState) {\n                return immer(currentState, function (draft) {\n                  draft.element_id = generatedCode;\n                });\n              });\n\n            case 11:\n              setOpenDialog(true);\n              _context.next = 17;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('error', '>>>', _context.t0);\n\n            case 17:\n              dispatch(commonStore.actions.setLoadingPage(false));\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 14]]);\n    }));\n\n    return function handleOpenCreateDialog() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleOpenUpdateDialog = function handleOpenUpdateDialog(id) {\n    return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var resInitDataForCE, resDetail;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch(commonStore.actions.setLoadingPage(true));\n              _context2.prev = 1;\n              _context2.next = 4;\n              return getInitDataForCE();\n\n            case 4:\n              resInitDataForCE = _context2.sent;\n              _context2.next = 7;\n              return getDetail(id);\n\n            case 7:\n              resDetail = _context2.sent;\n              setInitDataForCE(resInitDataForCE);\n              setTagDetail(immer(resDetail, function (draft) {\n                draft.schematic_id = resDetail.related_schematic;\n                draft.part_id = resDetail.related_part;\n              }));\n              setOpenDialog(true);\n              _context2.next = 16;\n              break;\n\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error('error', '>>>', _context2.t0);\n\n            case 16:\n              dispatch(commonStore.actions.setLoadingPage(false));\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 13]]);\n    }));\n  };\n\n  var handleChangeUserJob = function handleChangeUserJob(event, optionValue) {\n    dispatch(tagStore.sagaChangeUserJob(optionValue));\n  };\n\n  var handleChangeUserDrawing = function handleChangeUserDrawing(event, optionValue) {\n    dispatch(tagStore.sagaChangeUserDrawing(optionValue));\n  };\n\n  var handleDeleteTags = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var description, result, tags;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              description = getMessageConfirm(t, 'element', selectedRows, 'delete');\n              _context3.next = 3;\n              return confirm({\n                description: description\n              });\n\n            case 3:\n              result = _context3.sent;\n\n              if (result === 'OK') {\n                tags = _.map(selectedRows, function (partId) {\n                  var _$find = _.find(dataList, {\n                    id: partId\n                  }),\n                      schematic_id = _$find.schematic_id,\n                      id = _$find.id;\n\n                  return {\n                    entity_id: schematic_id,\n                    id: id\n                  };\n                });\n                dispatch(tagStore.sagaRemove(tags));\n              }\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleDeleteTags() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleOpenDrawingDialog = function handleOpenDrawingDialog(schematicId) {\n    return function () {\n      dispatch(drawingStore.sagaOpenUpdateDialog(schematicId));\n    };\n  };\n\n  var handleCloseDialog = function handleCloseDialog() {\n    setOpenDialog(false);\n    resetDetail();\n    dispatch(tagStore.sagaGetList());\n  };\n\n  var columns = useMemo(function () {\n    return [_objectSpread(_objectSpread(_objectSpread({}, defaultProperties), iconColumn), {}, {\n      description: column_tooltips.edit,\n      field: 'id',\n      headerName: 'Edit',\n      renderCell: function renderCell(params) {\n        return /*#__PURE__*/_jsx(EditIcon, {\n          onClick: handleOpenUpdateDialog(params.value)\n        });\n      }\n    }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n      description: column_tooltips.schematic_id,\n      field: 'schematic_id',\n      headerName: 'Schematic #',\n      flex: 0.15,\n      renderCell: function renderCell(params) {\n        var value = params.value,\n            row = params.row;\n        return /*#__PURE__*/_jsx(Link, {\n          href: \"#\",\n          onClick: handleOpenDrawingDialog(row.schematic_pk_id),\n          children: value\n        });\n      }\n    }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n      description: column_tooltips.tag,\n      field: 'tag',\n      headerName: 'Tag #',\n      flex: 0.15\n    }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n      description: column_tooltips.part_id,\n      field: 'part_id',\n      headerName: 'Part #',\n      flex: 0.2\n    }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n      description: column_tooltips.description,\n      headerName: 'Description',\n      flex: 0.6,\n      field: 'description'\n    }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n      description: column_tooltips.rfq_id,\n      field: 'rfq_id',\n      headerName: 'RFQ #',\n      width: 80\n    }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n      description: column_tooltips.rfo_id,\n      field: 'rfo_id',\n      headerName: 'RFO  #',\n      width: 80\n    }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n      description: column_tooltips.puco_id,\n      field: 'puco',\n      headerName: 'PuCo',\n      width: 80\n    }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n      description: column_tooltips.order_id,\n      field: 'order_id',\n      headerName: 'Order  #',\n      width: 120\n    }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n      description: column_tooltips.box_nr,\n      field: 'box_nr',\n      headerName: 'BoxNr',\n      width: 80\n    }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n      description: column_tooltips.cnt_nr,\n      field: 'cnt_nr',\n      headerName: 'CntNr',\n      width: 80\n    }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n      description: column_tooltips.package_id,\n      field: 'package_id',\n      headerName: 'Package #',\n      width: 80\n    })];\n  }, []);\n  var buttonsPage = [{\n    label: t('common:button.new'),\n    startIcon: /*#__PURE__*/_jsx(CreateIcon, {}),\n    onClick: handleOpenCreateDialog,\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.create) || userJob.value < 0 || !(userJob === null || userJob === void 0 ? void 0 : userJob.value)\n  }, {\n    label: t('common:button.save'),\n    startIcon: /*#__PURE__*/_jsx(SaveIcon, {}),\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.edit)\n  }, {\n    label: t('common:button.delete'),\n    startIcon: /*#__PURE__*/_jsx(DeleteIcon, {}),\n    onClick: handleDeleteTags,\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions[\"delete\"]) || selectedRows.length === 0\n  }, {\n    label: t('common:button.make_a_list'),\n    startIcon: /*#__PURE__*/_jsx(MakeAListIcon, {})\n  }];\n\n  var Dialogs = /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(DialogTag, {\n      open: openDialog,\n      initData: initDataForCE,\n      detail: tagDetail,\n      onClose: handleCloseDialog\n    }), /*#__PURE__*/_jsx(DialogDrawingCreateEdit, {}), /*#__PURE__*/_jsx(DialogPart, {})]\n  });\n\n  var Options = /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(AppAutocompleteStyled, {\n      className: classes.controlAutocomplete,\n      width: 200,\n      label: \"Jobs\",\n      options: jobOptions,\n      value: userJob,\n      renderOption: function renderOption(option) {\n        return option.description;\n      },\n      primaryKeyOption: \"value\",\n      onChange: handleChangeUserJob\n    }), /*#__PURE__*/_jsx(AppAutocompleteStyledAsync, {\n      disabled: !(userJob === null || userJob === void 0 ? void 0 : userJob.value),\n      width: 250,\n      label: \"Schematics\",\n      className: classes.controlAutocomplete,\n      compName: \"drawing_list\",\n      additionalData: {\n        limit_to_job: userJob.value,\n        include_all_drawings_option: true\n      },\n      onChange: handleChangeUserDrawing,\n      value: userDrawing,\n      defaultOptions: [commonStore.initialState.userValue.drawing]\n    })]\n  });\n\n  return /*#__PURE__*/_jsx(AppLayout, {\n    entity: \"element\",\n    breadcrumbs: breadcrumbData,\n    wikiPage: wiki_page,\n    searchProps: {\n      width: 320\n    },\n    buttons: buttonsPage,\n    permissions: permissions,\n    tableProps: {\n      columns: columns\n    },\n    Dialogs: Dialogs,\n    Options: Options\n  });\n};\n\nexport var __N_SSP = true;\nexport default Specifications_Page;","map":null,"metadata":{},"sourceType":"module"}