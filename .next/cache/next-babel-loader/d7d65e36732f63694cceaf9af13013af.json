{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { takeEvery, put } from 'redux-saga/effects';\nimport { call, select, all } from 'typed-redux-saga';\nimport immer from 'immer';\nimport _ from 'lodash';\nimport { budgetActions, commonStore, advancedFilterActions, summaryReportActions } from '@/store/reducers';\nimport commonApi from '@/apis/common';\nimport budgetApi from '@/apis/budget';\nimport * as errorSaga from '@/store/saga/errorSaga';\nexport function* fetchInitDataForList() {\n  const userPuco = yield* select(budgetActions.selectUserPuco);\n  const userJob = yield* select(budgetActions.selectUserJob);\n  const data = yield call(budgetApi.getInitDataForList, {\n    job_id_pk: userJob.value\n  });\n\n  if (_.isNull(data.selected_job)) {\n    ;\n    data.selected_job = {};\n  } // set all_value for all option\n\n\n  data.puco_list = immer(data.puco_list, draft => {\n    const index = _.findIndex(draft, item => _.isNull(item.value));\n\n    draft[index].value = 'all_value';\n  }); // if puco was selected, then set response.user_puco = current selected puco\n\n  if (!_.isNull(userPuco.value)) {\n    data.user_puco = userPuco;\n  }\n\n  yield put(budgetActions.setInitDataForList(data));\n}\nexport function* fetchInitDataForCreateEdit() {\n  const userJob = yield* select(budgetActions.selectUserJob);\n  const {\n    data\n  } = yield call(commonApi.getInitData, {\n    comp_name: 'create_edit_budget',\n    job_id_pk: userJob.value\n  });\n  yield put(budgetActions.setInitDataForCreateEdit(data));\n  yield put(budgetActions.setBudgetDetail({\n    job_id: userJob.value\n  }));\n}\n\nfunction* fetchList() {\n  var _userPuco;\n\n  // eslint-disable-next-line prefer-const\n  let {\n    tableState,\n    searchQuery,\n    filterData,\n    userJob,\n    userPuco\n  } = yield* all({\n    tableState: select(commonStore.selectTableState),\n    searchQuery: select(commonStore.selectSearchQuery),\n    filterData: select(advancedFilterActions.selectFilterData),\n    userJob: select(budgetActions.selectUserJob),\n    userPuco: select(budgetActions.selectUserPuco)\n  });\n\n  if (!userJob.value) {\n    return;\n  }\n\n  if (userPuco.value === 'all_value') {\n    userPuco = immer(userPuco, draft => {\n      draft.value = null;\n    });\n  }\n\n  const {\n    page,\n    per_page\n  } = tableState;\n  const data = yield call(budgetApi.getList, _objectSpread({\n    page,\n    per_page,\n    s: searchQuery,\n    job_id: userJob === null || userJob === void 0 ? void 0 : userJob.value,\n    puco_id: (_userPuco = userPuco) === null || _userPuco === void 0 ? void 0 : _userPuco.value\n  }, filterData));\n  yield put(budgetActions.setDataList(data.budgets));\n  yield put(commonStore.actions.setTableState({\n    total_items: data.total_items\n  }));\n  yield put(budgetActions.setBudgetSum(data.budgets_sum));\n  yield put(budgetActions.setPermissions(data.permissions));\n}\n\nfunction* fetchDetail(id) {\n  const {\n    budget\n  } = yield call(budgetApi.getDetail, id);\n  budget.amount = budget.amount.toString();\n  yield put(budgetActions.setBudgetDetail(budget));\n}\n\nfunction* getList() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchInitDataForList);\n    const permissions = yield* select(budgetActions.selectPermissions);\n\n    if (permissions === null || permissions === void 0 ? void 0 : permissions.view) {\n      yield call(fetchList);\n    }\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* changeUserValue({\n  payload\n}) {\n  try {\n    const {\n      value,\n      option,\n      confirm\n    } = payload;\n\n    if (confirm === 'save') {\n      yield put(commonStore.sagaUpdateMultiple({\n        entity: 'budget',\n        action: budgetActions.changeUserValue,\n        payloadAction: {\n          value,\n          option\n        }\n      }));\n    } else {\n      yield put(budgetActions.setUserValues({\n        value,\n        option\n      }));\n      yield call(getList);\n    }\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n}\n\nfunction* openCreateDialog() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchInitDataForCreateEdit);\n    yield put(budgetActions.setOpenDialog(true));\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* create({\n  payload\n}) {\n  yield put(budgetActions.setLoadingDialog(true));\n\n  try {\n    const {\n      message\n    } = yield call(budgetApi.create, payload);\n    yield put(commonStore.actions.setSuccessMessage(message));\n\n    const budgetDetail = _objectSpread(_objectSpread({}, budgetActions.budgetDetail), {}, {\n      job_id: payload.job_id\n    });\n\n    yield put(budgetActions.setBudgetDetail(budgetDetail));\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(budgetActions.setLoadingDialog(false));\n}\n\nfunction* openUpdateDialog({\n  payload\n}) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield all([call(fetchInitDataForCreateEdit), call(fetchDetail, payload)]);\n    yield put(budgetActions.setOpenDialog(true));\n    yield put(budgetActions.setEditMode(true));\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* update({\n  payload\n}) {\n  yield put(budgetActions.setLoadingDialog(true));\n\n  try {\n    const {\n      message\n    } = yield call(budgetApi.updateMultiple, [payload]);\n    yield put(commonStore.actions.setSuccessMessage(message));\n    yield call(closeDialog);\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(budgetActions.setLoadingDialog(false));\n}\n\nfunction* remove({\n  payload\n}) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    const data = yield call(budgetApi.executeOperation, 'delete', payload);\n\n    if (data.failed_count > 0) {\n      yield put(summaryReportActions.setReportData(data));\n      yield put(summaryReportActions.setOpen(true));\n    } else {\n      yield put(commonStore.actions.setSuccessMessage(data.message));\n    }\n\n    yield call(fetchList);\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* importCostCode({\n  payload\n}) {\n  yield put(budgetActions.setImportLoading(true));\n\n  try {\n    const {\n      data\n    } = yield* call(commonApi.startBackgroundJob, 'import_budget', payload.operationData, payload.file);\n    yield all([put(budgetActions.setCeleryId(data.celery_id)), put(budgetActions.setOperationId(data.operation_id)), put(budgetActions.setOpenImportProcess(true)), put(budgetActions.setImportMode(payload.mode))]);\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(budgetActions.setImportLoading(false));\n}\n\nfunction* sendReportMail({\n  payload\n}) {\n  yield put(budgetActions.setImportLoading(true));\n\n  try {\n    const {\n      data\n    } = yield call(commonApi.sendReportMail, payload);\n    yield put(commonStore.actions.setSuccessMessage(data.message));\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(budgetActions.setImportLoading(false));\n}\n\nfunction* getRemindData() {\n  yield put(budgetActions.setImportLoading(true));\n\n  try {\n    const userJob = yield* select(budgetActions.selectUserJob);\n    const remindData = yield* select(budgetActions.selectRemindData);\n\n    if (remindData.helpText) {\n      yield put(budgetActions.setRemindData({\n        open: true\n      }));\n    } else {\n      const {\n        data\n      } = yield call(commonApi.getInitData, {\n        comp_name: 'import_budget',\n        job_id_pk: userJob.value\n      });\n      yield put(budgetActions.setRemindData({\n        helpText: data.help_text,\n        open: true\n      }));\n    }\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(budgetActions.setImportLoading(false));\n}\n\nfunction* closeDialog() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield put(budgetActions.setOpenDialog(false));\n    yield call(fetchList);\n    yield put(budgetActions.setBudgetDetail(_objectSpread({}, budgetActions.budgetDetail)));\n    yield put(budgetActions.setEditMode(false));\n  } catch (error) {\n    yield errorSaga.handleError(error);\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* watchBudgetSaga() {\n  yield takeEvery(budgetActions.openCreateDialog, openCreateDialog);\n  yield takeEvery(budgetActions.closeDialog, closeDialog);\n  yield takeEvery(budgetActions.openUpdateDialog, openUpdateDialog);\n  yield takeEvery(budgetActions.getList, getList);\n  yield takeEvery(budgetActions.changeUserValue, changeUserValue);\n  yield takeEvery(budgetActions.create, create);\n  yield takeEvery(budgetActions.update, update);\n  yield takeEvery(budgetActions.remove, remove);\n  yield takeEvery(budgetActions.importCostCode, importCostCode);\n  yield takeEvery(budgetActions.sendReportMail, sendReportMail);\n  yield takeEvery(budgetActions.getRemindData, getRemindData);\n}\n\nexport default watchBudgetSaga;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/saga/budgetSaga.ts"],"names":["takeEvery","put","call","select","all","immer","_","budgetActions","commonStore","advancedFilterActions","summaryReportActions","commonApi","budgetApi","errorSaga","fetchInitDataForList","userPuco","selectUserPuco","userJob","selectUserJob","data","getInitDataForList","job_id_pk","value","isNull","selected_job","puco_list","draft","index","findIndex","item","user_puco","setInitDataForList","fetchInitDataForCreateEdit","getInitData","comp_name","setInitDataForCreateEdit","setBudgetDetail","job_id","fetchList","tableState","searchQuery","filterData","selectTableState","selectSearchQuery","selectFilterData","page","per_page","getList","s","puco_id","setDataList","budgets","actions","setTableState","total_items","setBudgetSum","budgets_sum","setPermissions","permissions","fetchDetail","id","budget","getDetail","amount","toString","setLoadingPage","selectPermissions","view","error","handleError","changeUserValue","payload","option","confirm","sagaUpdateMultiple","entity","action","payloadAction","setUserValues","openCreateDialog","setOpenDialog","create","setLoadingDialog","message","setSuccessMessage","budgetDetail","openUpdateDialog","setEditMode","update","updateMultiple","closeDialog","remove","executeOperation","failed_count","setReportData","setOpen","importCostCode","setImportLoading","startBackgroundJob","operationData","file","setCeleryId","celery_id","setOperationId","operation_id","setOpenImportProcess","setImportMode","mode","sendReportMail","getRemindData","remindData","selectRemindData","helpText","setRemindData","open","help_text","watchBudgetSaga"],"mappings":"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","sourcesContent":["import { takeEvery, put } from 'redux-saga/effects'\nimport { call, select, all } from 'typed-redux-saga'\nimport immer from 'immer'\nimport _ from 'lodash'\n\nimport { budgetActions, commonStore, advancedFilterActions, summaryReportActions } from '@/store/reducers'\nimport commonApi from '@/apis/common'\nimport budgetApi from '@/apis/budget'\n\nimport * as errorSaga from '@/store/saga/errorSaga'\n\nimport { GetBudgetInitDataForCreateEdit } from '@/types/Budget'\n\nexport function* fetchInitDataForList() {\n  const userPuco = yield* select(budgetActions.selectUserPuco)\n  const userJob = yield* select(budgetActions.selectUserJob)\n  const data = yield call(budgetApi.getInitDataForList, {\n    job_id_pk: userJob.value\n  })\n  if (_.isNull(data.selected_job)) {\n    ;(data as any).selected_job = {}\n  }\n  // set all_value for all option\n  data.puco_list = immer(data.puco_list, (draft) => {\n    const index = _.findIndex(draft, (item: any) => _.isNull(item.value))\n    draft[index].value = 'all_value'\n  })\n  // if puco was selected, then set response.user_puco = current selected puco\n  if (!_.isNull(userPuco.value)) {\n    data.user_puco = userPuco\n  }\n  yield put(budgetActions.setInitDataForList(data))\n}\n\nexport function* fetchInitDataForCreateEdit() {\n  const userJob = yield* select(budgetActions.selectUserJob)\n  const { data }: GetBudgetInitDataForCreateEdit = yield call(commonApi.getInitData, {\n    comp_name: 'create_edit_budget',\n    job_id_pk: userJob.value\n  })\n  yield put(budgetActions.setInitDataForCreateEdit(data))\n  yield put(budgetActions.setBudgetDetail({ job_id: userJob.value }))\n}\n\nfunction* fetchList() {\n  // eslint-disable-next-line prefer-const\n  let { tableState, searchQuery, filterData, userJob, userPuco } = yield* all({\n    tableState: select(commonStore.selectTableState),\n    searchQuery: select(commonStore.selectSearchQuery),\n    filterData: select(advancedFilterActions.selectFilterData),\n    userJob: select(budgetActions.selectUserJob),\n    userPuco: select(budgetActions.selectUserPuco)\n  })\n  if (!userJob.value) {\n    return\n  }\n  if ((userPuco as any).value === 'all_value') {\n    userPuco = immer(userPuco, (draft) => {\n      draft.value = null\n    })\n  }\n  const { page, per_page } = tableState\n  const data = yield call(budgetApi.getList, {\n    page,\n    per_page,\n    s: searchQuery,\n    job_id: userJob?.value,\n    puco_id: userPuco?.value,\n    ...filterData\n  })\n  yield put(budgetActions.setDataList(data.budgets))\n  yield put(commonStore.actions.setTableState({ total_items: data.total_items }))\n  yield put(budgetActions.setBudgetSum(data.budgets_sum))\n  yield put(budgetActions.setPermissions(data.permissions))\n}\n\nfunction* fetchDetail(id: number) {\n  const { budget } = yield call(budgetApi.getDetail, id)\n  budget.amount = budget.amount.toString() as any\n  yield put(budgetActions.setBudgetDetail(budget))\n}\n\nfunction* getList() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchInitDataForList)\n    const permissions = yield* select(budgetActions.selectPermissions)\n    if (permissions?.view) {\n      yield call(fetchList)\n    }\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* changeUserValue({ payload }) {\n  try {\n    const { value, option, confirm } = payload\n    if (confirm === 'save') {\n      yield put(\n        commonStore.sagaUpdateMultiple({\n          entity: 'budget',\n          action: budgetActions.changeUserValue,\n          payloadAction: { value, option }\n        })\n      )\n    } else {\n      yield put(budgetActions.setUserValues({ value, option }))\n      yield call(getList)\n    }\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n}\n\nfunction* openCreateDialog() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchInitDataForCreateEdit)\n    yield put(budgetActions.setOpenDialog(true))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* create({ payload }: ReturnType<typeof budgetActions.create>) {\n  yield put(budgetActions.setLoadingDialog(true))\n  try {\n    const { message } = yield call(budgetApi.create, payload)\n    yield put(commonStore.actions.setSuccessMessage(message))\n    const budgetDetail = {\n      ...budgetActions.budgetDetail,\n      job_id: payload.job_id\n    }\n    yield put(budgetActions.setBudgetDetail(budgetDetail))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(budgetActions.setLoadingDialog(false))\n}\n\nfunction* openUpdateDialog({ payload }: ReturnType<typeof budgetActions.openUpdateDialog>) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield all([call(fetchInitDataForCreateEdit), call(fetchDetail, payload)])\n    yield put(budgetActions.setOpenDialog(true))\n    yield put(budgetActions.setEditMode(true))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* update({ payload }: ReturnType<typeof budgetActions.update>) {\n  yield put(budgetActions.setLoadingDialog(true))\n  try {\n    const { message } = yield call(budgetApi.updateMultiple, [payload])\n    yield put(commonStore.actions.setSuccessMessage(message))\n    yield call(closeDialog)\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(budgetActions.setLoadingDialog(false))\n}\n\nfunction* remove({ payload }: ReturnType<typeof budgetActions.remove>) {\n  yield put(commonStore.actions.setLoadingPage(true))\n\n  try {\n    const data = yield call(budgetApi.executeOperation, 'delete', payload)\n    if (data.failed_count > 0) {\n      yield put(summaryReportActions.setReportData(data))\n      yield put(summaryReportActions.setOpen(true))\n    } else {\n      yield put(commonStore.actions.setSuccessMessage(data.message))\n    }\n    yield call(fetchList)\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* importCostCode({ payload }: ReturnType<typeof budgetActions.importCostCode>) {\n  yield put(budgetActions.setImportLoading(true))\n  try {\n    const { data } = yield* call(commonApi.startBackgroundJob, 'import_budget', payload.operationData, payload.file)\n    yield all([\n      put(budgetActions.setCeleryId(data.celery_id)),\n      put(budgetActions.setOperationId(data.operation_id)),\n      put(budgetActions.setOpenImportProcess(true)),\n      put(budgetActions.setImportMode(payload.mode))\n    ])\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(budgetActions.setImportLoading(false))\n}\n\nfunction* sendReportMail({ payload }: ReturnType<typeof budgetActions.sendReportMail>) {\n  yield put(budgetActions.setImportLoading(true))\n  try {\n    const { data } = yield call(commonApi.sendReportMail, payload)\n    yield put(commonStore.actions.setSuccessMessage(data.message))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(budgetActions.setImportLoading(false))\n}\n\nfunction* getRemindData() {\n  yield put(budgetActions.setImportLoading(true))\n  try {\n    const userJob = yield* select(budgetActions.selectUserJob)\n    const remindData = yield* select(budgetActions.selectRemindData)\n    if (remindData.helpText) {\n      yield put(budgetActions.setRemindData({ open: true }))\n    } else {\n      const { data } = yield call(commonApi.getInitData, {\n        comp_name: 'import_budget',\n        job_id_pk: userJob.value\n      })\n      yield put(budgetActions.setRemindData({ helpText: data.help_text, open: true }))\n    }\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n\n  yield put(budgetActions.setImportLoading(false))\n}\n\nfunction* closeDialog() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield put(budgetActions.setOpenDialog(false))\n    yield call(fetchList)\n    yield put(budgetActions.setBudgetDetail({ ...budgetActions.budgetDetail }))\n    yield put(budgetActions.setEditMode(false))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* watchBudgetSaga() {\n  yield takeEvery(budgetActions.openCreateDialog, openCreateDialog)\n  yield takeEvery(budgetActions.closeDialog, closeDialog)\n  yield takeEvery(budgetActions.openUpdateDialog, openUpdateDialog)\n  yield takeEvery(budgetActions.getList, getList)\n  yield takeEvery(budgetActions.changeUserValue, changeUserValue)\n  yield takeEvery(budgetActions.create, create)\n  yield takeEvery(budgetActions.update, update)\n  yield takeEvery(budgetActions.remove, remove)\n  yield takeEvery(budgetActions.importCostCode, importCostCode)\n  yield takeEvery(budgetActions.sendReportMail, sendReportMail)\n  yield takeEvery(budgetActions.getRemindData, getRemindData)\n}\n\nexport default watchBudgetSaga\n"]},"metadata":{},"sourceType":"module"}