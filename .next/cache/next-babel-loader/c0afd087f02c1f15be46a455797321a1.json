{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { takeEvery, put, takeLatest, putResolve } from 'redux-saga/effects';\nimport { call, select, all } from 'typed-redux-saga';\nimport immer from 'immer';\nimport Router from 'next/router';\nimport parameterApi from '@/apis/parameter.api';\nimport { parameterStore, advancedFilterActions, commonStore, summaryReportActions } from '@/store/reducers';\n\nfunction* fetchInitDataForList() {\n  const data = yield call(parameterApi.getInitDataForList);\n  yield put(parameterStore.actions.setInitDataForList(data));\n}\n\nfunction* fetchInitDataForCE() {\n  const {\n    param_type_id\n  } = Router.query;\n\n  const _yield$call = yield call(parameterApi.getInitDataForCE, {\n    param_type_id\n  }),\n        {\n    permissions\n  } = _yield$call,\n        response = _objectWithoutProperties(_yield$call, [\"permissions\"]);\n\n  yield all([put(parameterStore.actions.setPermissions(permissions)), put(parameterStore.actions.setInitDataForCE(response)), put(parameterStore.actions.setDetail({\n    parameter_type_id: param_type_id\n  }))]);\n}\n\nfunction* fetchList() {\n  const {\n    param_type_id\n  } = Router.query;\n  const {\n    tableState,\n    searchQuery,\n    filterData\n  } = yield* all({\n    tableState: select(commonStore.selectTableState),\n    searchQuery: select(commonStore.selectSearchQuery),\n    filterData: select(advancedFilterActions.selectFilterData)\n  });\n  const {\n    page,\n    per_page\n  } = tableState;\n  const data = yield call(parameterApi.getList, param_type_id, _objectSpread({\n    per_page,\n    page,\n    s: searchQuery\n  }, filterData));\n  yield all([put(commonStore.actions.setTableState({\n    total_items: data.total_items\n  })), put(parameterStore.actions.setData(data.parameters)), put(parameterStore.actions.setParameterType(data.parameter_type))]);\n}\n\nfunction* fetchDetail(id) {\n  const {\n    parameter\n  } = yield call(parameterApi.getDetail, id);\n  const {\n    is_multilingual\n  } = yield* select(parameterStore.selectInitDataForCE);\n  const formatParameter = immer(parameter, draft => {\n    if (is_multilingual) {\n      draft.descriptions = draft.multilingual_descriptions;\n      delete draft.multilingual_descriptions;\n    }\n  });\n  yield put(parameterStore.actions.setDetail(formatParameter));\n}\n\nfunction* getList() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchInitDataForList);\n    const viewPermission = yield* select(parameterStore.selectViewPermission);\n\n    if (viewPermission) {\n      yield call(fetchList);\n    }\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* openCreateDialog() {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchInitDataForCE);\n    yield put(parameterStore.actions.setDialogState({\n      open: true,\n      editMode: false\n    }));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* executeOperation({\n  payload\n}) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    const {\n      operation,\n      parameters\n    } = payload;\n    const data = yield call(parameterApi.executeOperation, operation, parameters);\n    yield call(fetchList);\n\n    if (data.failed_count > 0) {\n      yield put(summaryReportActions.setReportData(data));\n      yield put(summaryReportActions.setOpen(true));\n    } else {\n      yield put(commonStore.actions.setSuccessMessage(data.message));\n    }\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* closeDialog() {\n  try {\n    yield putResolve(parameterStore.actions.setDialogStateOpen(false));\n    yield call(getList);\n    yield all([put(parameterStore.actions.setDialogStateEditMode(false)), put(parameterStore.actions.resetLocationDetail())]);\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n}\n\nfunction* create({\n  payload\n}) {\n  yield put(parameterStore.actions.setDialogStateLoading(true));\n\n  try {\n    const {\n      message\n    } = yield call(parameterApi.create, payload);\n    yield put(commonStore.actions.setSuccessMessage(message));\n    yield put(parameterStore.actions.resetLocationDetail());\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(parameterStore.actions.setDialogStateLoading(false));\n}\n\nfunction* openUpdateDialog({\n  payload: id\n}) {\n  yield put(commonStore.actions.setLoadingPage(true));\n\n  try {\n    yield call(fetchInitDataForCE);\n    yield call(fetchDetail, id);\n    yield put(parameterStore.actions.setDialogState({\n      editMode: true,\n      open: true\n    }));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false));\n}\n\nfunction* update({\n  payload\n}) {\n  yield put(parameterStore.actions.setDialogStateLoading(true));\n\n  try {\n    const {\n      message\n    } = yield call(parameterApi.update, payload.id, payload.formData);\n    yield call(closeDialog);\n    yield put(commonStore.actions.setSuccessMessage(message));\n  } catch (error) {\n    yield put(commonStore.actions.setError(error));\n  }\n\n  yield put(parameterStore.actions.setDialogStateLoading(false));\n}\n\nfunction* parameterSaga() {\n  yield takeEvery(parameterStore.extraActions.getList, getList);\n  yield takeLatest(parameterStore.extraActions.executeOperation, executeOperation);\n  yield takeEvery(parameterStore.extraActions.openCreateDialog, openCreateDialog);\n  yield takeEvery(parameterStore.extraActions.closeDialog, closeDialog);\n  yield takeLatest(parameterStore.extraActions.create, create);\n  yield takeLatest(parameterStore.extraActions.openUpdateDialog, openUpdateDialog);\n  yield takeLatest(parameterStore.extraActions.update, update);\n}\n\nexport default parameterSaga;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/saga/parameter.saga.ts"],"names":["takeEvery","put","takeLatest","putResolve","call","select","all","immer","Router","parameterApi","parameterStore","advancedFilterActions","commonStore","summaryReportActions","fetchInitDataForList","data","getInitDataForList","actions","setInitDataForList","fetchInitDataForCE","param_type_id","query","getInitDataForCE","permissions","response","setPermissions","setInitDataForCE","setDetail","parameter_type_id","fetchList","tableState","searchQuery","filterData","selectTableState","selectSearchQuery","selectFilterData","page","per_page","getList","s","setTableState","total_items","setData","parameters","setParameterType","parameter_type","fetchDetail","id","parameter","getDetail","is_multilingual","selectInitDataForCE","formatParameter","draft","descriptions","multilingual_descriptions","setLoadingPage","viewPermission","selectViewPermission","error","setError","openCreateDialog","setDialogState","open","editMode","executeOperation","payload","operation","failed_count","setReportData","setOpen","setSuccessMessage","message","closeDialog","setDialogStateOpen","setDialogStateEditMode","resetLocationDetail","create","setDialogStateLoading","openUpdateDialog","update","formData","parameterSaga","extraActions"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,UAArC,QAAuD,oBAAvD;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,QAAkC,kBAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA,SAASC,cAAT,EAAyBC,qBAAzB,EAAgDC,WAAhD,EAA6DC,oBAA7D,QAAyF,kBAAzF;;AAEA,UAAUC,oBAAV,GAAiC;AAC/B,QAAMC,IAAI,GAAG,MAAMX,IAAI,CAACK,YAAY,CAACO,kBAAd,CAAvB;AACA,QAAMf,GAAG,CAACS,cAAc,CAACO,OAAf,CAAuBC,kBAAvB,CAA0CH,IAA1C,CAAD,CAAT;AACD;;AAED,UAAUI,kBAAV,GAA+B;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAoBZ,MAAM,CAACa,KAAjC;;AACA,sBAAqC,MAAMjB,IAAI,CAACK,YAAY,CAACa,gBAAd,EAAgC;AAC7EF,IAAAA;AAD6E,GAAhC,CAA/C;AAAA,QAAM;AAAEG,IAAAA;AAAF,GAAN;AAAA,QAAwBC,QAAxB;;AAGA,QAAMlB,GAAG,CAAC,CACRL,GAAG,CAACS,cAAc,CAACO,OAAf,CAAuBQ,cAAvB,CAAsCF,WAAtC,CAAD,CADK,EAERtB,GAAG,CAACS,cAAc,CAACO,OAAf,CAAuBS,gBAAvB,CAAwCF,QAAxC,CAAD,CAFK,EAGRvB,GAAG,CAACS,cAAc,CAACO,OAAf,CAAuBU,SAAvB,CAAiC;AAAEC,IAAAA,iBAAiB,EAAER;AAArB,GAAjC,CAAD,CAHK,CAAD,CAAT;AAKD;;AAED,UAAUS,SAAV,GAAsB;AACpB,QAAM;AAAET,IAAAA;AAAF,MAAoBZ,MAAM,CAACa,KAAjC;AACA,QAAM;AAAES,IAAAA,UAAF;AAAcC,IAAAA,WAAd;AAA2BC,IAAAA;AAA3B,MAA0C,OAAO1B,GAAG,CAAC;AACzDwB,IAAAA,UAAU,EAAEzB,MAAM,CAACO,WAAW,CAACqB,gBAAb,CADuC;AAEzDF,IAAAA,WAAW,EAAE1B,MAAM,CAACO,WAAW,CAACsB,iBAAb,CAFsC;AAGzDF,IAAAA,UAAU,EAAE3B,MAAM,CAACM,qBAAqB,CAACwB,gBAAvB;AAHuC,GAAD,CAA1D;AAKA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqBP,UAA3B;AACA,QAAMf,IAAI,GAAG,MAAMX,IAAI,CAACK,YAAY,CAAC6B,OAAd,EAAuBlB,aAAvB;AACrBiB,IAAAA,QADqB;AAErBD,IAAAA,IAFqB;AAGrBG,IAAAA,CAAC,EAAER;AAHkB,KAIlBC,UAJkB,EAAvB;AAMA,QAAM1B,GAAG,CAAC,CACRL,GAAG,CAACW,WAAW,CAACK,OAAZ,CAAoBuB,aAApB,CAAkC;AAAEC,IAAAA,WAAW,EAAE1B,IAAI,CAAC0B;AAApB,GAAlC,CAAD,CADK,EAERxC,GAAG,CAACS,cAAc,CAACO,OAAf,CAAuByB,OAAvB,CAA+B3B,IAAI,CAAC4B,UAApC,CAAD,CAFK,EAGR1C,GAAG,CAACS,cAAc,CAACO,OAAf,CAAuB2B,gBAAvB,CAAwC7B,IAAI,CAAC8B,cAA7C,CAAD,CAHK,CAAD,CAAT;AAKD;;AAED,UAAUC,WAAV,CAAsBC,EAAtB,EAAkC;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAgB,MAAM5C,IAAI,CAACK,YAAY,CAACwC,SAAd,EAAyBF,EAAzB,CAAhC;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAsB,OAAO7C,MAAM,CAACK,cAAc,CAACyC,mBAAhB,CAAzC;AACA,QAAMC,eAAe,GAAG7C,KAAK,CAACyC,SAAD,EAAaK,KAAD,IAAgB;AACvD,QAAIH,eAAJ,EAAqB;AACnBG,MAAAA,KAAK,CAACC,YAAN,GAAqBD,KAAK,CAACE,yBAA3B;AACA,aAAOF,KAAK,CAACE,yBAAb;AACD;AACF,GAL4B,CAA7B;AAMA,QAAMtD,GAAG,CAACS,cAAc,CAACO,OAAf,CAAuBU,SAAvB,CAAiCyB,eAAjC,CAAD,CAAT;AACD;;AAED,UAAUd,OAAV,GAAoB;AAClB,QAAMrC,GAAG,CAACW,WAAW,CAACK,OAAZ,CAAoBuC,cAApB,CAAmC,IAAnC,CAAD,CAAT;;AACA,MAAI;AACF,UAAMpD,IAAI,CAACU,oBAAD,CAAV;AACA,UAAM2C,cAAc,GAAG,OAAOpD,MAAM,CAACK,cAAc,CAACgD,oBAAhB,CAApC;;AACA,QAAID,cAAJ,EAAoB;AAClB,YAAMrD,IAAI,CAACyB,SAAD,CAAV;AACD;AACF,GAND,CAME,OAAO8B,KAAP,EAAc;AACd,UAAM1D,GAAG,CAACW,WAAW,CAACK,OAAZ,CAAoB2C,QAApB,CAA6BD,KAA7B,CAAD,CAAT;AACD;;AACD,QAAM1D,GAAG,CAACW,WAAW,CAACK,OAAZ,CAAoBuC,cAApB,CAAmC,KAAnC,CAAD,CAAT;AACD;;AAED,UAAUK,gBAAV,GAA6B;AAC3B,QAAM5D,GAAG,CAACW,WAAW,CAACK,OAAZ,CAAoBuC,cAApB,CAAmC,IAAnC,CAAD,CAAT;;AAEA,MAAI;AACF,UAAMpD,IAAI,CAACe,kBAAD,CAAV;AACA,UAAMlB,GAAG,CAACS,cAAc,CAACO,OAAf,CAAuB6C,cAAvB,CAAsC;AAAEC,MAAAA,IAAI,EAAE,IAAR;AAAcC,MAAAA,QAAQ,EAAE;AAAxB,KAAtC,CAAD,CAAT;AACD,GAHD,CAGE,OAAOL,KAAP,EAAc;AACd,UAAM1D,GAAG,CAACW,WAAW,CAACK,OAAZ,CAAoB2C,QAApB,CAA6BD,KAA7B,CAAD,CAAT;AACD;;AAED,QAAM1D,GAAG,CAACW,WAAW,CAACK,OAAZ,CAAoBuC,cAApB,CAAmC,KAAnC,CAAD,CAAT;AACD;;AAED,UAAUS,gBAAV,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAAwC;AACtC,QAAMjE,GAAG,CAACW,WAAW,CAACK,OAAZ,CAAoBuC,cAApB,CAAmC,IAAnC,CAAD,CAAT;;AACA,MAAI;AACF,UAAM;AAAEW,MAAAA,SAAF;AAAaxB,MAAAA;AAAb,QAA4BuB,OAAlC;AACA,UAAMnD,IAAI,GAAG,MAAMX,IAAI,CAACK,YAAY,CAACwD,gBAAd,EAAgCE,SAAhC,EAA2CxB,UAA3C,CAAvB;AACA,UAAMvC,IAAI,CAACyB,SAAD,CAAV;;AACA,QAAId,IAAI,CAACqD,YAAL,GAAoB,CAAxB,EAA2B;AACzB,YAAMnE,GAAG,CAACY,oBAAoB,CAACwD,aAArB,CAAmCtD,IAAnC,CAAD,CAAT;AACA,YAAMd,GAAG,CAACY,oBAAoB,CAACyD,OAArB,CAA6B,IAA7B,CAAD,CAAT;AACD,KAHD,MAGO;AACL,YAAMrE,GAAG,CAACW,WAAW,CAACK,OAAZ,CAAoBsD,iBAApB,CAAsCxD,IAAI,CAACyD,OAA3C,CAAD,CAAT;AACD;AACF,GAVD,CAUE,OAAOb,KAAP,EAAc;AACd,UAAM1D,GAAG,CAACW,WAAW,CAACK,OAAZ,CAAoB2C,QAApB,CAA6BD,KAA7B,CAAD,CAAT;AACD;;AACD,QAAM1D,GAAG,CAACW,WAAW,CAACK,OAAZ,CAAoBuC,cAApB,CAAmC,KAAnC,CAAD,CAAT;AACD;;AAED,UAAUiB,WAAV,GAAwB;AACtB,MAAI;AACF,UAAMtE,UAAU,CAACO,cAAc,CAACO,OAAf,CAAuByD,kBAAvB,CAA0C,KAA1C,CAAD,CAAhB;AACA,UAAMtE,IAAI,CAACkC,OAAD,CAAV;AACA,UAAMhC,GAAG,CAAC,CACRL,GAAG,CAACS,cAAc,CAACO,OAAf,CAAuB0D,sBAAvB,CAA8C,KAA9C,CAAD,CADK,EAER1E,GAAG,CAACS,cAAc,CAACO,OAAf,CAAuB2D,mBAAvB,EAAD,CAFK,CAAD,CAAT;AAID,GAPD,CAOE,OAAOjB,KAAP,EAAc;AACd,UAAM1D,GAAG,CAACW,WAAW,CAACK,OAAZ,CAAoB2C,QAApB,CAA6BD,KAA7B,CAAD,CAAT;AACD;AACF;;AAED,UAAUkB,MAAV,CAAiB;AAAEX,EAAAA;AAAF,CAAjB,EAA8B;AAC5B,QAAMjE,GAAG,CAACS,cAAc,CAACO,OAAf,CAAuB6D,qBAAvB,CAA6C,IAA7C,CAAD,CAAT;;AACA,MAAI;AACF,UAAM;AAAEN,MAAAA;AAAF,QAAc,MAAMpE,IAAI,CAACK,YAAY,CAACoE,MAAd,EAAsBX,OAAtB,CAA9B;AACA,UAAMjE,GAAG,CAACW,WAAW,CAACK,OAAZ,CAAoBsD,iBAApB,CAAsCC,OAAtC,CAAD,CAAT;AACA,UAAMvE,GAAG,CAACS,cAAc,CAACO,OAAf,CAAuB2D,mBAAvB,EAAD,CAAT;AACD,GAJD,CAIE,OAAOjB,KAAP,EAAc;AACd,UAAM1D,GAAG,CAACW,WAAW,CAACK,OAAZ,CAAoB2C,QAApB,CAA6BD,KAA7B,CAAD,CAAT;AACD;;AACD,QAAM1D,GAAG,CAACS,cAAc,CAACO,OAAf,CAAuB6D,qBAAvB,CAA6C,KAA7C,CAAD,CAAT;AACD;;AAED,UAAUC,gBAAV,CAA2B;AAAEb,EAAAA,OAAO,EAAEnB;AAAX,CAA3B,EAA4C;AAC1C,QAAM9C,GAAG,CAACW,WAAW,CAACK,OAAZ,CAAoBuC,cAApB,CAAmC,IAAnC,CAAD,CAAT;;AAEA,MAAI;AACF,UAAMpD,IAAI,CAACe,kBAAD,CAAV;AACA,UAAMf,IAAI,CAAC0C,WAAD,EAAcC,EAAd,CAAV;AACA,UAAM9C,GAAG,CAACS,cAAc,CAACO,OAAf,CAAuB6C,cAAvB,CAAsC;AAAEE,MAAAA,QAAQ,EAAE,IAAZ;AAAkBD,MAAAA,IAAI,EAAE;AAAxB,KAAtC,CAAD,CAAT;AACD,GAJD,CAIE,OAAOJ,KAAP,EAAc;AACd,UAAM1D,GAAG,CAACW,WAAW,CAACK,OAAZ,CAAoB2C,QAApB,CAA6BD,KAA7B,CAAD,CAAT;AACD;;AAED,QAAM1D,GAAG,CAACW,WAAW,CAACK,OAAZ,CAAoBuC,cAApB,CAAmC,KAAnC,CAAD,CAAT;AACD;;AAED,UAAUwB,MAAV,CAAiB;AAAEd,EAAAA;AAAF,CAAjB,EAA8B;AAC5B,QAAMjE,GAAG,CAACS,cAAc,CAACO,OAAf,CAAuB6D,qBAAvB,CAA6C,IAA7C,CAAD,CAAT;;AAEA,MAAI;AACF,UAAM;AAAEN,MAAAA;AAAF,QAAc,MAAMpE,IAAI,CAACK,YAAY,CAACuE,MAAd,EAAsBd,OAAO,CAACnB,EAA9B,EAAkCmB,OAAO,CAACe,QAA1C,CAA9B;AACA,UAAM7E,IAAI,CAACqE,WAAD,CAAV;AACA,UAAMxE,GAAG,CAACW,WAAW,CAACK,OAAZ,CAAoBsD,iBAApB,CAAsCC,OAAtC,CAAD,CAAT;AACD,GAJD,CAIE,OAAOb,KAAP,EAAc;AACd,UAAM1D,GAAG,CAACW,WAAW,CAACK,OAAZ,CAAoB2C,QAApB,CAA6BD,KAA7B,CAAD,CAAT;AACD;;AAED,QAAM1D,GAAG,CAACS,cAAc,CAACO,OAAf,CAAuB6D,qBAAvB,CAA6C,KAA7C,CAAD,CAAT;AACD;;AAED,UAAUI,aAAV,GAA0B;AACxB,QAAMlF,SAAS,CAACU,cAAc,CAACyE,YAAf,CAA4B7C,OAA7B,EAAsCA,OAAtC,CAAf;AACA,QAAMpC,UAAU,CAACQ,cAAc,CAACyE,YAAf,CAA4BlB,gBAA7B,EAA+CA,gBAA/C,CAAhB;AACA,QAAMjE,SAAS,CAACU,cAAc,CAACyE,YAAf,CAA4BtB,gBAA7B,EAA+CA,gBAA/C,CAAf;AACA,QAAM7D,SAAS,CAACU,cAAc,CAACyE,YAAf,CAA4BV,WAA7B,EAA0CA,WAA1C,CAAf;AACA,QAAMvE,UAAU,CAACQ,cAAc,CAACyE,YAAf,CAA4BN,MAA7B,EAAqCA,MAArC,CAAhB;AACA,QAAM3E,UAAU,CAACQ,cAAc,CAACyE,YAAf,CAA4BJ,gBAA7B,EAA+CA,gBAA/C,CAAhB;AACA,QAAM7E,UAAU,CAACQ,cAAc,CAACyE,YAAf,CAA4BH,MAA7B,EAAqCA,MAArC,CAAhB;AACD;;AAED,eAAeE,aAAf","sourcesContent":["import { takeEvery, put, takeLatest, putResolve } from 'redux-saga/effects'\nimport { call, select, all } from 'typed-redux-saga'\nimport immer from 'immer'\nimport Router from 'next/router'\n\nimport parameterApi from '@/apis/parameter.api'\n\nimport { parameterStore, advancedFilterActions, commonStore, summaryReportActions } from '@/store/reducers'\n\nfunction* fetchInitDataForList() {\n  const data = yield call(parameterApi.getInitDataForList)\n  yield put(parameterStore.actions.setInitDataForList(data))\n}\n\nfunction* fetchInitDataForCE() {\n  const { param_type_id } = Router.query\n  const { permissions, ...response } = yield call(parameterApi.getInitDataForCE, {\n    param_type_id\n  })\n  yield all([\n    put(parameterStore.actions.setPermissions(permissions)),\n    put(parameterStore.actions.setInitDataForCE(response)),\n    put(parameterStore.actions.setDetail({ parameter_type_id: param_type_id }))\n  ])\n}\n\nfunction* fetchList() {\n  const { param_type_id } = Router.query\n  const { tableState, searchQuery, filterData } = yield* all({\n    tableState: select(commonStore.selectTableState),\n    searchQuery: select(commonStore.selectSearchQuery),\n    filterData: select(advancedFilterActions.selectFilterData)\n  })\n  const { page, per_page } = tableState\n  const data = yield call(parameterApi.getList, param_type_id as string, {\n    per_page,\n    page,\n    s: searchQuery,\n    ...filterData\n  })\n  yield all([\n    put(commonStore.actions.setTableState({ total_items: data.total_items })),\n    put(parameterStore.actions.setData(data.parameters)),\n    put(parameterStore.actions.setParameterType(data.parameter_type))\n  ])\n}\n\nfunction* fetchDetail(id: number) {\n  const { parameter } = yield call(parameterApi.getDetail, id)\n  const { is_multilingual } = yield* select(parameterStore.selectInitDataForCE)\n  const formatParameter = immer(parameter, (draft: any) => {\n    if (is_multilingual) {\n      draft.descriptions = draft.multilingual_descriptions\n      delete draft.multilingual_descriptions\n    }\n  })\n  yield put(parameterStore.actions.setDetail(formatParameter))\n}\n\nfunction* getList() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchInitDataForList)\n    const viewPermission = yield* select(parameterStore.selectViewPermission)\n    if (viewPermission) {\n      yield call(fetchList)\n    }\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* openCreateDialog() {\n  yield put(commonStore.actions.setLoadingPage(true))\n\n  try {\n    yield call(fetchInitDataForCE)\n    yield put(parameterStore.actions.setDialogState({ open: true, editMode: false }))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* executeOperation({ payload }) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    const { operation, parameters } = payload\n    const data = yield call(parameterApi.executeOperation, operation, parameters)\n    yield call(fetchList)\n    if (data.failed_count > 0) {\n      yield put(summaryReportActions.setReportData(data))\n      yield put(summaryReportActions.setOpen(true))\n    } else {\n      yield put(commonStore.actions.setSuccessMessage(data.message))\n    }\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* closeDialog() {\n  try {\n    yield putResolve(parameterStore.actions.setDialogStateOpen(false))\n    yield call(getList)\n    yield all([\n      put(parameterStore.actions.setDialogStateEditMode(false)),\n      put(parameterStore.actions.resetLocationDetail())\n    ])\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n}\n\nfunction* create({ payload }) {\n  yield put(parameterStore.actions.setDialogStateLoading(true))\n  try {\n    const { message } = yield call(parameterApi.create, payload)\n    yield put(commonStore.actions.setSuccessMessage(message))\n    yield put(parameterStore.actions.resetLocationDetail())\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(parameterStore.actions.setDialogStateLoading(false))\n}\n\nfunction* openUpdateDialog({ payload: id }) {\n  yield put(commonStore.actions.setLoadingPage(true))\n\n  try {\n    yield call(fetchInitDataForCE)\n    yield call(fetchDetail, id)\n    yield put(parameterStore.actions.setDialogState({ editMode: true, open: true }))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* update({ payload }) {\n  yield put(parameterStore.actions.setDialogStateLoading(true))\n\n  try {\n    const { message } = yield call(parameterApi.update, payload.id, payload.formData)\n    yield call(closeDialog)\n    yield put(commonStore.actions.setSuccessMessage(message))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n\n  yield put(parameterStore.actions.setDialogStateLoading(false))\n}\n\nfunction* parameterSaga() {\n  yield takeEvery(parameterStore.extraActions.getList, getList)\n  yield takeLatest(parameterStore.extraActions.executeOperation, executeOperation)\n  yield takeEvery(parameterStore.extraActions.openCreateDialog, openCreateDialog)\n  yield takeEvery(parameterStore.extraActions.closeDialog, closeDialog)\n  yield takeLatest(parameterStore.extraActions.create, create)\n  yield takeLatest(parameterStore.extraActions.openUpdateDialog, openUpdateDialog)\n  yield takeLatest(parameterStore.extraActions.update, update)\n}\n\nexport default parameterSaga\n"]},"metadata":{},"sourceType":"module"}