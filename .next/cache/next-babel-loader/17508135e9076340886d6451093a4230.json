{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchInitDataForList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchInitDataForCE),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(fetchList),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(getEquivalenceList),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(fetchDetail),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(openEquivCreateDialog),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(createEquiv),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(closeEquivDialog),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(openEquivUpdateDialog),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(updateEquiv),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(getNextEquivCode),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(equivalenceSaga);\n\nimport { takeEvery, put, call, takeLatest } from 'redux-saga/effects';\nimport { select, all } from 'typed-redux-saga';\nimport { commonStore, advancedFilterActions, equivalenceStore } from '@/store/reducers';\nimport equivalenceApi from '@/apis/equivalence.api';\nimport * as errorSaga from '@/store/saga/errorSaga';\n\nfunction fetchInitDataForList() {\n  var data;\n  return _regeneratorRuntime.wrap(function fetchInitDataForList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return call(equivalenceApi.getInitDataForList);\n\n        case 2:\n          data = _context.sent;\n          _context.next = 5;\n          return put(equivalenceStore.actions.setInitDataForList(data));\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction fetchInitDataForCE() {\n  var equivalenceType, data;\n  return _regeneratorRuntime.wrap(function fetchInitDataForCE$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.delegateYield(select(equivalenceStore.selectEquivalenceType), \"t0\", 1);\n\n        case 1:\n          equivalenceType = _context2.t0;\n          _context2.next = 4;\n          return call(equivalenceApi.getInitDataForCE, {\n            equivalence_type: equivalenceType\n          });\n\n        case 4:\n          data = _context2.sent;\n          _context2.next = 7;\n          return put(equivalenceStore.actions.setInitDataForCE(data));\n\n        case 7:\n          _context2.next = 9;\n          return put(equivalenceStore.actions.setDetail({\n            equiv_id: data.next_code\n          }));\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction fetchList() {\n  var equivalenceType, _yield$all, tableState, searchQuery, filterData, page, per_page, _yield$call, equivalences;\n\n  return _regeneratorRuntime.wrap(function fetchList$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.delegateYield(select(equivalenceStore.selectEquivalenceType), \"t0\", 1);\n\n        case 1:\n          equivalenceType = _context3.t0;\n          return _context3.delegateYield(all({\n            tableState: select(commonStore.selectTableState),\n            searchQuery: select(commonStore.selectSearchQuery),\n            filterData: select(advancedFilterActions.selectFilterData)\n          }), \"t1\", 3);\n\n        case 3:\n          _yield$all = _context3.t1;\n          tableState = _yield$all.tableState;\n          searchQuery = _yield$all.searchQuery;\n          filterData = _yield$all.filterData;\n          page = tableState.page, per_page = tableState.per_page;\n          _context3.next = 10;\n          return call(equivalenceApi.getList, equivalenceType, _objectSpread({\n            per_page: per_page,\n            page: page,\n            s: searchQuery\n          }, filterData));\n\n        case 10:\n          _yield$call = _context3.sent;\n          equivalences = _yield$call.equivalences;\n          _context3.next = 14;\n          return put(commonStore.actions.setTableState({\n            total_items: equivalences.length\n          }));\n\n        case 14:\n          _context3.next = 16;\n          return put(equivalenceStore.actions.setDataList(equivalences));\n\n        case 16:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction getEquivalenceList() {\n  var permissions;\n  return _regeneratorRuntime.wrap(function getEquivalenceList$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 2:\n          _context4.prev = 2;\n          _context4.next = 5;\n          return call(fetchInitDataForList);\n\n        case 5:\n          return _context4.delegateYield(select(equivalenceStore.selectPermissions), \"t0\", 6);\n\n        case 6:\n          permissions = _context4.t0;\n\n          if (!(permissions === null || permissions === void 0 ? void 0 : permissions.view)) {\n            _context4.next = 10;\n            break;\n          }\n\n          _context4.next = 10;\n          return call(fetchList);\n\n        case 10:\n          _context4.next = 16;\n          break;\n\n        case 12:\n          _context4.prev = 12;\n          _context4.t1 = _context4[\"catch\"](2);\n          _context4.next = 16;\n          return errorSaga.handleError(_context4.t1);\n\n        case 16:\n          _context4.next = 18;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 18:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[2, 12]]);\n}\n\nfunction fetchDetail(id) {\n  var _yield$call2, equivalence;\n\n  return _regeneratorRuntime.wrap(function fetchDetail$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return call(equivalenceApi.getDetail, id);\n\n        case 2:\n          _yield$call2 = _context5.sent;\n          equivalence = _yield$call2.equivalence;\n          _context5.next = 6;\n          return put(equivalenceStore.actions.setDetail(equivalence));\n\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction openEquivCreateDialog() {\n  return _regeneratorRuntime.wrap(function openEquivCreateDialog$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 2:\n          _context6.prev = 2;\n          _context6.next = 5;\n          return call(fetchInitDataForCE);\n\n        case 5:\n          _context6.next = 7;\n          return put(equivalenceStore.actions.setDialogStateOpen(true));\n\n        case 7:\n          _context6.next = 13;\n          break;\n\n        case 9:\n          _context6.prev = 9;\n          _context6.t0 = _context6[\"catch\"](2);\n          _context6.next = 13;\n          return errorSaga.handleError(_context6.t0);\n\n        case 13:\n          _context6.next = 15;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 15:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[2, 9]]);\n}\n\nfunction createEquiv(_ref) {\n  var payload, equivalenceType, _yield$call3, message, _yield$call4, generated_code;\n\n  return _regeneratorRuntime.wrap(function createEquiv$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          payload = _ref.payload;\n          _context7.next = 3;\n          return put(equivalenceStore.actions.setDialogStateLoading(true));\n\n        case 3:\n          _context7.prev = 3;\n          return _context7.delegateYield(select(equivalenceStore.selectEquivalenceType), \"t0\", 5);\n\n        case 5:\n          equivalenceType = _context7.t0;\n          _context7.next = 8;\n          return call(equivalenceApi.create, payload);\n\n        case 8:\n          _yield$call3 = _context7.sent;\n          message = _yield$call3.message;\n          _context7.next = 12;\n          return call(equivalenceApi.getNextCode, equivalenceType, null);\n\n        case 12:\n          _yield$call4 = _context7.sent;\n          generated_code = _yield$call4.generated_code;\n          _context7.next = 16;\n          return put(commonStore.actions.setSuccessMessage(message));\n\n        case 16:\n          _context7.next = 18;\n          return put(equivalenceStore.actions.setDetail(_objectSpread(_objectSpread({}, equivalenceStore.equivalenceDetail), {}, {\n            equiv_id: generated_code\n          })));\n\n        case 18:\n          _context7.next = 24;\n          break;\n\n        case 20:\n          _context7.prev = 20;\n          _context7.t1 = _context7[\"catch\"](3);\n          _context7.next = 24;\n          return errorSaga.handleError(_context7.t1);\n\n        case 24:\n          _context7.next = 26;\n          return put(equivalenceStore.actions.setDialogStateLoading(false));\n\n        case 26:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[3, 20]]);\n}\n\nfunction closeEquivDialog() {\n  return _regeneratorRuntime.wrap(function closeEquivDialog$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return put(equivalenceStore.actions.setDialogStateOpen(false));\n\n        case 3:\n          _context8.next = 5;\n          return call(getEquivalenceList);\n\n        case 5:\n          _context8.next = 7;\n          return put(equivalenceStore.actions.resetDetail());\n\n        case 7:\n          _context8.next = 13;\n          break;\n\n        case 9:\n          _context8.prev = 9;\n          _context8.t0 = _context8[\"catch\"](0);\n          _context8.next = 13;\n          return errorSaga.handleError(_context8.t0);\n\n        case 13:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 9]]);\n}\n\nfunction openEquivUpdateDialog(_ref2) {\n  var id;\n  return _regeneratorRuntime.wrap(function openEquivUpdateDialog$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          id = _ref2.payload;\n          _context9.next = 3;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 3:\n          _context9.prev = 3;\n          _context9.next = 6;\n          return call(fetchInitDataForCE);\n\n        case 6:\n          _context9.next = 8;\n          return call(fetchDetail, id);\n\n        case 8:\n          _context9.next = 10;\n          return put(equivalenceStore.actions.setDialogState({\n            open: true,\n            editMode: true\n          }));\n\n        case 10:\n          _context9.next = 16;\n          break;\n\n        case 12:\n          _context9.prev = 12;\n          _context9.t0 = _context9[\"catch\"](3);\n          _context9.next = 16;\n          return errorSaga.handleError(_context9.t0);\n\n        case 16:\n          _context9.next = 18;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 18:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[3, 12]]);\n}\n\nfunction updateEquiv(_ref3) {\n  var payload, id, formData, _yield$call5, message;\n\n  return _regeneratorRuntime.wrap(function updateEquiv$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          payload = _ref3.payload;\n          _context10.next = 3;\n          return put(equivalenceStore.actions.setDialogStateLoading(true));\n\n        case 3:\n          _context10.prev = 3;\n          id = payload.id, formData = payload.formData;\n          _context10.next = 7;\n          return call(equivalenceApi.update, id, formData);\n\n        case 7:\n          _yield$call5 = _context10.sent;\n          message = _yield$call5.message;\n          _context10.next = 11;\n          return call(closeEquivDialog);\n\n        case 11:\n          _context10.next = 13;\n          return put(commonStore.actions.setSuccessMessage(message));\n\n        case 13:\n          _context10.next = 19;\n          break;\n\n        case 15:\n          _context10.prev = 15;\n          _context10.t0 = _context10[\"catch\"](3);\n          _context10.next = 19;\n          return errorSaga.handleError(_context10.t0);\n\n        case 19:\n          _context10.next = 21;\n          return put(equivalenceStore.actions.setDialogStateLoading(false));\n\n        case 21:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10, null, [[3, 15]]);\n}\n\nfunction getNextEquivCode(_ref4) {\n  var payload, equivalenceType, _yield$call6, generated_code;\n\n  return _regeneratorRuntime.wrap(function getNextEquivCode$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          payload = _ref4.payload;\n          _context11.next = 3;\n          return put(equivalenceStore.actions.setDialogStateLoading(true));\n\n        case 3:\n          _context11.prev = 3;\n          return _context11.delegateYield(select(equivalenceStore.selectEquivalenceType), \"t0\", 5);\n\n        case 5:\n          equivalenceType = _context11.t0;\n          _context11.next = 8;\n          return call(equivalenceApi.getNextCode, equivalenceType, payload.equiv_id);\n\n        case 8:\n          _yield$call6 = _context11.sent;\n          generated_code = _yield$call6.generated_code;\n          payload.equiv_id = generated_code;\n          _context11.next = 13;\n          return put(equivalenceStore.actions.setDetail(payload));\n\n        case 13:\n          _context11.next = 19;\n          break;\n\n        case 15:\n          _context11.prev = 15;\n          _context11.t1 = _context11[\"catch\"](3);\n          _context11.next = 19;\n          return errorSaga.handleError(_context11.t1);\n\n        case 19:\n          _context11.next = 21;\n          return put(equivalenceStore.actions.setDialogStateLoading(false));\n\n        case 21:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[3, 15]]);\n}\n\nfunction equivalenceSaga() {\n  return _regeneratorRuntime.wrap(function equivalenceSaga$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeEvery(equivalenceStore.sagaGetList, getEquivalenceList);\n\n        case 2:\n          _context12.next = 4;\n          return takeEvery(equivalenceStore.sagaCreate, createEquiv);\n\n        case 4:\n          _context12.next = 6;\n          return takeEvery(equivalenceStore.sagaOpenCreateDialog, openEquivCreateDialog);\n\n        case 6:\n          _context12.next = 8;\n          return takeEvery(equivalenceStore.sagaCloseDialog, closeEquivDialog);\n\n        case 8:\n          _context12.next = 10;\n          return takeEvery(equivalenceStore.sagaOpenUpdateDialog, openEquivUpdateDialog);\n\n        case 10:\n          _context12.next = 12;\n          return takeEvery(equivalenceStore.sagaUpdate, updateEquiv);\n\n        case 12:\n          _context12.next = 14;\n          return takeLatest(equivalenceStore.sagaGetNextCode, getNextEquivCode);\n\n        case 14:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nexport default equivalenceSaga;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/saga/equivalence.saga.ts"],"names":["fetchInitDataForList","fetchInitDataForCE","fetchList","getEquivalenceList","fetchDetail","openEquivCreateDialog","createEquiv","closeEquivDialog","openEquivUpdateDialog","updateEquiv","getNextEquivCode","equivalenceSaga","takeEvery","put","call","takeLatest","select","all","commonStore","advancedFilterActions","equivalenceStore","equivalenceApi","errorSaga","getInitDataForList","data","actions","setInitDataForList","selectEquivalenceType","equivalenceType","getInitDataForCE","equivalence_type","setInitDataForCE","setDetail","equiv_id","next_code","tableState","selectTableState","searchQuery","selectSearchQuery","filterData","selectFilterData","page","per_page","getList","s","equivalences","setTableState","total_items","length","setDataList","setLoadingPage","selectPermissions","permissions","view","handleError","id","getDetail","equivalence","setDialogStateOpen","payload","setDialogStateLoading","create","message","getNextCode","generated_code","setSuccessMessage","equivalenceDetail","resetDetail","setDialogState","open","editMode","formData","update","sagaGetList","sagaCreate","sagaOpenCreateDialog","sagaCloseDialog","sagaOpenUpdateDialog","sagaUpdate","sagaGetNextCode"],"mappings":"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","sourcesContent":["import { takeEvery, put, call, takeLatest } from 'redux-saga/effects'\nimport { select, all } from 'typed-redux-saga'\n\nimport { commonStore, advancedFilterActions, equivalenceStore } from '@/store/reducers'\n\nimport equivalenceApi from '@/apis/equivalence.api'\n\nimport * as errorSaga from '@/store/saga/errorSaga'\n\nfunction* fetchInitDataForList() {\n  const data = yield call(equivalenceApi.getInitDataForList)\n  yield put(equivalenceStore.actions.setInitDataForList(data))\n}\n\nfunction* fetchInitDataForCE() {\n  const equivalenceType = yield* select(equivalenceStore.selectEquivalenceType)\n  const data = yield call(equivalenceApi.getInitDataForCE, {\n    equivalence_type: equivalenceType\n  })\n  yield put(equivalenceStore.actions.setInitDataForCE(data))\n  yield put(equivalenceStore.actions.setDetail({ equiv_id: data.next_code }))\n}\n\nfunction* fetchList() {\n  const equivalenceType = yield* select(equivalenceStore.selectEquivalenceType)\n  const { tableState, searchQuery, filterData } = yield* all({\n    tableState: select(commonStore.selectTableState),\n    searchQuery: select(commonStore.selectSearchQuery),\n    filterData: select(advancedFilterActions.selectFilterData)\n  })\n  const { page, per_page } = tableState\n  const { equivalences } = yield call(equivalenceApi.getList, equivalenceType, {\n    per_page,\n    page,\n    s: searchQuery,\n    ...filterData\n  })\n  yield put(commonStore.actions.setTableState({ total_items: equivalences.length }))\n  yield put(equivalenceStore.actions.setDataList(equivalences))\n}\n\nfunction* getEquivalenceList() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchInitDataForList)\n    const permissions = yield* select(equivalenceStore.selectPermissions)\n    if (permissions?.view) {\n      yield call(fetchList)\n    }\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* fetchDetail(id: number) {\n  const { equivalence } = yield call(equivalenceApi.getDetail, id)\n  yield put(equivalenceStore.actions.setDetail(equivalence))\n}\n\nfunction* openEquivCreateDialog() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchInitDataForCE)\n    yield put(equivalenceStore.actions.setDialogStateOpen(true))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* createEquiv({ payload }: ReturnType<typeof equivalenceStore.sagaCreate>) {\n  yield put(equivalenceStore.actions.setDialogStateLoading(true))\n\n  try {\n    const equivalenceType = yield* select(equivalenceStore.selectEquivalenceType)\n    const { message } = yield call(equivalenceApi.create, payload)\n    const { generated_code } = yield call(equivalenceApi.getNextCode, equivalenceType, null)\n    yield put(commonStore.actions.setSuccessMessage(message))\n    yield put(\n      equivalenceStore.actions.setDetail({\n        ...equivalenceStore.equivalenceDetail,\n        equiv_id: generated_code\n      })\n    )\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(equivalenceStore.actions.setDialogStateLoading(false))\n}\n\nfunction* closeEquivDialog() {\n  try {\n    yield put(equivalenceStore.actions.setDialogStateOpen(false))\n    yield call(getEquivalenceList)\n    yield put(equivalenceStore.actions.resetDetail())\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n}\n\nfunction* openEquivUpdateDialog({ payload: id }: ReturnType<typeof equivalenceStore.sagaOpenUpdateDialog>) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchInitDataForCE)\n    yield call(fetchDetail, id)\n    yield put(equivalenceStore.actions.setDialogState({ open: true, editMode: true }))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nfunction* updateEquiv({ payload }: ReturnType<typeof equivalenceStore.sagaUpdate>) {\n  yield put(equivalenceStore.actions.setDialogStateLoading(true))\n  try {\n    const { id, formData } = payload\n    const { message } = yield call(equivalenceApi.update, id, formData)\n    yield call(closeEquivDialog)\n    yield put(commonStore.actions.setSuccessMessage(message))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(equivalenceStore.actions.setDialogStateLoading(false))\n}\n\nfunction* getNextEquivCode({ payload }: ReturnType<typeof equivalenceStore.sagaGetNextCode>) {\n  yield put(equivalenceStore.actions.setDialogStateLoading(true))\n  try {\n    const equivalenceType = yield* select(equivalenceStore.selectEquivalenceType)\n    const { generated_code } = yield call(equivalenceApi.getNextCode, equivalenceType, payload.equiv_id)\n    payload.equiv_id = generated_code\n    yield put(equivalenceStore.actions.setDetail(payload))\n  } catch (error) {\n    yield errorSaga.handleError(error)\n  }\n  yield put(equivalenceStore.actions.setDialogStateLoading(false))\n}\n\nfunction* equivalenceSaga() {\n  yield takeEvery(equivalenceStore.sagaGetList, getEquivalenceList)\n  yield takeEvery(equivalenceStore.sagaCreate, createEquiv)\n  yield takeEvery(equivalenceStore.sagaOpenCreateDialog, openEquivCreateDialog)\n  yield takeEvery(equivalenceStore.sagaCloseDialog, closeEquivDialog)\n  yield takeEvery(equivalenceStore.sagaOpenUpdateDialog, openEquivUpdateDialog)\n  yield takeEvery(equivalenceStore.sagaUpdate, updateEquiv)\n  yield takeLatest(equivalenceStore.sagaGetNextCode, getNextEquivCode)\n}\n\nexport default equivalenceSaga\n"]},"metadata":{},"sourceType":"module"}