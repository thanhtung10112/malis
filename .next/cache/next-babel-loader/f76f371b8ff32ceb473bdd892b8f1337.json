{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Fersher\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\App\\\\AutocompleteAsync\\\\index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Typography, Tooltip } from '@material-ui/core';\nimport { AppAutocomplete } from '@/components';\nimport _ from 'lodash';\nimport striptags from 'striptags';\nimport parseHTML from 'html-react-parser';\nimport isHTML from '@/utils/isHTML';\nimport HttpService from '@/helper/HttpService';\nimport { commonStore } from '@/store/reducers';\n\nvar AppAutocompleteAsync = function AppAutocompleteAsync(props) {\n  _s();\n\n  var compName = props.compName,\n      additionalData = props.additionalData,\n      onChange = props.onChange,\n      defaultOptions = props.defaultOptions,\n      autoCompleteProps = _objectWithoutProperties(props, [\"compName\", \"additionalData\", \"onChange\", \"defaultOptions\"]);\n\n  var httpService = new HttpService('');\n\n  var _useState = useState([]),\n      dataOptions = _useState[0],\n      setDataOptions = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(''),\n      valueInput = _useState3[0],\n      setValueInput = _useState3[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    setDataOptions(defaultOptions);\n  }, [defaultOptions]);\n\n  var getOptionLabel = function getOptionLabel(_ref) {\n    var description = _ref.description,\n        entity_id = _ref.entity_id;\n    return description ? \"\".concat(entity_id, \" - \").concat(description) : entity_id;\n  };\n\n  var renderOption = function renderOption(_ref2) {\n    var description = _ref2.description,\n        entity_id = _ref2.entity_id;\n\n    if (!description) {\n      return entity_id;\n    }\n\n    if (isHTML(description)) {\n      var htmlContent = parseHTML(_.toString(description));\n      var pureContent = striptags(description);\n      return /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: htmlContent,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          noWrap: true,\n          children: \"\".concat(entity_id, \" - \").concat(pureContent)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      noWrap: true,\n      children: \"\".concat(entity_id, \" - \").concat(description)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, _this);\n  };\n\n  var handleInputDropdown = function handleInputDropdown(event, value, reason) {\n    if (reason === 'input') {\n      setValueInput(value);\n      setDataOptions([]);\n    }\n  };\n\n  var handleKeypress = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(event.which === 13)) {\n                _context.next = 13;\n                break;\n              }\n\n              setLoading(true);\n              _context.prev = 2;\n              _context.next = 5;\n              return httpService.get('data_for_dd', {\n                comp_name: compName,\n                additional_data: JSON.stringify(additionalData),\n                s: valueInput\n              });\n\n            case 5:\n              data = _context.sent;\n              setDataOptions(data.data_for_dd);\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              dispatch(commonStore.actions.setError(_context.t0));\n\n            case 12:\n              setLoading(false);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 9]]);\n    }));\n\n    return function handleKeypress(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleSelectOption = function handleSelectOption(event, option, reason, details) {\n    onChange(event, option, reason, details);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppAutocomplete, _objectSpread({\n    loading: loading,\n    options: dataOptions,\n    onInputChange: handleInputDropdown,\n    renderOption: renderOption,\n    getOptionLabel: getOptionLabel,\n    onChange: handleSelectOption,\n    onKeyPress: handleKeypress\n  }, autoCompleteProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AppAutocompleteAsync, \"HRirIVJY4qgVbRkJJjA7tO/4Ls0=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AppAutocompleteAsync;\nAppAutocompleteAsync.defaultProps = {\n  additionalData: {},\n  defaultOptions: [],\n  disableClearable: true,\n  primaryKeyOption: 'value'\n};\nexport default AppAutocompleteAsync;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppAutocompleteAsync\");","map":{"version":3,"sources":["D:/Fersher/TTS_Reactjs/malis-3-frontend/src/components/App/AutocompleteAsync/index.tsx"],"names":["useState","useEffect","useDispatch","Typography","Tooltip","AppAutocomplete","_","striptags","parseHTML","isHTML","HttpService","commonStore","AppAutocompleteAsync","props","compName","additionalData","onChange","defaultOptions","autoCompleteProps","httpService","dataOptions","setDataOptions","loading","setLoading","valueInput","setValueInput","dispatch","getOptionLabel","description","entity_id","renderOption","htmlContent","toString","pureContent","handleInputDropdown","event","value","reason","handleKeypress","which","get","comp_name","additional_data","JSON","stringify","s","data","data_for_dd","actions","setError","handleSelectOption","option","details","defaultProps","disableClearable","primaryKeyOption"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { Typography, Tooltip } from '@material-ui/core'\nimport { AppAutocomplete } from '@/components'\n\nimport _ from 'lodash'\nimport striptags from 'striptags'\nimport parseHTML from 'html-react-parser'\nimport isHTML from '@/utils/isHTML'\nimport HttpService from '@/helper/HttpService'\nimport { commonStore } from '@/store/reducers'\n\nimport type { DataForDropdown } from '@/types/Common'\nimport type { AppAutocompleteAsyncProps } from './type'\n\nconst AppAutocompleteAsync: React.FC<AppAutocompleteAsyncProps> = (props) => {\n  const { compName, additionalData, onChange, defaultOptions, ...autoCompleteProps } = props\n\n  const httpService = new HttpService('')\n\n  const [dataOptions, setDataOptions] = useState<DataForDropdown[]>([])\n  const [loading, setLoading] = useState(false)\n  const [valueInput, setValueInput] = useState('')\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    setDataOptions(defaultOptions)\n  }, [defaultOptions])\n\n  const getOptionLabel = ({ description, entity_id }) => (description ? `${entity_id} - ${description}` : entity_id)\n\n  const renderOption = ({ description, entity_id }) => {\n    if (!description) {\n      return entity_id\n    }\n    if (isHTML(description)) {\n      const htmlContent = parseHTML(_.toString(description))\n      const pureContent = striptags(description)\n      return (\n        <Tooltip title={htmlContent}>\n          <Typography noWrap>{`${entity_id} - ${pureContent}`}</Typography>\n        </Tooltip>\n      )\n    }\n    return <Typography noWrap>{`${entity_id} - ${description}`}</Typography>\n  }\n\n  const handleInputDropdown = (event, value, reason) => {\n    if (reason === 'input') {\n      setValueInput(value)\n      setDataOptions([])\n    }\n  }\n\n  const handleKeypress = async (event) => {\n    if (event.which === 13) {\n      setLoading(true)\n      try {\n        const data: any = await httpService.get('data_for_dd', {\n          comp_name: compName,\n          additional_data: JSON.stringify(additionalData),\n          s: valueInput\n        })\n        setDataOptions(data.data_for_dd)\n      } catch (error) {\n        dispatch(commonStore.actions.setError(error))\n      }\n      setLoading(false)\n    }\n  }\n\n  const handleSelectOption = (event, option, reason, details) => {\n    onChange(event, option, reason, details)\n  }\n\n  return (\n    <AppAutocomplete\n      loading={loading}\n      options={dataOptions}\n      onInputChange={handleInputDropdown}\n      renderOption={renderOption}\n      getOptionLabel={getOptionLabel}\n      onChange={handleSelectOption}\n      onKeyPress={handleKeypress}\n      {...autoCompleteProps}\n    />\n  )\n}\n\nAppAutocompleteAsync.defaultProps = {\n  additionalData: {},\n  defaultOptions: [],\n  disableClearable: true,\n  primaryKeyOption: 'value'\n}\n\nexport default AppAutocompleteAsync\n"]},"metadata":{},"sourceType":"module"}