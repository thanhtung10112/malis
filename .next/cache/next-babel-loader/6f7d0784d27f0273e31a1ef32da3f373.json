{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { DialogMain } from '@/components/index';\nimport ConfirmContext from './ConfirmContext';\nimport { DEFAULT_OPTIONS } from './constant';\n\nvar buildOptions = function buildOptions(propsOptions, options) {\n  var dialogProps = _objectSpread(_objectSpread({}, propsOptions.dialogProps || DEFAULT_OPTIONS.dialogProps), options.dialogProps || {});\n\n  return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, DEFAULT_OPTIONS), propsOptions), options), {}, {\n    dialogProps: dialogProps\n  });\n};\n\nfunction ConfirmationProvider(props) {\n  var children = props.children,\n      propsOptions = props.propsOptions;\n\n  var _React$useState = React.useState(_objectSpread(_objectSpread({}, DEFAULT_OPTIONS), propsOptions)),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      options = _React$useState2[0],\n      setOptions = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      resolveReject = _React$useState4[0],\n      setResolveReject = _React$useState4[1];\n\n  var _resolveReject = _slicedToArray(resolveReject, 1),\n      resolve = _resolveReject[0];\n\n  var confirm = React.useCallback(function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return new Promise(function (resolve, reject) {\n      setOptions(buildOptions(propsOptions, options));\n      setResolveReject([resolve, reject]);\n    });\n  }, []);\n  var handleClose = React.useCallback(function () {\n    setResolveReject([]);\n  }, []);\n  var handleClickButton = React.useCallback(function (action) {\n    return function () {\n      resolve(action);\n      handleClose();\n    };\n  }, [resolve, handleClose]);\n  var mapButtonActions = options.buttons.map(function (_ref) {\n    var action = _ref.action,\n        buttonProps = _objectWithoutProperties(_ref, [\"action\"]);\n\n    return _objectSpread(_objectSpread({}, buttonProps), {}, {\n      onClick: handleClickButton(action)\n    });\n  });\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(ConfirmContext.Provider, {\n      value: {\n        confirm: confirm,\n        handleClose: handleClose\n      },\n      children: children\n    }), /*#__PURE__*/_jsx(DialogMain, _objectSpread(_objectSpread({}, options.dialogProps), {}, {\n      type: \"warning\",\n      open: resolveReject.length === 2,\n      title: options.title,\n      description: options.description,\n      extraButtons: mapButtonActions\n    }))]\n  });\n}\n\nConfirmationProvider.defaultProps = {\n  propsOptions: {}\n};\nexport default ConfirmationProvider;","map":null,"metadata":{},"sourceType":"module"}