{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { green, purple, red } from '@material-ui/core/colors';\nconst borderSection = {\n  border: '1px solid #e5e5e5',\n  borderRadius: '5px'\n};\n\nconst backgroundButton = (bgColor, color) => ({\n  backgroundColor: bgColor,\n  color\n});\n\nconst useStyles = makeStyles(theme => createStyles({\n  title: {\n    textAlign: 'center',\n    padding: theme.spacing(0, 1)\n  },\n  heading: {\n    textAlign: 'center'\n  },\n  button: {\n    marginTop: theme.spacing(1.5),\n    '& button': {\n      marginTop: theme.spacing(0.5),\n      width: '100%'\n    }\n  },\n  wrapButtonGroup: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginTop: theme.spacing(1.5)\n  },\n  sectionCriteria: _objectSpread({}, borderSection),\n  sectionGeneralInfor: _objectSpread(_objectSpread({}, borderSection), {}, {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2.5),\n    minHeight: 200,\n    maxHeight: 200,\n    overflow: 'hidden'\n  }),\n  setAsDefault: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  tabPanel: {\n    paddingLeft: theme.spacing(2),\n    maxHeight: 318,\n    minHeight: 318,\n    overflowY: 'auto',\n    overflowX: 'hidden'\n  },\n  dialogContent: {\n    padding: theme.spacing(0, 1),\n    overflow: 'hidden'\n  },\n  buttonAction: {\n    padding: theme.spacing(0.5, 1),\n    '&.disabled': {\n      opacity: 0.4\n    },\n    '&:not(:first-child)': {\n      marginLeft: theme.spacing(1)\n    },\n    '&.pdf': _objectSpread({}, backgroundButton(purple[500], 'white')),\n    '&.excel': _objectSpread({}, backgroundButton(green[500], 'white')),\n    '&.screen': _objectSpread({}, backgroundButton(red[500], 'white')),\n    [theme.breakpoints.down('md')]: {\n      fontSize: '12px !important'\n    }\n  },\n  generalInfo: {\n    margin: '10px 0',\n    padding: 20\n  },\n  nameColumn: {\n    width: 200\n  },\n  hidden: {\n    visibility: 'hidden'\n  },\n  wrapLeftTable: {\n    marginTop: 6\n  },\n  defaultPreset: {\n    fontSize: 14,\n    '& span': {\n      textDecoration: 'underline',\n      cursor: 'pointer'\n    }\n  } // wrapPresetDetail: {\n  //   marginTop: theme.spacing(2)\n  // }\n\n}));\nexport default useStyles;","map":null,"metadata":{},"sourceType":"module"}