{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Part\\\\Item\\\\TabStandard.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useDispatch } from 'react-redux';\nimport { useFormContext } from 'react-hook-form';\nimport { Box, Grid, Paper } from '@material-ui/core';\nimport { DataTable, AppAutocompleteAsync } from '@/components';\nimport * as columnProperties from '@/utils/columnProperties';\nimport { partStore } from '@/store/reducers';\nimport equivalenceApi from '@/apis/equivalence.api';\n\nvar TabStandard = function TabStandard() {\n  _s();\n\n  var dispatch = useDispatch();\n  var partForm = useFormContext();\n  var watchFormValue = partForm.watch();\n\n  var handleSelectEquivalence = function handleSelectEquivalence(type) {\n    return /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event, equiv) {\n        var _yield$equivalenceApi, standards, equivKey, standardKey;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch(partStore.actions.setPartLoading(true));\n                _context.prev = 1;\n                _context.next = 4;\n                return equivalenceApi.getEquivalenceStandards(equiv.value);\n\n              case 4:\n                _yield$equivalenceApi = _context.sent;\n                standards = _yield$equivalenceApi.standards;\n                equivKey = type === 'manufacturing_standard' ? 'manufacturer_equiv' : 'material_equiv';\n                standardKey = \"\".concat(equivKey, \"_standards\");\n                partForm.setValue(standardKey, standards);\n                partForm.setValue(equivKey, equiv);\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](1);\n                console.error('error', '>>>', _context.t0);\n\n              case 15:\n                dispatch(partStore.actions.setPartLoading(false));\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 12]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        marginBottom: 1.5,\n        children: /*#__PURE__*/_jsxDEV(AppAutocompleteAsync, {\n          disabled: Boolean(watchFormValue.reference_to),\n          compName: \"equivalence_list\",\n          additionalData: {\n            equiv_type: 'manufacturing_standard'\n          },\n          value: watchFormValue.manufacturer_equiv,\n          onChange: handleSelectEquivalence('manufacturing_standard'),\n          label: \"Manufacturing standard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 2,\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          tableHeight: 285,\n          hideFooter: true,\n          rows: watchFormValue.manufacturer_equiv_standards || [],\n          columns: [_objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n            field: 'organization',\n            headerName: 'Organization',\n            flex: 0.5\n          }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n            field: 'description',\n            headerName: 'Standard',\n            flex: 0.5\n          })]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        marginBottom: 1.5,\n        children: /*#__PURE__*/_jsxDEV(AppAutocompleteAsync, {\n          disabled: Boolean(watchFormValue.reference_to),\n          compName: \"equivalence_list\",\n          additionalData: {\n            equiv_type: 'material_standard'\n          },\n          value: watchFormValue.material_equiv,\n          onChange: handleSelectEquivalence('material_standard'),\n          label: \"Material standard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 2,\n        children: /*#__PURE__*/_jsxDEV(DataTable, {\n          hideFooter: true,\n          tableHeight: 285,\n          rows: watchFormValue.material_equiv_standards || [],\n          columns: [_objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n            field: 'organization',\n            headerName: 'Organization',\n            flex: 0.5\n          }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n            field: 'description',\n            headerName: 'Standard',\n            flex: 0.5\n          })]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TabStandard, \"7UKdRpCK8drRU0eUe8A3CFoduJM=\", false, function () {\n  return [useDispatch, useFormContext];\n});\n\n_c = TabStandard;\nexport default TabStandard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TabStandard\");","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Part/Item/TabStandard.tsx"],"names":["useDispatch","useFormContext","Box","Grid","Paper","DataTable","AppAutocompleteAsync","columnProperties","partStore","equivalenceApi","TabStandard","dispatch","partForm","watchFormValue","watch","handleSelectEquivalence","type","event","equiv","actions","setPartLoading","getEquivalenceStandards","value","standards","equivKey","standardKey","setValue","console","error","Boolean","reference_to","equiv_type","manufacturer_equiv","manufacturer_equiv_standards","defaultProperties","field","headerName","flex","material_equiv","material_equiv_standards"],"mappings":"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","sourcesContent":["import { useDispatch } from 'react-redux'\nimport { useFormContext } from 'react-hook-form'\n\nimport { Box, Grid, Paper } from '@material-ui/core'\nimport { DataTable, AppAutocompleteAsync } from '@/components'\n\nimport * as columnProperties from '@/utils/columnProperties'\nimport { partStore } from '@/store/reducers'\nimport equivalenceApi from '@/apis/equivalence.api'\n\nimport type { EquivalenceType } from '@/types/Equivalence'\nimport type { DataForDropdown } from '@/types/Common'\nimport type { ItemDetail } from '@/types/Item'\n\nconst TabStandard: React.FC = () => {\n  const dispatch = useDispatch()\n\n  const partForm = useFormContext<ItemDetail>()\n  const watchFormValue = partForm.watch()\n\n  const handleSelectEquivalence = (type: EquivalenceType) => async (event, equiv: DataForDropdown) => {\n    dispatch(partStore.actions.setPartLoading(true))\n    try {\n      const { standards } = await equivalenceApi.getEquivalenceStandards(equiv.value)\n      const equivKey = type === 'manufacturing_standard' ? 'manufacturer_equiv' : 'material_equiv'\n      const standardKey = `${equivKey}_standards`\n      partForm.setValue(standardKey, standards)\n      partForm.setValue(equivKey, equiv)\n    } catch (error) {\n      console.error('error', '>>>', error)\n    }\n    dispatch(partStore.actions.setPartLoading(false))\n  }\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={6}>\n        <Box marginBottom={1.5}>\n          <AppAutocompleteAsync\n            disabled={Boolean(watchFormValue.reference_to)}\n            compName=\"equivalence_list\"\n            additionalData={{ equiv_type: 'manufacturing_standard' }}\n            value={watchFormValue.manufacturer_equiv}\n            onChange={handleSelectEquivalence('manufacturing_standard')}\n            label=\"Manufacturing standard\"\n          />\n        </Box>\n        <Paper elevation={2}>\n          <DataTable\n            tableHeight={285}\n            hideFooter\n            rows={watchFormValue.manufacturer_equiv_standards || []}\n            columns={[\n              {\n                ...columnProperties.defaultProperties,\n                field: 'organization',\n                headerName: 'Organization',\n                flex: 0.5\n              },\n              {\n                ...columnProperties.defaultProperties,\n                field: 'description',\n                headerName: 'Standard',\n                flex: 0.5\n              }\n            ]}\n          />\n        </Paper>\n      </Grid>\n      <Grid item xs={6}>\n        <Box marginBottom={1.5}>\n          <AppAutocompleteAsync\n            disabled={Boolean(watchFormValue.reference_to)}\n            compName=\"equivalence_list\"\n            additionalData={{ equiv_type: 'material_standard' }}\n            value={watchFormValue.material_equiv}\n            onChange={handleSelectEquivalence('material_standard')}\n            label=\"Material standard\"\n          />\n        </Box>\n        <Paper elevation={2}>\n          <DataTable\n            hideFooter\n            tableHeight={285}\n            rows={watchFormValue.material_equiv_standards || []}\n            columns={[\n              {\n                ...columnProperties.defaultProperties,\n                field: 'organization',\n                headerName: 'Organization',\n                flex: 0.5\n              },\n              {\n                ...columnProperties.defaultProperties,\n                field: 'description',\n                headerName: 'Standard',\n                flex: 0.5\n              }\n            ]}\n          />\n        </Paper>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default TabStandard\n"]},"metadata":{},"sourceType":"module"}