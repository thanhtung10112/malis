{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\pages\\\\budget.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useMemo, useEffect } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { AppAutocompleteStyled, DialogBudgetCreateEdit, DataTableTextField, DialogBudgetImport, EditIcon, CreateIcon, DeleteIcon, MakeAListIcon, SaveIcon, AppLayout, DataTableNumberField } from '@/components';\nimport { useTranslation } from 'next-i18next';\nimport useStyles from '@/styles/page/layout';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useConfirm, confirmConstant } from '@/components/Dialog/Common/Confirmation';\nimport clsx from 'clsx';\nimport _ from 'lodash';\nimport immer from 'immer';\nimport * as yup from 'yup';\nimport { budgetAmountFormat, unsaveDialogOptions } from '@/utils/constant';\nimport * as columnProperties from '@/utils/columnProperties';\nimport { budgetActions, commonStore, makeAListActions } from '@/store/reducers';\nimport { TABLE_HEIGHT_BUDGET } from '@/styles/vars/size';\nimport DialogRemindData from '@/components/Dialog/Module/Budget/RemindData';\nimport getMessageConfirm from '@/utils/getMessageConfirm';\n\nfunction BudgetPage() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useTranslation = useTranslation('budget'),\n      t = _useTranslation.t;\n\n  var _useConfirm = useConfirm(),\n      confirm = _useConfirm.confirm;\n\n  var dispatch = useDispatch();\n  var dataList = useSelector(budgetActions.selectDataList);\n  var userJob = useSelector(budgetActions.selectUserJob);\n  var userPuco = useSelector(budgetActions.selectUserPuco);\n  var pucoList = useSelector(budgetActions.selectPucoList);\n  var jobList = useSelector(budgetActions.selectJobList); // const budgetSum = useSelector(budgetActions.selectBudgetSum)\n\n  var permissions = useSelector(budgetActions.selectPermissions);\n  var selectedRows = useSelector(commonStore.selectSelectedRows);\n\n  var _useSelector = useSelector(budgetActions.selectInitDataForList),\n      column_tooltips = _useSelector.column_tooltips,\n      initDataForList = _objectWithoutProperties(_useSelector, [\"column_tooltips\"]);\n\n  var editRows = useSelector(commonStore.selectEditRows);\n  var breadcrumbData = useMemo(function () {\n    return [{\n      label: 'Home',\n      href: '/'\n    }, {\n      label: 'Basic Options',\n      href: '/jobs'\n    }, {\n      label: 'Budget Management',\n      href: '/budget'\n    }];\n  }, []);\n  useEffect(function () {\n    dispatch(commonStore.actions.setEditRows([]));\n  }, [dataList]); // handle change value\n\n  var onChangeUserValue = function onChangeUserValue(value) {\n    return /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event, option) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                result = '';\n\n                if (!(editRows.length > 0)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 4;\n                return confirm(unsaveDialogOptions);\n\n              case 4:\n                result = _context.sent;\n\n              case 5:\n                if (result !== 'cancel') {\n                  dispatch(budgetActions.changeUserValue({\n                    value: value,\n                    option: option,\n                    confirm: result\n                  }));\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  };\n\n  var onOpenUpdateDialog = function onOpenUpdateDialog(id) {\n    return function () {\n      dispatch(budgetActions.openUpdateDialog(id));\n    };\n  };\n\n  var onOpenCreateDialog = function onOpenCreateDialog() {\n    dispatch(budgetActions.openCreateDialog());\n  };\n\n  var onOpenImportDialog = function onOpenImportDialog() {\n    dispatch(budgetActions.setImportOpen(true));\n  };\n\n  var onSaveUpdateData = function onSaveUpdateData() {\n    dispatch(commonStore.sagaUpdateMultiple({\n      entity: 'budget'\n    }));\n  };\n\n  var onDeleteBudgets = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var description, result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              description = getMessageConfirm(t, 'budget', selectedRows, 'delete');\n              _context2.next = 3;\n              return confirm({\n                description: description\n              });\n\n            case 3:\n              result = _context2.sent;\n\n              if (result === confirmConstant.actionTypes.OK) {\n                dispatch(budgetActions.remove(selectedRows));\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onDeleteBudgets() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onOpenMakeAList = function onOpenMakeAList() {\n    dispatch(makeAListActions.open());\n  };\n\n  var onChangeEditRows = function onChangeEditRows(budget_id_pk, value, field) {\n    var newEditRows = immer(editRows, function (draft) {\n      var findIndex = _.findIndex(draft, {\n        budget_id_pk: budget_id_pk\n      });\n\n      var valueFormat = field === 'amount' ? Number(value) : value;\n\n      if (findIndex > -1) {\n        draft[findIndex][field] = valueFormat;\n      } else {\n        draft.push(_defineProperty({\n          budget_id_pk: budget_id_pk\n        }, field, valueFormat));\n      }\n    });\n    dispatch(commonStore.actions.setEditRows(newEditRows));\n  };\n\n  var columns = [_objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.iconColumn), {}, {\n    description: column_tooltips.edit,\n    field: 'id',\n    headerName: 'Edit',\n    renderCell: function renderCell(params) {\n      return /*#__PURE__*/_jsxDEV(EditIcon, {\n        onClick: onOpenUpdateDialog(params.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 16\n      }, this);\n    }\n  }), _objectSpread(_objectSpread({}, columnProperties.defaultProperties), {}, {\n    description: column_tooltips.budget_id,\n    field: 'budget_id',\n    headerName: 'Cost Code',\n    flex: 0.1\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.editCell('Description', permissions === null || permissions === void 0 ? void 0 : permissions.edit, column_tooltips.description)), {}, {\n    field: 'description',\n    flex: 0.3,\n    cellClassName: function cellClassName(params) {\n      return clsx(_defineProperty({}, classes.mark, editRows.some(function (row) {\n        return row.budget_id_pk === params.id && typeof row.description !== 'undefined';\n      })));\n    },\n    renderEditCell: function renderEditCell(params) {\n      return /*#__PURE__*/_jsxDEV(DataTableTextField, {\n        params: params,\n        rules: yup.string().max(513, 'Description must be less than 513 characters!'),\n        onChangeValue: onChangeEditRows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this);\n    }\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    description: column_tooltips.currency_id,\n    field: 'currency_id',\n    headerName: 'Currency',\n    flex: 0.1\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.centerColumn), {}, {\n    description: column_tooltips.puco,\n    field: 'puco',\n    headerName: 'Puco',\n    flex: 0.1\n  }), _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.numberColumn), columnProperties.editCell('Amount', permissions === null || permissions === void 0 ? void 0 : permissions.edit, column_tooltips.amount)), {}, {\n    field: 'amount',\n    flex: 0.1,\n    cellClassName: function cellClassName(params) {\n      return clsx(_defineProperty({}, classes.mark, editRows.some(function (row) {\n        return row.budget_id_pk === params.id && typeof row.amount !== 'undefined';\n      })));\n    },\n    renderEditCell: function renderEditCell(params) {\n      return /*#__PURE__*/_jsxDEV(DataTableNumberField, {\n        params: params,\n        onChangeValue: onChangeEditRows,\n        rules: yup.number().nullable().required(t('validation_message.amount_required')).min(budgetAmountFormat.min, t('validation_message.amount_range')).max(budgetAmountFormat.max, t('validation_message.amount_range'))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this);\n    }\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.numberColumn), {}, {\n    description: column_tooltips.used_in_rfq,\n    field: 'used_in_rfq',\n    headerName: 'Used In RFQ',\n    flex: 0.1\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.numberColumn), {}, {\n    description: column_tooltips.left_in_rfq,\n    field: 'left_in_rfq',\n    headerName: 'Left In RFQ',\n    flex: 0.1\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.numberColumn), {}, {\n    description: column_tooltips.used_in_order,\n    field: 'used_in_order',\n    headerName: 'Used In Order',\n    flex: 0.1\n  }), _objectSpread(_objectSpread(_objectSpread({}, columnProperties.defaultProperties), columnProperties.numberColumn), {}, {\n    description: column_tooltips.left_in_order,\n    field: 'left_in_order',\n    headerName: 'Left In Order',\n    flex: 0.1\n  })];\n\n  var Dialogs = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DialogBudgetCreateEdit, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogBudgetImport, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogRemindData, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  var Options = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppAutocompleteStyled, {\n      width: 250,\n      label: \"Jobs\",\n      className: classes.controlAutocomplete,\n      options: jobList,\n      value: userJob,\n      renderOption: function renderOption(option) {\n        return option.description;\n      },\n      primaryKeyOption: \"value\",\n      onChange: onChangeUserValue('job')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppAutocompleteStyled, {\n      disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.view),\n      width: 250,\n      label: \"Puco\",\n      className: classes.controlAutocomplete,\n      options: pucoList,\n      value: userPuco,\n      renderOption: function renderOption(option) {\n        return option.description;\n      },\n      primaryKeyOption: \"value\",\n      onChange: onChangeUserValue('puco')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  var renderButtons = [{\n    label: t('common:button.new'),\n    disabled: Boolean(userJob.value) === false || !(permissions === null || permissions === void 0 ? void 0 : permissions.create) && !(permissions === null || permissions === void 0 ? void 0 : permissions[\"import\"]),\n    startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 18\n    }, this),\n    item: [{\n      label: t('button.create'),\n      onClick: onOpenCreateDialog,\n      disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.create)\n    }, {\n      label: t('form.title.import'),\n      onClick: onOpenImportDialog,\n      disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions[\"import\"])\n    }]\n  }, {\n    label: t('common:button.delete'),\n    disabled: selectedRows.length <= 0 || !(permissions === null || permissions === void 0 ? void 0 : permissions[\"delete\"]),\n    startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 18\n    }, this),\n    onClick: onDeleteBudgets\n  }, {\n    label: t('common:button.save'),\n    disabled: editRows.length <= 0 || !(permissions === null || permissions === void 0 ? void 0 : permissions.edit),\n    startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 18\n    }, this),\n    onClick: onSaveUpdateData\n  }, {\n    label: t('common:button.make_a_list'),\n    disabled: !(permissions === null || permissions === void 0 ? void 0 : permissions.make_a_list),\n    startIcon: /*#__PURE__*/_jsxDEV(MakeAListIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 18\n    }, this),\n    onClick: onOpenMakeAList\n  }];\n\n  var bottomSection = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 35,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      disableSelectionOnClick: true,\n      disableColumnMenu: true,\n      checkboxSelection: true,\n      hideFooter: true,\n      columns: columns,\n      headerHeight: 0,\n      rowHeight: 35,\n      getRowClassName: function getRowClassName() {\n        return classes.totalBudgetRow;\n      },\n      rows: [budgetSum],\n      onCellDoubleClick: function onCellDoubleClick(_, event) {\n        event.stopPropagation();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 315,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    entity: \"budget\",\n    breadcrumbs: breadcrumbData,\n    wikiPage: initDataForList.wiki_page,\n    permissions: permissions,\n    searchProps: {\n      width: 300\n    },\n    buttons: renderButtons,\n    Dialogs: Dialogs,\n    Options: Options,\n    tableProps: {\n      columns: columns\n    },\n    bottomSection: bottomSection,\n    tableHeight: TABLE_HEIGHT_BUDGET\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BudgetPage, \"4hYHAd/hQPcB3+JJoE26oR0G3Ug=\", false, function () {\n  return [useStyles, useTranslation, useConfirm, useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = BudgetPage;\nexport var __N_SSP = true;\nexport default BudgetPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BudgetPage\");","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/pages/budget.tsx"],"names":["useMemo","useEffect","DataGrid","AppAutocompleteStyled","DialogBudgetCreateEdit","DataTableTextField","DialogBudgetImport","EditIcon","CreateIcon","DeleteIcon","MakeAListIcon","SaveIcon","AppLayout","DataTableNumberField","useTranslation","useStyles","useDispatch","useSelector","useConfirm","confirmConstant","clsx","_","immer","yup","budgetAmountFormat","unsaveDialogOptions","columnProperties","budgetActions","commonStore","makeAListActions","TABLE_HEIGHT_BUDGET","DialogRemindData","getMessageConfirm","BudgetPage","classes","t","confirm","dispatch","dataList","selectDataList","userJob","selectUserJob","userPuco","selectUserPuco","pucoList","selectPucoList","jobList","selectJobList","permissions","selectPermissions","selectedRows","selectSelectedRows","selectInitDataForList","column_tooltips","initDataForList","editRows","selectEditRows","breadcrumbData","label","href","actions","setEditRows","onChangeUserValue","value","event","option","result","length","changeUserValue","onOpenUpdateDialog","id","openUpdateDialog","onOpenCreateDialog","openCreateDialog","onOpenImportDialog","setImportOpen","onSaveUpdateData","sagaUpdateMultiple","entity","onDeleteBudgets","description","actionTypes","OK","remove","onOpenMakeAList","open","onChangeEditRows","budget_id_pk","field","newEditRows","draft","findIndex","valueFormat","Number","push","columns","defaultProperties","iconColumn","edit","headerName","renderCell","params","budget_id","flex","editCell","cellClassName","mark","some","row","renderEditCell","string","max","centerColumn","currency_id","puco","numberColumn","amount","number","nullable","required","min","used_in_rfq","left_in_rfq","used_in_order","left_in_order","Dialogs","Options","controlAutocomplete","view","renderButtons","disabled","Boolean","create","startIcon","item","onClick","make_a_list","bottomSection","height","width","totalBudgetRow","budgetSum","stopPropagation","wiki_page"],"mappings":"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","sourcesContent":["import { useMemo, useEffect } from 'react'\n\nimport { DataGrid, GridColumns } from '@material-ui/data-grid'\n\nimport {\n  AppAutocompleteStyled,\n  DialogBudgetCreateEdit,\n  DataTableTextField,\n  DialogBudgetImport,\n  EditIcon,\n  CreateIcon,\n  DeleteIcon,\n  MakeAListIcon,\n  SaveIcon,\n  AppLayout,\n  DataTableNumberField\n} from '@/components'\n\nimport { useTranslation } from 'next-i18next'\nimport useStyles from '@/styles/page/layout'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useConfirm, confirmConstant } from '@/components/Dialog/Common/Confirmation'\nimport useAuthMiddleware from '@/hooks/useAuthMiddleware'\n\nimport clsx from 'clsx'\nimport _ from 'lodash'\nimport immer from 'immer'\nimport * as yup from 'yup'\n\nimport { budgetAmountFormat, unsaveDialogOptions } from '@/utils/constant'\nimport * as columnProperties from '@/utils/columnProperties'\n\nimport { budgetActions, commonStore, makeAListActions } from '@/store/reducers'\n\nimport { TABLE_HEIGHT_BUDGET } from '@/styles/vars/size'\nimport DialogRemindData from '@/components/Dialog/Module/Budget/RemindData'\nimport getMessageConfirm from '@/utils/getMessageConfirm'\n\nfunction BudgetPage() {\n  const classes = useStyles()\n  const { t } = useTranslation('budget')\n  const { confirm } = useConfirm()\n\n  const dispatch = useDispatch()\n  const dataList = useSelector(budgetActions.selectDataList)\n  const userJob = useSelector(budgetActions.selectUserJob)\n  const userPuco = useSelector(budgetActions.selectUserPuco)\n  const pucoList = useSelector(budgetActions.selectPucoList)\n  const jobList = useSelector(budgetActions.selectJobList)\n  // const budgetSum = useSelector(budgetActions.selectBudgetSum)\n  const permissions = useSelector(budgetActions.selectPermissions)\n  const selectedRows = useSelector(commonStore.selectSelectedRows)\n  const { column_tooltips, ...initDataForList } = useSelector(budgetActions.selectInitDataForList)\n\n  const editRows = useSelector(commonStore.selectEditRows)\n\n  const breadcrumbData = useMemo(\n    () => [\n      { label: 'Home', href: '/' },\n      { label: 'Basic Options', href: '/jobs' },\n      { label: 'Budget Management', href: '/budget' }\n    ],\n    []\n  )\n\n  useEffect(() => {\n    dispatch(commonStore.actions.setEditRows([]))\n  }, [dataList])\n\n  // handle change value\n  const onChangeUserValue = (value) => async (event, option) => {\n    let result = ''\n    if (editRows.length > 0) {\n      result = await confirm(unsaveDialogOptions)\n    }\n    if (result !== 'cancel') {\n      dispatch(budgetActions.changeUserValue({ value, option, confirm: result }))\n    }\n  }\n\n  const onOpenUpdateDialog = (id: number) => () => {\n    dispatch(budgetActions.openUpdateDialog(id))\n  }\n\n  const onOpenCreateDialog = () => {\n    dispatch(budgetActions.openCreateDialog())\n  }\n\n  const onOpenImportDialog = () => {\n    dispatch(budgetActions.setImportOpen(true))\n  }\n\n  const onSaveUpdateData = () => {\n    dispatch(commonStore.sagaUpdateMultiple({ entity: 'budget' }))\n  }\n\n  const onDeleteBudgets = async () => {\n    const description = getMessageConfirm(t, 'budget', selectedRows, 'delete')\n    const result = await confirm({\n      description\n    })\n    if (result === confirmConstant.actionTypes.OK) {\n      dispatch(budgetActions.remove(selectedRows))\n    }\n  }\n\n  const onOpenMakeAList = () => {\n    dispatch(makeAListActions.open())\n  }\n\n  const onChangeEditRows = (budget_id_pk, value, field) => {\n    const newEditRows = immer(editRows, (draft) => {\n      const findIndex = _.findIndex(draft, { budget_id_pk })\n      const valueFormat = field === 'amount' ? Number(value) : value\n      if (findIndex > -1) {\n        draft[findIndex][field] = valueFormat\n      } else {\n        draft.push({ budget_id_pk, [field]: valueFormat })\n      }\n    })\n    dispatch(commonStore.actions.setEditRows(newEditRows))\n  }\n\n  const columns: GridColumns = [\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.iconColumn,\n      description: column_tooltips.edit,\n      field: 'id',\n      headerName: 'Edit',\n      renderCell(params) {\n        return <EditIcon onClick={onOpenUpdateDialog(params.value as number)} />\n      }\n    },\n    {\n      ...columnProperties.defaultProperties,\n      description: column_tooltips.budget_id,\n      field: 'budget_id',\n      headerName: 'Cost Code',\n      flex: 0.1\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.editCell('Description', permissions?.edit, column_tooltips.description),\n      field: 'description',\n      flex: 0.3,\n      cellClassName(params) {\n        return clsx({\n          [classes.mark]: editRows.some(\n            (row) => row.budget_id_pk === params.id && typeof row.description !== 'undefined'\n          )\n        })\n      },\n      renderEditCell(params) {\n        return (\n          <DataTableTextField\n            params={params}\n            rules={yup.string().max(513, 'Description must be less than 513 characters!')}\n            onChangeValue={onChangeEditRows}\n          />\n        )\n      }\n    },\n\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.centerColumn,\n      description: column_tooltips.currency_id,\n      field: 'currency_id',\n      headerName: 'Currency',\n      flex: 0.1\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.centerColumn,\n      description: column_tooltips.puco,\n      field: 'puco',\n      headerName: 'Puco',\n      flex: 0.1\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.numberColumn,\n      ...columnProperties.editCell('Amount', permissions?.edit, column_tooltips.amount),\n      field: 'amount',\n      flex: 0.1,\n      cellClassName(params) {\n        return clsx({\n          [classes.mark]: editRows.some((row) => row.budget_id_pk === params.id && typeof row.amount !== 'undefined')\n        })\n      },\n      renderEditCell(params) {\n        return (\n          <DataTableNumberField\n            params={params}\n            onChangeValue={onChangeEditRows}\n            rules={yup\n              .number()\n              .nullable()\n              .required(t('validation_message.amount_required'))\n              .min(budgetAmountFormat.min, t('validation_message.amount_range'))\n              .max(budgetAmountFormat.max, t('validation_message.amount_range'))}\n          />\n        )\n      }\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.numberColumn,\n      description: column_tooltips.used_in_rfq,\n      field: 'used_in_rfq',\n      headerName: 'Used In RFQ',\n      flex: 0.1\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.numberColumn,\n      description: column_tooltips.left_in_rfq,\n      field: 'left_in_rfq',\n      headerName: 'Left In RFQ',\n      flex: 0.1\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.numberColumn,\n      description: column_tooltips.used_in_order,\n      field: 'used_in_order',\n      headerName: 'Used In Order',\n      flex: 0.1\n    },\n    {\n      ...columnProperties.defaultProperties,\n      ...columnProperties.numberColumn,\n      description: column_tooltips.left_in_order,\n      field: 'left_in_order',\n      headerName: 'Left In Order',\n      flex: 0.1\n    }\n  ]\n\n  const Dialogs = (\n    <>\n      <DialogBudgetCreateEdit />\n      <DialogBudgetImport />\n      <DialogRemindData />\n    </>\n  )\n\n  const Options = (\n    <>\n      <AppAutocompleteStyled\n        width={250}\n        label=\"Jobs\"\n        className={classes.controlAutocomplete}\n        options={jobList}\n        value={userJob}\n        renderOption={(option) => option.description}\n        primaryKeyOption=\"value\"\n        onChange={onChangeUserValue('job')}\n      />\n\n      <AppAutocompleteStyled\n        disabled={!permissions?.view}\n        width={250}\n        label=\"Puco\"\n        className={classes.controlAutocomplete}\n        options={pucoList}\n        value={userPuco}\n        renderOption={(option) => option.description}\n        primaryKeyOption=\"value\"\n        onChange={onChangeUserValue('puco')}\n      />\n    </>\n  )\n\n  const renderButtons = [\n    {\n      label: t('common:button.new'),\n      disabled: Boolean(userJob.value) === false || (!permissions?.create && !permissions?.import),\n      startIcon: <CreateIcon />,\n      item: [\n        {\n          label: t('button.create'),\n          onClick: onOpenCreateDialog,\n          disabled: !permissions?.create\n        },\n        {\n          label: t('form.title.import'),\n          onClick: onOpenImportDialog,\n          disabled: !permissions?.import\n        }\n      ]\n    },\n    {\n      label: t('common:button.delete'),\n      disabled: selectedRows.length <= 0 || !permissions?.delete,\n      startIcon: <DeleteIcon />,\n      onClick: onDeleteBudgets\n    },\n    {\n      label: t('common:button.save'),\n      disabled: editRows.length <= 0 || !permissions?.edit,\n      startIcon: <SaveIcon />,\n      onClick: onSaveUpdateData\n    },\n    {\n      label: t('common:button.make_a_list'),\n      disabled: !permissions?.make_a_list,\n      startIcon: <MakeAListIcon />,\n      onClick: onOpenMakeAList\n    }\n  ]\n\n  const bottomSection = (\n    <div style={{ height: 35, width: '100%' }}>\n      <DataGrid\n        disableSelectionOnClick\n        disableColumnMenu\n        checkboxSelection\n        hideFooter\n        columns={columns}\n        headerHeight={0}\n        rowHeight={35}\n        getRowClassName={() => classes.totalBudgetRow}\n        rows={[budgetSum]}\n        onCellDoubleClick={(_, event) => {\n          event.stopPropagation()\n        }}\n      />\n    </div>\n  )\n\n  return (\n    <AppLayout\n      entity=\"budget\"\n      breadcrumbs={breadcrumbData}\n      wikiPage={initDataForList.wiki_page}\n      permissions={permissions}\n      searchProps={{\n        width: 300\n      }}\n      buttons={renderButtons}\n      Dialogs={Dialogs}\n      Options={Options}\n      tableProps={{ columns }}\n      bottomSection={bottomSection}\n      tableHeight={TABLE_HEIGHT_BUDGET}\n    />\n  )\n}\n\nexport const getServerSideProps = useAuthMiddleware(['common', 'budget', 'make_a_list', 'advanced_filter'])\n\nexport default BudgetPage\n"]},"metadata":{},"sourceType":"module"}