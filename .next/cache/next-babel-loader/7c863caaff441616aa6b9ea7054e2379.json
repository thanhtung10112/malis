{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { CircularProgress, Typography } from '@material-ui/core';\nimport { CheckCircleRounded, HighlightOffOutlined } from '@material-ui/icons';\nimport { Case, Default, Switch } from 'react-if';\nimport { DialogMain, useConfirm } from '@/components/index';\nimport { useDispatch } from 'react-redux';\nimport useSSE from '@/hooks/useSSE';\nimport _ from 'lodash';\nimport { commonStore } from '@/store/reducers';\n\nfunction DialogSSEProcess(props) {\n  const {\n    open,\n    operationId,\n    onClose,\n    onSuccess,\n    onError\n  } = props;\n  const {\n    dataSSE,\n    setDataSSE\n  } = useSSE(operationId);\n  const {\n    confirm,\n    handleClose: handleCloseConfirm\n  } = useConfirm();\n  const dispatch = useDispatch();\n  const isCompleted = React.useMemo(() => dataSSE.status === 'SUCCESS' || dataSSE.status === 'ERROR', [dataSSE.status]);\n  React.useEffect(() => {\n    if (isCompleted) {\n      handleCloseConfirm();\n      onClose();\n\n      if (_.isFunction(onSuccess) && dataSSE.status === 'SUCCESS') {\n        onSuccess(operationId, dataSSE);\n      }\n\n      if (_.isFunction(onError) && dataSSE.status === 'ERROR') {\n        onError(operationId, dataSSE);\n      }\n    }\n  }, [isCompleted]);\n  /**\n   * This hook to reset state if open = false\n   */\n\n  React.useEffect(() => {\n    if (!open) {\n      setDataSSE({\n        message: 'Initializing...',\n        status: null,\n        operation_result: null\n      });\n    }\n  }, [open]);\n\n  const handleCancelProcess = async () => {\n    const result = await confirm({\n      title: 'Confirm canceling exporting progress',\n      description: 'The progress is not completed yet. Are you sure you want to cancel?'\n    });\n\n    if (result === 'OK') {\n      onClose();\n      dispatch(commonStore.sagaCancelBackgroundJob(operationId));\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(DialogMain, {\n    open: open,\n    onClose: isCompleted ? onClose : handleCancelProcess,\n    maxWidth: \"xs\",\n    fullWidth: true,\n    bodyStyles: {\n      margin: 'auto',\n      textAlign: 'center'\n    },\n    closeText: isCompleted ? 'Close' : 'Cancel',\n    children: [/*#__PURE__*/_jsxs(Switch, {\n      children: [/*#__PURE__*/_jsx(Case, {\n        condition: dataSSE.status === 'SUCCESS',\n        children: /*#__PURE__*/_jsx(CheckCircleRounded, {\n          fontSize: \"large\",\n          style: {\n            marginTop: '1rem'\n          }\n        })\n      }), /*#__PURE__*/_jsx(Case, {\n        condition: dataSSE.status === 'ERROR',\n        children: /*#__PURE__*/_jsx(HighlightOffOutlined, {\n          fontSize: \"large\",\n          style: {\n            marginTop: '1rem'\n          }\n        })\n      }), /*#__PURE__*/_jsx(Default, {\n        children: /*#__PURE__*/_jsx(CircularProgress, {\n          style: {\n            marginTop: '1rem'\n          }\n        })\n      })]\n    }), /*#__PURE__*/_jsx(Typography, {\n      variant: \"body1\",\n      style: {\n        marginTop: '1rem'\n      },\n      children: dataSSE.message\n    })]\n  });\n}\n\nexport default DialogSSEProcess;","map":null,"metadata":{},"sourceType":"module"}