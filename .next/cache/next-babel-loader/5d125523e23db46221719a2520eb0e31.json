{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as _ from 'lodash';\nimport { Select, MenuItem, FormControl } from '@material-ui/core';\nimport useStyles from '../styles'; // Conjunction, column name, comparator DD and value fields\n// Those components will be used in the rules and groups\n\nfunction ComparatorOptions({\n  rules,\n  columnOptions,\n  options,\n  disabled,\n  onComparatorChange\n}) {\n  const selectedColumn = _.find(columnOptions, {\n    id: rules.id\n  });\n\n  const classes = useStyles();\n  const menuItems = [];\n  let i = 0;\n\n  for (const comparator of options) {\n    if (comparator.for_type.includes(selectedColumn.column_type)) {\n      menuItems.push( /*#__PURE__*/_jsx(MenuItem, {\n        value: comparator.value,\n        children: comparator.description\n      }, `${comparator.value}-${i}`));\n      i++;\n    }\n  }\n\n  const handleComparatorChange = event => {\n    // rules.comparator = event.target.value\n    onComparatorChange(event.target.value); // forceRerender()\n  };\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(FormControl, {\n      variant: \"outlined\",\n      size: \"small\",\n      style: {\n        marginRight: '0.8rem',\n        width: '10rem'\n      },\n      className: classes.wrapSelect,\n      children: /*#__PURE__*/_jsx(Select, {\n        disabled: disabled,\n        value: rules.comparator,\n        onChange: handleComparatorChange,\n        children: menuItems\n      })\n    })\n  });\n}\n\nexport default ComparatorOptions;","map":null,"metadata":{},"sourceType":"module"}