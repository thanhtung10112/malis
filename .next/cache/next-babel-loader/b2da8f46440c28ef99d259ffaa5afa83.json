{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice, createAction, createSelector } from '@reduxjs/toolkit';\nimport { actionTypes } from '@/utils/constant';\nexport var name = 'location';\nexport var resetState = createAction(\"\".concat(name, \"/\").concat(actionTypes.RESET_STATE));\nexport var initialState = {\n  dataList: [],\n  detail: {\n    location_id: '',\n    language: null,\n    location_type: null,\n    name: '',\n    office_address1: '',\n    office_address2: '',\n    office_city: '',\n    office_zip: '',\n    office_state: '',\n    office_country: null,\n    office_phone: '',\n    office_email: '',\n    office_fax: '',\n    workshop_address1: '',\n    workshop_address2: '',\n    workshop_city: '',\n    workshop_phone: '',\n    workshop_email: '',\n    workshop_fax: '',\n    comment: '',\n    specialties: '',\n    remark: '',\n    additional_attributes: {}\n  },\n  dialogState: {\n    open: false,\n    loading: false,\n    editMode: false,\n    historyLogs: []\n  },\n  initDataForList: {\n    permissions: {\n      location: null\n    },\n    wiki_page: '',\n    column_tooltips: {}\n  },\n  initDataForCE: {\n    parameters: {\n      CTRY: [],\n      // country\n      LOAT: [],\n      // extended properties\n      PLLA: [],\n      // language\n      PUCO: [],\n      // puco\n      SSPE: [],\n      // specialties\n      TYLO: [] // location type\n\n    },\n    next_code: '',\n    wiki_page: ''\n  }\n};\nvar locationSlice = createSlice({\n  name: name,\n  initialState: initialState,\n  reducers: {\n    setDataList: function setDataList(state, action) {\n      state.dataList = action.payload;\n    },\n    setPermissions: function setPermissions(state, _ref) {\n      var payload = _ref.payload;\n      state.initDataForList.permissions.location = payload;\n    },\n    setDialogState: function setDialogState(state, _ref2) {\n      var payload = _ref2.payload;\n      state.dialogState = _objectSpread(_objectSpread({}, state.dialogState), payload);\n    },\n    setHistoryLogs: function setHistoryLogs(state, _ref3) {\n      var payload = _ref3.payload;\n      state.dialogState.historyLogs = payload;\n    },\n    setDialogStateOpen: function setDialogStateOpen(state, _ref4) {\n      var payload = _ref4.payload;\n      state.dialogState.open = payload;\n    },\n    setDialogStateLoading: function setDialogStateLoading(state, _ref5) {\n      var payload = _ref5.payload;\n      state.dialogState.loading = payload;\n    },\n    setDialogStateEditMode: function setDialogStateEditMode(state, _ref6) {\n      var payload = _ref6.payload;\n      state.dialogState.editMode = payload;\n    },\n    setDetail: function setDetail(state, _ref7) {\n      var payload = _ref7.payload;\n      state.detail = _objectSpread(_objectSpread({}, state.detail), payload);\n    },\n    setInitDataForList: function setInitDataForList(state, _ref8) {\n      var payload = _ref8.payload;\n      state.initDataForList = payload;\n    },\n    setInitDataForCE: function setInitDataForCE(state, _ref9) {\n      var payload = _ref9.payload;\n      state.initDataForCE = payload;\n    },\n    setNextCode: function setNextCode(state, _ref10) {\n      var payload = _ref10.payload;\n      state.initDataForCE.next_code = payload;\n    },\n    resetDetail: function resetDetail(state) {\n      state.detail = _objectSpread({}, initialState.detail);\n    }\n  },\n  extraReducers: _defineProperty({}, resetState.type, function () {\n    return initialState;\n  })\n});\nvar actions = locationSlice.actions;\nexport { actions };\nexport var sagaGetList = createAction(\"\".concat(name, \"/\").concat(actionTypes.GET_LIST));\nexport var sagaOpenCreateDialog = createAction(\"\".concat(name, \"/\").concat(actionTypes.OPEN_CREATE_DIALOG));\nexport var sagaOpenUpdateDialog = createAction(\"\".concat(name, \"/\").concat(actionTypes.OPEN_UPDATE_DIALOG));\nexport var sagaCreate = createAction(\"\".concat(name, \"/\").concat(actionTypes.CREATE));\nexport var sagaUpdate = createAction(\"\".concat(name, \"/\").concat(actionTypes.UPDATE));\nexport var sagaGetNextCode = createAction(\"\".concat(name, \"/\").concat(actionTypes.GET_GENERATE_CODE));\nexport var sagaCloseDialog = createAction(\"\".concat(name, \"/\").concat(actionTypes.CLOSE_DIALOG)); // Selectors\n\nexport var selectState = function selectState(state) {\n  return state[name];\n};\nexport var selectDataList = createSelector(selectState, function (state) {\n  return state.dataList;\n});\nexport var selectDialogState = createSelector(selectState, function (state) {\n  return state.dialogState;\n});\nexport var selectInitDataForList = createSelector(selectState, function (state) {\n  return state.initDataForList;\n});\nexport var selectInitDataForCE = createSelector(selectState, function (state) {\n  return state.initDataForCE;\n});\nexport var selectDetail = createSelector(selectState, function (state) {\n  return state.detail;\n});\nexport var selectPermissions = createSelector(selectState, function (state) {\n  return state.initDataForList.permissions.location;\n});\nexport default locationSlice;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/reducers/location.reducer.ts"],"names":["createSlice","createAction","createSelector","actionTypes","name","resetState","RESET_STATE","initialState","dataList","detail","location_id","language","location_type","office_address1","office_address2","office_city","office_zip","office_state","office_country","office_phone","office_email","office_fax","workshop_address1","workshop_address2","workshop_city","workshop_phone","workshop_email","workshop_fax","comment","specialties","remark","additional_attributes","dialogState","open","loading","editMode","historyLogs","initDataForList","permissions","location","wiki_page","column_tooltips","initDataForCE","parameters","CTRY","LOAT","PLLA","PUCO","SSPE","TYLO","next_code","locationSlice","reducers","setDataList","state","action","payload","setPermissions","setDialogState","setHistoryLogs","setDialogStateOpen","setDialogStateLoading","setDialogStateEditMode","setDetail","setInitDataForList","setInitDataForCE","setNextCode","resetDetail","extraReducers","type","actions","sagaGetList","GET_LIST","sagaOpenCreateDialog","OPEN_CREATE_DIALOG","sagaOpenUpdateDialog","OPEN_UPDATE_DIALOG","sagaCreate","CREATE","sagaUpdate","UPDATE","sagaGetNextCode","GET_GENERATE_CODE","sagaCloseDialog","CLOSE_DIALOG","selectState","selectDataList","selectDialogState","selectInitDataForList","selectInitDataForCE","selectDetail","selectPermissions"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,YAAtB,EAAmDC,cAAnD,QAAyE,kBAAzE;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAYA,OAAO,IAAMC,IAAI,GAAG,UAAb;AACP,OAAO,IAAMC,UAAU,GAAGJ,YAAY,WAAIG,IAAJ,cAAYD,WAAW,CAACG,WAAxB,EAA/B;AAEP,OAAO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,QAAQ,EAAE,EADgB;AAE1BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,WAAW,EAAE,EADP;AAENC,IAAAA,QAAQ,EAAE,IAFJ;AAGNC,IAAAA,aAAa,EAAE,IAHT;AAINR,IAAAA,IAAI,EAAE,EAJA;AAKNS,IAAAA,eAAe,EAAE,EALX;AAMNC,IAAAA,eAAe,EAAE,EANX;AAONC,IAAAA,WAAW,EAAE,EAPP;AAQNC,IAAAA,UAAU,EAAE,EARN;AASNC,IAAAA,YAAY,EAAE,EATR;AAUNC,IAAAA,cAAc,EAAE,IAVV;AAWNC,IAAAA,YAAY,EAAE,EAXR;AAYNC,IAAAA,YAAY,EAAE,EAZR;AAaNC,IAAAA,UAAU,EAAE,EAbN;AAcNC,IAAAA,iBAAiB,EAAE,EAdb;AAeNC,IAAAA,iBAAiB,EAAE,EAfb;AAgBNC,IAAAA,aAAa,EAAE,EAhBT;AAiBNC,IAAAA,cAAc,EAAE,EAjBV;AAkBNC,IAAAA,cAAc,EAAE,EAlBV;AAmBNC,IAAAA,YAAY,EAAE,EAnBR;AAoBNC,IAAAA,OAAO,EAAE,EApBH;AAqBNC,IAAAA,WAAW,EAAE,EArBP;AAsBNC,IAAAA,MAAM,EAAE,EAtBF;AAuBNC,IAAAA,qBAAqB,EAAE;AAvBjB,GAFkB;AA2B1BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,IAAI,EAAE,KADK;AAEXC,IAAAA,OAAO,EAAE,KAFE;AAGXC,IAAAA,QAAQ,EAAE,KAHC;AAIXC,IAAAA,WAAW,EAAE;AAJF,GA3Ba;AAiC1BC,EAAAA,eAAe,EAAE;AACfC,IAAAA,WAAW,EAAE;AACXC,MAAAA,QAAQ,EAAE;AADC,KADE;AAIfC,IAAAA,SAAS,EAAE,EAJI;AAKfC,IAAAA,eAAe,EAAE;AALF,GAjCS;AAwC1BC,EAAAA,aAAa,EAAE;AACbC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,EADI;AACA;AACVC,MAAAA,IAAI,EAAE,EAFI;AAEA;AACVC,MAAAA,IAAI,EAAE,EAHI;AAGA;AACVC,MAAAA,IAAI,EAAE,EAJI;AAIA;AACVC,MAAAA,IAAI,EAAE,EALI;AAKA;AACVC,MAAAA,IAAI,EAAE,EANI,CAMD;;AANC,KADC;AASbC,IAAAA,SAAS,EAAE,EATE;AAUbV,IAAAA,SAAS,EAAE;AAVE;AAxCW,CAArB;AAsDP,IAAMW,aAAa,GAAGnD,WAAW,CAAC;AAChCI,EAAAA,IAAI,EAAJA,IADgC;AAEhCG,EAAAA,YAAY,EAAZA,YAFgC;AAGhC6C,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WADQ,uBACIC,KADJ,EACWC,MADX,EACkD;AACxDD,MAAAA,KAAK,CAAC9C,QAAN,GAAiB+C,MAAM,CAACC,OAAxB;AACD,KAHO;AAIRC,IAAAA,cAJQ,0BAIOH,KAJP,QAI+D;AAAA,UAA/CE,OAA+C,QAA/CA,OAA+C;AACrEF,MAAAA,KAAK,CAACjB,eAAN,CAAsBC,WAAtB,CAAkCC,QAAlC,GAA6CiB,OAA7C;AACD,KANO;AAORE,IAAAA,cAPQ,0BAOOJ,KAPP,SAOoF;AAAA,UAApEE,OAAoE,SAApEA,OAAoE;AAC1FF,MAAAA,KAAK,CAACtB,WAAN,mCACKsB,KAAK,CAACtB,WADX,GAEKwB,OAFL;AAID,KAZO;AAaRG,IAAAA,cAbQ,0BAaOL,KAbP,SAawD;AAAA,UAAxCE,OAAwC,SAAxCA,OAAwC;AAC9DF,MAAAA,KAAK,CAACtB,WAAN,CAAkBI,WAAlB,GAAgCoB,OAAhC;AACD,KAfO;AAgBRI,IAAAA,kBAhBQ,8BAgBWN,KAhBX,SAgBuD;AAAA,UAAnCE,OAAmC,SAAnCA,OAAmC;AAC7DF,MAAAA,KAAK,CAACtB,WAAN,CAAkBC,IAAlB,GAAyBuB,OAAzB;AACD,KAlBO;AAmBRK,IAAAA,qBAnBQ,iCAmBcP,KAnBd,SAmB0D;AAAA,UAAnCE,OAAmC,SAAnCA,OAAmC;AAChEF,MAAAA,KAAK,CAACtB,WAAN,CAAkBE,OAAlB,GAA4BsB,OAA5B;AACD,KArBO;AAsBRM,IAAAA,sBAtBQ,kCAsBeR,KAtBf,SAsB2D;AAAA,UAAnCE,OAAmC,SAAnCA,OAAmC;AACjEF,MAAAA,KAAK,CAACtB,WAAN,CAAkBG,QAAlB,GAA6BqB,OAA7B;AACD,KAxBO;AAyBRO,IAAAA,SAzBQ,qBAyBET,KAzBF,SAyB8D;AAAA,UAAnDE,OAAmD,SAAnDA,OAAmD;AACpEF,MAAAA,KAAK,CAAC7C,MAAN,mCACK6C,KAAK,CAAC7C,MADX,GAEK+C,OAFL;AAID,KA9BO;AA+BRQ,IAAAA,kBA/BQ,8BA+BWV,KA/BX,SA+BuE;AAAA,UAAnDE,OAAmD,SAAnDA,OAAmD;AAC7EF,MAAAA,KAAK,CAACjB,eAAN,GAAwBmB,OAAxB;AACD,KAjCO;AAkCRS,IAAAA,gBAlCQ,4BAkCSX,KAlCT,SAkCmE;AAAA,UAAjDE,OAAiD,SAAjDA,OAAiD;AACzEF,MAAAA,KAAK,CAACZ,aAAN,GAAsBc,OAAtB;AACD,KApCO;AAqCRU,IAAAA,WArCQ,uBAqCIZ,KArCJ,UAqC+C;AAAA,UAAlCE,OAAkC,UAAlCA,OAAkC;AACrDF,MAAAA,KAAK,CAACZ,aAAN,CAAoBQ,SAApB,GAAgCM,OAAhC;AACD,KAvCO;AAwCRW,IAAAA,WAxCQ,uBAwCIb,KAxCJ,EAwCW;AACjBA,MAAAA,KAAK,CAAC7C,MAAN,qBAAoBF,YAAY,CAACE,MAAjC;AACD;AA1CO,GAHsB;AA+ChC2D,EAAAA,aAAa,sBACV/D,UAAU,CAACgE,IADD,cACS;AAClB,WAAO9D,YAAP;AACD,GAHU;AA/CmB,CAAD,CAAjC;IAsDe+D,O,GAAYnB,a,CAAZmB,O;;AAEf,OAAO,IAAMC,WAAW,GAAGtE,YAAY,WAAIG,IAAJ,cAAYD,WAAW,CAACqE,QAAxB,EAAhC;AACP,OAAO,IAAMC,oBAAoB,GAAGxE,YAAY,WAAIG,IAAJ,cAAYD,WAAW,CAACuE,kBAAxB,EAAzC;AACP,OAAO,IAAMC,oBAAoB,GAAG1E,YAAY,WAAYG,IAAZ,cAAoBD,WAAW,CAACyE,kBAAhC,EAAzC;AACP,OAAO,IAAMC,UAAU,GAAG5E,YAAY,WAAoBG,IAApB,cAA4BD,WAAW,CAAC2E,MAAxC,EAA/B;AACP,OAAO,IAAMC,UAAU,GAAG9E,YAAY,WAA8CG,IAA9C,cAAsDD,WAAW,CAAC6E,MAAlE,EAA/B;AACP,OAAO,IAAMC,eAAe,GAAGhF,YAAY,WAAoBG,IAApB,cAA4BD,WAAW,CAAC+E,iBAAxC,EAApC;AACP,OAAO,IAAMC,eAAe,GAAGlF,YAAY,WAAIG,IAAJ,cAAYD,WAAW,CAACiF,YAAxB,EAApC,C,CAEP;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAC/B,KAAD;AAAA,SAA4BA,KAAK,CAAClD,IAAD,CAAjC;AAAA,CAApB;AACP,OAAO,IAAMkF,cAAc,GAAGpF,cAAc,CAACmF,WAAD,EAAc,UAAC/B,KAAD;AAAA,SAAWA,KAAK,CAAC9C,QAAjB;AAAA,CAAd,CAArC;AACP,OAAO,IAAM+E,iBAAiB,GAAGrF,cAAc,CAACmF,WAAD,EAAc,UAAC/B,KAAD;AAAA,SAAWA,KAAK,CAACtB,WAAjB;AAAA,CAAd,CAAxC;AACP,OAAO,IAAMwD,qBAAqB,GAAGtF,cAAc,CAACmF,WAAD,EAAc,UAAC/B,KAAD;AAAA,SAAWA,KAAK,CAACjB,eAAjB;AAAA,CAAd,CAA5C;AACP,OAAO,IAAMoD,mBAAmB,GAAGvF,cAAc,CAACmF,WAAD,EAAc,UAAC/B,KAAD;AAAA,SAAWA,KAAK,CAACZ,aAAjB;AAAA,CAAd,CAA1C;AACP,OAAO,IAAMgD,YAAY,GAAGxF,cAAc,CAACmF,WAAD,EAAc,UAAC/B,KAAD;AAAA,SAAWA,KAAK,CAAC7C,MAAjB;AAAA,CAAd,CAAnC;AACP,OAAO,IAAMkF,iBAAiB,GAAGzF,cAAc,CAACmF,WAAD,EAAc,UAAC/B,KAAD;AAAA,SAAWA,KAAK,CAACjB,eAAN,CAAsBC,WAAtB,CAAkCC,QAA7C;AAAA,CAAd,CAAxC;AAEP,eAAeY,aAAf","sourcesContent":["import { createSlice, createAction, PayloadAction, createSelector } from '@reduxjs/toolkit'\nimport { actionTypes } from '@/utils/constant'\n\nimport type { RootReducerType } from './rootReducer'\nimport type {\n  LocationInitDataForList,\n  LocationDetail,\n  LocationInitDataForCE,\n  LocationPermissions,\n  LocationItem\n} from '@/types/Location'\nimport type { HistoryLog } from '@/types/Common'\n\nexport const name = 'location'\nexport const resetState = createAction(`${name}/${actionTypes.RESET_STATE}`)\n\nexport const initialState = {\n  dataList: [] as LocationItem[],\n  detail: {\n    location_id: '',\n    language: null,\n    location_type: null,\n    name: '',\n    office_address1: '',\n    office_address2: '',\n    office_city: '',\n    office_zip: '',\n    office_state: '',\n    office_country: null,\n    office_phone: '',\n    office_email: '',\n    office_fax: '',\n    workshop_address1: '',\n    workshop_address2: '',\n    workshop_city: '',\n    workshop_phone: '',\n    workshop_email: '',\n    workshop_fax: '',\n    comment: '',\n    specialties: '',\n    remark: '',\n    additional_attributes: {}\n  } as LocationDetail,\n  dialogState: {\n    open: false,\n    loading: false,\n    editMode: false,\n    historyLogs: [] as HistoryLog[]\n  },\n  initDataForList: {\n    permissions: {\n      location: null\n    },\n    wiki_page: '',\n    column_tooltips: {}\n  } as LocationInitDataForList,\n  initDataForCE: {\n    parameters: {\n      CTRY: [], // country\n      LOAT: [], // extended properties\n      PLLA: [], // language\n      PUCO: [], // puco\n      SSPE: [], // specialties\n      TYLO: [] // location type\n    },\n    next_code: '',\n    wiki_page: ''\n  } as LocationInitDataForCE\n}\n\nconst locationSlice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    setDataList(state, action: PayloadAction<LocationItem[]>) {\n      state.dataList = action.payload\n    },\n    setPermissions(state, { payload }: PayloadAction<LocationPermissions>) {\n      state.initDataForList.permissions.location = payload\n    },\n    setDialogState(state, { payload }: PayloadAction<Partial<typeof initialState.dialogState>>) {\n      state.dialogState = {\n        ...state.dialogState,\n        ...payload\n      }\n    },\n    setHistoryLogs(state, { payload }: PayloadAction<HistoryLog[]>) {\n      state.dialogState.historyLogs = payload\n    },\n    setDialogStateOpen(state, { payload }: PayloadAction<boolean>) {\n      state.dialogState.open = payload\n    },\n    setDialogStateLoading(state, { payload }: PayloadAction<boolean>) {\n      state.dialogState.loading = payload\n    },\n    setDialogStateEditMode(state, { payload }: PayloadAction<boolean>) {\n      state.dialogState.editMode = payload\n    },\n    setDetail(state, { payload }: PayloadAction<Partial<LocationDetail>>) {\n      state.detail = {\n        ...state.detail,\n        ...payload\n      }\n    },\n    setInitDataForList(state, { payload }: PayloadAction<LocationInitDataForList>) {\n      state.initDataForList = payload\n    },\n    setInitDataForCE(state, { payload }: PayloadAction<LocationInitDataForCE>) {\n      state.initDataForCE = payload\n    },\n    setNextCode(state, { payload }: PayloadAction<string>) {\n      state.initDataForCE.next_code = payload\n    },\n    resetDetail(state) {\n      state.detail = { ...initialState.detail }\n    }\n  },\n  extraReducers: {\n    [resetState.type]() {\n      return initialState\n    }\n  }\n})\n\nexport const { actions } = locationSlice\n\nexport const sagaGetList = createAction(`${name}/${actionTypes.GET_LIST}`)\nexport const sagaOpenCreateDialog = createAction(`${name}/${actionTypes.OPEN_CREATE_DIALOG}`)\nexport const sagaOpenUpdateDialog = createAction<number>(`${name}/${actionTypes.OPEN_UPDATE_DIALOG}`)\nexport const sagaCreate = createAction<LocationDetail>(`${name}/${actionTypes.CREATE}`)\nexport const sagaUpdate = createAction<{ id: number; location: LocationDetail }>(`${name}/${actionTypes.UPDATE}`)\nexport const sagaGetNextCode = createAction<LocationDetail>(`${name}/${actionTypes.GET_GENERATE_CODE}`)\nexport const sagaCloseDialog = createAction(`${name}/${actionTypes.CLOSE_DIALOG}`)\n\n// Selectors\nexport const selectState = (state: RootReducerType) => state[name]\nexport const selectDataList = createSelector(selectState, (state) => state.dataList)\nexport const selectDialogState = createSelector(selectState, (state) => state.dialogState)\nexport const selectInitDataForList = createSelector(selectState, (state) => state.initDataForList)\nexport const selectInitDataForCE = createSelector(selectState, (state) => state.initDataForCE)\nexport const selectDetail = createSelector(selectState, (state) => state.detail)\nexport const selectPermissions = createSelector(selectState, (state) => state.initDataForList.permissions.location)\n\nexport default locationSlice\n"]},"metadata":{},"sourceType":"module"}