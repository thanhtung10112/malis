{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchDrawingInitDataForList),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchDrawingInitDataForCE),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(fetchDrawingList),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(getDrawingList),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(openDrawingCreateDialog),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(changeUserJob),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(createDrawing),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(closeDrawingDialog),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(openDrawingUpdateDialog),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(updateDrawing),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(openRevisionDialog),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(saveNewRev),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(openCreatePartDialog),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(drawingSaga);\n\nimport { takeEvery, put, putResolve } from 'redux-saga/effects';\nimport { select, call, all } from 'typed-redux-saga';\nimport { drawingStore, commonStore, advancedFilterActions, specificationStore, partStore, tagStore } from '@/store/reducers';\nimport _ from 'lodash';\nimport { getDefaultValues } from '@/utils/getDefaultValues';\nimport { fetchSpecificationDetail } from '@/store/saga/specification.saga';\nimport drawingApi from '@/apis/drawing.api';\nexport function fetchDrawingInitDataForList() {\n  var userJob, data;\n  return _regeneratorRuntime.wrap(function fetchDrawingInitDataForList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.delegateYield(select(commonStore.selectUserValueJob), \"t0\", 1);\n\n        case 1:\n          userJob = _context.t0;\n          _context.next = 4;\n          return call(drawingApi.getInitDataForList, {\n            job_id_pk: userJob.value\n          });\n\n        case 4:\n          data = _context.sent;\n\n          if (_.isNull(data.selected_job)) {\n            data.selected_job = {};\n          }\n\n          if (userJob.value === -1 || userJob.value === -2) {\n            data.selected_job = userJob;\n          }\n\n          _context.next = 9;\n          return put(commonStore.actions.setUserValueJob(data.selected_job));\n\n        case 9:\n          _context.next = 11;\n          return put(drawingStore.actions.setInitDataForList(data));\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function fetchDrawingInitDataForCE() {\n  var jobId,\n      userJob,\n      _yield$call,\n      permissions,\n      user_job,\n      dataInit,\n      detailDefaultValue,\n      drawingPurpose,\n      _drawingPurpose$prope,\n      exclude_from,\n      excludeList,\n      excludeFrom,\n      _args2 = arguments;\n\n  return _regeneratorRuntime.wrap(function fetchDrawingInitDataForCE$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          jobId = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : null;\n          return _context2.delegateYield(select(commonStore.selectUserValueJob), \"t0\", 2);\n\n        case 2:\n          userJob = _context2.t0;\n          _context2.next = 5;\n          return call(drawingApi.getInitDataForCE, {\n            job_id_pk: jobId || userJob.value\n          });\n\n        case 5:\n          _yield$call = _context2.sent;\n          permissions = _yield$call.permissions;\n          user_job = _yield$call.user_job;\n          dataInit = _objectWithoutProperties(_yield$call, [\"permissions\", \"user_job\"]);\n          detailDefaultValue = getDefaultValues(dataInit.parameters, {\n            drawing_purpose: 'DWPU',\n            file_prefix: 'FPRE',\n            file_type: 'FTYP',\n            drawing_format: 'PLFO'\n          }); // if you are in create mode, then set jobId for the assembly form\n\n          if (_.isNull(jobId)) {\n            detailDefaultValue.job_id = userJob.value;\n          }\n\n          if (!_.isNull(detailDefaultValue.drawing_purpose) && _.isNull(jobId)) {\n            drawingPurpose = _.find(dataInit.parameters.DWPU, {\n              id: detailDefaultValue.drawing_purpose\n            });\n            _drawingPurpose$prope = drawingPurpose === null || drawingPurpose === void 0 ? void 0 : drawingPurpose.properties, exclude_from = _drawingPurpose$prope.exclude_from;\n\n            if (_.isString(exclude_from) && _.size(exclude_from) > 0) {\n              excludeList = {\n                C: 'exclude_from_customer',\n                O: 'exclude_from_other',\n                S: 'exclude_from_supplier'\n              };\n              excludeFrom = exclude_from.split(';'); // C;O;S => [C, O, S]\n\n              _.forIn(excludeList, function (value, key) {\n                if (excludeFrom.includes(key)) {\n                  detailDefaultValue[value] = true;\n                }\n              });\n            }\n          }\n\n          _context2.next = 14;\n          return put(drawingStore.actions.setInitDataForCE(dataInit));\n\n        case 14:\n          _context2.next = 16;\n          return put(drawingStore.actions.setDetail(detailDefaultValue));\n\n        case 16:\n          _context2.next = 18;\n          return put(drawingStore.actions.setPermissions(permissions.drawing));\n\n        case 18:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function fetchDrawingList() {\n  var _yield$all, tableState, searchQuery, filterData, userJob, drawingGroup, page, per_page, data;\n\n  return _regeneratorRuntime.wrap(function fetchDrawingList$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          return _context3.delegateYield(all({\n            tableState: select(commonStore.selectTableState),\n            searchQuery: select(commonStore.selectSearchQuery),\n            filterData: select(advancedFilterActions.selectFilterData),\n            userJob: select(commonStore.selectUserValueJob),\n            drawingGroup: select(drawingStore.selectDrawingGroupId)\n          }), \"t0\", 1);\n\n        case 1:\n          _yield$all = _context3.t0;\n          tableState = _yield$all.tableState;\n          searchQuery = _yield$all.searchQuery;\n          filterData = _yield$all.filterData;\n          userJob = _yield$all.userJob;\n          drawingGroup = _yield$all.drawingGroup;\n\n          if (userJob.value) {\n            _context3.next = 9;\n            break;\n          }\n\n          return _context3.abrupt(\"return\");\n\n        case 9:\n          page = tableState.page, per_page = tableState.per_page;\n          _context3.next = 12;\n          return call(drawingApi.getList, _objectSpread({\n            per_page: per_page,\n            page: page,\n            s: searchQuery,\n            job_id: userJob.value,\n            drawing_group_id: drawingGroup\n          }, filterData));\n\n        case 12:\n          data = _context3.sent;\n          _context3.next = 15;\n          return put(commonStore.actions.setTableState({\n            total_items: data.total_items\n          }));\n\n        case 15:\n          _context3.next = 17;\n          return put(drawingStore.actions.setDataList(data.drawings));\n\n        case 17:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\nexport function getDrawingList() {\n  var permissions;\n  return _regeneratorRuntime.wrap(function getDrawingList$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 2:\n          _context4.prev = 2;\n          _context4.next = 5;\n          return call(fetchDrawingInitDataForList);\n\n        case 5:\n          return _context4.delegateYield(select(drawingStore.selectPermissions), \"t0\", 6);\n\n        case 6:\n          permissions = _context4.t0;\n\n          if (!(permissions === null || permissions === void 0 ? void 0 : permissions.view)) {\n            _context4.next = 10;\n            break;\n          }\n\n          _context4.next = 10;\n          return call(fetchDrawingList);\n\n        case 10:\n          _context4.next = 16;\n          break;\n\n        case 12:\n          _context4.prev = 12;\n          _context4.t1 = _context4[\"catch\"](2);\n          _context4.next = 16;\n          return put(commonStore.actions.setError(_context4.t1));\n\n        case 16:\n          _context4.next = 18;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 18:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[2, 12]]);\n}\nexport function openDrawingCreateDialog() {\n  return _regeneratorRuntime.wrap(function openDrawingCreateDialog$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 2:\n          _context5.prev = 2;\n          _context5.next = 5;\n          return call(fetchDrawingInitDataForCE);\n\n        case 5:\n          _context5.next = 7;\n          return put(drawingStore.actions.setDialogStateOpen(true));\n\n        case 7:\n          _context5.next = 13;\n          break;\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](2);\n          _context5.next = 13;\n          return put(commonStore.actions.setError(_context5.t0));\n\n        case 13:\n          _context5.next = 15;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 15:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[2, 9]]);\n}\nexport function changeUserJob(_ref) {\n  var payload;\n  return _regeneratorRuntime.wrap(function changeUserJob$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          payload = _ref.payload;\n          _context6.next = 3;\n          return putResolve(commonStore.actions.setUserValueJob(payload));\n\n        case 3:\n          _context6.next = 5;\n          return call(getDrawingList);\n\n        case 5:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\nexport function createDrawing(_ref2) {\n  var payload, _yield$call2, message, userJob;\n\n  return _regeneratorRuntime.wrap(function createDrawing$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          payload = _ref2.payload;\n          _context7.next = 3;\n          return put(drawingStore.actions.setDialogStateLoading(true));\n\n        case 3:\n          _context7.prev = 3;\n          _context7.next = 6;\n          return call(drawingApi.create, payload);\n\n        case 6:\n          _yield$call2 = _context7.sent;\n          message = _yield$call2.message;\n          return _context7.delegateYield(select(commonStore.selectUserValueJob), \"t0\", 9);\n\n        case 9:\n          userJob = _context7.t0;\n          _context7.next = 12;\n          return putResolve(drawingStore.actions.resetDetail({\n            userJob: userJob\n          }));\n\n        case 12:\n          _context7.next = 14;\n          return all([put(commonStore.actions.setSuccessMessage(message)), put(drawingStore.actions.setDialogStateTab(0))]);\n\n        case 14:\n          _context7.next = 20;\n          break;\n\n        case 16:\n          _context7.prev = 16;\n          _context7.t1 = _context7[\"catch\"](3);\n          _context7.next = 20;\n          return put(commonStore.actions.setError(_context7.t1));\n\n        case 20:\n          _context7.next = 22;\n          return put(drawingStore.actions.setDialogStateLoading(false));\n\n        case 22:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[3, 16]]);\n}\nexport function closeDrawingDialog() {\n  var userJob, entity, specDetail, _yield$call3, drawing_id;\n\n  return _regeneratorRuntime.wrap(function closeDrawingDialog$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          return _context8.delegateYield(select(commonStore.selectUserValueJob), \"t0\", 2);\n\n        case 2:\n          userJob = _context8.t0;\n          return _context8.delegateYield(select(commonStore.selectEntity), \"t1\", 4);\n\n        case 4:\n          entity = _context8.t1;\n          return _context8.delegateYield(select(specificationStore.selectDetail), \"t2\", 6);\n\n        case 6:\n          specDetail = _context8.t2;\n          _context8.next = 9;\n          return putResolve(drawingStore.actions.setDialogStateOpen(false));\n\n        case 9:\n          if (!(entity === 'specification')) {\n            _context8.next = 22;\n            break;\n          }\n\n          _context8.next = 12;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 12:\n          _context8.next = 14;\n          return call(fetchSpecificationDetail, specDetail.id);\n\n        case 14:\n          _yield$call3 = _context8.sent;\n          drawing_id = _yield$call3.drawing_id;\n          _context8.next = 18;\n          return put(specificationStore.actions.setDetail({\n            drawing_id: drawing_id\n          }));\n\n        case 18:\n          _context8.next = 20;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 20:\n          _context8.next = 29;\n          break;\n\n        case 22:\n          if (!(entity === 'element')) {\n            _context8.next = 27;\n            break;\n          }\n\n          _context8.next = 25;\n          return put(tagStore.sagaGetList());\n\n        case 25:\n          _context8.next = 29;\n          break;\n\n        case 27:\n          _context8.next = 29;\n          return call(getDrawingList);\n\n        case 29:\n          _context8.next = 31;\n          return put(drawingStore.actions.resetDetail({\n            userJob: userJob\n          }));\n\n        case 31:\n          _context8.next = 37;\n          break;\n\n        case 33:\n          _context8.prev = 33;\n          _context8.t3 = _context8[\"catch\"](0);\n          _context8.next = 37;\n          return put(commonStore.actions.setError(_context8.t3));\n\n        case 37:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 33]]);\n}\nexport function openDrawingUpdateDialog(_ref3) {\n  var id, _yield$call4, drawing;\n\n  return _regeneratorRuntime.wrap(function openDrawingUpdateDialog$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          id = _ref3.payload;\n          _context9.next = 3;\n          return put(commonStore.actions.setLoadingPage(true));\n\n        case 3:\n          _context9.prev = 3;\n          _context9.next = 6;\n          return call(drawingApi.getDetail, id);\n\n        case 6:\n          _yield$call4 = _context9.sent;\n          drawing = _yield$call4.drawing;\n          drawing.drawing_id = drawing.drawing_id.split(' ')[1];\n          _context9.next = 11;\n          return call(fetchDrawingInitDataForCE, drawing.job_id);\n\n        case 11:\n          _context9.next = 13;\n          return putResolve(drawingStore.actions.setDetail(drawing));\n\n        case 13:\n          _context9.next = 15;\n          return put(drawingStore.actions.setDialogStateOpen(true));\n\n        case 15:\n          _context9.next = 21;\n          break;\n\n        case 17:\n          _context9.prev = 17;\n          _context9.t0 = _context9[\"catch\"](3);\n          _context9.next = 21;\n          return put(commonStore.actions.setError(_context9.t0));\n\n        case 21:\n          _context9.next = 23;\n          return put(commonStore.actions.setLoadingPage(false));\n\n        case 23:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[3, 17]]);\n}\nexport function updateDrawing(_ref4) {\n  var payload, id, drawing, _yield$call5, message;\n\n  return _regeneratorRuntime.wrap(function updateDrawing$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          payload = _ref4.payload;\n          _context10.next = 3;\n          return put(drawingStore.actions.setDialogStateLoading(true));\n\n        case 3:\n          _context10.prev = 3;\n          id = payload.id, drawing = payload.drawing;\n          _context10.next = 7;\n          return call(drawingApi.update, id, drawing);\n\n        case 7:\n          _yield$call5 = _context10.sent;\n          message = _yield$call5.message;\n          _context10.next = 11;\n          return call(closeDrawingDialog);\n\n        case 11:\n          _context10.next = 13;\n          return put(commonStore.actions.setSuccessMessage(message));\n\n        case 13:\n          _context10.next = 19;\n          break;\n\n        case 15:\n          _context10.prev = 15;\n          _context10.t0 = _context10[\"catch\"](3);\n          _context10.next = 19;\n          return put(commonStore.actions.setError(_context10.t0));\n\n        case 19:\n          _context10.next = 21;\n          return put(drawingStore.actions.setDialogStateLoading(false));\n\n        case 21:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10, null, [[3, 15]]);\n}\nexport function openRevisionDialog(_ref5) {\n  var payload, _yield$call6, next_revision;\n\n  return _regeneratorRuntime.wrap(function openRevisionDialog$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          payload = _ref5.payload;\n          _context11.next = 3;\n          return put(drawingStore.actions.setDialogStateLoading(true));\n\n        case 3:\n          _context11.prev = 3;\n          _context11.next = 6;\n          return call(drawingApi.getInitDataForRevise, payload);\n\n        case 6:\n          _yield$call6 = _context11.sent;\n          next_revision = _yield$call6.next_revision;\n          _context11.next = 10;\n          return putResolve(drawingStore.actions.setRevisionDialogDetail({\n            new_revision: next_revision\n          }));\n\n        case 10:\n          _context11.next = 12;\n          return put(drawingStore.actions.setRevisionDialogOpen(true));\n\n        case 12:\n          _context11.next = 18;\n          break;\n\n        case 14:\n          _context11.prev = 14;\n          _context11.t0 = _context11[\"catch\"](3);\n          _context11.next = 18;\n          return put(commonStore.actions.setError(_context11.t0));\n\n        case 18:\n          _context11.next = 20;\n          return put(drawingStore.actions.setDialogStateLoading(false));\n\n        case 20:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[3, 14]]);\n}\nexport function saveNewRev(_ref6) {\n  var payload, drawingId, revision, _yield$call7, message;\n\n  return _regeneratorRuntime.wrap(function saveNewRev$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          payload = _ref6.payload;\n          _context12.next = 3;\n          return put(drawingStore.actions.setRevisionDialogLoading(true));\n\n        case 3:\n          _context12.prev = 3;\n          drawingId = payload.drawingId, revision = payload.revision;\n          _context12.next = 7;\n          return call(drawingApi.saveRevision, drawingId, revision);\n\n        case 7:\n          _yield$call7 = _context12.sent;\n          message = _yield$call7.message;\n          _context12.next = 11;\n          return put(drawingStore.actions.setRevisionDialogOpen(false));\n\n        case 11:\n          _context12.next = 13;\n          return call(closeDrawingDialog);\n\n        case 13:\n          _context12.next = 15;\n          return put(commonStore.actions.setSuccessMessage(message));\n\n        case 15:\n          _context12.next = 21;\n          break;\n\n        case 17:\n          _context12.prev = 17;\n          _context12.t0 = _context12[\"catch\"](3);\n          _context12.next = 21;\n          return put(commonStore.actions.setError(_context12.t0));\n\n        case 21:\n          _context12.next = 23;\n          return put(drawingStore.actions.setRevisionDialogLoading(false));\n\n        case 23:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12, null, [[3, 17]]);\n}\nexport function openCreatePartDialog(_ref7) {\n  var payload, drawingDetail;\n  return _regeneratorRuntime.wrap(function openCreatePartDialog$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          payload = _ref7.payload;\n          _context13.next = 3;\n          return put(drawingStore.actions.setDialogStateLoading(true));\n\n        case 3:\n          _context13.prev = 3;\n          return _context13.delegateYield(select(drawingStore.selectDetail), \"t0\", 5);\n\n        case 5:\n          drawingDetail = _context13.t0;\n          _context13.next = 8;\n          return putResolve(commonStore.actions.setUserValueDrawing({\n            description: '',\n            entity_id: drawingDetail.drawing_id,\n            value: drawingDetail.id\n          }));\n\n        case 8:\n          _context13.next = 10;\n          return put(partStore.sagaOpenCreateDialog(payload));\n\n        case 10:\n          _context13.next = 16;\n          break;\n\n        case 12:\n          _context13.prev = 12;\n          _context13.t1 = _context13[\"catch\"](3);\n          _context13.next = 16;\n          return put(commonStore.actions.setError(_context13.t1));\n\n        case 16:\n          _context13.next = 18;\n          return put(drawingStore.actions.setDialogStateLoading(false));\n\n        case 18:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13, null, [[3, 12]]);\n}\n\nfunction drawingSaga() {\n  return _regeneratorRuntime.wrap(function drawingSaga$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeEvery(drawingStore.sagaGetList, getDrawingList);\n\n        case 2:\n          _context14.next = 4;\n          return takeEvery(drawingStore.sagaOpenCreateDialog, openDrawingCreateDialog);\n\n        case 4:\n          _context14.next = 6;\n          return takeEvery(drawingStore.sagaChangeUserJob, changeUserJob);\n\n        case 6:\n          _context14.next = 8;\n          return takeEvery(drawingStore.sagaCreate, createDrawing);\n\n        case 8:\n          _context14.next = 10;\n          return takeEvery(drawingStore.sagaCloseDialog, closeDrawingDialog);\n\n        case 10:\n          _context14.next = 12;\n          return takeEvery(drawingStore.sagaOpenUpdateDialog, openDrawingUpdateDialog);\n\n        case 12:\n          _context14.next = 14;\n          return takeEvery(drawingStore.sagaUpdate, updateDrawing);\n\n        case 14:\n          _context14.next = 16;\n          return takeEvery(drawingStore.sagaOpenRevDialog, openRevisionDialog);\n\n        case 16:\n          _context14.next = 18;\n          return takeEvery(drawingStore.sagaSaveNewRev, saveNewRev);\n\n        case 18:\n          _context14.next = 20;\n          return takeEvery(drawingStore.sagaOpenCreatePartDialog, openCreatePartDialog);\n\n        case 20:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nexport default drawingSaga;","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/store/saga/drawing.saga.ts"],"names":["fetchDrawingInitDataForList","fetchDrawingInitDataForCE","fetchDrawingList","getDrawingList","openDrawingCreateDialog","changeUserJob","createDrawing","closeDrawingDialog","openDrawingUpdateDialog","updateDrawing","openRevisionDialog","saveNewRev","openCreatePartDialog","drawingSaga","takeEvery","put","putResolve","select","call","all","drawingStore","commonStore","advancedFilterActions","specificationStore","partStore","tagStore","_","getDefaultValues","fetchSpecificationDetail","drawingApi","selectUserValueJob","userJob","getInitDataForList","job_id_pk","value","data","isNull","selected_job","actions","setUserValueJob","setInitDataForList","jobId","getInitDataForCE","permissions","user_job","dataInit","detailDefaultValue","parameters","drawing_purpose","file_prefix","file_type","drawing_format","job_id","drawingPurpose","find","DWPU","id","properties","exclude_from","isString","size","excludeList","C","O","S","excludeFrom","split","forIn","key","includes","setInitDataForCE","setDetail","setPermissions","drawing","tableState","selectTableState","searchQuery","selectSearchQuery","filterData","selectFilterData","drawingGroup","selectDrawingGroupId","page","per_page","getList","s","drawing_group_id","setTableState","total_items","setDataList","drawings","setLoadingPage","selectPermissions","view","setError","setDialogStateOpen","payload","setDialogStateLoading","create","message","resetDetail","setSuccessMessage","setDialogStateTab","selectEntity","entity","selectDetail","specDetail","drawing_id","sagaGetList","getDetail","update","getInitDataForRevise","next_revision","setRevisionDialogDetail","new_revision","setRevisionDialogOpen","setRevisionDialogLoading","drawingId","revision","saveRevision","drawingDetail","setUserValueDrawing","description","entity_id","sagaOpenCreateDialog","sagaChangeUserJob","sagaCreate","sagaCloseDialog","sagaOpenUpdateDialog","sagaUpdate","sagaOpenRevDialog","sagaSaveNewRev","sagaOpenCreatePartDialog"],"mappings":"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","sourcesContent":["import { takeEvery, put, putResolve } from 'redux-saga/effects'\nimport { select, call, all } from 'typed-redux-saga'\n\nimport {\n  drawingStore,\n  commonStore,\n  advancedFilterActions,\n  specificationStore,\n  partStore,\n  tagStore\n} from '@/store/reducers'\n\nimport _ from 'lodash'\nimport { getDefaultValues } from '@/utils/getDefaultValues'\n\nimport { fetchSpecificationDetail } from '@/store/saga/specification.saga'\n\nimport drawingApi from '@/apis/drawing.api'\n\nexport function* fetchDrawingInitDataForList() {\n  const userJob = yield* select(commonStore.selectUserValueJob)\n  const data = yield call(drawingApi.getInitDataForList, {\n    job_id_pk: userJob.value\n  })\n  if (_.isNull(data.selected_job)) {\n    data.selected_job = {}\n  }\n  if (userJob.value === -1 || userJob.value === -2) {\n    data.selected_job = userJob\n  }\n  yield put(commonStore.actions.setUserValueJob(data.selected_job))\n  yield put(drawingStore.actions.setInitDataForList(data))\n}\n\nexport function* fetchDrawingInitDataForCE(jobId = null) {\n  const userJob = yield* select(commonStore.selectUserValueJob)\n  const { permissions, user_job, ...dataInit } = yield call(drawingApi.getInitDataForCE, {\n    job_id_pk: jobId || userJob.value\n  })\n  const detailDefaultValue = getDefaultValues(dataInit.parameters, {\n    drawing_purpose: 'DWPU',\n    file_prefix: 'FPRE',\n    file_type: 'FTYP',\n    drawing_format: 'PLFO'\n  })\n  // if you are in create mode, then set jobId for the assembly form\n  if (_.isNull(jobId)) {\n    detailDefaultValue.job_id = userJob.value\n  }\n  if (!_.isNull(detailDefaultValue.drawing_purpose) && _.isNull(jobId)) {\n    const drawingPurpose = _.find(dataInit.parameters.DWPU, {\n      id: detailDefaultValue.drawing_purpose\n    })\n    const { exclude_from } = drawingPurpose?.properties\n    if (_.isString(exclude_from) && _.size(exclude_from) > 0) {\n      const excludeList = {\n        C: 'exclude_from_customer',\n        O: 'exclude_from_other',\n        S: 'exclude_from_supplier'\n      }\n      const excludeFrom = exclude_from.split(';') // C;O;S => [C, O, S]\n      _.forIn(excludeList, (value, key) => {\n        if (excludeFrom.includes(key)) {\n          detailDefaultValue[value] = true\n        }\n      })\n    }\n  }\n  yield put(drawingStore.actions.setInitDataForCE(dataInit))\n  yield put(drawingStore.actions.setDetail(detailDefaultValue))\n  yield put(drawingStore.actions.setPermissions(permissions.drawing))\n}\n\nexport function* fetchDrawingList() {\n  const { tableState, searchQuery, filterData, userJob, drawingGroup } = yield* all({\n    tableState: select(commonStore.selectTableState),\n    searchQuery: select(commonStore.selectSearchQuery),\n    filterData: select(advancedFilterActions.selectFilterData),\n    userJob: select(commonStore.selectUserValueJob),\n    drawingGroup: select(drawingStore.selectDrawingGroupId)\n  })\n  if (!userJob.value) {\n    return\n  }\n  const { page, per_page } = tableState\n  const data = yield call(drawingApi.getList, {\n    per_page,\n    page,\n    s: searchQuery,\n    job_id: userJob.value,\n    drawing_group_id: drawingGroup,\n    ...filterData\n  })\n  yield put(commonStore.actions.setTableState({ total_items: data.total_items }))\n  yield put(drawingStore.actions.setDataList(data.drawings))\n}\n\nexport function* getDrawingList() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchDrawingInitDataForList)\n    const permissions = yield* select(drawingStore.selectPermissions)\n    if (permissions?.view) {\n      yield call(fetchDrawingList)\n    }\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nexport function* openDrawingCreateDialog() {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    yield call(fetchDrawingInitDataForCE)\n    yield put(drawingStore.actions.setDialogStateOpen(true))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nexport function* changeUserJob({ payload }: ReturnType<typeof drawingStore.sagaChangeUserJob>) {\n  yield putResolve(commonStore.actions.setUserValueJob(payload))\n  yield call(getDrawingList)\n}\n\nexport function* createDrawing({ payload }: ReturnType<typeof drawingStore.sagaCreate>) {\n  yield put(drawingStore.actions.setDialogStateLoading(true))\n  try {\n    const { message } = yield call(drawingApi.create, payload)\n    const userJob = yield* select(commonStore.selectUserValueJob)\n    yield putResolve(drawingStore.actions.resetDetail({ userJob }))\n    yield all([put(commonStore.actions.setSuccessMessage(message)), put(drawingStore.actions.setDialogStateTab(0))])\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(drawingStore.actions.setDialogStateLoading(false))\n}\n\nexport function* closeDrawingDialog() {\n  try {\n    const userJob = yield* select(commonStore.selectUserValueJob)\n    const entity = yield* select(commonStore.selectEntity)\n    const specDetail = yield* select(specificationStore.selectDetail)\n    yield putResolve(drawingStore.actions.setDialogStateOpen(false))\n    if (entity === 'specification') {\n      yield put(commonStore.actions.setLoadingPage(true))\n      const { drawing_id } = yield call(fetchSpecificationDetail, specDetail.id)\n      yield put(specificationStore.actions.setDetail({ drawing_id }))\n      yield put(commonStore.actions.setLoadingPage(false))\n    } else if (entity === 'element') {\n      yield put(tagStore.sagaGetList())\n    } else {\n      yield call(getDrawingList)\n    }\n    yield put(drawingStore.actions.resetDetail({ userJob }))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n}\n\nexport function* openDrawingUpdateDialog({ payload: id }: ReturnType<typeof drawingStore.sagaOpenUpdateDialog>) {\n  yield put(commonStore.actions.setLoadingPage(true))\n  try {\n    const { drawing } = yield call(drawingApi.getDetail, id)\n    drawing.drawing_id = drawing.drawing_id.split(' ')[1]\n    yield call(fetchDrawingInitDataForCE, drawing.job_id)\n    yield putResolve(drawingStore.actions.setDetail(drawing))\n    yield put(drawingStore.actions.setDialogStateOpen(true))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(commonStore.actions.setLoadingPage(false))\n}\n\nexport function* updateDrawing({ payload }: ReturnType<typeof drawingStore.sagaUpdate>) {\n  yield put(drawingStore.actions.setDialogStateLoading(true))\n\n  try {\n    const { id, drawing } = payload\n    const { message } = yield call(drawingApi.update, id, drawing)\n    yield call(closeDrawingDialog)\n    yield put(commonStore.actions.setSuccessMessage(message))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n\n  yield put(drawingStore.actions.setDialogStateLoading(false))\n}\n\nexport function* openRevisionDialog({ payload }: ReturnType<typeof drawingStore.sagaOpenRevDialog>) {\n  yield put(drawingStore.actions.setDialogStateLoading(true))\n\n  try {\n    const { next_revision } = yield call(drawingApi.getInitDataForRevise, payload)\n    yield putResolve(\n      drawingStore.actions.setRevisionDialogDetail({\n        new_revision: next_revision\n      })\n    )\n    yield put(drawingStore.actions.setRevisionDialogOpen(true))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n\n  yield put(drawingStore.actions.setDialogStateLoading(false))\n}\n\nexport function* saveNewRev({ payload }: ReturnType<typeof drawingStore.sagaSaveNewRev>) {\n  yield put(drawingStore.actions.setRevisionDialogLoading(true))\n\n  try {\n    const { drawingId, revision } = payload\n    const { message } = yield call(drawingApi.saveRevision, drawingId, revision)\n    yield put(drawingStore.actions.setRevisionDialogOpen(false))\n    yield call(closeDrawingDialog)\n    yield put(commonStore.actions.setSuccessMessage(message))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n\n  yield put(drawingStore.actions.setRevisionDialogLoading(false))\n}\n\nexport function* openCreatePartDialog({ payload }: ReturnType<typeof drawingStore.sagaOpenCreatePartDialog>) {\n  yield put(drawingStore.actions.setDialogStateLoading(true))\n  try {\n    const drawingDetail = yield* select(drawingStore.selectDetail)\n    yield putResolve(\n      commonStore.actions.setUserValueDrawing({\n        description: '',\n        entity_id: drawingDetail.drawing_id,\n        value: drawingDetail.id\n      })\n    )\n    yield put(partStore.sagaOpenCreateDialog(payload))\n  } catch (error) {\n    yield put(commonStore.actions.setError(error))\n  }\n  yield put(drawingStore.actions.setDialogStateLoading(false))\n}\n\nfunction* drawingSaga() {\n  yield takeEvery(drawingStore.sagaGetList, getDrawingList)\n  yield takeEvery(drawingStore.sagaOpenCreateDialog, openDrawingCreateDialog)\n  yield takeEvery(drawingStore.sagaChangeUserJob, changeUserJob)\n  yield takeEvery(drawingStore.sagaCreate, createDrawing)\n  yield takeEvery(drawingStore.sagaCloseDialog, closeDrawingDialog)\n  yield takeEvery(drawingStore.sagaOpenUpdateDialog, openDrawingUpdateDialog)\n  yield takeEvery(drawingStore.sagaUpdate, updateDrawing)\n  yield takeEvery(drawingStore.sagaOpenRevDialog, openRevisionDialog)\n  yield takeEvery(drawingStore.sagaSaveNewRev, saveNewRev)\n  yield takeEvery(drawingStore.sagaOpenCreatePartDialog, openCreatePartDialog)\n}\n\nexport default drawingSaga\n"]},"metadata":{},"sourceType":"module"}