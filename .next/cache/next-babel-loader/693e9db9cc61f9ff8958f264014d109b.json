{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice, createAction, createSelector } from '@reduxjs/toolkit';\nimport { format as formatDate } from 'date-fns';\nimport { getDefaultValues } from '@/utils/getDefaultValues';\nimport { DATE_FORMAT, actionTypes } from '@/utils/constant';\nexport var name = 'user';\nexport var resetState = createAction(\"\".concat(name, \"/\").concat(actionTypes.RESET_STATE));\nvar initialState = {\n  dataList: [],\n  initDataForList: {\n    permissions: {\n      user: null\n    },\n    wiki_page: '',\n    column_tooltips: {}\n  },\n  initDataForCE: {\n    groups: [],\n    jobs: [],\n    parameters: {\n      PLLA: [],\n      PUCO: []\n    },\n    wiki_page: '',\n    timezones: []\n  },\n  dialogState: {\n    open: false,\n    loading: false,\n    historyLogs: []\n  },\n  resetPwdDialog: {\n    open: false,\n    loading: false\n  },\n  detail: {\n    user_id: '',\n    email: null,\n    puco: null,\n    first_name: '',\n    last_name: '',\n    time_zone: '',\n    user_abb: '',\n    login_page: '',\n    valid_from: formatDate(new Date(), DATE_FORMAT),\n    default_language: null,\n    valid_until: null,\n    groups: [],\n    job_access: [],\n    password: '',\n    confirm_password: ''\n  }\n};\nvar userSlice = createSlice({\n  name: name,\n  initialState: initialState,\n  reducers: {\n    setDataList: function setDataList(state, _ref) {\n      var payload = _ref.payload;\n      state.dataList = payload;\n    },\n    setDialogState: function setDialogState(state, _ref2) {\n      var payload = _ref2.payload;\n      state.dialogState = _objectSpread(_objectSpread({}, state.dialogState), payload);\n    },\n    setDialogStateOpen: function setDialogStateOpen(state, _ref3) {\n      var payload = _ref3.payload;\n      state.dialogState.open = payload;\n    },\n    setHistoryLogs: function setHistoryLogs(state, _ref4) {\n      var payload = _ref4.payload;\n      state.dialogState.historyLogs = payload;\n    },\n    setDialogStateLoading: function setDialogStateLoading(state, _ref5) {\n      var payload = _ref5.payload;\n      state.dialogState.loading = payload;\n    },\n    setInitDataForList: function setInitDataForList(state, _ref6) {\n      var payload = _ref6.payload;\n      state.initDataForList = payload;\n    },\n    setPermissions: function setPermissions(state, _ref7) {\n      var payload = _ref7.payload;\n      state.initDataForList.permissions.user = payload;\n    },\n    setInitDataForCE: function setInitDataForCE(state, _ref8) {\n      var payload = _ref8.payload;\n      state.initDataForCE = payload;\n    },\n    setDetail: function setDetail(state, _ref9) {\n      var payload = _ref9.payload;\n      state.detail = _objectSpread(_objectSpread({}, state.detail), payload);\n    },\n    setResetPwdDialog: function setResetPwdDialog(state, _ref10) {\n      var payload = _ref10.payload;\n      state.dialogState = _objectSpread(_objectSpread({}, state.dialogState), payload);\n    },\n    setResetPwdDialogOpen: function setResetPwdDialogOpen(state, _ref11) {\n      var payload = _ref11.payload;\n      state.resetPwdDialog.open = payload;\n    },\n    setResetPwdDialogLoading: function setResetPwdDialogLoading(state, _ref12) {\n      var payload = _ref12.payload;\n      state.resetPwdDialog.loading = payload;\n    },\n    resetDetail: function resetDetail(state) {\n      var detailDefaultValue = getDefaultValues(state.initDataForCE, {\n        default_language: 'parameters.PLLA',\n        puco: 'parameters.PUCO',\n        time_zone: 'timezones'\n      }, initialState.detail);\n      state.detail = _objectSpread({}, detailDefaultValue);\n    }\n  },\n  extraReducers: _defineProperty({}, resetState.type, function () {\n    return initialState;\n  })\n}); // Actions\n\nvar actions = userSlice.actions; // Saga actions\n\nexport { actions };\nexport var sagaGetList = createAction(\"\".concat(name, \"/\").concat(actionTypes.GET_LIST));\nexport var sagaCreate = createAction(\"\".concat(name, \"/\").concat(actionTypes.CREATE));\nexport var sagaUpdate = createAction(\"\".concat(name, \"/\").concat(actionTypes.UPDATE));\nexport var sagaOpenCreateDialog = createAction(\"\".concat(name, \"/\").concat(actionTypes.OPEN_CREATE_DIALOG));\nexport var sagaOpenUpdateDialog = createAction(\"\".concat(name, \"/\").concat(actionTypes.OPEN_UPDATE_DIALOG));\nexport var sagaCloseDialog = createAction(\"\".concat(name, \"/\").concat(actionTypes.CLOSE_DIALOG));\nexport var sagaResetPassword = createAction(\"\".concat(name, \"/RESET_PASSWORD\")); // Selectors\n\nexport var selectState = function selectState(state) {\n  return state[name];\n};\nexport var selectDialogState = createSelector(selectState, function (state) {\n  return state.dialogState;\n});\nexport var selectDataList = createSelector(selectState, function (state) {\n  return state.dataList;\n});\nexport var selectPermissions = createSelector(selectState, function (state) {\n  return state.initDataForList.permissions.user;\n});\nexport var selectResetPwdDialog = createSelector(selectState, function (state) {\n  return state.resetPwdDialog;\n});\nexport var selectDetail = createSelector(selectState, function (state) {\n  return state.detail;\n});\nexport var selectInitDataForCE = createSelector(selectState, function (state) {\n  return state.initDataForCE;\n});\nexport var selectInitDataForList = createSelector(selectState, function (state) {\n  return state.initDataForList;\n});\nexport default userSlice;","map":null,"metadata":{},"sourceType":"module"}