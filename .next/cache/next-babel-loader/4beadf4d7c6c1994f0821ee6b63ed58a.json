{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\TTS_Reactjs\\\\malis-3-frontend\\\\src\\\\components\\\\Dialog\\\\Module\\\\Drawing\\\\TabParts.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport useStyles from './styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Paper, Link } from '@material-ui/core';\nimport { DataTable, CreateIcon, DeleteIcon, useConfirm, AppButton } from '@/components';\nimport { defaultProperties, rightColumn } from '@/utils/columnProperties';\nimport { drawingStore, itemStore, partStore } from '@/store/reducers';\nimport _ from 'lodash';\nimport { isAssemblyByDpn } from '@/utils/isAssembly';\n\nvar TabComponent = function TabComponent() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useConfirm = useConfirm(),\n      confirm = _useConfirm.confirm;\n\n  var _useState = useState([]),\n      selectedRows = _useState[0],\n      setSelectedRows = _useState[1];\n\n  var dispatch = useDispatch();\n  var componentList = useSelector(drawingStore.selectComponentList);\n  useEffect(function () {\n    setSelectedRows([]);\n  }, [componentList]);\n\n  var handleOpenComponentDialog = function handleOpenComponentDialog(partEntity) {\n    return function () {\n      dispatch(drawingStore.sagaOpenCreatePartDialog(partEntity));\n    };\n  };\n\n  var handleSelectRows = function handleSelectRows(_ref) {\n    var selectionModel = _ref.selectionModel;\n    setSelectedRows(selectionModel);\n  };\n\n  var buildDescription = function buildDescription() {\n    if (selectedRows.length > 1) {\n      return \"Are you sure you want to delete \".concat(selectedRows.length, \" selected parts?\");\n    }\n\n    return \"Are you sure you want to delete \".concat(selectedRows.length, \" selected part?\");\n  };\n\n  var handleDeleteItems = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var description, result, parts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              description = buildDescription();\n              _context.next = 3;\n              return confirm({\n                description: description\n              });\n\n            case 3:\n              result = _context.sent;\n\n              if (result === 'OK') {\n                parts = _.map(selectedRows, function (partId) {\n                  var _$find = _.find(componentList, {\n                    id: partId\n                  }),\n                      dpn = _$find.dpn,\n                      id = _$find.id;\n\n                  return {\n                    entity_id: dpn,\n                    id: id\n                  };\n                });\n                dispatch(itemStore.sagaRemove(parts));\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleDeleteItems() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleOpenPartDialog = function handleOpenPartDialog(id, dpn) {\n    return function (event) {\n      event.preventDefault();\n      var entity = isAssemblyByDpn(dpn) ? 'assembly' : 'item';\n      dispatch(partStore.sagaOpenUpdateDialog({\n        id: id,\n        entity: entity\n      }));\n    };\n  };\n\n  var newButtonDropdown = [{\n    label: 'Item',\n    onClick: handleOpenComponentDialog('item')\n  }, {\n    label: 'Assembly',\n    onClick: handleOpenComponentDialog('assembly')\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttonGroupRoot,\n      children: [/*#__PURE__*/_jsxDEV(AppButton, {\n        startIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 31\n        }, _this),\n        item: newButtonDropdown,\n        children: \"New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(AppButton, {\n        startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 31\n        }, _this),\n        onClick: handleDeleteItems,\n        disabled: selectedRows.length === 0,\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 1,\n      children: /*#__PURE__*/_jsxDEV(DataTable, {\n        rows: componentList,\n        checkboxSelection: true,\n        selectionModel: selectedRows,\n        onSelectionModelChange: handleSelectRows,\n        onCellClick: function onCellClick(params, event) {\n          if (['dpn', 'reference_to'].includes(params.field)) {\n            event.stopPropagation();\n          }\n        },\n        columns: [_objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'dpn',\n          headerName: 'Item',\n          flex: 0.2,\n          renderCell: function renderCell(params) {\n            var value = params.value,\n                id = params.id;\n            return /*#__PURE__*/_jsxDEV(Link, {\n              href: \"#\",\n              onClick: handleOpenPartDialog(id, value),\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this);\n          }\n        }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'reference_to',\n          headerName: 'Referenced Part Number',\n          flex: 0.2,\n          renderCell: function renderCell(params) {\n            var value = params.value,\n                row = params.row;\n            return /*#__PURE__*/_jsxDEV(Link, {\n              href: \"#\",\n              onClick: handleOpenPartDialog(row.id_ref, value),\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this);\n          }\n        }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'description',\n          headerName: 'Description',\n          flex: 0.2\n        }), _objectSpread(_objectSpread(_objectSpread({}, defaultProperties), rightColumn), {}, {\n          field: 'mass',\n          headerName: 'Mass (kg)',\n          flex: 0.1\n        }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'raw_unit',\n          headerName: 'Unit',\n          flex: 0.1\n        }), _objectSpread(_objectSpread({}, defaultProperties), {}, {\n          field: 'material',\n          headerName: 'Material',\n          flex: 0.1\n        })],\n        hideFooter: true,\n        tableHeight: 385\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(TabComponent, \"pV9OZln4oYziYG0b4qWfiKpf39I=\", false, function () {\n  return [useStyles, useConfirm, useDispatch, useSelector];\n});\n\n_c = TabComponent;\nexport default TabComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TabComponent\");","map":{"version":3,"sources":["D:/TTS_Reactjs/malis-3-frontend/src/components/Dialog/Module/Drawing/TabParts.tsx"],"names":["useState","useEffect","useStyles","useDispatch","useSelector","Paper","Link","DataTable","CreateIcon","DeleteIcon","useConfirm","AppButton","defaultProperties","rightColumn","drawingStore","itemStore","partStore","_","isAssemblyByDpn","TabComponent","classes","confirm","selectedRows","setSelectedRows","dispatch","componentList","selectComponentList","handleOpenComponentDialog","partEntity","sagaOpenCreatePartDialog","handleSelectRows","selectionModel","buildDescription","length","handleDeleteItems","description","result","parts","map","partId","find","id","dpn","entity_id","sagaRemove","handleOpenPartDialog","event","preventDefault","entity","sagaOpenUpdateDialog","newButtonDropdown","label","onClick","buttonGroupRoot","params","includes","field","stopPropagation","headerName","flex","renderCell","value","row","id_ref"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport useStyles from './styles'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Paper, Link } from '@material-ui/core'\nimport { DataTable, CreateIcon, DeleteIcon, useConfirm, AppButton } from '@/components'\n\nimport { defaultProperties, rightColumn } from '@/utils/columnProperties'\nimport { drawingStore, itemStore, partStore } from '@/store/reducers'\nimport _ from 'lodash'\nimport { isAssemblyByDpn } from '@/utils/isAssembly'\n\nimport type { PartEntity } from '@/types/Part'\n\nconst TabComponent: React.FC = () => {\n  const classes = useStyles()\n  const { confirm } = useConfirm()\n\n  const [selectedRows, setSelectedRows] = useState<number[]>([])\n\n  const dispatch = useDispatch()\n  const componentList = useSelector(drawingStore.selectComponentList)\n\n  useEffect(() => {\n    setSelectedRows([])\n  }, [componentList])\n\n  const handleOpenComponentDialog = (partEntity: PartEntity) => () => {\n    dispatch(drawingStore.sagaOpenCreatePartDialog(partEntity))\n  }\n\n  const handleSelectRows = ({ selectionModel }) => {\n    setSelectedRows(selectionModel)\n  }\n\n  const buildDescription = () => {\n    if (selectedRows.length > 1) {\n      return `Are you sure you want to delete ${selectedRows.length} selected parts?`\n    }\n    return `Are you sure you want to delete ${selectedRows.length} selected part?`\n  }\n\n  const handleDeleteItems = async () => {\n    const description = buildDescription()\n    const result = await confirm({\n      description\n    })\n    if (result === 'OK') {\n      const parts = _.map(selectedRows, (partId) => {\n        const { dpn, id } = _.find(componentList, { id: partId })\n        return { entity_id: dpn, id }\n      })\n      dispatch(itemStore.sagaRemove(parts))\n    }\n  }\n\n  const handleOpenPartDialog = (id: number, dpn: string) => (event) => {\n    event.preventDefault()\n    const entity = isAssemblyByDpn(dpn) ? 'assembly' : 'item'\n    dispatch(partStore.sagaOpenUpdateDialog({ id, entity }))\n  }\n\n  const newButtonDropdown = [\n    {\n      label: 'Item',\n      onClick: handleOpenComponentDialog('item')\n    },\n    {\n      label: 'Assembly',\n      onClick: handleOpenComponentDialog('assembly')\n    }\n  ]\n\n  return (\n    <>\n      <div className={classes.buttonGroupRoot}>\n        <AppButton startIcon={<CreateIcon />} item={newButtonDropdown}>\n          New\n        </AppButton>\n        <AppButton startIcon={<DeleteIcon />} onClick={handleDeleteItems} disabled={selectedRows.length === 0}>\n          Remove\n        </AppButton>\n      </div>\n      <Paper elevation={1}>\n        <DataTable\n          rows={componentList}\n          checkboxSelection\n          selectionModel={selectedRows}\n          onSelectionModelChange={handleSelectRows}\n          onCellClick={(params, event) => {\n            if (['dpn', 'reference_to'].includes(params.field)) {\n              event.stopPropagation()\n            }\n          }}\n          columns={[\n            {\n              ...defaultProperties,\n              field: 'dpn',\n              headerName: 'Item',\n              flex: 0.2,\n              renderCell(params) {\n                const { value, id } = params\n                return (\n                  <Link href=\"#\" onClick={handleOpenPartDialog(id as number, value as string)}>\n                    {value}\n                  </Link>\n                )\n              }\n            },\n            {\n              ...defaultProperties,\n              field: 'reference_to',\n              headerName: 'Referenced Part Number',\n              flex: 0.2,\n              renderCell(params) {\n                const { value, row } = params\n                return (\n                  <Link href=\"#\" onClick={handleOpenPartDialog(row.id_ref, value as string)}>\n                    {value}\n                  </Link>\n                )\n              }\n            },\n            {\n              ...defaultProperties,\n              field: 'description',\n              headerName: 'Description',\n              flex: 0.2\n            },\n            {\n              ...defaultProperties,\n              ...rightColumn,\n              field: 'mass',\n              headerName: 'Mass (kg)',\n              flex: 0.1\n            },\n            {\n              ...defaultProperties,\n              field: 'raw_unit',\n              headerName: 'Unit',\n              flex: 0.1\n            },\n            {\n              ...defaultProperties,\n              field: 'material',\n              headerName: 'Material',\n              flex: 0.1\n            }\n          ]}\n          hideFooter\n          tableHeight={385}\n        />\n      </Paper>\n    </>\n  )\n}\n\nexport default TabComponent\n"]},"metadata":{},"sourceType":"module"}